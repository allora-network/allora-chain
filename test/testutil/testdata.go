package testutil

import (
	"encoding/csv"
	"fmt"
	"strings"

	alloraMath "github.com/allora-network/allora-chain/math"
	"github.com/allora-network/allora-chain/x/emissions/keeper"
	inferencesynthesis "github.com/allora-network/allora-chain/x/emissions/keeper/inference_synthesis"
	emissionstypes "github.com/allora-network/allora-chain/x/emissions/types"
	sdk "github.com/cosmos/cosmos-sdk/types"
)

func GetSimulatedValuesGetterForEpoch(
	epoch string,
	headers string,
) func(header string) alloraMath.Dec {
	r := csv.NewReader(strings.NewReader(headers + "\n" + epoch + "\n"))
	headersRead, err := r.Read()
	if err != nil {
		panic(err)
	}
	valuesRead, err := r.Read()
	if err != nil {
		panic(err)
	}
	simulatedValuesDec := make(map[string]alloraMath.Dec)
	if len(headersRead) != len(valuesRead) {
		panic("Header and values length mismatch")
	}
	for i := 0; i < len(headersRead); i++ {
		simulatedValuesDec[headersRead[i]] = alloraMath.MustNewDecFromString(valuesRead[i])
	}

	return func(header string) alloraMath.Dec {
		value, exists := simulatedValuesDec[header]
		if !exists {
			panic(fmt.Sprintf("Header '%s' not found in simulated values map", header))
		}
		return value
	}
}

func GetSimulatedValuesGetterForEpochs() map[int]func(header string) alloraMath.Dec {
	const simulatorHeaders = "target,inference_0,inference_1,inference_2,inference_3,inference_4,forecasted_loss_0_for_0,forecasted_loss_0_for_1,forecasted_loss_0_for_2,forecasted_loss_0_for_3,forecasted_loss_0_for_4,forecasted_loss_1_for_0,forecasted_loss_1_for_1,forecasted_loss_1_for_2,forecasted_loss_1_for_3,forecasted_loss_1_for_4,forecasted_loss_2_for_0,forecasted_loss_2_for_1,forecasted_loss_2_for_2,forecasted_loss_2_for_3,forecasted_loss_2_for_4,forecast_implied_inference_0,forecast_implied_inference_1,forecast_implied_inference_2,forecast_implied_inference_0_oneout_0,forecast_implied_inference_0_oneout_1,forecast_implied_inference_0_oneout_2,forecast_implied_inference_0_oneout_3,forecast_implied_inference_0_oneout_4,forecast_implied_inference_1_oneout_0,forecast_implied_inference_1_oneout_1,forecast_implied_inference_1_oneout_2,forecast_implied_inference_1_oneout_3,forecast_implied_inference_1_oneout_4,forecast_implied_inference_2_oneout_0,forecast_implied_inference_2_oneout_1,forecast_implied_inference_2_oneout_2,forecast_implied_inference_2_oneout_3,forecast_implied_inference_2_oneout_4,network_inference,network_inference_errorbar_0,network_inference_errorbar_1,network_inference_errorbar_2,network_inference_errorbar_3,network_inference_errorbar_4,network_naive_inference,network_inference_oneout_0,network_inference_oneout_1,network_inference_oneout_2,network_inference_oneout_3,network_inference_oneout_4,network_inference_oneout_5,network_inference_oneout_6,network_inference_oneout_7,network_naive_inference_onein_0,network_naive_inference_onein_1,network_naive_inference_onein_2,network_loss,reputer_stake_0,reputer_stake_1,reputer_stake_2,reputer_stake_3,reputer_stake_4,reputer_0_loss_inference_0,reputer_0_loss_inference_1,reputer_0_loss_inference_2,reputer_0_loss_inference_3,reputer_0_loss_inference_4,reputer_1_loss_inference_0,reputer_1_loss_inference_1,reputer_1_loss_inference_2,reputer_1_loss_inference_3,reputer_1_loss_inference_4,reputer_2_loss_inference_0,reputer_2_loss_inference_1,reputer_2_loss_inference_2,reputer_2_loss_inference_3,reputer_2_loss_inference_4,reputer_3_loss_inference_0,reputer_3_loss_inference_1,reputer_3_loss_inference_2,reputer_3_loss_inference_3,reputer_3_loss_inference_4,reputer_4_loss_inference_0,reputer_4_loss_inference_1,reputer_4_loss_inference_2,reputer_4_loss_inference_3,reputer_4_loss_inference_4,reputer_0_loss_forecast_implied_inference_0,reputer_0_loss_forecast_implied_inference_1,reputer_0_loss_forecast_implied_inference_2,reputer_1_loss_forecast_implied_inference_0,reputer_1_loss_forecast_implied_inference_1,reputer_1_loss_forecast_implied_inference_2,reputer_2_loss_forecast_implied_inference_0,reputer_2_loss_forecast_implied_inference_1,reputer_2_loss_forecast_implied_inference_2,reputer_3_loss_forecast_implied_inference_0,reputer_3_loss_forecast_implied_inference_1,reputer_3_loss_forecast_implied_inference_2,reputer_4_loss_forecast_implied_inference_0,reputer_4_loss_forecast_implied_inference_1,reputer_4_loss_forecast_implied_inference_2,reputer_0_loss_forecast_implied_inference_0_oneout_0,reputer_0_loss_forecast_implied_inference_0_oneout_1,reputer_0_loss_forecast_implied_inference_0_oneout_2,reputer_0_loss_forecast_implied_inference_0_oneout_3,reputer_0_loss_forecast_implied_inference_0_oneout_4,reputer_0_loss_forecast_implied_inference_1_oneout_0,reputer_0_loss_forecast_implied_inference_1_oneout_1,reputer_0_loss_forecast_implied_inference_1_oneout_2,reputer_0_loss_forecast_implied_inference_1_oneout_3,reputer_0_loss_forecast_implied_inference_1_oneout_4,reputer_0_loss_forecast_implied_inference_2_oneout_0,reputer_0_loss_forecast_implied_inference_2_oneout_1,reputer_0_loss_forecast_implied_inference_2_oneout_2,reputer_0_loss_forecast_implied_inference_2_oneout_3,reputer_0_loss_forecast_implied_inference_2_oneout_4,reputer_1_loss_forecast_implied_inference_0_oneout_0,reputer_1_loss_forecast_implied_inference_0_oneout_1,reputer_1_loss_forecast_implied_inference_0_oneout_2,reputer_1_loss_forecast_implied_inference_0_oneout_3,reputer_1_loss_forecast_implied_inference_0_oneout_4,reputer_1_loss_forecast_implied_inference_1_oneout_0,reputer_1_loss_forecast_implied_inference_1_oneout_1,reputer_1_loss_forecast_implied_inference_1_oneout_2,reputer_1_loss_forecast_implied_inference_1_oneout_3,reputer_1_loss_forecast_implied_inference_1_oneout_4,reputer_1_loss_forecast_implied_inference_2_oneout_0,reputer_1_loss_forecast_implied_inference_2_oneout_1,reputer_1_loss_forecast_implied_inference_2_oneout_2,reputer_1_loss_forecast_implied_inference_2_oneout_3,reputer_1_loss_forecast_implied_inference_2_oneout_4,reputer_2_loss_forecast_implied_inference_0_oneout_0,reputer_2_loss_forecast_implied_inference_0_oneout_1,reputer_2_loss_forecast_implied_inference_0_oneout_2,reputer_2_loss_forecast_implied_inference_0_oneout_3,reputer_2_loss_forecast_implied_inference_0_oneout_4,reputer_2_loss_forecast_implied_inference_1_oneout_0,reputer_2_loss_forecast_implied_inference_1_oneout_1,reputer_2_loss_forecast_implied_inference_1_oneout_2,reputer_2_loss_forecast_implied_inference_1_oneout_3,reputer_2_loss_forecast_implied_inference_1_oneout_4,reputer_2_loss_forecast_implied_inference_2_oneout_0,reputer_2_loss_forecast_implied_inference_2_oneout_1,reputer_2_loss_forecast_implied_inference_2_oneout_2,reputer_2_loss_forecast_implied_inference_2_oneout_3,reputer_2_loss_forecast_implied_inference_2_oneout_4,reputer_3_loss_forecast_implied_inference_0_oneout_0,reputer_3_loss_forecast_implied_inference_0_oneout_1,reputer_3_loss_forecast_implied_inference_0_oneout_2,reputer_3_loss_forecast_implied_inference_0_oneout_3,reputer_3_loss_forecast_implied_inference_0_oneout_4,reputer_3_loss_forecast_implied_inference_1_oneout_0,reputer_3_loss_forecast_implied_inference_1_oneout_1,reputer_3_loss_forecast_implied_inference_1_oneout_2,reputer_3_loss_forecast_implied_inference_1_oneout_3,reputer_3_loss_forecast_implied_inference_1_oneout_4,reputer_3_loss_forecast_implied_inference_2_oneout_0,reputer_3_loss_forecast_implied_inference_2_oneout_1,reputer_3_loss_forecast_implied_inference_2_oneout_2,reputer_3_loss_forecast_implied_inference_2_oneout_3,reputer_3_loss_forecast_implied_inference_2_oneout_4,reputer_4_loss_forecast_implied_inference_0_oneout_0,reputer_4_loss_forecast_implied_inference_0_oneout_1,reputer_4_loss_forecast_implied_inference_0_oneout_2,reputer_4_loss_forecast_implied_inference_0_oneout_3,reputer_4_loss_forecast_implied_inference_0_oneout_4,reputer_4_loss_forecast_implied_inference_1_oneout_0,reputer_4_loss_forecast_implied_inference_1_oneout_1,reputer_4_loss_forecast_implied_inference_1_oneout_2,reputer_4_loss_forecast_implied_inference_1_oneout_3,reputer_4_loss_forecast_implied_inference_1_oneout_4,reputer_4_loss_forecast_implied_inference_2_oneout_0,reputer_4_loss_forecast_implied_inference_2_oneout_1,reputer_4_loss_forecast_implied_inference_2_oneout_2,reputer_4_loss_forecast_implied_inference_2_oneout_3,reputer_4_loss_forecast_implied_inference_2_oneout_4,reputer_0_loss_network_inference,reputer_1_loss_network_inference,reputer_2_loss_network_inference,reputer_3_loss_network_inference,reputer_4_loss_network_inference,reputer_0_loss_naive_network_inference,reputer_1_loss_naive_network_inference,reputer_2_loss_naive_network_inference,reputer_3_loss_naive_network_inference,reputer_4_loss_naive_network_inference,reputer_0_loss_network_inference_oneout_0,reputer_0_loss_network_inference_oneout_1,reputer_0_loss_network_inference_oneout_2,reputer_0_loss_network_inference_oneout_3,reputer_0_loss_network_inference_oneout_4,reputer_0_loss_network_inference_oneout_5,reputer_0_loss_network_inference_oneout_6,reputer_0_loss_network_inference_oneout_7,reputer_1_loss_network_inference_oneout_0,reputer_1_loss_network_inference_oneout_1,reputer_1_loss_network_inference_oneout_2,reputer_1_loss_network_inference_oneout_3,reputer_1_loss_network_inference_oneout_4,reputer_1_loss_network_inference_oneout_5,reputer_1_loss_network_inference_oneout_6,reputer_1_loss_network_inference_oneout_7,reputer_2_loss_network_inference_oneout_0,reputer_2_loss_network_inference_oneout_1,reputer_2_loss_network_inference_oneout_2,reputer_2_loss_network_inference_oneout_3,reputer_2_loss_network_inference_oneout_4,reputer_2_loss_network_inference_oneout_5,reputer_2_loss_network_inference_oneout_6,reputer_2_loss_network_inference_oneout_7,reputer_3_loss_network_inference_oneout_0,reputer_3_loss_network_inference_oneout_1,reputer_3_loss_network_inference_oneout_2,reputer_3_loss_network_inference_oneout_3,reputer_3_loss_network_inference_oneout_4,reputer_3_loss_network_inference_oneout_5,reputer_3_loss_network_inference_oneout_6,reputer_3_loss_network_inference_oneout_7,reputer_4_loss_network_inference_oneout_0,reputer_4_loss_network_inference_oneout_1,reputer_4_loss_network_inference_oneout_2,reputer_4_loss_network_inference_oneout_3,reputer_4_loss_network_inference_oneout_4,reputer_4_loss_network_inference_oneout_5,reputer_4_loss_network_inference_oneout_6,reputer_4_loss_network_inference_oneout_7,reputer_0_loss_naive_network_inference_onein_0,reputer_0_loss_naive_network_inference_onein_1,reputer_0_loss_naive_network_inference_onein_2,reputer_1_loss_naive_network_inference_onein_0,reputer_1_loss_naive_network_inference_onein_1,reputer_1_loss_naive_network_inference_onein_2,reputer_2_loss_naive_network_inference_onein_0,reputer_2_loss_naive_network_inference_onein_1,reputer_2_loss_naive_network_inference_onein_2,reputer_3_loss_naive_network_inference_onein_0,reputer_3_loss_naive_network_inference_onein_1,reputer_3_loss_naive_network_inference_onein_2,reputer_4_loss_naive_network_inference_onein_0,reputer_4_loss_naive_network_inference_onein_1,reputer_4_loss_naive_network_inference_onein_2,inference_loss_0,inference_loss_1,inference_loss_2,inference_loss_3,inference_loss_4,forecast_implied_inference_loss_0,forecast_implied_inference_loss_1,forecast_implied_inference_loss_2,forecast_implied_inference_loss_0_oneout_0,forecast_implied_inference_loss_0_oneout_1,forecast_implied_inference_loss_0_oneout_2,forecast_implied_inference_loss_0_oneout_3,forecast_implied_inference_loss_0_oneout_4,forecast_implied_inference_loss_1_oneout_0,forecast_implied_inference_loss_1_oneout_1,forecast_implied_inference_loss_1_oneout_2,forecast_implied_inference_loss_1_oneout_3,forecast_implied_inference_loss_1_oneout_4,forecast_implied_inference_loss_2_oneout_0,forecast_implied_inference_loss_2_oneout_1,forecast_implied_inference_loss_2_oneout_2,forecast_implied_inference_loss_2_oneout_3,forecast_implied_inference_loss_2_oneout_4,network_naive_loss,network_loss_oneout_0,network_loss_oneout_1,network_loss_oneout_2,network_loss_oneout_3,network_loss_oneout_4,network_loss_oneout_5,network_loss_oneout_6,network_loss_oneout_7,network_naive_loss_onein_0,network_naive_loss_onein_1,network_naive_loss_onein_2,forecasted_regret_0_inferer_0,forecasted_regret_0_inferer_1,forecasted_regret_0_inferer_2,forecasted_regret_0_inferer_3,forecasted_regret_0_inferer_4,forecasted_regret_1_inferer_0,forecasted_regret_1_inferer_1,forecasted_regret_1_inferer_2,forecasted_regret_1_inferer_3,forecasted_regret_1_inferer_4,forecasted_regret_2_inferer_0,forecasted_regret_2_inferer_1,forecasted_regret_2_inferer_2,forecasted_regret_2_inferer_3,forecasted_regret_2_inferer_4,inference_regret_worker_0,inference_regret_worker_1,inference_regret_worker_2,inference_regret_worker_3,inference_regret_worker_4,inference_regret_worker_5,inference_regret_worker_6,inference_regret_worker_7,naive_inference_regret_worker_0,naive_inference_regret_worker_1,naive_inference_regret_worker_2,naive_inference_regret_worker_3,naive_inference_regret_worker_4,inference_regret_worker_0_oneout_0,inference_regret_worker_1_oneout_0,inference_regret_worker_2_oneout_0,inference_regret_worker_3_oneout_0,inference_regret_worker_4_oneout_0,inference_regret_worker_5_oneout_0,inference_regret_worker_6_oneout_0,inference_regret_worker_7_oneout_0,inference_regret_worker_0_oneout_1,inference_regret_worker_1_oneout_1,inference_regret_worker_2_oneout_1,inference_regret_worker_3_oneout_1,inference_regret_worker_4_oneout_1,inference_regret_worker_5_oneout_1,inference_regret_worker_6_oneout_1,inference_regret_worker_7_oneout_1,inference_regret_worker_0_oneout_2,inference_regret_worker_1_oneout_2,inference_regret_worker_2_oneout_2,inference_regret_worker_3_oneout_2,inference_regret_worker_4_oneout_2,inference_regret_worker_5_oneout_2,inference_regret_worker_6_oneout_2,inference_regret_worker_7_oneout_2,inference_regret_worker_0_oneout_3,inference_regret_worker_1_oneout_3,inference_regret_worker_2_oneout_3,inference_regret_worker_3_oneout_3,inference_regret_worker_4_oneout_3,inference_regret_worker_5_oneout_3,inference_regret_worker_6_oneout_3,inference_regret_worker_7_oneout_3,inference_regret_worker_0_oneout_4,inference_regret_worker_1_oneout_4,inference_regret_worker_2_oneout_4,inference_regret_worker_3_oneout_4,inference_regret_worker_4_oneout_4,inference_regret_worker_5_oneout_4,inference_regret_worker_6_oneout_4,inference_regret_worker_7_oneout_4,inference_regret_worker_0_oneout_5,inference_regret_worker_1_oneout_5,inference_regret_worker_2_oneout_5,inference_regret_worker_3_oneout_5,inference_regret_worker_4_oneout_5,inference_regret_worker_5_oneout_5,inference_regret_worker_6_oneout_5,inference_regret_worker_7_oneout_5,inference_regret_worker_0_oneout_6,inference_regret_worker_1_oneout_6,inference_regret_worker_2_oneout_6,inference_regret_worker_3_oneout_6,inference_regret_worker_4_oneout_6,inference_regret_worker_5_oneout_6,inference_regret_worker_6_oneout_6,inference_regret_worker_7_oneout_6,inference_regret_worker_0_oneout_7,inference_regret_worker_1_oneout_7,inference_regret_worker_2_oneout_7,inference_regret_worker_3_oneout_7,inference_regret_worker_4_oneout_7,inference_regret_worker_5_oneout_7,inference_regret_worker_6_oneout_7,inference_regret_worker_7_oneout_7,inference_regret_worker_0_onein_0,inference_regret_worker_1_onein_0,inference_regret_worker_2_onein_0,inference_regret_worker_3_onein_0,inference_regret_worker_4_onein_0,inference_regret_worker_5_onein_0,inference_regret_worker_0_onein_1,inference_regret_worker_1_onein_1,inference_regret_worker_2_onein_1,inference_regret_worker_3_onein_1,inference_regret_worker_4_onein_1,inference_regret_worker_5_onein_1,inference_regret_worker_0_onein_2,inference_regret_worker_1_onein_2,inference_regret_worker_2_onein_2,inference_regret_worker_3_onein_2,inference_regret_worker_4_onein_2,inference_regret_worker_5_onein_2,inferer_score_0,inferer_score_1,inferer_score_2,inferer_score_3,inferer_score_4,forecaster_score_0,forecaster_score_1,forecaster_score_2,inferer_reward_fraction_0,inferer_reward_fraction_1,inferer_reward_fraction_2,inferer_reward_fraction_3,inferer_reward_fraction_4,forecaster_reward_fraction_0,forecaster_reward_fraction_1,forecaster_reward_fraction_2,reputer_listening_coefficient_0,reputer_listening_coefficient_1,reputer_listening_coefficient_2,reputer_listening_coefficient_3,reputer_listening_coefficient_4,reputer_adjusted_stake_0,reputer_adjusted_stake_1,reputer_adjusted_stake_2,reputer_adjusted_stake_3,reputer_adjusted_stake_4,reputer_score_0,reputer_score_1,reputer_score_2,reputer_score_3,reputer_score_4,reputer_reward_fraction_0,reputer_reward_fraction_1,reputer_reward_fraction_2,reputer_reward_fraction_3,reputer_reward_fraction_4,inferer_reward_fraction_smooth_0,inferer_reward_fraction_smooth_1,inferer_reward_fraction_smooth_2,inferer_reward_fraction_smooth_3,inferer_reward_fraction_smooth_4,forecaster_reward_fraction_smooth_0,forecaster_reward_fraction_smooth_1,forecaster_reward_fraction_smooth_2,reputer_reward_fraction_smooth_0,reputer_reward_fraction_smooth_1,reputer_reward_fraction_smooth_2,reputer_reward_fraction_smooth_3,reputer_reward_fraction_smooth_4,inferers_entropy,forecasters_entropy,reputers_entropy,forecaster_task_score,forecaster_score_ratio,forecasters_utility,inferers_reward_fraction,forecasters_reward_fraction,reputers_reward_fraction,topic_rewards,inferer_reward_0,inferer_reward_1,inferer_reward_2,inferer_reward_3,inferer_reward_4,forecaster_reward_0,forecaster_reward_1,forecaster_reward_2,reputer_reward_0,reputer_reward_1,reputer_reward_2,reputer_reward_3,reputer_reward_4"
	simulatorEpochs := map[int]string{
		300: "0.03985254043403228,-0.023436611594409483,0.009781863350371005,0.02223793659211506,0.11552983586563229,0.032472720698523826,-2.341421686954683,-2.9432576400770207,-3.884181450545189,-1.9647795852794823,-4.111767408188739,-2.677026067794835,-2.944431590946878,-3.0650682375687572,-2.08706693542846,-4.140211608991293,-2.24866014324237,-1.8901641108547267,-4.125883222164734,-0.9729640557942307,-4.0722307692978905,0.027427871588394243,0.030491231754267403,0.026372338614221263,0.02768865691980181,0.028026218406433333,0.030871356113854605,0.02749032820384923,0.0212722105066357,0.030982530028924156,0.030887352741104487,0.030492870894407113,0.03091754405600789,0.016390615060110064,0.027167878688166135,0.026306384596857357,0.03094332767248009,0.02666468344361231,0.021104206216540324,0.027911051862835427,0.0226935240173755,0.026379223155184053,0.027443106963151918,0.030457632949950443,0.032189306790880126,0.010204191167646311,0.028910338776853395,0.02855302869355451,0.030503615443105047,0.027890929403146317,0.019292466543344405,0.028273394239595583,0.02680490929738837,0.028593121085772822,0.027270776103154603,0.030302229788031043,0.026213352886516838,-3.9073687008674196,400243.65662578074,467530.8534549682,309850.109626039,284487.25113369955,370207.01993473736,-1.285027790259861,-2.3830546751342823,-3.256262594972895,-0.901603218936355,-1.3779496468904517,-1.2731065545153895,-2.4271412552962555,-3.1602027232529477,-0.9710646287668246,-1.5942818258649414,-1.1332372457971156,-2.5227959336961208,-3.207635245298263,-1.0296738594694543,-1.4804203639607978,-1.2889403331644413,-2.6500477861343903,-3.3762923520567085,-1.0920460310220907,-1.5598562784076264,-1.3573311686171754,-2.533322631682507,-3.371331335558988,-0.7816189326383448,-1.596214834724491,-3.34141319097588,-3.339819965526943,-4.54552981098554,-3.5644107597250927,-3.5665333822323286,-4.585435357907197,-3.6052115131567772,-3.387764564096687,-4.676049008809123,-3.3592613135860256,-3.6756948194299586,-4.60978107879295,-3.573835777936029,-3.4191603219585383,-4.550188336494632,-3.169385402623763,-3.1946220424206264,-2.3634012162512716,-3.2557533814038253,-3.289912260683438,-3.434432733229539,-3.255607233265225,-2.37154937337304,-3.3003894763530317,-3.4522595891368426,-4.14228864142894,-4.317901597188783,-2.029931891997736,-5.506165183834536,-4.662802608061375,-3.3529478710015908,-3.4582504260152978,-2.4115552498249273,-3.418456743485804,-3.447227025721337,-3.5562861275803015,-3.387678840725681,-2.3110184367900013,-3.3438106671402457,-3.516783400864995,-4.2978258734417425,-4.392588569569012,-2.1428351137320822,-5.558807851194372,-4.66970104984268,-3.2927185046342946,-3.5364128079741257,-2.472473047331775,-3.415782458639927,-3.4354384307655086,-3.4679140324907136,-3.4101443762402,-2.4089121767287978,-3.672597660559172,-3.479809568021285,-4.33523191921393,-4.476665638407145,-2.104180862641186,-5.536386103837072,-4.594960978202287,-3.2254711363731223,-3.1647983954553762,-2.357329261785757,-3.374330013528542,-3.4722244171305627,-3.3983241955923917,-3.5542518978878217,-2.4298085882323286,-3.351053024464599,-3.3247697495887985,-4.269047612115928,-4.717822904685684,-2.118852912458904,-5.478247825662543,-4.801594115492882,-3.3775159882390504,-3.1787800148517813,-2.2834228489965804,-3.365764322838818,-3.4786172515981604,-3.421298927555511,-3.278146835259013,-2.3826063156303157,-3.3387868727832037,-3.43310582439825,-4.089277655614135,-4.636868640283913,-2.1802857385114662,-5.591578562775327,-4.6029353998731235,-3.9084867075175147,-3.8295111997581532,-3.789386102474206,-3.796819281702346,-4.1881849055651275,-3.5814960187681226,-3.6353767331849074,-3.932082734248802,-3.607193895381324,-3.6944756441814532,-3.575740270655986,-3.5207630990581364,-2.1767191209952057,-3.6427348791354293,-3.436001880183461,-4.413974153021221,-3.96204211773875,-3.4866321829454123,-3.6664498629361275,-3.533618357777417,-2.3887494032957615,-3.735018861290483,-3.5255358878609413,-4.435145897250557,-4.063007554993539,-3.386280164911842,-3.659497084130465,-3.5988925715216022,-2.2930545797655735,-3.744014626898515,-3.7770096793415746,-4.505881329786071,-4.187397864226005,-3.4322614180412727,-3.7554689053878687,-3.6195741918602446,-2.2562132923286775,-3.6990531616185174,-3.574883255262756,-4.424010364562517,-4.1260753077247685,-3.1191786317398105,-3.6779741461977107,-3.429546971537292,-2.444143026932997,-3.8147807644976988,-3.508245536571058,-4.415413248083316,-4.165484153767118,-3.4247531248014047,-3.2704178495639726,-3.5549331034470795,-4.53662813289208,-3.420385943220859,-3.5601638858207725,-4.459157277205009,-3.508579817990112,-3.4767962823108407,-4.624590035223692,-3.353927082507711,-3.409515099538707,-4.6190767450867325,-3.3113930700030756,-3.454044010747474,-4.561574732727365,-1.2715336459383855,-2.4897484773558207,-3.2654138665315458,-0.9463102738495336,-1.522818509415775,-3.492652268792008,-3.473953619002344,-4.588700106270079,-3.287838022336547,-3.311855474480095,-2.377030649818549,-3.3649670301727856,-3.4210936854299674,-3.4629265507046028,-3.3663607825823156,-2.3737019188855384,-3.3900341409004078,-3.4497180798802503,-4.223572649029942,-4.490343126350025,-2.115479630565788,-5.53763051820395,-4.662543729334966,-3.6813458856540295,-3.6616094910029315,-3.5341670437782375,-2.3168664175978035,-3.726913227426862,-3.552671694276326,-4.436767035844435,-4.092484467161524,-3.3822789693866495,-3.3702017082246414,-3.5000929937353615,-4.549576738807851,-0.9037268965174445,-0.3018909433951067,0.6390328670730616,-1.2803689981926452,0.8666188247166118,-0.5681225156772922,-0.3007169925252495,-0.1800803459033702,-1.1580816480436673,0.8950630255191654,-0.9964884402297574,-1.3549844726174007,0.8807346386926063,-2.2721845276778967,0.8270821858257631,-1.857878238352757,-1.7158624101771012,-1.5628221364309827,-2.4730236955749225,-2.0659834434804556,-0.20075803561434968,-0.26901657906490045,-0.16712527165601743,-0.41476072312143286,-0.27274489494577636,-0.11970462119965834,-1.0299061803435983,-0.6228659282491313,-1.5745731225160826,-1.4325572943404266,-1.2795170205943083,-2.189718579738248,-1.7826783276437816,-0.09919691416319336,-0.09272353083572177,-0.2842059856684728,-1.4323266290325798,-1.2903108008569233,-1.1372705271108052,-2.0474720862547455,-1.6404318341602782,-0.1510421024959296,-0.04534585560643711,-0.03527946620181252,-1.2602896564374177,-1.1182738282617615,-0.9652335545156435,-1.875435113659583,-1.4683948615651166,-0.10252577288727441,-0.17091324034996155,-0.14072098157408017,-1.928900344098949,-1.7868845159232922,-1.6338442421771746,-2.544045801321114,-2.1370055492266475,-0.2998103323954395,-0.48976601577399276,-0.2032808491445238,-1.850980806057958,-1.7089649778823015,-1.5559247041361837,-2.4661262632801235,-2.0590860111856557,-0.21636160970873028,-0.2842621640399871,-0.47030550563751417,-1.7481399798007096,-1.606124151625053,-1.4530838778789348,-2.363285437022875,-1.9562451849284075,-0.09101977706230177,-0.1592783205128527,-0.05738701310396965,-1.8460534772756576,-1.7040376491000013,-1.5509973753538835,-2.461198934497824,-2.054158682403356,-0.18893327453725048,-0.2571918179878014,-0.1553005105789184,-1.673166727552091,-1.5311508993764347,-1.378110625630316,-2.2883121847742562,-1.8812719326797893,-0.01604652481368328,-0.0843050682642342,0.017586239144648866,-1.6578649715630438,-1.5158491433873869,-1.3628088696412688,-2.2730104287852093,-1.8659701766907424,-0.0007447688246359097,-1.8135524214196912,-1.6715365932440347,-1.5184963194979169,-2.428697878641856,-2.0216576265473902,-0.22469076213183428,-1.735539642184751,-1.593523814009094,-1.4404835402629763,-2.350685099406916,-1.943644847312449,-0.04478667548801088,0.24575920986448807,0.37320165708918207,1.590502283269616,0.18045547344055768,0.3546970065910937,-0.4748347955901083,-0.18415004770024557,0.610875011899033,0.04076693952777525,0.07491213986268967,0.7864326040783544,0.028911924536161857,0.06897639199501879,0.0016379098612038406,0.012673403302076646,0.9856886868367196,0.9896551115825039,0.988147604241534,0.28392441823862824,0.36823038501849115,0.9904923117780675,1.0,1.0,0.30910895545733597,0.37001434719339094,1.0,29.767164103252455,35.32493336530991,22.871637455160087,23.45540614451945,30.030824236390384,0.22350099866297982,0.3098198050140948,0.13294330191195433,0.12517664721904906,0.208559247191922,0.15209764546661927,0.2819268038119449,0.3397320852261675,0.13223269489898115,0.09401077059628747,0.3358902724311376,0.27145659764144847,0.39265312992741425,0.21625362918864985,0.3075648206353037,0.12758099382040944,0.13185524402759324,0.216745312328044,1.4266981856789434,1.081559813699303,1.514984585996016,0.22602281521339007,5.29370262084246,0.5,0.354614009820197,0.26882788963089355,0.3765581005489095,7708.8051494006695,111.44255667204439,204.78359398021513,2149.8317279626385,79.03509132501519,188.55733501164107,3.3943091025815466,26.26362366321464,2042.6838871233508,648.781609921058,899.3489652615444,385.9095483180293,363.364401918204,605.4084991411333",
		301: "0.2011215847521158,0.17114675838705384,-0.01317049616146998,0.24650843075059153,-0.14234745122383394,0.14536735397809786,-2.8908577425531217,-0.9787713933823274,-2.4416698954082987,-0.5138057970695222,-2.0188003586001537,-2.898113688422412,-1.5092177007327892,-3.145347796323594,-0.6902301819749463,-2.4059439135919636,-2.734493551371176,-1.1220224413645161,-2.484388959598741,-0.9321783742303835,-1.8436230936889229,0.18383064290024706,0.2147897454517126,0.19065707903641352,0.22455343014829177,0.18463402074377588,0.1678660189034803,0.18206824729333954,0.18747337928051683,0.23228100236083138,0.21417481637353983,0.16396800661906205,0.22339568167454352,0.21746533398267343,0.23856704547647184,0.1910676951748931,0.16921463568102493,0.1899890170986323,0.19295675723221312,0.19450614433065136,0.172474964822551,0.18259231500607298,0.19003895735652526,0.21358053060462798,0.24187243749503173,0.18634225202672824,0.22948674303769248,0.19797907395494593,0.16588409097518236,0.1929856929480861,0.19873222650672762,0.2001240418055455,0.18690195915900493,0.1970023472689866,0.18342889053437042,0.21400509117362665,0.19018764333290633,-3.827041560629895,400892.4382357018,468430.20242022973,310236.019174357,284850.61553561775,370812.42843387846,-2.1981590133062405,-2.915571188728293,-3.4021034999449347,-2.1046023618220793,-4.1789539859005,-2.482486279663322,-3.0682245947433793,-3.411608136888827,-2.134923717132202,-4.142746014728538,-2.4589115598868836,-3.0436382345229034,-3.696919137357124,-2.156316271273213,-4.390381886533443,-2.4685541191815576,-3.0434005215205047,-3.588278574146972,-2.275767098032603,-4.219627396707465,-2.4944013822614517,-3.0004564125270856,-3.6603945798353177,-2.091580761542833,-4.287897710041386,-3.6978835956317604,-3.828653174121524,-3.7161894161852422,-3.7851105294543967,-3.8913002237127134,-3.679571444541289,-3.6915503708581068,-4.267146530583558,-3.702533890896396,-3.600361327543356,-4.176979282896008,-3.6946576939271774,-3.8625347272603374,-3.976604615691521,-3.63802018490697,-3.682558618993899,-3.769286864780166,-4.069311037256623,-3.7230667715553407,-3.228910519862002,-4.030002425645905,-3.8494157710596473,-3.9016345398232035,-3.9778292410536737,-3.1008194098355464,-3.8085932136555396,-3.706674195738329,-3.989784138109678,-3.6701422942652377,-3.290723462194848,-3.865585738625725,-3.8085063008672817,-4.120180038408431,-3.811729227010732,-3.3792296746411346,-4.042753965560239,-4.103539873222309,-4.074821694159235,-4.034041868426119,-3.1761680411945274,-3.763969585222595,-3.6008014473177257,-4.194845855763396,-3.763510915603218,-3.38212983470579,-4.0194788457200366,-3.8661662357424453,-4.146144073477802,-3.8520233407608533,-3.3758216812529813,-4.298075887956482,-3.9640919333554625,-4.147827087382908,-4.144269519220671,-3.2017026616041795,-3.764280289775643,-3.6339001745740678,-4.484945753031558,-4.154136374899517,-3.2889143311702544,-3.972259494127684,-3.7930194050112758,-4.232932570080014,-3.7996978979093465,-3.624556295175803,-4.006162273774471,-3.9900171245896985,-4.380187448693096,-4.04550813126868,-3.240338161927384,-3.8505366330134074,-3.5853458310747253,-4.006725410672967,-3.9132639326795795,-3.496003996349352,-3.8704367034818423,-3.8405877097642396,-4.0992513647592235,-3.832216181554574,-3.377037275981361,-4.013399392160078,-4.112998633919778,-3.9509307385811354,-4.314602964774186,-3.14799934842595,-3.748130101760082,-3.594719729995497,-4.086324669607907,-3.677921188446574,-3.4427887435534528,-3.738000517784241,-3.8730548307678094,-3.919939654855134,-4.031953370980092,-3.6300478535044727,-2.935265334761964,-2.992112021134486,-3.0182893211270603,-3.0435072666261425,-3.1530006119845075,-3.7367693658539753,-3.870831367784988,-3.9842240191102456,-3.764938732615177,-3.2883792992444154,-3.772380897881969,-3.605238551608053,-3.850986344018049,-3.997221175118786,-3.7640638610102957,-4.014513283575169,-3.8220131910777715,-3.2974810943460993,-3.7968554639905787,-3.7879867333500563,-3.8470046641415023,-3.9959211097376555,-3.9612423818148703,-4.064198693089538,-3.864611260384598,-3.159872536971918,-3.8109264596085053,-3.5609234097250186,-3.897561772892669,-3.952284419518554,-3.807558836721479,-4.1306990907098,-3.8928690568285798,-3.4904144476110956,-3.9086606228019924,-3.745180674780208,-3.9628357900919213,-3.925528580294731,-3.7594718348658267,-4.055353831372074,-3.831109325153502,-3.5547885679879765,-3.969138895512272,-3.633429105960478,-3.713048178546369,-3.709912002572615,-3.9963353017349386,-3.5858535710376636,-3.8314639802251316,-4.066949984942099,-3.8278944361932634,-3.9696917727794476,-4.21429504810775,-3.7817697378757194,-3.5067695619646186,-3.9676457134349965,-3.723906811919596,-3.96274726392075,-3.909417360250538,-3.6319567843310723,-2.416636636324492,-3.013176418705684,-3.53545213858776,-2.1450196940179547,-4.233778520602076,-3.7372087319602265,-4.002727697451959,-3.6853981246613907,-3.8691569036964384,-3.8137646010528625,-4.126729109130766,-3.8014450544788647,-3.3834522573429155,-4.071518803180957,-4.008745983678775,-4.071695531829384,-4.098864055076186,-3.168293602641485,-3.7840057837883556,-3.6258961175561155,-4.147965697544264,-3.815098588927862,-3.376336132542911,-3.024604657260011,-3.91864687788301,-3.826541846899916,-4.0425814171714345,-3.8295823219042315,-3.3541663555873416,-3.846051845510216,-3.6718095943048077,-3.8473330709545994,-3.8044078702456607,-4.029189378403539,-3.711494902433741,-1.016510958314298,-2.9285973074850924,-1.465698805459121,-3.393562903797897,-1.8885683422672659,-1.0092550124450077,-2.3981510001346305,-0.7620209045438258,-3.2171385188924733,-1.501424787275456,-1.1728751494962437,-2.7853462595029033,-1.4229797412686787,-2.975190326637036,-2.0637456071784968,-1.8131309069480215,-1.6256626833518122,-1.435698864992098,-2.3939235126786245,-1.818711403135192,-0.18966551491988157,-0.22454630747620394,-0.16457708808726612,-0.43408145290284145,-0.2466132293066314,-0.05664941094691758,-1.0148740586334442,-0.4396619490900117,-1.567316834420326,-1.3798486108241166,-1.1898847924644025,-2.148109440150929,-1.572897330607497,-0.0942262201655312,-0.06816398522235495,-0.26924949651109104,-1.4300844871868643,-1.2426162635906544,-1.0526524452309403,-2.0108770929174673,-1.4356649833740343,-0.137215616831042,-0.022590856367907506,-0.05181609251601134,-1.2968551688783703,-1.1093869452821603,-0.9194231269224467,-1.8776477746089728,-1.3024356650655406,-0.08385842640261383,-0.15091050484917043,-0.11611045537938919,-1.8773048782470279,-1.6898366546508177,-1.4998728362911045,-2.4580974839776304,-1.8828853744341985,-0.27264302589843226,-0.4138612408793981,-0.1844011375277084,-1.759635697378447,-1.572167473782237,-1.3822036554225237,-2.34042830310905,-1.7652161935656168,-0.19179685856229983,-0.27442322293057403,-0.4210579773782058,-1.7162675027392111,-1.528799279143001,-1.338835460783287,-2.2970601084698137,-1.7218479989263809,-0.09280211071107057,-0.12768290326739312,-0.06771368387845524,-1.7869654253461233,-1.5994972017499136,-1.4095333833901997,-2.3677580310767268,-1.7925459215332937,-0.16350003331798355,-0.19838082587430608,-0.13841160648536824,-1.6489196982598926,-1.4614514746636829,-1.2714876563039683,-2.229712303990495,-1.6545001944470628,-0.025454306231752245,-0.060335098788074776,-0.0003658793991368932,-1.6308555977988564,-1.443387374202646,-1.253423555842932,-2.211648203529459,-1.6364360939860267,-0.007390205770715741,-1.7934524534856269,-1.605984229889417,-1.416020411529703,-2.3742450592162285,-1.7990329496727975,-0.20486785401380886,-1.6914715045772009,-1.5040032809809902,-1.3140394626212768,-2.272264110307803,-1.6970520007643706,-0.04291768571644484,-0.09160531725311527,0.0004997137299787013,-0.21553985654153962,-0.002540761274336667,0.4728752050425533,0.18069308958617147,0.3675701550296975,0.15650392854990414,0.04784635614082218,0.07993620525761799,0.023693259631750292,0.07860702832256061,0.769917150647249,0.19937195979106095,0.634438532089166,0.166189508119773,0.9891784507183023,0.9875905484838456,0.28737411305524896,0.3694592888084982,0.9900514486553149,1.0,1.0,0.31342269290236346,0.370285575622428,1.0,27.867576177761087,39.00375837782614,20.157637252537395,22.172021090733896,29.90380362566133,0.21039170560627468,0.34407482611098306,0.1177696535677222,0.11893892205914602,0.20882489265587398,0.14167251653403956,0.2617277439565122,0.30812820266672575,0.1268701282413391,0.16160140860138364,0.32223844116712996,0.3077547910862202,0.3700067677466501,0.21566743683041234,0.31121582118287167,0.1265998597951407,0.13056361183074852,0.215953270360827,1.5008128073980325,1.0937340278162135,1.510747953362792,0.8024369033698839,4.93402552406124,0.5,0.3655797901709852,0.2664203386464531,0.3679998711825618,7633.942328283924,133.5303300663091,223.08716343795004,66.1235051978194,219.37767646401292,2148.6963593853475,405.49016833313704,1290.3448782038745,338.00245377188406,591.0512711806881,966.6058971675811,330.84908574283406,334.1338997815628,586.6496395509236",
		302: "0.09568583574498818,0.21073811046992752,0.25712287680943163,0.1997509073157136,0.020714272285501698,0.08417981250377231,-1.829431540887379,-1.8676076856518762,-1.647064399417975,-1.7710435399124593,-3.805608075039177,-2.470608845517157,-1.7126347192668319,-2.298186110212427,-2.9879489153238357,-3.56293462659419,-1.4564411423354358,-1.1897016403791918,-1.4905946075958827,-2.555036220978439,-3.187627300323815,0.08475997300723974,0.0807110022144602,0.07851400736008668,0.08491895966850534,0.08469710618834828,0.08496472907443296,0.08549083677945257,0.23479506767309163,0.07838352807372881,0.08163083747490073,0.07959618591113059,0.08719028279869953,0.03413153220551062,0.07742942035033941,0.07844146816995375,0.07734349814931697,0.08537619186652812,0.022848872473116115,0.08258717180175411,0.02800616957997822,0.07167480768859354,0.08065552958468879,0.09633725971550954,0.18897897816010498,0.20571444562622385,0.08224503404914928,0.08272854915313156,0.08228642226273193,0.0865575076876917,0.12355670395609089,0.08116313970718932,0.08309855172096497,0.08450731401972447,0.086385958713291,0.08238611002179422,0.08015350321006234,-4.268034301375579,401483.4895068825,469396.8083173973,310566.86826009984,285184.7494353993,371399.0780734294,-2.7889603745056486,-1.1899357397203154,-2.621483031371425,-0.8517206049868495,-2.5509665357091187,-3.1462428559573445,-1.358763489728261,-2.735898739062348,-0.9292393092120302,-2.580631943915396,-3.2919124813236795,-1.4699492714151914,-2.8434539608615226,-0.8652099362319197,-2.5676680751721133,-2.868557493231947,-1.4298645541074524,-2.648858064789955,-0.9904917413512826,-2.521933764599845,-3.1512868780240244,-1.520093270365574,-2.7518063041409655,-0.9857053394676621,-2.4865975264621447,-3.416731172372558,-3.71924591064311,-3.812920807216769,-3.5737648520847967,-3.781166155327157,-3.856325747110599,-3.332170373644548,-3.783942519109525,-3.9474765145937476,-3.671130507792392,-3.8919438538136713,-3.839422288438335,-3.529371258811514,-3.771084173482247,-3.8878915496324877,-3.114974385268736,-3.531503468230733,-2.8504487883527263,-3.323300838761806,-3.6102568832938684,-2.952593494407985,-3.5078978397928227,-2.9884285895752756,-3.390036125281525,-3.421589431373879,-2.786771528165549,-3.9229102942689966,-2.7415791940147214,-3.913379791397287,-4.175946504060161,-3.1597158765970046,-3.5971063435463213,-2.879777342957661,-3.5511551342953362,-3.6248526492596893,-3.072385686708046,-3.8267991495887568,-2.9097211043546727,-3.238156562104045,-3.4863685565906493,-2.773439229547707,-4.088414129697589,-2.9527260510909854,-3.8806070429605257,-4.112668389569814,-3.1259397285732184,-3.5130739621063443,-2.8566223127399035,-3.556465025437943,-3.6482449673038286,-3.1419069025474697,-3.7875405286042314,-2.96784860902263,-3.5409719806860616,-3.6116507197586785,-2.916711901453938,-3.864873899179745,-3.2106401961792326,-3.889953919190658,-4.121405369752297,-3.3762428468973775,-3.76687595870693,-3.2327720255494237,-3.3867302960528227,-3.6312771852768315,-2.8863070284524937,-3.767954476475217,-2.7004449720401125,-3.2818405518721994,-3.5488371960669234,-2.8585341696752185,-3.9587921445134717,-3.021434078140452,-3.9400186681735083,-4.154401689799061,-3.2343090336852227,-3.4662882518718705,-2.8728985124160493,-3.4561072023764208,-3.5861006501197443,-3.070979613038617,-3.865370214709278,-2.7371826060627145,-3.310847238148516,-3.68075432279211,-2.7495756919035443,-4.048253227660278,-3.0713779508163386,-3.8320140245632146,-4.001074562741617,-4.336845534227164,-4.352927299812404,-4.149272887950441,-4.341618515655314,-4.129162626898117,-3.5843400838136703,-3.640280241801551,-3.979880193134458,-3.72095026980136,-3.9322325884306886,-2.832270174279934,-4.715618706655127,-2.79841496872798,-4.054510350273636,-5.0835992958079705,-6.071613875676884,-3.6374573908483243,-4.6069060638424,-2.976172801076011,-4.961725885903156,-2.8790466570260267,-4.106430890692008,-5.127186178795131,-5.892029889707157,-3.6096049751003974,-4.7153547090403976,-3.0696117066970348,-5.11276512043675,-2.6023453897701785,-3.717086741591544,-5.071237012190241,-6.0165451629487015,-3.79632415694475,-4.825891986142775,-3.101196911122159,-4.949137288798773,-2.917714109300755,-4.391642571698076,-5.150973275671291,-5.883310109406466,-3.859470776081696,-4.740459950940169,-3.018532516570547,-4.920817663778041,-2.964376386993444,-4.001709899005035,-5.2953968666599875,-5.887736266414499,-3.734460795147325,-4.809337122273321,-3.2492012283532063,-3.728995386088009,-3.7899501037399808,-3.5808724451668628,-3.7803698387665086,-3.9298153226825856,-3.5719960833605087,-3.9143839953758612,-3.6659396988860404,-3.353255037540595,-3.721155669532268,-3.8736712341572064,-3.37774434689663,-3.7847384451311523,-3.8527079897901144,-3.050748740733257,-1.384303721096754,-2.71878937193685,-0.9224014535556634,-2.5438532163173293,-3.5047789589260008,-3.783260767515495,-3.8660018314952276,-3.1929042706877726,-3.5684854125038625,-2.9228385282136693,-3.4575643120571864,-3.6187834604405964,-3.0288104633451023,-3.7491713057355636,-2.8694003655249736,-3.3439637175006998,-3.5423581116296328,-2.808940984588149,-3.986265045863602,-2.9848197966242362,-3.888744247801146,-4.111892772156216,-3.7569519074933706,-2.9884858841496813,-4.9232697667169605,-2.8379223304335865,-4.052395952687329,-5.145891870072761,-5.950075117500959,-3.7112356492126115,-4.73322899371478,-3.4305638681431425,-3.783487240359838,-3.8303862961543227,-1.997610019742516,-1.9594338749780187,-2.17997716121192,-2.0559980207174355,-0.021433485590717893,-1.3564327151127378,-2.114406841363063,-1.5288554504174678,-0.8390926453060592,-0.26410693403570473,-2.370600418294459,-2.637339920250703,-2.336446953034012,-1.272005339651456,-0.6394142603060797,-1.7535463723174516,-1.7514694730445135,-1.447053471436761,-2.4890944461927536,-1.809258371327498,-0.24702449767285123,-0.2505690301145919,-0.18832262626657464,-0.4612936242885687,-0.45921672501562993,-0.1548007234078779,-1.1968416981638705,-0.5170056232986147,-1.4043588653199361,-1.4022819660469976,-1.0978659644392454,-2.139906939195238,-1.4600708643299825,-0.06436175949516895,-0.05731512878057736,-0.2602790368161352,-1.4743281410665483,-1.4722512417936096,-1.1678352401858572,-2.2098762149418505,-1.530040140076594,-0.2589724905692476,-0.13774161682925645,-0.14033495534974605,-1.145887010960566,-1.1438101116876276,-0.8393941100798757,-1.8814350848358679,-1.2015990099706124,-0.06698096398434418,-0.13267165085511468,-0.0898096632223853,-1.7897391116177321,-1.7876622123447934,-1.4832462107370419,-2.525287185493034,-1.8454511106277787,-0.30486188737160325,-0.4433183403101212,-0.18232619426355587,-1.7931864405745528,-1.791109541301614,-1.4866935396938625,-2.5287345144498548,-1.8488984395845982,-0.3253280136692863,-0.4073342764818295,-0.4823520894320397,-1.8345733901420602,-1.8324964908691215,-1.5280804892613693,-2.570121464017362,-1.8902853891521059,-0.32805151549745937,-0.3315960479392002,-0.2693496440911829,-1.6743175736594464,-1.6722406743865081,-1.367824672778756,-2.409865647534749,-1.7300295726694928,-0.16779569901484628,-0.1713402314565871,-0.10909382760856981,-1.6522757537320558,-1.6501988544591173,-1.3457828528513645,-2.3878238276073573,-1.7079877527421017,-0.14575387908745496,-0.14929841152919582,-0.08705200768117848,-1.5057515507599593,-1.5036746514870203,-1.1992586498792681,-2.241299624635261,-1.5614635497700053,0.0007703238846416592,-1.6873810580997224,-1.6853041588267836,-1.3808881572190315,-2.4229291319750232,-1.7430930571097687,-0.18440371589686227,-1.6002881096615875,-1.598211210388648,-1.2937952087808964,-2.335836183536889,-1.656000108671633,-0.035064363610709866,1.2795484172258975,-0.6552354653413817,1.4301119709419923,0.21563834868825005,-0.8778575686971823,-1.3431276219315924,0.4242328223388423,-0.33053742208916304,0.4389519549922568,0.0011648179332174856,0.5258228976054227,0.0335795684416161,0.0004807610274869878,0.000148111678425753,0.9722531597949394,0.027598728526634825,0.9889993888457951,0.9873811495053111,0.28823848717815426,0.37021992393625935,0.989885821177904,1.0,1.0,0.3143882512325919,0.37083794565170464,1.0,24.498013143328606,37.12717475981895,19.993373101921847,23.122460112925154,30.34278076542959,0.19159290339357166,0.3394789887590958,0.12095450779345107,0.12845209790696552,0.2195215021469159,0.17140046037986129,0.23567145135418274,0.3298976721605954,0.11754107226136679,0.14548934384399398,0.29002940821825957,0.3742046279570922,0.3357659638246486,0.21325998348672828,0.3140421379404941,0.12603532459497174,0.13035246043837023,0.21631009353943592,1.4900240719107851,1.0903581968408416,1.508149172556505,0.5110823938822082,4.4763602009257415,0.5,0.36443992012791016,0.2666870030213048,0.3688730768507849,7649.630948803897,1223.7238202268534,3.2473154177677457,1465.9053176601346,93.61415824123262,1.3402804440931173,0.30215628886059526,1983.4520121510307,56.30298351564053,540.6259157720092,957.9224278794433,341.3025241767964,362.4587958831414,619.4332411468922",
		303: "0.12868417444689542,0.11896852945769756,0.33365452593707556,0.12805144080124747,0.27236127434415436,-0.20147020424130038,-4.083890692275539,-1.574234147817659,-6.5453604176888875,-1.4370305374385317,-0.8831713457382369,-3.5801251060618835,-0.9921476753188869,-6.088709579208688,-2.14968466865389,-1.3903823505637591,-3.4357908590298543,-1.2123273348600865,-6.33108315920075,-1.3217899440180416,-0.6671285372505664,0.12801293862173663,0.12807722061712593,0.12824257152623586,0.12954562024665237,0.1268025118294273,0.12038456447771034,0.12739404024409215,0.12878603607198683,0.128921645634614,0.12777783202652937,0.1218071864249102,0.12639301924749988,0.12927660308659036,0.12925364786294072,0.12740571855198513,0.12042049832612182,0.1276051821007393,0.12892460530277405,0.12798500059105328,0.12012952287648943,0.12801297937603165,0.12809086454298288,0.15142126847275225,0.2564541286703953,0.12681656447898954,0.12905211047853568,0.12656313619964496,0.12064488240335927,0.12724325078445428,0.12954119195400737,0.12801115058522616,0.12797762295600437,0.12788282945335186,0.12786255582995834,0.1279328661963049,0.12809681110714424,-3.775052681905373,402024.1154226545,470354.7307452768,310908.1707842766,285547.2082312825,372018.5113145763,-1.624127346120368,-1.5129403444892633,-1.9640142514663703,-2.1508919497164767,-3.6981853235132918,-1.9532777039330398,-1.6013233234607125,-2.0115982135546857,-2.2841092924901596,-3.823854214460124,-2.069838607149608,-1.5176523202371526,-2.015970424246431,-2.2891207684745547,-3.8658562078622136,-1.891872066070296,-1.4676166644570616,-1.8947730657315178,-1.9815248404909658,-3.853141592128541,-1.8389925395969602,-1.498204914533122,-1.974690115414631,-2.0476487575736653,-3.8863744094536883,-3.846071674160324,-3.586191367922091,-3.4241648743967223,-3.96475146477321,-3.4092521636212054,-3.429704455642078,-3.937631035303124,-3.685685787163077,-3.5823874843303716,-3.8635567495207286,-3.7911209137937956,-3.493568986554699,-3.8806625963084636,-3.5759884510331355,-3.318844516260802,-3.764193271139562,-3.9363340405452325,-3.7144862141875143,-4.079550902833888,-1.694245817231214,-3.493822083770938,-3.6127612897318397,-3.273122352135043,-4.0328724159308225,-2.462993762895705,-3.228392098633998,-3.466679827887512,-3.445884959329498,-3.8160092208619427,-2.071103837404334,-3.914057196796933,-3.8608749622564336,-3.941272931854685,-3.9380833532285098,-1.6724811494380798,-3.62249990281748,-3.788593414313978,-3.644280266218613,-4.114655618340737,-2.350287817080203,-3.4737433809020466,-3.5448024116999246,-3.446681907384144,-3.930311557807826,-2.181905915432531,-3.9657008637826916,-3.710246050711107,-3.7447373201185408,-3.8272082726521957,-1.6869159395362574,-3.4331006618020266,-3.6420986866088474,-3.827193379689818,-4.164579577996967,-2.514126241681633,-3.710346467345556,-3.5369999220696737,-3.504982337569899,-3.9817051396245757,-2.3266540883833042,-3.6086967128066005,-3.905007218376833,-3.9300965702939346,-3.8629514525876782,-1.7298163291926856,-3.5097694509296753,-3.809512645492492,-3.577200729336141,-4.258581602287441,-2.4320099336820733,-3.281290237346374,-3.5139469164514927,-3.506587320448566,-3.9803127211393172,-2.22136373580246,-3.9012706982967944,-3.881152994900874,-3.9415791579963684,-3.986162653441889,-1.7925835062171203,-3.4546336697147484,-3.7682893480897834,-3.4570178631062203,-4.09436909434309,-2.363693990583543,-3.642722243635737,-3.5523486249126073,-3.4269533752213324,-3.858783387719431,-2.3021710301103377,-3.8034935492963684,-3.615344876455104,-3.7735971048298795,-4.069859937447682,-3.7211751728699562,-1.9209801299324076,-1.931131748334546,-1.8267921375646878,-1.9045114306974678,-2.0474472747346315,-3.537429964833932,-3.7508392845909806,-3.507987030331835,-3.9695179170874444,-2.880910142608031,-3.5310911064021737,-3.5938393711468697,-3.770265950443736,-3.6970116275888523,-3.7590318071239373,-3.738902507493972,-4.03992644082939,-3.062416540824205,-3.5348774398577696,-3.8926059123535337,-3.9562441422479835,-3.6659825966303043,-3.7934322133605427,-3.9345960758443703,-4.250761366315037,-3.140446285533229,-3.665108768309448,-3.831203642848988,-4.050384888041008,-3.830713407227034,-3.998656152110692,-3.648451565718964,-4.07110718398278,-3.0475807834152695,-3.8568100765372524,-3.877065971565841,-3.7592694677301455,-3.523036259407907,-3.6499470646915206,-3.58545180249879,-3.9797340271140524,-3.0173041578932924,-3.583500740517826,-3.642295789806499,-3.999864239594469,-3.9234041500614167,-3.769572432818559,-3.6902663654849226,-4.067287328299487,-3.702619076498284,-3.4905943735183893,-4.123440517615702,-3.9848928111119153,-3.813485848950085,-4.081818710257794,-3.6307549309358436,-3.760366482438774,-4.0728114101992805,-3.802651744278833,-3.561876200248667,-1.8684599201396948,-1.5263104748279517,-1.9763644691654305,-2.161140022447525,-3.820680922611702,-3.9015619533346726,-3.5875118547810945,-3.4417845880516165,-3.8401001011225824,-3.8628578780086866,-3.8568795900805646,-3.9483145264470307,-1.7128374552499637,-3.5109990935255353,-3.7245930625957437,-3.545866796257017,-4.12345243706461,-2.417958672848324,-3.4644180872633736,-3.5231622287772306,-3.461659820345064,-3.907329968185991,-2.2125798528560483,-1.9306694292551756,-3.6425006166651914,-3.7781774423518204,-3.676482860591498,-4.052830926934573,-3.0245380004827647,-3.61580923704328,-3.7639920352568383,-3.909789217307866,-4.048718995738731,-3.773983542404223,-3.6449866178968637,-0.18414360910003946,-2.6938001535579197,2.2773261163133087,-2.831003763937047,-3.3848629556373417,-0.6879091953136953,-3.2758866260566917,1.820675277833109,-2.1183496327216886,-2.8776519508118197,-0.8322434423457246,-3.0557069665154923,2.063048857825171,-2.9462443573575374,-3.600905764125012,-1.7688510112622744,-1.8011967464478043,-1.4822169455670793,-2.401576267519263,-1.6237697101241153,-0.20967112076263617,-0.2442662098155606,-0.20281717302529284,-0.4213852127712599,-0.45373094795678937,-0.13475114707606461,-1.0541104690282486,-0.27630391163310053,-1.441327048440492,-1.473672783626022,-1.154692982745297,-2.0740523046974806,-1.296245747302333,-0.03816563509991296,-0.06473376821648524,-0.25205938607470346,-1.5178670791811062,-1.5502128143666356,-1.2312330134859104,-2.150592335438095,-1.3727857780429464,-0.22460719794663622,-0.12932589312193848,-0.15180298117223043,-1.2121006039096898,-1.2444463390952196,-0.925466538214495,-1.8448258601666785,-1.0670193027715307,-0.042243194637003115,-0.13246609220305133,-0.10231100092479019,-1.8292023011354468,-1.8615480363209762,-1.542568235440252,-2.461927557392435,-1.684120999997288,-0.28482733868319715,-0.3919243552661054,-0.17864367071205844,-1.7294756045514046,-1.761821339736934,-1.4428415388562097,-2.362200860808393,-1.5843943034132446,-0.42396526682563784,-0.42725878159709063,-0.5153126952515074,-1.8258509828182128,-1.8581967180037422,-1.5392169171230172,-2.4585762390752017,-1.680769681680053,-0.26667109231857417,-0.3012661813714988,-0.259817144581231,-1.6964390278052164,-1.7287847629907462,-1.4098049621100213,-2.3291642840622053,-1.5513577266670573,-0.13725913730557823,-0.17185422635850278,-0.13040518956823502,-1.6911811080756673,-1.723526843261197,-1.4045470423804716,-2.3239063643326556,-1.5460998069375078,-0.1320012175760288,-0.1665963066289534,-0.12514726983868557,-1.573202303243867,-1.6055480384293963,-1.2865682375486716,-2.2059275595008554,-1.4281210021057076,-0.014022412744228309,-1.709195314516203,-1.7415410497017325,-1.4225612488210075,-2.3419205707731905,-1.564114013378044,-0.18461051306948892,-1.6179119684711458,-1.6502577036566746,-1.33127790277595,-2.2506372247281337,-1.4728306673329858,-0.05187813023416361,0.1325520652401817,-0.0031247604464472722,0.09856982131387504,-0.2777782450291997,0.7505146814226085,0.6489449752674585,0.469124013273663,0.32752689560855247,0.10621351520578254,0.06455329374483738,0.09390070404331761,0.022777110088919555,0.7125553769171429,0.5258369491685458,0.29880563242443153,0.17535741840702265,0.9900844661498533,0.9886505144209792,0.29564418248811863,0.355096165397111,0.9908899606237411,1.0,1.0,0.3217220093604396,0.35725790143047526,1.0,25.352610946845157,30.76054081670973,19.343885985464304,20.605681758495002,33.821506012066266,0.20741044703166328,0.29442542712588526,0.12238598567902757,0.11973489486030378,0.25604324530312017,0.1648817658624534,0.2185596355932482,0.30629797534886766,0.10806467604412207,0.2021959471513089,0.3136101623132882,0.36666472840382613,0.319725109282886,0.21267502984122177,0.31208046685903323,0.12567039070337732,0.1292907038805636,0.22028340871580437,1.5167151429145154,1.0947407370757873,1.5082766623788164,1.8443832526501975,4.274473304508423,0.5,0.36815864314393176,0.2657310215692398,0.36611033528682846,7632.186675272335,298.44462887577504,181.3854268645655,263.8474088263318,64.00038784311117,2002.1776381796753,1066.4545240064094,606.0103212630856,355.64391675776255,579.5509217888991,822.6901302751065,341.97366540314835,334.56592799297385,715.4417771954915",
		304: "-0.10601006107063919,-0.06568637015637532,0.0659614660271801,-0.19990485101340483,-0.4545956573124786,-0.12047057077074849,-2.4398361297810327,-1.4762563625263976,-1.8613615952669258,-0.9007901843450681,-3.608973134491315,-2.808434845647129,-1.6681049323935806,-2.4665825915593462,-0.989392740224861,-3.41341932641455,-2.372371269232899,-1.2340866480974244,-1.7799655462213397,-1.200320298289392,-2.5182847227081746,-0.11880355693396397,-0.11641597858524373,-0.10431794988851092,-0.12093926017549007,-0.11900568107544,-0.11703269046892086,-0.11921628134376808,-0.07335320760580027,-0.12470375547700642,-0.11711782185361028,-0.11044729981001118,-0.1175742556807152,-0.09424638680754953,-0.12291965702164467,-0.10455922179664465,-0.10157008433594156,-0.10408252769363945,-0.07153758512629291,-0.11312299753659688,-0.1203090598926697,-0.11898437712682276,-0.11635518801465085,-0.10032835676472276,-0.07020456106898126,-0.16138721955258092,-0.12297601450294662,-0.1138137661407516,-0.10975018482059595,-0.11185575244879467,-0.08116443662447598,-0.11014530956640742,-0.11166711878936268,-0.11779095293887046,-0.11894393513304549,-0.11659461287546402,-0.10464199238250281,-6.273522134855024,402603.6663444434,471177.4208755519,311250.14444967976,285881.77415927546,372733.9530917718,-3.788830558901378,-1.3545812733268476,-6.21967381345373,-1.4957472246593195,-0.7962960039363913,-4.0395075414642045,-1.3509370779457226,-6.359244334862703,-1.6037313263152637,-0.9204017837628494,-3.885717113730321,-1.7118174591757729,-6.467605024055432,-1.5461296617673441,-1.1588372835125351,-4.204077700527685,-1.4471876637033854,-6.4832067351676725,-1.5330646846017055,-0.9333795420453835,-4.1035547825501215,-1.350903970173912,-6.392699789723814,-1.6793636054761827,-1.0276668401653932,-6.256724897494384,-6.329900195803134,-6.64621297666858,-6.405235624003793,-6.425561254442096,-6.714674902442769,-6.217102589422131,-6.5342649081516395,-6.51664201522596,-6.311513593018512,-6.46051706074677,-6.767323981294013,-6.3213640354777665,-6.544335067748557,-6.756317307815663,-5.985250013860791,-5.418152474115644,-4.172111034241619,-5.734635409165078,-7.855462500810985,-7.335731121987288,-5.896254072682361,-4.2455534986649,-5.266169945052477,-6.380565365324756,-6.285118510855798,-5.8388456396305015,-4.035759580548262,-5.732057988554281,-7.142405780003742,-6.145699971904428,-5.513790756231485,-4.093669303667591,-5.8423348930095225,-7.96104155061654,-7.065662369484828,-6.026198789484772,-4.301940646763752,-5.425083439283214,-6.525869148332392,-6.5661106737703285,-5.688250976262343,-4.093460615312984,-5.840061904284839,-7.121543995151241,-6.399179224022509,-5.38786043565156,-4.168662870255163,-5.829662425109312,-8.128389129691586,-7.29000878683591,-6.2435187348260595,-4.296630008428334,-5.253965392374316,-6.6087087932775415,-6.7759125314864095,-5.780577752236945,-4.254844448261666,-6.007233937706074,-7.4198626873777345,-6.210607378457629,-5.57963273033331,-4.206603736882695,-5.818671600799253,-7.977768195123727,-7.255818686697498,-6.17262316705068,-4.568421898879624,-5.3904498757015675,-6.310976239223721,-6.457440473226897,-5.735513750764313,-4.151195488885022,-6.093643709712813,-7.101145635655747,-6.149339032800961,-5.446095880861709,-4.000694449034315,-5.606282652464023,-7.812691156012887,-7.2495494089290435,-5.9953229061003075,-4.3639307260602616,-5.220199789743392,-6.490144432743205,-6.384369101904068,-5.706016117432827,-4.23587626816189,-5.858255364474759,-7.3184937356169115,-6.269307486966149,-6.25188961128986,-6.320756659255058,-6.386689867181597,-6.179179360355778,-5.253051167956819,-5.467284919478711,-5.569103280078959,-5.467805592628772,-5.625597439571935,-6.820813996863714,-5.252230860349258,-4.152833005202968,-5.6276706812780155,-5.9269962709112,-6.373972788219166,-6.159193732769758,-5.875200147702199,-6.793824690338993,-5.378653403270522,-4.1517998149262345,-5.677144224372204,-6.039829470163359,-6.182929890017218,-6.206751696333946,-6.1603203820949375,-6.74300415169331,-5.505567946553222,-4.32433734032106,-5.824103696398217,-6.2252603854524,-6.293410578223349,-6.3549210219651915,-6.156919369024794,-6.858920771373727,-5.235418232111772,-4.337237380015791,-5.641463244129503,-6.3314777912241755,-6.324798483754129,-6.1955056494128975,-6.039856103949702,-6.983814981916187,-5.182697448064032,-4.218009915183148,-5.725725880334795,-6.104735261966257,-6.417681506480656,-6.397316101272768,-5.989575412877874,-6.116874662602767,-6.270647160891374,-6.458715408081759,-6.005066707149471,-6.20459271748113,-6.483843179522029,-5.962527787621244,-6.292547053015548,-6.540452438070785,-6.343912462697606,-6.231665022430772,-6.536795127566298,-6.2305796566790566,-6.203672879276724,-6.415478156871093,-3.997270292994804,-1.4275760376739695,-6.37304537810421,-1.5747589094975092,-0.9572521549803831,-6.309554286772066,-6.452456206117086,-6.682874976567971,-6.1642555627094096,-5.468169596921619,-4.122174597226105,-5.76528429362523,-7.938839392877876,-7.229176154886056,-6.050973714814774,-4.342584724835659,-5.314700120795056,-6.467579374158362,-6.486575001267297,-5.747644084338043,-4.145850575363509,-5.887698618808702,-7.2131174400672515,-5.469778340470696,-6.839643500128677,-5.310644844787371,-4.223294125572171,-5.695439710737161,-6.104840762427095,-6.312759108959678,-6.258163653041627,-6.044284063213213,-6.1204359788144655,-6.237877931918684,-6.4823022872766405,-1.3352165521243404,-2.2987963193789756,-1.9136910866384473,-2.874262497560305,-0.16607954741405795,-0.9666178362582443,-2.1069477495117925,-1.308470090346027,-2.785659941680512,-0.3616333554908233,-1.4026814126724743,-2.5409660338079485,-1.9950871356840334,-2.5747323836159812,-1.2567679591971985,-1.819591094322069,-2.1056716815211294,-1.3240429266854528,-2.6312949633030884,-1.993019737099168,-0.18510079349466835,-0.20194618170779835,-0.1416001715514688,-0.5264974962417232,-0.8125780834407831,-0.030949328605106782,-1.3382013652227425,-0.6999261390188218,-1.58143166430983,-1.8675122515088907,-1.085883496673214,-2.3931355332908493,-1.754860307086929,-0.1018878653318484,-0.01930712591909882,-0.26216029735337115,-1.4974178264422524,-1.7834984136413121,-1.0018696588056355,-2.3091216954232716,-1.6708464692193505,-0.18639400293854771,-0.04236041680700425,-0.0929227590999401,-1.1134929267764575,-1.3995735139755179,-0.6179447591398417,-1.925196795757477,-1.2869215695535565,-0.048130828007909424,-0.1072904230563975,-0.0998242558531774,-1.8160990127961378,-2.1021795999951975,-1.3205508451595218,-2.627802881777157,-1.989527655573237,-0.2493601465260705,-0.39080587873370537,-0.14155341283369846,-1.7672850910394933,-2.053365678238553,-1.2717369234028773,-2.5789889600205127,-1.9407137338165916,-0.198168877097996,-0.34825904226425486,-0.35295375796234096,-1.874814766132879,-2.160895353331939,-1.3792665984962624,-2.6865186351138983,-2.0482434089099772,-0.240324465305478,-0.25716985351860816,-0.19682384336227862,-1.752884461029377,-2.0389650482284374,-1.2573362933927608,-2.5645883300103964,-1.9263131038064758,-0.11839416020197649,-0.1352395484151066,-0.07489353825877705,-1.7267643742899415,-2.0128449614890016,-1.2312162066533248,-2.5384682432709607,-1.90019301706704,-0.0922740734625406,-0.10911946167567074,-0.048773451519341135,-1.6281986415014464,-1.9142792287005062,-1.13265047386483,-2.4399025104824656,-1.8016272842785452,0.006291659325954567,-1.7623365469569707,-2.048417134156031,-1.266788379320354,-2.574040415937989,-1.9357651897340697,-0.14469163434269983,-1.7046239710522149,-1.9907045582512741,-1.2090758034155982,-2.5163278400332336,-1.878052613829313,-0.02663304828161416,-0.566121365273653,0.9628772900676532,2.0502280092828524,0.5780824241178628,0.1686813724279288,0.1332366790074515,0.20354375922204482,0.42505954043284455,0.0012741332448089203,0.205831225042237,0.6874972307970747,0.08361645952111778,0.021780951394761525,0.17093114161604345,0.23600962826822436,0.5930592301157321,0.9895893152756177,0.9880709797642819,0.2974392712010989,0.3578223403460803,0.9904315618148076,1.0,1.0,0.3239751298249397,0.3579202054887246,1.0,36.72192552548344,45.4505045572807,27.424156312936983,33.748176889791075,41.54915559521329,0.21159789149738714,0.3065006107014499,0.12216618222462033,0.13808450587712226,0.22165080969942044,0.14852100260068896,0.2172867945381471,0.3444179008936884,0.10561985439182164,0.18415444757565416,0.29934226024356375,0.353599218390266,0.34705852136617066,0.2125673160068383,0.3115224812432749,0.12531996985550165,0.13017008408021946,0.220420148814166,1.4737571201535948,1.0944970067096924,1.5090486199465254,0.803743794384328,3.88622862814021,0.5,0.3614539345420697,0.2684365313726226,0.3701095340853078,7637.224369762923,3.517250934861845,568.1980841902748,1897.8394038361184,230.82363765227305,60.126420817859064,350.42764600899886,483.8457035246887,1215.8366695999355,598.10462154305,866.357554269713,345.31609775382896,390.3109834608872,626.5202961704346",
		305: "0.29159692486496175,0.31029079846296986,0.08955476434325738,0.2617398331191027,0.3738839134284821,0.2967177729967309,-3.1452659530035922,-1.1072680276336446,-3.063375318983459,-2.0093792471227956,-4.525820385345199,-3.53284074821208,-0.6282715486089985,-3.0293925849638823,-2.4005832820748423,-4.283981901461117,-3.007662061194156,-1.1672887225131325,-2.1388561675756472,-1.6803229287112686,-4.486281759906206,0.29627098733508395,0.2979698835086184,0.2970256043962661,0.29526345214198924,0.2965154447929416,0.2977589503741215,0.2958083211033339,0.2902719594264843,0.29561088718174205,0.297251369224126,0.30092812429121296,0.29656803304448764,0.3025435366845117,0.2964373696642753,0.29705875253154856,0.29739217684223185,0.2968756661527865,0.3087669389057079,0.2964930725085618,0.26508840243770787,0.29350893097659764,0.2970035297150352,0.2979590734921067,0.30858219867166997,0.2632245323738928,0.29478343185788086,0.29643613835209714,0.2982606312227239,0.2960632267678564,0.29804068664049727,0.296723212875703,0.29594409430738233,0.2963378542686842,0.2953921527871232,0.2970578562798317,0.29619242515946986,-4.296671683662873,403201.7709659864,472043.7784298216,311595.4605474336,286272.0851427363,373360.47338794224,-2.653908466357934,-1.5742050512910253,-1.9843637092657234,-0.7455676580359787,-3.569607599582812,-2.7286473532396722,-1.4053986673853371,-2.105857202059172,-0.8589916670682758,-3.6361553897776577,-2.9481118043500896,-1.587540541986221,-2.001696048525228,-0.9043083651442129,-4.03625551031548,-2.7652022556782696,-1.6250649545398475,-2.206773379011945,-1.140786720738575,-3.6194064062330935,-2.855594013659193,-1.6220883505705936,-2.016820471358728,-1.0991732630204771,-3.571214905592055,-3.5389829027331854,-3.916752661226037,-5.561474424391635,-3.709963316451611,-4.090639275743758,-5.545381789356635,-4.032832409992361,-4.204066904002216,-5.689649844686644,-3.9930613876432597,-3.8485494252420707,-5.674002548274691,-3.752905736177416,-3.8978792917441663,-5.380386478336685,-3.6985327270133954,-3.7403876333709505,-3.721546124652888,-3.685382537791468,-2.8661744663381588,-3.457036149360989,-3.846424705953559,-4.518710485251858,-3.7159408021217306,-3.742871863760749,-3.620066794511499,-5.450012899580996,-4.627868495561064,-5.309321623002706,-2.9174453826793956,-3.581218540322291,-3.525848765924325,-3.762908407985467,-3.721730075896949,-2.8932692527972,-3.321977818601066,-3.7308346705264146,-4.603621524236526,-3.8419371751673346,-3.8926337245513953,-3.4049662529142677,-5.581010592000964,-4.720923407761912,-5.454897848244524,-2.863584614735336,-3.5277541676090154,-3.733629623968173,-3.8279697966517037,-4.028599612495065,-2.8040730883775855,-3.5455563203757894,-4.0841053979445086,-4.843441681417936,-3.939959844566555,-3.6855702040683096,-3.3724024134118284,-5.816223316090104,-4.628621579079765,-5.448015866603452,-2.7586683802651017,-3.6577343035018597,-3.8336957140235617,-3.832227014959888,-3.72887882623391,-3.0321120044555876,-3.4608886905851795,-4.110814696915415,-4.785468183587249,-3.6557628379518485,-3.8729998267432415,-3.6669257674002407,-5.652942946683687,-4.6621272758890555,-5.6090685631355415,-2.9587764553967695,-3.540788386463895,-3.7370604963848173,-3.8441543216054574,-3.7881633983319705,-2.8682985396600262,-3.457376381572189,-3.7862050754001713,-4.752451620901317,-3.748070264487464,-3.9444830846240477,-3.8455212357367308,-5.600069322348977,-4.7919963397493595,-5.3140582682052635,-2.885688465757644,-4.131696256525189,-4.323021242476659,-4.604327389467478,-4.313179652979362,-4.172101311682859,-2.343177267626829,-2.4435685590320024,-2.6268229411206847,-2.4951068728359367,-2.538667730202301,-3.399219690235707,-4.205766893116016,-4.5576726453659,-4.208239693916947,-3.090206743865707,-4.628604991761825,-4.547057271534909,-3.684874764733633,-3.402469458850709,-4.274084576146235,-4.815789205241508,-4.435374204745973,-3.081684713869355,-4.810141996891131,-4.422912296246274,-3.9207724043099517,-3.899301119059641,-4.336765174725394,-5.0318060030660305,-4.676752377777985,-3.0271357851521197,-4.834636274699809,-4.561297790682291,-4.254439994105391,-3.5234613956208882,-4.2264544048967165,-4.971176808213023,-4.418694328977106,-3.16235749499492,-5.013220514842394,-4.6033073681958,-3.6929810811300183,-3.5223527120517306,-4.132170541138488,-4.801320491408976,-4.277159534967014,-3.0925622394965373,-4.73980305322989,-4.257826278419606,-3.784069659942268,-3.8586374559525027,-3.7972916029078405,-5.587957588988052,-3.8118338954631352,-4.098706761210182,-5.599153433487641,-3.8201399913979737,-4.092615112345083,-5.638763229231951,-3.8128319821260126,-3.7571623371839977,-5.871048187347271,-3.622656854735829,-3.9327539278001895,-5.7764389013002475,-2.7806983493548065,-1.5508680137004247,-2.059392499260875,-0.9341252029201468,-3.6734135554385876,-3.7796859584551834,-3.995300579846977,-5.559819935649412,-3.601501168962219,-3.6981946517745383,-3.7920306674752764,-3.780119120326754,-2.888777415377611,-3.4381130206289923,-3.8857973312033383,-4.683836855370914,-3.7831216829189724,-3.8324289982759145,-3.5761356070344563,-5.607103961591931,-4.690283053674159,-5.417372184457385,-2.8768687505263286,-2.479790869692937,-3.5285998642266776,-4.233664230137009,-4.817044509865605,-4.391932055227468,-3.0890471276278726,-4.7918965113959695,-4.467961002502329,-3.8626103271591496,-3.785358517911237,-3.94535275524517,-5.681394151754209,-3.1282561818514316,-5.166254107221379,-3.210146815871565,-4.264142887732229,-1.747701749509825,-2.740681386642944,-5.645250586246025,-3.2441295498911416,-3.8729388527801816,-1.9895402333939067,-3.265860073660868,-5.106233412341892,-4.134665967279377,-4.593199206143755,-1.7872403749488175,-1.789229318320669,-2.1696848803652613,-1.4153665524571073,-2.7044201150470526,-1.8560435762116796,-0.21828928666597047,-0.2118886739186081,-0.0011253291976680013,-0.4437569986513639,-0.824212560695956,-0.0698942327878023,-1.3589477953777473,-0.5105712565423746,-1.4980786493660343,-1.878534211410627,-1.124215883502473,-2.4132694460924173,-1.5648929072570452,-0.08440894832510941,-0.02642509768695747,-0.23119069333725617,-1.4929726318762475,-1.8734281939208395,-1.1191098660126855,-2.4081634286026308,-1.5597868897672578,-0.22130156048094002,-0.07291106501967091,0.05371348995554609,-1.2057782501498915,-1.5862338121944841,-0.8319154842863306,-2.120969046876275,-1.2725925080409026,-0.14581912944615133,-0.10988214620022685,-0.10251797588700423,-1.7956124821037902,-2.176068044148382,-1.421749716240229,-2.7108032788301735,-1.8624267399948014,-0.28560542536353484,-0.41260632809118436,-0.024854058627336903,-1.6213914597628507,-2.0018470218074427,-1.2475286938992893,-2.536582256489234,-1.6882057176538612,-0.19837896061322255,-0.2390949509730252,-0.33887621987626126,-1.8884531057237073,-2.2689086677682995,-1.5145903398601457,-2.8036439024500908,-1.9552673636147178,-0.3175130740690088,-0.3111124613216466,-0.1003491166007065,-1.7463222802411917,-2.1267778422857844,-1.37245951437763,-2.661513076967575,-1.8131365381322022,-0.1753822485864934,-0.16898163583913114,0.041781708881809,-1.6622791346413817,-2.042734696685974,-1.2884163687778196,-2.577469931367765,-1.7290933925323921,-0.09133910298668317,-0.08493849023932093,0.12582485448161923,-1.565844794206945,-1.9463003562515369,-1.1919820283433833,-2.4810355909333284,-1.6326590520979558,0.00509523744775375,-1.70256833285031,-2.0830238948949025,-1.3287055669867482,-2.6177591295766924,-1.7693825907413212,-0.12522768844824916,-1.8242311541869336,-2.2046867162315253,-1.4503683883233718,-2.739421950913316,-1.8910454120779439,-0.036127165063932445,0.7680718194361953,0.06300745352586379,-0.5203728262027321,-0.09526037156459477,1.2076245560350003,-0.0450267087452475,0.23792348225846627,1.1259468378931103,0.2887414637673435,0.036066080627089825,0.004596072591614297,0.020867400391336964,0.6497289826226152,0.02423643699776069,0.0815817114067826,0.8941818515954567,0.9914074156302235,0.9901993044673421,0.2879060198731678,0.34992755115155116,0.9921151699563082,1.0,1.0,0.31517568760827114,0.3516014947781366,1.0,28.027021905693083,33.446068647125614,16.182036164489762,22.8737798610988,30.839946395286766,0.22514030617838796,0.31454386809735396,0.10045652661510274,0.1304580272230758,0.22940127188607956,0.16254304871735442,0.19916472314704137,0.310435718063481,0.09714460899177318,0.23071190108035028,0.27183167791898344,0.32639746769191763,0.4017708543890993,0.21382461502399328,0.3118246199286828,0.12283362553146177,0.13019887839450509,0.22131826112135733,1.499659822099342,1.0790664582753113,1.506749074864118,1.8168808139699357,3.6480565660233286,0.5,0.3670710729355742,0.2641226208577255,0.3688063062067003,7681.699798905109,814.1729061709614,101.69660185006995,12.959682790492703,58.84043046390275,1832.0601658776566,49.17356595543613,165.52200585380743,1814.2151117198366,637.835844577652,891.1214396485362,284.5992998077934,369.59533096589786,649.9074132230658",
	}

	gettersMap := map[int](func(header string) alloraMath.Dec){}
	for epochNumber, epoch := range simulatorEpochs {
		gettersMap[epochNumber] = GetSimulatedValuesGetterForEpoch(epoch, simulatorHeaders)
	}
	return gettersMap
}

func GetTokenomicsSimulatorValuesGetterForEpochs() map[int]func(header string) alloraMath.Dec {
	const simulatorHeaders = "epoch,time,network_tokens_total,network_tokens_emission,network_tokens_circulating,network_tokens_staked,investors_preseed_tokens_total,investors_preseed_tokens_emission,investors_preseed_tokens_circulating,investors_preseed_tokens_staked,investors_seed_tokens_total,investors_seed_tokens_emission,investors_seed_tokens_circulating,investors_seed_tokens_staked,team_tokens_total,team_tokens_emission,team_tokens_circulating,team_tokens_staked,ecosystem_tokens_total,ecosystem_tokens_emission,ecosystem_tokens_circulating,ecosystem_tokens_staked,foundation_tokens_total,foundation_tokens_emission,foundation_tokens_circulating,foundation_tokens_staked,participants_tokens_total,participants_tokens_emission,participants_tokens_circulating,participants_tokens_staked,ehat_target_i,ehat_max_i,ehat_i,e_i,validator_rewards,topics_rewards,n_active_topics,all_topic_weight_sum,topic_id_0,topic_months_live_0,topic_n_workers_0,topic_n_reputers_0,topic_total_stake_0,topic_total_fee_revenue_0,topic_weights_0,topic_rewards_0,topic_id_1,topic_months_live_1,topic_n_workers_1,topic_n_reputers_1,topic_total_stake_1,topic_total_fee_revenue_1,topic_weights_1,topic_rewards_1,topic_id_2,topic_months_live_2,topic_n_workers_2,topic_n_reputers_2,topic_total_stake_2,topic_total_fee_revenue_2,topic_weights_2,topic_rewards_2,n_active_validators,all_validator_stake_sum,validator_id_0,validator_months_live_0,validator_stake_0,validator_rewards_0,validator_id_1,validator_months_live_1,validator_stake_1,validator_rewards_1,validator_id_2,validator_months_live_2,validator_stake_2,validator_rewards_2"
	simulatorEpochs := map[int]string{
		0:  "0,2024-09-01 00:00:00,1000000000.0,155000000.0,155000000.0,47000000.0,50000000.0,0.0,0.0,0.0,260500000.0,0.0,0.0,0.0,175000000.0,0.0,0.0,0.0,359500000.0,0.0,0.0,0.0,100000000.0,100000000.0,100000000.0,25000000.0,55000000.0,55000000.0,55000000.0,22000000.0,0.0,0.01897758586916609,0.0,0.0,0.0,0.0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
		1:  "1,2024-10-01 00:00:00,1000000000.0,891946.5358508063,155891946.5358508,47321195.640835635,50000000.0,0.0,0.0,0.0,260500000.0,0.0,0.0,0.0,175000000.0,0.0,0.0,0.0,358608053.46414924,891946.5358508063,0.0,0.0,100237219.82336457,0.0,100237219.82336457,25059304.955841143,55654726.71248623,0.0,55654726.71248623,22261890.684994493,0.029639627659574466,0.01897758586916609,0.01897758586916609,0.01897758586916609,222986.63396270157,668959.9018881047,3,1040922.4433738946,1,1,5,7,1116348.8993855934,74337.26358999203,288073.46700455487,185133.48371979792,2,1,9,11,1254714.5661832283,68705.51709378888,293608.26465671515,188690.48041818666,3,1,16,11,1061630.2874523632,198658.64207814567,459240.7117126246,295135.9377501202,3,4000857.234830969,1,1,1220576.890643749,68028.50398354916,2,1,1199203.1614497465,66837.24529860828,3,1,1581077.1827374736,88120.88468054413",
		60: "60,2029-09-01 00:00:00,1000000000.0,3590406.600160135,878425211.2861397,536999908.4204468,59503903.56883433,0.0,59503903.568834305,44627927.67662573,310015337.59362686,0.0,310015337.5936266,232511503.19521996,208263662.4909201,0.0,208263662.49091995,156197746.86818996,121574846.85306002,3590406.600160135,0.0,0.0,110627794.11341459,0.0,110627794.11341459,27656948.528353646,190014455.3801441,0.0,190014455.3801441,76005782.15205763,0.005116099285016781,0.01897758586916609,0.005116099285016781,0.0067101612189675195,897601.6500400337,2692804.950120101,123,126711262.20344725,2,60,138,10,1796523.381265418,181733.15634265263,564435.542084281,11995.104423377166,4,60,6,16,2333441.595711526,274708.64183212764,793120.6937213371,16855.007936598402,5,60,22,17,2867732.521499909,128377.46205139885,613150.536850022,13030.37135047667,70,173843911.23200363,5,60,3304137.379608775,17151.185161458667,6,60,2004269.3514207143,10403.80311418031,8,60,8766567.356476054,45505.680511118146",
		61: "61,2029-10-01 00:00:00,1000000000.0,3510006.3727290803,881935159.5196686,538886005.8885152,59649754.907065846,0.0,59649754.90706582,44737316.18029937,310775223.06581306,0.0,310775223.0658128,233081417.29935962,208774142.17473042,0.0,208774142.17473027,156580606.6310477,118064897.33526179,3510006.3727290803,0.0,0.0,110718181.5269528,0.0,110718181.5269528,27679545.3817382,192017800.99017605,0.0,192017800.99017605,76807120.39607042,0.004971807340705342,0.01897758586916609,0.004971807340705342,0.0065363258311413016,877501.5931822701,2632504.7795468103,126,129174536.82346039,2,61,141,9,1686456.788844432,271173.31762648665,669267.1554811186,13639.290133516148,4,61,6,17,2442127.3593945485,268542.78986087686,808780.4967611671,16482.49396270588,5,61,22,17,2872075.9786167345,251836.99919235928,835635.204878133,17029.777887306784,67,166126657.63616273,5,61,3321288.564770234,17633.819995844067,6,61,2014673.1545348945,10696.566427369544,8,61,8812073.036987172,46786.2116447002",
		62: "62,2029-11-01 00:00:00,1000000000.0,3430415.0116778887,885365517.6764157,540728858.3547686,59792148.25123336,0.0,59792148.25123334,44844111.188425004,311517092.3889258,0.0,311517092.38892555,233637819.29169416,209272518.87931672,0.0,209272518.87931657,156954389.15948743,114634537.90646116,3430415.0116778887,0.0,0.0,110806282.09642053,0.0,110806282.09642053,27701570.52410513,193977420.4776424,0.0,193977420.4776424,77590968.19105695,0.0048305938646891365,0.01897758586916609,0.0048305938646891365,0.006365752634496085,857603.7529194722,2572811.2587584164,128,136957252.81779388,2,62,142,10,1805068.1794510488,285947.9306721282,715366.3560069265,13438.51878600532,4,62,6,17,2447621.524048784,252208.78616830966,787134.872776908,14786.726669642214,5,62,22,17,2877752.5712458366,284968.31189900346,901204.9076219462,16929.589963831695,64,166118372.33898112,5,62,3338922.384766078,17326.49106311559,6,62,2025369.720962264,10510.142592672497,8,62,8858859.248631872,45970.803724319754",
		63: "63,2029-12-01 00:00:00,1000000000.0,3351665.1907215193,888717127.2842599,542528952.8476967,59931129.59480026,0.0,59931129.59480024,44948347.19610018,312241185.18890935,0.0,312241185.1889091,234180888.89168185,209758953.58180088,0.0,209758953.58180073,157319215.18635055,111282927.03931676,3351665.1907215193,0.0,0.0,110892135.09669913,0.0,110892135.09669913,27723033.774174783,195893669.49847353,0.0,195893669.49847353,78357467.7993894,0.004692437765123129,0.01897758586916609,0.004692437765123129,0.00619842114755879,837916.2976803798,2513748.8930411395,129,137711925.36904433,2,63,145,9,1695482.725150939,88174.53525668134,407194.9890475955,7432.805475831214,4,63,6,17,2452550.4329386647,151851.18159802826,621318.8377793868,11341.352874909557,5,63,23,17,2883395.767900447,186121.9717500597,743112.5616226436,13564.53607178878,62,163680435.42279696,5,63,3356248.8758291937,17269.52856719847,6,63,2035879.8635549366,10475.589494047817,8,63,8904830.052356193,45819.67031191015",
		64: "64,2030-01-01 00:00:00,1000000000.0,3273788.234016877,891990861.1946996,544286791.6739756,60066745.73972369,0.0,60066745.73972367,45050059.30479275,312947745.30396044,0.0,312947745.3039602,234710808.97797015,210233610.0890329,0.0,210233610.08903274,157675207.56677455,108009191.88284826,3273788.234016877,0.0,0.0,110975779.79557166,0.0,110975779.79557166,27743944.948892914,197766927.18886304,0.0,197766927.18886304,79106770.87554522,0.004557316096669341,0.01897758586916609,0.004557316096669341,0.006034310642469845,818447.0585042193,2455341.175512658,128,140398856.67473233,2,64,146,9,1697960.3269762162,177037.69858386042,539455.3729969282,9434.172193720415,4,64,6,17,2456330.883896968,164690.07482402082,635109.9304573988,11107.010414207174,5,64,23,17,2887917.2799243764,146300.34028107265,655821.9010270094,11469.22813712916,62,165623988.65236205,5,64,3373518.4043963924,16755.082242839657,6,64,2046355.4530489845,10163.52952728412,8,64,8950649.722668104,44454.73664371108",
		65: "65,2030-02-01 00:00:00,1000000000.0,3196814.0374777904,895187622.1546291,546002891.687115,60199044.24868791,0.0,60199044.248687886,45149283.18651591,313637020.535664,0.0,313637020.5356638,235227765.40174782,210696654.87040764,0.0,210696654.8704075,158022491.15280563,104812429.69065818,3196814.0374777904,0.0,0.0,111057255.43858226,0.0,111057255.43858226,27764313.859645564,199597595.216,0.0,199597595.216,79839038.0864,0.004425204130682418,0.01897758586916609,0.004425204130682418,0.005873399991291103,799203.5093694476,2397610.5281083426,129,141849904.7222437,2,65,148,9,1701105.0510407896,238967.96555247757,631448.2083614848,10673.020015678861,4,65,6,17,2460033.220701704,280603.9005077151,818606.7643083385,13836.457629841489,5,65,23,17,2891740.355970086,189264.7757425952,734551.7172899285,12415.721633813855,64,168845697.42802548,5,65,3390273.486639232,16125.868699412784,6,65,2056518.9825762687,9781.852473426683,8,65,8995104.459311815,42785.30154573348",
	}
	// until shown necessary, skip time and epoch columns
	filteredSimulatorEpochs := map[int]string{}
	for epochNumber, epoch := range simulatorEpochs {
		filteredSimulatorEpochs[epochNumber] = strings.Join(strings.Split(epoch, ",")[2:], ",")
	}
	filteredSimulatorHeaders := strings.Join(strings.Split(simulatorHeaders, ",")[2:], ",")
	gettersMap := map[int](func(header string) alloraMath.Dec){}
	for epochNumber, epoch := range filteredSimulatorEpochs {
		gettersMap[epochNumber] = GetSimulatedValuesGetterForEpoch(epoch, filteredSimulatorHeaders)
	}
	return gettersMap
}

func GetInferencesFromCsv(
	topicId uint64,
	blockHeight int64,
	inferers []string,
	epochGet func(header string) alloraMath.Dec,
) (emissionstypes.Inferences, error) {
	if len(inferers) != 5 {
		return emissionstypes.Inferences{}, fmt.Errorf("expected 5 inferers, got %d", len(inferers))
	}
	return emissionstypes.Inferences{
		Inferences: []*emissionstypes.Inference{
			{
				Inferer:     inferers[0],
				Value:       epochGet("inference_0"),
				TopicId:     topicId,
				BlockHeight: blockHeight,
			},
			{
				Inferer:     inferers[1],
				Value:       epochGet("inference_1"),
				TopicId:     topicId,
				BlockHeight: blockHeight,
			},
			{
				Inferer:     inferers[2],
				Value:       epochGet("inference_2"),
				TopicId:     topicId,
				BlockHeight: blockHeight,
			},
			{
				Inferer:     inferers[3],
				Value:       epochGet("inference_3"),
				TopicId:     topicId,
				BlockHeight: blockHeight,
			},
			{
				Inferer:     inferers[4],
				Value:       epochGet("inference_4"),
				TopicId:     topicId,
				BlockHeight: blockHeight,
			},
		},
	}, nil
}

func GetForecastsFromCsv(
	topicId uint64,
	blockHeight int64,
	inferers []string,
	forecasters []string,
	epochGet func(header string) alloraMath.Dec,
) (emissionstypes.Forecasts, error) {
	if len(inferers) != 5 {
		return emissionstypes.Forecasts{}, fmt.Errorf("expected 5 inferers, got %d", len(inferers))
	}
	if len(forecasters) != 3 {
		return emissionstypes.Forecasts{}, fmt.Errorf("expected 3 forecasters, got %d", len(forecasters))
	}
	return emissionstypes.Forecasts{
		Forecasts: []*emissionstypes.Forecast{
			{
				Forecaster: forecasters[0],
				ForecastElements: []*emissionstypes.ForecastElement{
					{
						Inferer: inferers[0],
						Value:   epochGet("forecasted_loss_0_for_0"),
					},
					{
						Inferer: inferers[1],
						Value:   epochGet("forecasted_loss_0_for_1"),
					},
					{
						Inferer: inferers[2],
						Value:   epochGet("forecasted_loss_0_for_2"),
					},
					{
						Inferer: inferers[3],
						Value:   epochGet("forecasted_loss_0_for_3"),
					},
					{
						Inferer: inferers[4],
						Value:   epochGet("forecasted_loss_0_for_4"),
					},
				},
				TopicId:     topicId,
				BlockHeight: blockHeight,
			},
			{
				Forecaster: forecasters[1],
				ForecastElements: []*emissionstypes.ForecastElement{
					{
						Inferer: inferers[0],
						Value:   epochGet("forecasted_loss_1_for_0"),
					},
					{
						Inferer: inferers[1],
						Value:   epochGet("forecasted_loss_1_for_1"),
					},
					{
						Inferer: inferers[2],
						Value:   epochGet("forecasted_loss_1_for_2"),
					},
					{
						Inferer: inferers[3],
						Value:   epochGet("forecasted_loss_1_for_3"),
					},
					{
						Inferer: inferers[4],
						Value:   epochGet("forecasted_loss_1_for_4"),
					},
				},
				TopicId:     topicId,
				BlockHeight: blockHeight,
			},
			{
				Forecaster: forecasters[2],
				ForecastElements: []*emissionstypes.ForecastElement{
					{
						Inferer: inferers[0],
						Value:   epochGet("forecasted_loss_2_for_0"),
					},
					{
						Inferer: inferers[1],
						Value:   epochGet("forecasted_loss_2_for_1"),
					},
					{
						Inferer: inferers[2],
						Value:   epochGet("forecasted_loss_2_for_2"),
					},
					{
						Inferer: inferers[3],
						Value:   epochGet("forecasted_loss_2_for_3"),
					},
					{
						Inferer: inferers[4],
						Value:   epochGet("forecasted_loss_2_for_4"),
					},
				},
				TopicId:     topicId,
				BlockHeight: blockHeight,
			},
		},
	}, nil
}

func GetNetworkLossFromCsv(
	topicId uint64,
	inferers []string,
	forecasters []string,
	epochGet func(header string) alloraMath.Dec,
) (emissionstypes.ValueBundle, error) {
	if len(inferers) != 5 {
		return emissionstypes.ValueBundle{}, fmt.Errorf("expected 5 inferers, got %d", len(inferers))
	}
	if len(forecasters) != 3 {
		return emissionstypes.ValueBundle{}, fmt.Errorf("expected 3 forecasters, got %d", len(forecasters))
	}
	return emissionstypes.ValueBundle{
		TopicId:       topicId,
		CombinedValue: epochGet("network_loss"),
		InfererValues: []*emissionstypes.WorkerAttributedValue{
			{
				Worker: inferers[0],
				Value:  epochGet("inference_loss_0"),
			},
			{
				Worker: inferers[1],
				Value:  epochGet("inference_loss_1"),
			},
			{
				Worker: inferers[2],
				Value:  epochGet("inference_loss_2"),
			},
			{
				Worker: inferers[3],
				Value:  epochGet("inference_loss_3"),
			},
			{
				Worker: inferers[4],
				Value:  epochGet("inference_loss_4"),
			},
		},
		NaiveValue: epochGet("network_naive_loss"),
		ForecasterValues: []*emissionstypes.WorkerAttributedValue{
			{
				Worker: forecasters[0],
				Value:  epochGet("forecast_implied_inference_loss_0"),
			},
			{
				Worker: forecasters[1],
				Value:  epochGet("forecast_implied_inference_loss_1"),
			},
			{
				Worker: forecasters[2],
				Value:  epochGet("forecast_implied_inference_loss_2"),
			},
		},
		OneOutInfererForecasterValues: []*emissionstypes.OneOutInfererForecasterValues{
			{
				Forecaster: forecasters[0],
				OneOutInfererValues: []*emissionstypes.WithheldWorkerAttributedValue{
					{
						Worker: inferers[0],
						Value:  epochGet("forecast_implied_inference_loss_0_oneout_0"),
					},
					{
						Worker: inferers[1],
						Value:  epochGet("forecast_implied_inference_loss_0_oneout_1"),
					},
					{
						Worker: inferers[2],
						Value:  epochGet("forecast_implied_inference_loss_0_oneout_2"),
					},
					{
						Worker: inferers[3],
						Value:  epochGet("forecast_implied_inference_loss_0_oneout_3"),
					},
					{
						Worker: inferers[4],
						Value:  epochGet("forecast_implied_inference_loss_0_oneout_4"),
					},
				},
			},
			{
				Forecaster: forecasters[1],
				OneOutInfererValues: []*emissionstypes.WithheldWorkerAttributedValue{
					{
						Worker: inferers[0],
						Value:  epochGet("forecast_implied_inference_loss_1_oneout_0"),
					},
					{
						Worker: inferers[1],
						Value:  epochGet("forecast_implied_inference_loss_1_oneout_1"),
					},
					{
						Worker: inferers[2],
						Value:  epochGet("forecast_implied_inference_loss_1_oneout_2"),
					},
					{
						Worker: inferers[3],
						Value:  epochGet("forecast_implied_inference_loss_1_oneout_3"),
					},
					{
						Worker: inferers[4],
						Value:  epochGet("forecast_implied_inference_loss_1_oneout_4"),
					},
				},
			},
			{
				Forecaster: forecasters[2],
				OneOutInfererValues: []*emissionstypes.WithheldWorkerAttributedValue{
					{
						Worker: inferers[0],
						Value:  epochGet("forecast_implied_inference_loss_2_oneout_0"),
					},
					{
						Worker: inferers[1],
						Value:  epochGet("forecast_implied_inference_loss_2_oneout_1"),
					},
					{
						Worker: inferers[2],
						Value:  epochGet("forecast_implied_inference_loss_2_oneout_2"),
					},
					{
						Worker: inferers[3],
						Value:  epochGet("forecast_implied_inference_loss_2_oneout_3"),
					},
					{
						Worker: inferers[4],
						Value:  epochGet("forecast_implied_inference_loss_2_oneout_4"),
					},
				},
			},
		},
		OneOutInfererValues: []*emissionstypes.WithheldWorkerAttributedValue{
			{
				Worker: inferers[0],
				Value:  epochGet("network_loss_oneout_0"),
			},
			{
				Worker: inferers[1],
				Value:  epochGet("network_loss_oneout_1"),
			},
			{
				Worker: inferers[2],
				Value:  epochGet("network_loss_oneout_2"),
			},
			{
				Worker: inferers[3],
				Value:  epochGet("network_loss_oneout_3"),
			},
			{
				Worker: inferers[4],
				Value:  epochGet("network_loss_oneout_4"),
			},
		},
		OneOutForecasterValues: []*emissionstypes.WithheldWorkerAttributedValue{
			{
				Worker: forecasters[0],
				Value:  epochGet("network_loss_oneout_5"),
			},
			{
				Worker: forecasters[1],
				Value:  epochGet("network_loss_oneout_6"),
			},
			{
				Worker: forecasters[2],
				Value:  epochGet("network_loss_oneout_7"),
			},
		},
		OneInForecasterValues: []*emissionstypes.WorkerAttributedValue{
			{
				Worker: forecasters[0],
				Value:  epochGet("network_naive_loss_onein_0"),
			},
			{
				Worker: forecasters[1],
				Value:  epochGet("network_naive_loss_onein_1"),
			},
			{
				Worker: forecasters[2],
				Value:  epochGet("network_naive_loss_onein_2"),
			},
		},
	}, nil
}

func GetReputersDataFromCsv(
	topicId uint64,
	inferers []string,
	forecasters []string,
	reputers []string,
	epochGet func(header string) alloraMath.Dec,
) (emissionstypes.ReputerValueBundles, error) {
	if len(inferers) != 5 {
		return emissionstypes.ReputerValueBundles{}, fmt.Errorf("expected 5 inferers, got %d", len(inferers))
	}
	if len(forecasters) != 3 {
		return emissionstypes.ReputerValueBundles{}, fmt.Errorf("expected 3 forecasters, got %d", len(forecasters))
	}
	if len(reputers) != 5 {
		return emissionstypes.ReputerValueBundles{}, fmt.Errorf("expected 5 reputers, got %d", len(reputers))
	}
	return emissionstypes.ReputerValueBundles{
		ReputerValueBundles: []*emissionstypes.ReputerValueBundle{
			{
				ValueBundle: &emissionstypes.ValueBundle{
					TopicId:       topicId,
					Reputer:       reputers[0],
					CombinedValue: epochGet("reputer_0_loss_network_inference"),
					InfererValues: []*emissionstypes.WorkerAttributedValue{
						{
							Worker: inferers[0],
							Value:  epochGet("reputer_0_loss_inference_0"),
						},
						{
							Worker: inferers[1],
							Value:  epochGet("reputer_0_loss_inference_1"),
						},
						{
							Worker: inferers[2],
							Value:  epochGet("reputer_0_loss_inference_2"),
						},
						{
							Worker: inferers[3],
							Value:  epochGet("reputer_0_loss_inference_3"),
						},
						{
							Worker: inferers[4],
							Value:  epochGet("reputer_0_loss_inference_4"),
						},
					},
					NaiveValue: epochGet("reputer_0_loss_naive_network_inference"),
					ForecasterValues: []*emissionstypes.WorkerAttributedValue{
						{
							Worker: forecasters[0],
							Value:  epochGet("reputer_0_loss_forecast_implied_inference_0"),
						},
						{
							Worker: forecasters[1],
							Value:  epochGet("reputer_0_loss_forecast_implied_inference_1"),
						},
						{
							Worker: forecasters[2],
							Value:  epochGet("reputer_0_loss_forecast_implied_inference_2"),
						},
					},
					OneOutInfererForecasterValues: []*emissionstypes.OneOutInfererForecasterValues{
						{
							Forecaster: forecasters[0],
							OneOutInfererValues: []*emissionstypes.WithheldWorkerAttributedValue{
								{
									Worker: inferers[0],
									Value:  epochGet("reputer_0_loss_forecast_implied_inference_0_oneout_0"),
								},
								{
									Worker: inferers[1],
									Value:  epochGet("reputer_0_loss_forecast_implied_inference_0_oneout_1"),
								},
								{
									Worker: inferers[2],
									Value:  epochGet("reputer_0_loss_forecast_implied_inference_0_oneout_2"),
								},
								{
									Worker: inferers[3],
									Value:  epochGet("reputer_0_loss_forecast_implied_inference_0_oneout_3"),
								},
								{
									Worker: inferers[4],
									Value:  epochGet("reputer_0_loss_forecast_implied_inference_0_oneout_4"),
								},
							},
						},
						{
							Forecaster: forecasters[1],
							OneOutInfererValues: []*emissionstypes.WithheldWorkerAttributedValue{
								{
									Worker: inferers[0],
									Value:  epochGet("reputer_0_loss_forecast_implied_inference_1_oneout_0"),
								},
								{
									Worker: inferers[1],
									Value:  epochGet("reputer_0_loss_forecast_implied_inference_1_oneout_1"),
								},
								{
									Worker: inferers[2],
									Value:  epochGet("reputer_0_loss_forecast_implied_inference_1_oneout_2"),
								},
								{
									Worker: inferers[3],
									Value:  epochGet("reputer_0_loss_forecast_implied_inference_1_oneout_3"),
								},
								{
									Worker: inferers[4],
									Value:  epochGet("reputer_0_loss_forecast_implied_inference_1_oneout_4"),
								},
							},
						},
						{
							Forecaster: forecasters[2],
							OneOutInfererValues: []*emissionstypes.WithheldWorkerAttributedValue{
								{
									Worker: inferers[0],
									Value:  epochGet("reputer_0_loss_forecast_implied_inference_2_oneout_0"),
								},
								{
									Worker: inferers[1],
									Value:  epochGet("reputer_0_loss_forecast_implied_inference_2_oneout_1"),
								},
								{
									Worker: inferers[2],
									Value:  epochGet("reputer_0_loss_forecast_implied_inference_2_oneout_2"),
								},
								{
									Worker: inferers[3],
									Value:  epochGet("reputer_0_loss_forecast_implied_inference_2_oneout_3"),
								},
								{
									Worker: inferers[4],
									Value:  epochGet("reputer_0_loss_forecast_implied_inference_2_oneout_4"),
								},
							},
						},
					},
					OneOutInfererValues: []*emissionstypes.WithheldWorkerAttributedValue{
						{
							Worker: inferers[0],
							Value:  epochGet("reputer_0_loss_network_inference_oneout_0"),
						},
						{
							Worker: inferers[1],
							Value:  epochGet("reputer_0_loss_network_inference_oneout_1"),
						},
						{
							Worker: inferers[2],
							Value:  epochGet("reputer_0_loss_network_inference_oneout_2"),
						},
						{
							Worker: inferers[3],
							Value:  epochGet("reputer_0_loss_network_inference_oneout_3"),
						},
						{
							Worker: inferers[4],
							Value:  epochGet("reputer_0_loss_network_inference_oneout_4"),
						},
					},
					OneOutForecasterValues: []*emissionstypes.WithheldWorkerAttributedValue{
						{
							Worker: forecasters[0],
							Value:  epochGet("reputer_0_loss_network_inference_oneout_5"),
						},
						{
							Worker: forecasters[1],
							Value:  epochGet("reputer_0_loss_network_inference_oneout_6"),
						},
						{
							Worker: forecasters[2],
							Value:  epochGet("reputer_0_loss_network_inference_oneout_7"),
						},
					},
					OneInForecasterValues: []*emissionstypes.WorkerAttributedValue{
						{
							Worker: forecasters[0],
							Value:  epochGet("reputer_0_loss_naive_network_inference_onein_0"),
						},
						{
							Worker: forecasters[1],
							Value:  epochGet("reputer_0_loss_naive_network_inference_onein_1"),
						},
						{
							Worker: forecasters[2],
							Value:  epochGet("reputer_0_loss_naive_network_inference_onein_2"),
						},
					},
				},
			},
			{
				ValueBundle: &emissionstypes.ValueBundle{
					TopicId:       topicId,
					Reputer:       reputers[1],
					CombinedValue: epochGet("reputer_1_loss_network_inference"),
					InfererValues: []*emissionstypes.WorkerAttributedValue{
						{
							Worker: inferers[0],
							Value:  epochGet("reputer_1_loss_inference_0"),
						},
						{
							Worker: inferers[1],
							Value:  epochGet("reputer_1_loss_inference_1"),
						},
						{
							Worker: inferers[2],
							Value:  epochGet("reputer_1_loss_inference_2"),
						},
						{
							Worker: inferers[3],
							Value:  epochGet("reputer_1_loss_inference_3"),
						},
						{
							Worker: inferers[4],
							Value:  epochGet("reputer_1_loss_inference_4"),
						},
					},
					NaiveValue: epochGet("reputer_1_loss_naive_network_inference"),
					ForecasterValues: []*emissionstypes.WorkerAttributedValue{
						{
							Worker: forecasters[0],
							Value:  epochGet("reputer_1_loss_forecast_implied_inference_0"),
						},
						{
							Worker: forecasters[1],
							Value:  epochGet("reputer_1_loss_forecast_implied_inference_1"),
						},
						{
							Worker: forecasters[2],
							Value:  epochGet("reputer_1_loss_forecast_implied_inference_2"),
						},
					},
					OneOutInfererForecasterValues: []*emissionstypes.OneOutInfererForecasterValues{
						{
							Forecaster: forecasters[0],
							OneOutInfererValues: []*emissionstypes.WithheldWorkerAttributedValue{
								{
									Worker: inferers[0],
									Value:  epochGet("reputer_1_loss_forecast_implied_inference_0_oneout_0"),
								},
								{
									Worker: inferers[1],
									Value:  epochGet("reputer_1_loss_forecast_implied_inference_0_oneout_1"),
								},
								{
									Worker: inferers[2],
									Value:  epochGet("reputer_1_loss_forecast_implied_inference_0_oneout_2"),
								},
								{
									Worker: inferers[3],
									Value:  epochGet("reputer_1_loss_forecast_implied_inference_0_oneout_3"),
								},
								{
									Worker: inferers[4],
									Value:  epochGet("reputer_1_loss_forecast_implied_inference_0_oneout_4"),
								},
							},
						},
						{
							Forecaster: forecasters[1],
							OneOutInfererValues: []*emissionstypes.WithheldWorkerAttributedValue{
								{
									Worker: inferers[0],
									Value:  epochGet("reputer_1_loss_forecast_implied_inference_1_oneout_0"),
								},
								{
									Worker: inferers[1],
									Value:  epochGet("reputer_1_loss_forecast_implied_inference_1_oneout_1"),
								},
								{
									Worker: inferers[2],
									Value:  epochGet("reputer_1_loss_forecast_implied_inference_1_oneout_2"),
								},
								{
									Worker: inferers[3],
									Value:  epochGet("reputer_1_loss_forecast_implied_inference_1_oneout_3"),
								},
								{
									Worker: inferers[4],
									Value:  epochGet("reputer_1_loss_forecast_implied_inference_1_oneout_4"),
								},
							},
						},
						{
							Forecaster: forecasters[2],
							OneOutInfererValues: []*emissionstypes.WithheldWorkerAttributedValue{
								{
									Worker: inferers[0],
									Value:  epochGet("reputer_1_loss_forecast_implied_inference_2_oneout_0"),
								},
								{
									Worker: inferers[1],
									Value:  epochGet("reputer_1_loss_forecast_implied_inference_2_oneout_1"),
								},
								{
									Worker: inferers[2],
									Value:  epochGet("reputer_1_loss_forecast_implied_inference_2_oneout_2"),
								},
								{
									Worker: inferers[3],
									Value:  epochGet("reputer_1_loss_forecast_implied_inference_2_oneout_3"),
								},
								{
									Worker: inferers[4],
									Value:  epochGet("reputer_1_loss_forecast_implied_inference_2_oneout_4"),
								},
							},
						},
					},
					OneOutInfererValues: []*emissionstypes.WithheldWorkerAttributedValue{
						{
							Worker: inferers[0],
							Value:  epochGet("reputer_1_loss_network_inference_oneout_0"),
						},
						{
							Worker: inferers[1],
							Value:  epochGet("reputer_1_loss_network_inference_oneout_1"),
						},
						{
							Worker: inferers[2],
							Value:  epochGet("reputer_1_loss_network_inference_oneout_2"),
						},
						{
							Worker: inferers[3],
							Value:  epochGet("reputer_1_loss_network_inference_oneout_3"),
						},
						{
							Worker: inferers[4],
							Value:  epochGet("reputer_1_loss_network_inference_oneout_4"),
						},
					},
					OneOutForecasterValues: []*emissionstypes.WithheldWorkerAttributedValue{
						{
							Worker: forecasters[0],
							Value:  epochGet("reputer_1_loss_network_inference_oneout_5"),
						},
						{
							Worker: forecasters[1],
							Value:  epochGet("reputer_1_loss_network_inference_oneout_6"),
						},
						{
							Worker: forecasters[2],
							Value:  epochGet("reputer_1_loss_network_inference_oneout_7"),
						},
					},
					OneInForecasterValues: []*emissionstypes.WorkerAttributedValue{
						{
							Worker: forecasters[0],
							Value:  epochGet("reputer_1_loss_naive_network_inference_onein_0"),
						},
						{
							Worker: forecasters[1],
							Value:  epochGet("reputer_1_loss_naive_network_inference_onein_1"),
						},
						{
							Worker: forecasters[2],
							Value:  epochGet("reputer_1_loss_naive_network_inference_onein_2"),
						},
					},
				},
			},
			{
				ValueBundle: &emissionstypes.ValueBundle{
					TopicId:       topicId,
					Reputer:       reputers[2],
					CombinedValue: epochGet("reputer_2_loss_network_inference"),
					InfererValues: []*emissionstypes.WorkerAttributedValue{
						{
							Worker: inferers[0],
							Value:  epochGet("reputer_2_loss_inference_0"),
						},
						{
							Worker: inferers[1],
							Value:  epochGet("reputer_2_loss_inference_1"),
						},
						{
							Worker: inferers[2],
							Value:  epochGet("reputer_2_loss_inference_2"),
						},
						{
							Worker: inferers[3],
							Value:  epochGet("reputer_2_loss_inference_3"),
						},
						{
							Worker: inferers[4],
							Value:  epochGet("reputer_2_loss_inference_4"),
						},
					},
					NaiveValue: epochGet("reputer_2_loss_naive_network_inference"),
					ForecasterValues: []*emissionstypes.WorkerAttributedValue{
						{
							Worker: forecasters[0],
							Value:  epochGet("reputer_2_loss_forecast_implied_inference_0"),
						},
						{
							Worker: forecasters[1],
							Value:  epochGet("reputer_2_loss_forecast_implied_inference_1"),
						},
						{
							Worker: forecasters[2],
							Value:  epochGet("reputer_2_loss_forecast_implied_inference_2"),
						},
					},
					OneOutInfererForecasterValues: []*emissionstypes.OneOutInfererForecasterValues{
						{
							Forecaster: forecasters[0],
							OneOutInfererValues: []*emissionstypes.WithheldWorkerAttributedValue{
								{
									Worker: inferers[0],
									Value:  epochGet("reputer_2_loss_forecast_implied_inference_0_oneout_0"),
								},
								{
									Worker: inferers[1],
									Value:  epochGet("reputer_2_loss_forecast_implied_inference_0_oneout_1"),
								},
								{
									Worker: inferers[2],
									Value:  epochGet("reputer_2_loss_forecast_implied_inference_0_oneout_2"),
								},
								{
									Worker: inferers[3],
									Value:  epochGet("reputer_2_loss_forecast_implied_inference_0_oneout_3"),
								},
								{
									Worker: inferers[4],
									Value:  epochGet("reputer_2_loss_forecast_implied_inference_0_oneout_4"),
								},
							},
						},
						{
							Forecaster: forecasters[1],
							OneOutInfererValues: []*emissionstypes.WithheldWorkerAttributedValue{
								{
									Worker: inferers[0],
									Value:  epochGet("reputer_2_loss_forecast_implied_inference_1_oneout_0"),
								},
								{
									Worker: inferers[1],
									Value:  epochGet("reputer_2_loss_forecast_implied_inference_1_oneout_1"),
								},
								{
									Worker: inferers[2],
									Value:  epochGet("reputer_2_loss_forecast_implied_inference_1_oneout_2"),
								},
								{
									Worker: inferers[3],
									Value:  epochGet("reputer_2_loss_forecast_implied_inference_1_oneout_3"),
								},
								{
									Worker: inferers[4],
									Value:  epochGet("reputer_2_loss_forecast_implied_inference_1_oneout_4"),
								},
							},
						},
						{
							Forecaster: forecasters[2],
							OneOutInfererValues: []*emissionstypes.WithheldWorkerAttributedValue{
								{
									Worker: inferers[0],
									Value:  epochGet("reputer_2_loss_forecast_implied_inference_2_oneout_0"),
								},
								{
									Worker: inferers[1],
									Value:  epochGet("reputer_2_loss_forecast_implied_inference_2_oneout_1"),
								},
								{
									Worker: inferers[2],
									Value:  epochGet("reputer_2_loss_forecast_implied_inference_2_oneout_2"),
								},
								{
									Worker: inferers[3],
									Value:  epochGet("reputer_2_loss_forecast_implied_inference_2_oneout_3"),
								},
								{
									Worker: inferers[4],
									Value:  epochGet("reputer_2_loss_forecast_implied_inference_2_oneout_4"),
								},
							},
						},
					},
					OneOutInfererValues: []*emissionstypes.WithheldWorkerAttributedValue{
						{
							Worker: inferers[0],
							Value:  epochGet("reputer_2_loss_network_inference_oneout_0"),
						},
						{
							Worker: inferers[1],
							Value:  epochGet("reputer_2_loss_network_inference_oneout_1"),
						},
						{
							Worker: inferers[2],
							Value:  epochGet("reputer_2_loss_network_inference_oneout_2"),
						},
						{
							Worker: inferers[3],
							Value:  epochGet("reputer_2_loss_network_inference_oneout_3"),
						},
						{
							Worker: inferers[4],
							Value:  epochGet("reputer_2_loss_network_inference_oneout_4"),
						},
					},
					OneOutForecasterValues: []*emissionstypes.WithheldWorkerAttributedValue{
						{
							Worker: forecasters[0],
							Value:  epochGet("reputer_2_loss_network_inference_oneout_5"),
						},
						{
							Worker: forecasters[1],
							Value:  epochGet("reputer_2_loss_network_inference_oneout_6"),
						},
						{
							Worker: forecasters[2],
							Value:  epochGet("reputer_2_loss_network_inference_oneout_7"),
						},
					},
					OneInForecasterValues: []*emissionstypes.WorkerAttributedValue{
						{
							Worker: forecasters[0],
							Value:  epochGet("reputer_2_loss_naive_network_inference_onein_0"),
						},
						{
							Worker: forecasters[1],
							Value:  epochGet("reputer_2_loss_naive_network_inference_onein_1"),
						},
						{
							Worker: forecasters[2],
							Value:  epochGet("reputer_2_loss_naive_network_inference_onein_2"),
						},
					},
				},
			},
			{
				ValueBundle: &emissionstypes.ValueBundle{
					TopicId:       topicId,
					Reputer:       reputers[3],
					CombinedValue: epochGet("reputer_3_loss_network_inference"),
					InfererValues: []*emissionstypes.WorkerAttributedValue{
						{
							Worker: inferers[0],
							Value:  epochGet("reputer_3_loss_inference_0"),
						},
						{
							Worker: inferers[1],
							Value:  epochGet("reputer_3_loss_inference_1"),
						},
						{
							Worker: inferers[2],
							Value:  epochGet("reputer_3_loss_inference_2"),
						},
						{
							Worker: inferers[3],
							Value:  epochGet("reputer_3_loss_inference_3"),
						},
						{
							Worker: inferers[4],
							Value:  epochGet("reputer_3_loss_inference_4"),
						},
					},
					NaiveValue: epochGet("reputer_3_loss_naive_network_inference"),
					ForecasterValues: []*emissionstypes.WorkerAttributedValue{
						{
							Worker: forecasters[0],
							Value:  epochGet("reputer_3_loss_forecast_implied_inference_0"),
						},
						{
							Worker: forecasters[1],
							Value:  epochGet("reputer_3_loss_forecast_implied_inference_1"),
						},
						{
							Worker: forecasters[2],
							Value:  epochGet("reputer_3_loss_forecast_implied_inference_2"),
						},
					},
					OneOutInfererForecasterValues: []*emissionstypes.OneOutInfererForecasterValues{
						{
							Forecaster: forecasters[0],
							OneOutInfererValues: []*emissionstypes.WithheldWorkerAttributedValue{
								{
									Worker: inferers[0],
									Value:  epochGet("reputer_3_loss_forecast_implied_inference_0_oneout_0"),
								},
								{
									Worker: inferers[1],
									Value:  epochGet("reputer_3_loss_forecast_implied_inference_0_oneout_1"),
								},
								{
									Worker: inferers[2],
									Value:  epochGet("reputer_3_loss_forecast_implied_inference_0_oneout_2"),
								},
								{
									Worker: inferers[3],
									Value:  epochGet("reputer_3_loss_forecast_implied_inference_0_oneout_3"),
								},
								{
									Worker: inferers[4],
									Value:  epochGet("reputer_3_loss_forecast_implied_inference_0_oneout_4"),
								},
							},
						},
						{
							Forecaster: forecasters[1],
							OneOutInfererValues: []*emissionstypes.WithheldWorkerAttributedValue{
								{
									Worker: inferers[0],
									Value:  epochGet("reputer_3_loss_forecast_implied_inference_1_oneout_0"),
								},
								{
									Worker: inferers[1],
									Value:  epochGet("reputer_3_loss_forecast_implied_inference_1_oneout_1"),
								},
								{
									Worker: inferers[2],
									Value:  epochGet("reputer_3_loss_forecast_implied_inference_1_oneout_2"),
								},
								{
									Worker: inferers[3],
									Value:  epochGet("reputer_3_loss_forecast_implied_inference_1_oneout_3"),
								},
								{
									Worker: inferers[4],
									Value:  epochGet("reputer_3_loss_forecast_implied_inference_1_oneout_4"),
								},
							},
						},
						{
							Forecaster: forecasters[2],
							OneOutInfererValues: []*emissionstypes.WithheldWorkerAttributedValue{
								{
									Worker: inferers[0],
									Value:  epochGet("reputer_3_loss_forecast_implied_inference_2_oneout_0"),
								},
								{
									Worker: inferers[1],
									Value:  epochGet("reputer_3_loss_forecast_implied_inference_2_oneout_1"),
								},
								{
									Worker: inferers[2],
									Value:  epochGet("reputer_3_loss_forecast_implied_inference_2_oneout_2"),
								},
								{
									Worker: inferers[3],
									Value:  epochGet("reputer_3_loss_forecast_implied_inference_2_oneout_3"),
								},
								{
									Worker: inferers[4],
									Value:  epochGet("reputer_3_loss_forecast_implied_inference_2_oneout_4"),
								},
							},
						},
					},
					OneOutInfererValues: []*emissionstypes.WithheldWorkerAttributedValue{
						{
							Worker: inferers[0],
							Value:  epochGet("reputer_3_loss_network_inference_oneout_0"),
						},
						{
							Worker: inferers[1],
							Value:  epochGet("reputer_3_loss_network_inference_oneout_1"),
						},
						{
							Worker: inferers[2],
							Value:  epochGet("reputer_3_loss_network_inference_oneout_2"),
						},
						{
							Worker: inferers[3],
							Value:  epochGet("reputer_3_loss_network_inference_oneout_3"),
						},
						{
							Worker: inferers[4],
							Value:  epochGet("reputer_3_loss_network_inference_oneout_4"),
						},
					},
					OneOutForecasterValues: []*emissionstypes.WithheldWorkerAttributedValue{
						{
							Worker: forecasters[0],
							Value:  epochGet("reputer_3_loss_network_inference_oneout_5"),
						},
						{
							Worker: forecasters[1],
							Value:  epochGet("reputer_3_loss_network_inference_oneout_6"),
						},
						{
							Worker: forecasters[2],
							Value:  epochGet("reputer_3_loss_network_inference_oneout_7"),
						},
					},
					OneInForecasterValues: []*emissionstypes.WorkerAttributedValue{
						{
							Worker: forecasters[0],
							Value:  epochGet("reputer_3_loss_naive_network_inference_onein_0"),
						},
						{
							Worker: forecasters[1],
							Value:  epochGet("reputer_3_loss_naive_network_inference_onein_1"),
						},
						{
							Worker: forecasters[2],
							Value:  epochGet("reputer_3_loss_naive_network_inference_onein_2"),
						},
					},
				},
			},
			{
				ValueBundle: &emissionstypes.ValueBundle{
					TopicId:       topicId,
					Reputer:       reputers[4],
					CombinedValue: epochGet("reputer_4_loss_network_inference"),
					InfererValues: []*emissionstypes.WorkerAttributedValue{
						{
							Worker: inferers[0],
							Value:  epochGet("reputer_4_loss_inference_0"),
						},
						{
							Worker: inferers[1],
							Value:  epochGet("reputer_4_loss_inference_1"),
						},
						{
							Worker: inferers[2],
							Value:  epochGet("reputer_4_loss_inference_2"),
						},
						{
							Worker: inferers[3],
							Value:  epochGet("reputer_4_loss_inference_3"),
						},
						{
							Worker: inferers[4],
							Value:  epochGet("reputer_4_loss_inference_4"),
						},
					},
					NaiveValue: epochGet("reputer_4_loss_naive_network_inference"),
					ForecasterValues: []*emissionstypes.WorkerAttributedValue{
						{
							Worker: forecasters[0],
							Value:  epochGet("reputer_4_loss_forecast_implied_inference_0"),
						},
						{
							Worker: forecasters[1],
							Value:  epochGet("reputer_4_loss_forecast_implied_inference_1"),
						},
						{
							Worker: forecasters[2],
							Value:  epochGet("reputer_4_loss_forecast_implied_inference_2"),
						},
					},
					OneOutInfererForecasterValues: []*emissionstypes.OneOutInfererForecasterValues{
						{
							Forecaster: forecasters[0],
							OneOutInfererValues: []*emissionstypes.WithheldWorkerAttributedValue{
								{
									Worker: inferers[0],
									Value:  epochGet("reputer_4_loss_forecast_implied_inference_0_oneout_0"),
								},
								{
									Worker: inferers[1],
									Value:  epochGet("reputer_4_loss_forecast_implied_inference_0_oneout_1"),
								},
								{
									Worker: inferers[2],
									Value:  epochGet("reputer_4_loss_forecast_implied_inference_0_oneout_2"),
								},
								{
									Worker: inferers[3],
									Value:  epochGet("reputer_4_loss_forecast_implied_inference_0_oneout_3"),
								},
								{
									Worker: inferers[4],
									Value:  epochGet("reputer_4_loss_forecast_implied_inference_0_oneout_4"),
								},
							},
						},
						{
							Forecaster: forecasters[1],
							OneOutInfererValues: []*emissionstypes.WithheldWorkerAttributedValue{
								{
									Worker: inferers[0],
									Value:  epochGet("reputer_4_loss_forecast_implied_inference_1_oneout_0"),
								},
								{
									Worker: inferers[1],
									Value:  epochGet("reputer_4_loss_forecast_implied_inference_1_oneout_1"),
								},
								{
									Worker: inferers[2],
									Value:  epochGet("reputer_4_loss_forecast_implied_inference_1_oneout_2"),
								},
								{
									Worker: inferers[3],
									Value:  epochGet("reputer_4_loss_forecast_implied_inference_1_oneout_3"),
								},
								{
									Worker: inferers[4],
									Value:  epochGet("reputer_4_loss_forecast_implied_inference_1_oneout_4"),
								},
							},
						},
						{
							Forecaster: forecasters[2],
							OneOutInfererValues: []*emissionstypes.WithheldWorkerAttributedValue{
								{
									Worker: inferers[0],
									Value:  epochGet("reputer_4_loss_forecast_implied_inference_2_oneout_0"),
								},
								{
									Worker: inferers[1],
									Value:  epochGet("reputer_4_loss_forecast_implied_inference_2_oneout_1"),
								},
								{
									Worker: inferers[2],
									Value:  epochGet("reputer_4_loss_forecast_implied_inference_2_oneout_2"),
								},
								{
									Worker: inferers[3],
									Value:  epochGet("reputer_4_loss_forecast_implied_inference_2_oneout_3"),
								},
								{
									Worker: inferers[4],
									Value:  epochGet("reputer_4_loss_forecast_implied_inference_2_oneout_4"),
								},
							},
						},
					},
					OneOutInfererValues: []*emissionstypes.WithheldWorkerAttributedValue{
						{
							Worker: inferers[0],
							Value:  epochGet("reputer_4_loss_network_inference_oneout_0"),
						},
						{
							Worker: inferers[1],
							Value:  epochGet("reputer_4_loss_network_inference_oneout_1"),
						},
						{
							Worker: inferers[2],
							Value:  epochGet("reputer_4_loss_network_inference_oneout_2"),
						},
						{
							Worker: inferers[3],
							Value:  epochGet("reputer_4_loss_network_inference_oneout_3"),
						},
						{
							Worker: inferers[4],
							Value:  epochGet("reputer_4_loss_network_inference_oneout_4"),
						},
					},
					OneOutForecasterValues: []*emissionstypes.WithheldWorkerAttributedValue{
						{
							Worker: forecasters[0],
							Value:  epochGet("reputer_4_loss_network_inference_oneout_5"),
						},
						{
							Worker: forecasters[1],
							Value:  epochGet("reputer_4_loss_network_inference_oneout_6"),
						},
						{
							Worker: forecasters[2],
							Value:  epochGet("reputer_4_loss_network_inference_oneout_7"),
						},
					},
					OneInForecasterValues: []*emissionstypes.WorkerAttributedValue{
						{
							Worker: forecasters[0],
							Value:  epochGet("reputer_4_loss_naive_network_inference_onein_0"),
						},
						{
							Worker: forecasters[1],
							Value:  epochGet("reputer_4_loss_naive_network_inference_onein_1"),
						},
						{
							Worker: forecasters[2],
							Value:  epochGet("reputer_4_loss_naive_network_inference_onein_2"),
						},
					},
				},
			},
		},
	}, nil
}

func GetTotalInfererRewardForTopicInEpoch(
	epochGet func(header string) alloraMath.Dec,
) (alloraMath.Dec, error) {
	infererRewards := []alloraMath.Dec{
		epochGet("inferer_reward_0"),
		epochGet("inferer_reward_1"),
		epochGet("inferer_reward_2"),
		epochGet("inferer_reward_3"),
		epochGet("inferer_reward_4"),
	}
	totalInferersReward := alloraMath.ZeroDec()
	var err error
	for _, reward := range infererRewards {
		totalInferersReward, err = totalInferersReward.Add(reward)
		if err != nil {
			return alloraMath.ZeroDec(), err
		}
	}
	return totalInferersReward, nil
}

func GetTotalForecasterRewardForTopicInEpoch(
	epochGet func(header string) alloraMath.Dec,
) (alloraMath.Dec, error) {
	forecasterRewards := []alloraMath.Dec{
		epochGet("forecaster_reward_0"),
		epochGet("forecaster_reward_1"),
		epochGet("forecaster_reward_2"),
	}
	totalForecastersReward := alloraMath.ZeroDec()
	var err error
	for _, reward := range forecasterRewards {
		totalForecastersReward, err = totalForecastersReward.Add(reward)
		if err != nil {
			return alloraMath.ZeroDec(), err
		}
	}
	return totalForecastersReward, nil
}

func GetTotalReputerRewardForTopicInEpoch(
	epochGet func(header string) alloraMath.Dec,
) (alloraMath.Dec, error) {
	reputerRewards := []alloraMath.Dec{
		epochGet("reputer_reward_0"),
		epochGet("reputer_reward_1"),
		epochGet("reputer_reward_2"),
		epochGet("reputer_reward_3"),
		epochGet("reputer_reward_4"),
	}
	// Reputer rewards
	totalReputersReward := alloraMath.ZeroDec()
	for _, reward := range reputerRewards {
		totalReputersReward, _ = totalReputersReward.Add(reward)
	}
	return totalReputersReward, nil
}

func GetTotalRewardForTopicInEpoch(
	epochGet func(header string) alloraMath.Dec,
) (alloraMath.Dec, error) {
	totalRewardForTopic := alloraMath.ZeroDec()
	totalInferersReward, err := GetTotalInfererRewardForTopicInEpoch(epochGet)
	if err != nil {
		return alloraMath.ZeroDec(), err
	}
	totalForecastersReward, err := GetTotalForecasterRewardForTopicInEpoch(epochGet)
	if err != nil {
		return alloraMath.ZeroDec(), err
	}
	totalReputersReward, err := GetTotalReputerRewardForTopicInEpoch(epochGet)
	if err != nil {
		return alloraMath.ZeroDec(), err
	}
	totalRewardForTopic, err = totalRewardForTopic.Add(totalInferersReward)
	if err != nil {
		return alloraMath.ZeroDec(), err
	}
	totalRewardForTopic, err = totalRewardForTopic.Add(totalForecastersReward)
	if err != nil {
		return alloraMath.ZeroDec(), err
	}
	totalRewardForTopic, err = totalRewardForTopic.Add(totalReputersReward)
	if err != nil {
		return alloraMath.ZeroDec(), err
	}

	return totalRewardForTopic, nil
}

func SetRegretsFromPreviousEpoch(
	ctx sdk.Context,
	k keeper.Keeper,
	topicId uint64,
	blockHeight int64,
	inferers []string,
	forecasters []string,
	epochPrevGet func(header string) alloraMath.Dec,
) error {
	// Set inferer network regrets
	infererNetworkRegrets := map[string]inferencesynthesis.Regret{}
	for i, inferer := range inferers {
		infererNetworkRegrets[inferer] = epochPrevGet(fmt.Sprintf("inference_regret_worker_%v", i))
	}

	for inferer, regret := range infererNetworkRegrets {
		k.SetInfererNetworkRegret(
			ctx,
			topicId,
			inferer,
			emissionstypes.TimestampedValue{BlockHeight: blockHeight, Value: regret},
		)
	}

	// Set forecaster network regrets
	forecasterNetworkRegrets := map[string]inferencesynthesis.Regret{}
	for i, forecaster := range forecasters {
		forecasterNetworkRegrets[forecaster] = epochPrevGet(fmt.Sprintf("inference_regret_worker_%v", i+5))
	}

	for forecaster, regret := range forecasterNetworkRegrets {
		k.SetForecasterNetworkRegret(
			ctx,
			topicId,
			forecaster,
			emissionstypes.TimestampedValue{BlockHeight: blockHeight, Value: regret},
		)
	}

	// Set naive inferer network regrets
	infererNaiveNetworkRegrets := map[string]inferencesynthesis.Regret{}
	for i, inferer := range inferers {
		infererNaiveNetworkRegrets[inferer] = epochPrevGet(fmt.Sprintf("naive_inference_regret_worker_%v", i))
	}

	for inferer, regret := range infererNaiveNetworkRegrets {
		k.SetNaiveInfererNetworkRegret(
			ctx,
			topicId,
			inferer,
			emissionstypes.TimestampedValue{BlockHeight: blockHeight, Value: regret},
		)
	}

	// Set one-out inferer-inferer network regrets
	for i := range inferers {
		for j := range inferers {
			headerName := fmt.Sprintf("inference_regret_worker_%v_oneout_%v", i, j)
			k.SetOneOutInfererInfererNetworkRegret(
				ctx,
				topicId,
				inferers[j],
				inferers[i],
				emissionstypes.TimestampedValue{
					BlockHeight: blockHeight,
					Value:       epochPrevGet(headerName),
				},
			)
		}
	}

	// Set one-out inferer-forecaster network regrets
	for i := range inferers {
		for j := range forecasters {
			headerName := fmt.Sprintf("inference_regret_worker_%v_oneout_%v", j+5, i)
			k.SetOneOutInfererForecasterNetworkRegret(
				ctx,
				topicId,
				inferers[i],
				forecasters[j],
				emissionstypes.TimestampedValue{
					BlockHeight: blockHeight,
					Value:       epochPrevGet(headerName),
				},
			)
		}
	}

	// Set one-out forecaster-inferer network regrets
	for i := range inferers {
		for j := range forecasters {
			headerName := fmt.Sprintf("inference_regret_worker_%v_oneout_%v", i, j+5)
			k.SetOneOutForecasterInfererNetworkRegret(
				ctx,
				topicId,
				forecasters[j],
				inferers[i],
				emissionstypes.TimestampedValue{
					BlockHeight: blockHeight,
					Value:       epochPrevGet(headerName),
				},
			)
		}
	}

	// Set one-out forecaster-forecaster network regrets
	for i := range forecasters {
		for j := range forecasters {
			headerName := fmt.Sprintf("inference_regret_worker_%v_oneout_%v", i+5, j+5)
			k.SetOneOutForecasterForecasterNetworkRegret(
				ctx,
				topicId,
				forecasters[j],
				forecasters[i],
				emissionstypes.TimestampedValue{
					BlockHeight: blockHeight,
					Value:       epochPrevGet(headerName),
				},
			)
		}
	}

	// Set one-in forecaster network regrets
	for i := range forecasters {
		headerName := fmt.Sprintf("inference_regret_worker_5_onein_%v", i)
		k.SetOneInForecasterNetworkRegret(
			ctx,
			topicId,
			forecasters[i],
			forecasters[i],
			emissionstypes.TimestampedValue{
				BlockHeight: blockHeight,
				Value:       epochPrevGet(headerName),
			},
		)
		for j := range inferers {
			headerName := fmt.Sprintf("inference_regret_worker_%v_onein_%v", j, i)
			k.SetOneInForecasterNetworkRegret(
				ctx,
				topicId,
				forecasters[i],
				inferers[j],
				emissionstypes.TimestampedValue{
					BlockHeight: blockHeight,
					Value:       epochPrevGet(headerName),
				},
			)
		}
	}

	return nil
}

package testutil

import (
	"encoding/csv"
	"fmt"
	"strings"

	alloraMath "github.com/allora-network/allora-chain/math"
	"github.com/allora-network/allora-chain/x/emissions/keeper"
	inferencesynthesis "github.com/allora-network/allora-chain/x/emissions/keeper/inference_synthesis"
	emissionstypes "github.com/allora-network/allora-chain/x/emissions/types"
	sdk "github.com/cosmos/cosmos-sdk/types"
)

func GetSimulatedValuesGetterForEpoch(
	epoch string,
	headers string,
) func(header string) alloraMath.Dec {
	r := csv.NewReader(strings.NewReader(headers + "\n" + epoch + "\n"))
	headersRead, err := r.Read()
	if err != nil {
		panic(err)
	}
	valuesRead, err := r.Read()
	if err != nil {
		panic(err)
	}
	simulatedValuesDec := make(map[string]alloraMath.Dec)
	if len(headersRead) != len(valuesRead) {
		panic("Header and values length mismatch")
	}
	for i := 0; i < len(headersRead); i++ {
		simulatedValuesDec[headersRead[i]] = alloraMath.MustNewDecFromString(valuesRead[i])
	}

	return func(header string) alloraMath.Dec {
		value, exists := simulatedValuesDec[header]
		if !exists {
			panic(fmt.Sprintf("Header '%s' not found in simulated values map", header))
		}
		return value
	}
}

func GetSimulatedValuesGetterForEpochs() map[int]func(header string) alloraMath.Dec {
	const simulatorHeaders = "target,inference_0,inference_1,inference_2,inference_3,inference_4,forecasted_loss_0_for_0,forecasted_loss_0_for_1,forecasted_loss_0_for_2,forecasted_loss_0_for_3,forecasted_loss_0_for_4,forecasted_loss_1_for_0,forecasted_loss_1_for_1,forecasted_loss_1_for_2,forecasted_loss_1_for_3,forecasted_loss_1_for_4,forecasted_loss_2_for_0,forecasted_loss_2_for_1,forecasted_loss_2_for_2,forecasted_loss_2_for_3,forecasted_loss_2_for_4,forecast_implied_inference_0,forecast_implied_inference_1,forecast_implied_inference_2,forecast_implied_inference_0_oneout_0,forecast_implied_inference_0_oneout_1,forecast_implied_inference_0_oneout_2,forecast_implied_inference_0_oneout_3,forecast_implied_inference_0_oneout_4,forecast_implied_inference_1_oneout_0,forecast_implied_inference_1_oneout_1,forecast_implied_inference_1_oneout_2,forecast_implied_inference_1_oneout_3,forecast_implied_inference_1_oneout_4,forecast_implied_inference_2_oneout_0,forecast_implied_inference_2_oneout_1,forecast_implied_inference_2_oneout_2,forecast_implied_inference_2_oneout_3,forecast_implied_inference_2_oneout_4,network_inference,network_inference_errorbar_0,network_inference_errorbar_1,network_inference_errorbar_2,network_inference_errorbar_3,network_inference_errorbar_4,network_naive_inference,network_inference_oneout_0,network_inference_oneout_1,network_inference_oneout_2,network_inference_oneout_3,network_inference_oneout_4,network_inference_oneout_5,network_inference_oneout_6,network_inference_oneout_7,network_naive_inference_onein_0,network_naive_inference_onein_1,network_naive_inference_onein_2,network_loss,reputer_stake_0,reputer_stake_1,reputer_stake_2,reputer_stake_3,reputer_stake_4,reputer_0_loss_inference_0,reputer_0_loss_inference_1,reputer_0_loss_inference_2,reputer_0_loss_inference_3,reputer_0_loss_inference_4,reputer_1_loss_inference_0,reputer_1_loss_inference_1,reputer_1_loss_inference_2,reputer_1_loss_inference_3,reputer_1_loss_inference_4,reputer_2_loss_inference_0,reputer_2_loss_inference_1,reputer_2_loss_inference_2,reputer_2_loss_inference_3,reputer_2_loss_inference_4,reputer_3_loss_inference_0,reputer_3_loss_inference_1,reputer_3_loss_inference_2,reputer_3_loss_inference_3,reputer_3_loss_inference_4,reputer_4_loss_inference_0,reputer_4_loss_inference_1,reputer_4_loss_inference_2,reputer_4_loss_inference_3,reputer_4_loss_inference_4,reputer_0_loss_forecast_implied_inference_0,reputer_0_loss_forecast_implied_inference_1,reputer_0_loss_forecast_implied_inference_2,reputer_1_loss_forecast_implied_inference_0,reputer_1_loss_forecast_implied_inference_1,reputer_1_loss_forecast_implied_inference_2,reputer_2_loss_forecast_implied_inference_0,reputer_2_loss_forecast_implied_inference_1,reputer_2_loss_forecast_implied_inference_2,reputer_3_loss_forecast_implied_inference_0,reputer_3_loss_forecast_implied_inference_1,reputer_3_loss_forecast_implied_inference_2,reputer_4_loss_forecast_implied_inference_0,reputer_4_loss_forecast_implied_inference_1,reputer_4_loss_forecast_implied_inference_2,reputer_0_loss_forecast_implied_inference_0_oneout_0,reputer_0_loss_forecast_implied_inference_0_oneout_1,reputer_0_loss_forecast_implied_inference_0_oneout_2,reputer_0_loss_forecast_implied_inference_0_oneout_3,reputer_0_loss_forecast_implied_inference_0_oneout_4,reputer_0_loss_forecast_implied_inference_1_oneout_0,reputer_0_loss_forecast_implied_inference_1_oneout_1,reputer_0_loss_forecast_implied_inference_1_oneout_2,reputer_0_loss_forecast_implied_inference_1_oneout_3,reputer_0_loss_forecast_implied_inference_1_oneout_4,reputer_0_loss_forecast_implied_inference_2_oneout_0,reputer_0_loss_forecast_implied_inference_2_oneout_1,reputer_0_loss_forecast_implied_inference_2_oneout_2,reputer_0_loss_forecast_implied_inference_2_oneout_3,reputer_0_loss_forecast_implied_inference_2_oneout_4,reputer_1_loss_forecast_implied_inference_0_oneout_0,reputer_1_loss_forecast_implied_inference_0_oneout_1,reputer_1_loss_forecast_implied_inference_0_oneout_2,reputer_1_loss_forecast_implied_inference_0_oneout_3,reputer_1_loss_forecast_implied_inference_0_oneout_4,reputer_1_loss_forecast_implied_inference_1_oneout_0,reputer_1_loss_forecast_implied_inference_1_oneout_1,reputer_1_loss_forecast_implied_inference_1_oneout_2,reputer_1_loss_forecast_implied_inference_1_oneout_3,reputer_1_loss_forecast_implied_inference_1_oneout_4,reputer_1_loss_forecast_implied_inference_2_oneout_0,reputer_1_loss_forecast_implied_inference_2_oneout_1,reputer_1_loss_forecast_implied_inference_2_oneout_2,reputer_1_loss_forecast_implied_inference_2_oneout_3,reputer_1_loss_forecast_implied_inference_2_oneout_4,reputer_2_loss_forecast_implied_inference_0_oneout_0,reputer_2_loss_forecast_implied_inference_0_oneout_1,reputer_2_loss_forecast_implied_inference_0_oneout_2,reputer_2_loss_forecast_implied_inference_0_oneout_3,reputer_2_loss_forecast_implied_inference_0_oneout_4,reputer_2_loss_forecast_implied_inference_1_oneout_0,reputer_2_loss_forecast_implied_inference_1_oneout_1,reputer_2_loss_forecast_implied_inference_1_oneout_2,reputer_2_loss_forecast_implied_inference_1_oneout_3,reputer_2_loss_forecast_implied_inference_1_oneout_4,reputer_2_loss_forecast_implied_inference_2_oneout_0,reputer_2_loss_forecast_implied_inference_2_oneout_1,reputer_2_loss_forecast_implied_inference_2_oneout_2,reputer_2_loss_forecast_implied_inference_2_oneout_3,reputer_2_loss_forecast_implied_inference_2_oneout_4,reputer_3_loss_forecast_implied_inference_0_oneout_0,reputer_3_loss_forecast_implied_inference_0_oneout_1,reputer_3_loss_forecast_implied_inference_0_oneout_2,reputer_3_loss_forecast_implied_inference_0_oneout_3,reputer_3_loss_forecast_implied_inference_0_oneout_4,reputer_3_loss_forecast_implied_inference_1_oneout_0,reputer_3_loss_forecast_implied_inference_1_oneout_1,reputer_3_loss_forecast_implied_inference_1_oneout_2,reputer_3_loss_forecast_implied_inference_1_oneout_3,reputer_3_loss_forecast_implied_inference_1_oneout_4,reputer_3_loss_forecast_implied_inference_2_oneout_0,reputer_3_loss_forecast_implied_inference_2_oneout_1,reputer_3_loss_forecast_implied_inference_2_oneout_2,reputer_3_loss_forecast_implied_inference_2_oneout_3,reputer_3_loss_forecast_implied_inference_2_oneout_4,reputer_4_loss_forecast_implied_inference_0_oneout_0,reputer_4_loss_forecast_implied_inference_0_oneout_1,reputer_4_loss_forecast_implied_inference_0_oneout_2,reputer_4_loss_forecast_implied_inference_0_oneout_3,reputer_4_loss_forecast_implied_inference_0_oneout_4,reputer_4_loss_forecast_implied_inference_1_oneout_0,reputer_4_loss_forecast_implied_inference_1_oneout_1,reputer_4_loss_forecast_implied_inference_1_oneout_2,reputer_4_loss_forecast_implied_inference_1_oneout_3,reputer_4_loss_forecast_implied_inference_1_oneout_4,reputer_4_loss_forecast_implied_inference_2_oneout_0,reputer_4_loss_forecast_implied_inference_2_oneout_1,reputer_4_loss_forecast_implied_inference_2_oneout_2,reputer_4_loss_forecast_implied_inference_2_oneout_3,reputer_4_loss_forecast_implied_inference_2_oneout_4,reputer_0_loss_network_inference,reputer_1_loss_network_inference,reputer_2_loss_network_inference,reputer_3_loss_network_inference,reputer_4_loss_network_inference,reputer_0_loss_naive_network_inference,reputer_1_loss_naive_network_inference,reputer_2_loss_naive_network_inference,reputer_3_loss_naive_network_inference,reputer_4_loss_naive_network_inference,reputer_0_loss_network_inference_oneout_0,reputer_0_loss_network_inference_oneout_1,reputer_0_loss_network_inference_oneout_2,reputer_0_loss_network_inference_oneout_3,reputer_0_loss_network_inference_oneout_4,reputer_0_loss_network_inference_oneout_5,reputer_0_loss_network_inference_oneout_6,reputer_0_loss_network_inference_oneout_7,reputer_1_loss_network_inference_oneout_0,reputer_1_loss_network_inference_oneout_1,reputer_1_loss_network_inference_oneout_2,reputer_1_loss_network_inference_oneout_3,reputer_1_loss_network_inference_oneout_4,reputer_1_loss_network_inference_oneout_5,reputer_1_loss_network_inference_oneout_6,reputer_1_loss_network_inference_oneout_7,reputer_2_loss_network_inference_oneout_0,reputer_2_loss_network_inference_oneout_1,reputer_2_loss_network_inference_oneout_2,reputer_2_loss_network_inference_oneout_3,reputer_2_loss_network_inference_oneout_4,reputer_2_loss_network_inference_oneout_5,reputer_2_loss_network_inference_oneout_6,reputer_2_loss_network_inference_oneout_7,reputer_3_loss_network_inference_oneout_0,reputer_3_loss_network_inference_oneout_1,reputer_3_loss_network_inference_oneout_2,reputer_3_loss_network_inference_oneout_3,reputer_3_loss_network_inference_oneout_4,reputer_3_loss_network_inference_oneout_5,reputer_3_loss_network_inference_oneout_6,reputer_3_loss_network_inference_oneout_7,reputer_4_loss_network_inference_oneout_0,reputer_4_loss_network_inference_oneout_1,reputer_4_loss_network_inference_oneout_2,reputer_4_loss_network_inference_oneout_3,reputer_4_loss_network_inference_oneout_4,reputer_4_loss_network_inference_oneout_5,reputer_4_loss_network_inference_oneout_6,reputer_4_loss_network_inference_oneout_7,reputer_0_loss_naive_network_inference_onein_0,reputer_0_loss_naive_network_inference_onein_1,reputer_0_loss_naive_network_inference_onein_2,reputer_1_loss_naive_network_inference_onein_0,reputer_1_loss_naive_network_inference_onein_1,reputer_1_loss_naive_network_inference_onein_2,reputer_2_loss_naive_network_inference_onein_0,reputer_2_loss_naive_network_inference_onein_1,reputer_2_loss_naive_network_inference_onein_2,reputer_3_loss_naive_network_inference_onein_0,reputer_3_loss_naive_network_inference_onein_1,reputer_3_loss_naive_network_inference_onein_2,reputer_4_loss_naive_network_inference_onein_0,reputer_4_loss_naive_network_inference_onein_1,reputer_4_loss_naive_network_inference_onein_2,inference_loss_0,inference_loss_1,inference_loss_2,inference_loss_3,inference_loss_4,forecast_implied_inference_loss_0,forecast_implied_inference_loss_1,forecast_implied_inference_loss_2,forecast_implied_inference_loss_0_oneout_0,forecast_implied_inference_loss_0_oneout_1,forecast_implied_inference_loss_0_oneout_2,forecast_implied_inference_loss_0_oneout_3,forecast_implied_inference_loss_0_oneout_4,forecast_implied_inference_loss_1_oneout_0,forecast_implied_inference_loss_1_oneout_1,forecast_implied_inference_loss_1_oneout_2,forecast_implied_inference_loss_1_oneout_3,forecast_implied_inference_loss_1_oneout_4,forecast_implied_inference_loss_2_oneout_0,forecast_implied_inference_loss_2_oneout_1,forecast_implied_inference_loss_2_oneout_2,forecast_implied_inference_loss_2_oneout_3,forecast_implied_inference_loss_2_oneout_4,network_naive_loss,network_loss_oneout_0,network_loss_oneout_1,network_loss_oneout_2,network_loss_oneout_3,network_loss_oneout_4,network_loss_oneout_5,network_loss_oneout_6,network_loss_oneout_7,network_naive_loss_onein_0,network_naive_loss_onein_1,network_naive_loss_onein_2,forecasted_regret_0_inferer_0,forecasted_regret_0_inferer_1,forecasted_regret_0_inferer_2,forecasted_regret_0_inferer_3,forecasted_regret_0_inferer_4,forecasted_regret_1_inferer_0,forecasted_regret_1_inferer_1,forecasted_regret_1_inferer_2,forecasted_regret_1_inferer_3,forecasted_regret_1_inferer_4,forecasted_regret_2_inferer_0,forecasted_regret_2_inferer_1,forecasted_regret_2_inferer_2,forecasted_regret_2_inferer_3,forecasted_regret_2_inferer_4,inference_regret_worker_0,inference_regret_worker_1,inference_regret_worker_2,inference_regret_worker_3,inference_regret_worker_4,inference_regret_worker_5,inference_regret_worker_6,inference_regret_worker_7,naive_inference_regret_worker_0,naive_inference_regret_worker_1,naive_inference_regret_worker_2,naive_inference_regret_worker_3,naive_inference_regret_worker_4,inference_regret_worker_0_oneout_0,inference_regret_worker_1_oneout_0,inference_regret_worker_2_oneout_0,inference_regret_worker_3_oneout_0,inference_regret_worker_4_oneout_0,inference_regret_worker_5_oneout_0,inference_regret_worker_6_oneout_0,inference_regret_worker_7_oneout_0,inference_regret_worker_0_oneout_1,inference_regret_worker_1_oneout_1,inference_regret_worker_2_oneout_1,inference_regret_worker_3_oneout_1,inference_regret_worker_4_oneout_1,inference_regret_worker_5_oneout_1,inference_regret_worker_6_oneout_1,inference_regret_worker_7_oneout_1,inference_regret_worker_0_oneout_2,inference_regret_worker_1_oneout_2,inference_regret_worker_2_oneout_2,inference_regret_worker_3_oneout_2,inference_regret_worker_4_oneout_2,inference_regret_worker_5_oneout_2,inference_regret_worker_6_oneout_2,inference_regret_worker_7_oneout_2,inference_regret_worker_0_oneout_3,inference_regret_worker_1_oneout_3,inference_regret_worker_2_oneout_3,inference_regret_worker_3_oneout_3,inference_regret_worker_4_oneout_3,inference_regret_worker_5_oneout_3,inference_regret_worker_6_oneout_3,inference_regret_worker_7_oneout_3,inference_regret_worker_0_oneout_4,inference_regret_worker_1_oneout_4,inference_regret_worker_2_oneout_4,inference_regret_worker_3_oneout_4,inference_regret_worker_4_oneout_4,inference_regret_worker_5_oneout_4,inference_regret_worker_6_oneout_4,inference_regret_worker_7_oneout_4,inference_regret_worker_0_oneout_5,inference_regret_worker_1_oneout_5,inference_regret_worker_2_oneout_5,inference_regret_worker_3_oneout_5,inference_regret_worker_4_oneout_5,inference_regret_worker_5_oneout_5,inference_regret_worker_6_oneout_5,inference_regret_worker_7_oneout_5,inference_regret_worker_0_oneout_6,inference_regret_worker_1_oneout_6,inference_regret_worker_2_oneout_6,inference_regret_worker_3_oneout_6,inference_regret_worker_4_oneout_6,inference_regret_worker_5_oneout_6,inference_regret_worker_6_oneout_6,inference_regret_worker_7_oneout_6,inference_regret_worker_0_oneout_7,inference_regret_worker_1_oneout_7,inference_regret_worker_2_oneout_7,inference_regret_worker_3_oneout_7,inference_regret_worker_4_oneout_7,inference_regret_worker_5_oneout_7,inference_regret_worker_6_oneout_7,inference_regret_worker_7_oneout_7,inference_regret_worker_0_onein_0,inference_regret_worker_1_onein_0,inference_regret_worker_2_onein_0,inference_regret_worker_3_onein_0,inference_regret_worker_4_onein_0,inference_regret_worker_5_onein_0,inference_regret_worker_0_onein_1,inference_regret_worker_1_onein_1,inference_regret_worker_2_onein_1,inference_regret_worker_3_onein_1,inference_regret_worker_4_onein_1,inference_regret_worker_5_onein_1,inference_regret_worker_0_onein_2,inference_regret_worker_1_onein_2,inference_regret_worker_2_onein_2,inference_regret_worker_3_onein_2,inference_regret_worker_4_onein_2,inference_regret_worker_5_onein_2,inferer_score_0,inferer_score_1,inferer_score_2,inferer_score_3,inferer_score_4,forecaster_score_0,forecaster_score_1,forecaster_score_2,inferer_reward_fraction_0,inferer_reward_fraction_1,inferer_reward_fraction_2,inferer_reward_fraction_3,inferer_reward_fraction_4,forecaster_reward_fraction_0,forecaster_reward_fraction_1,forecaster_reward_fraction_2,reputer_listening_coefficient_0,reputer_listening_coefficient_1,reputer_listening_coefficient_2,reputer_listening_coefficient_3,reputer_listening_coefficient_4,reputer_adjusted_stake_0,reputer_adjusted_stake_1,reputer_adjusted_stake_2,reputer_adjusted_stake_3,reputer_adjusted_stake_4,reputer_score_0,reputer_score_1,reputer_score_2,reputer_score_3,reputer_score_4,reputer_reward_fraction_0,reputer_reward_fraction_1,reputer_reward_fraction_2,reputer_reward_fraction_3,reputer_reward_fraction_4,inferer_reward_fraction_smooth_0,inferer_reward_fraction_smooth_1,inferer_reward_fraction_smooth_2,inferer_reward_fraction_smooth_3,inferer_reward_fraction_smooth_4,forecaster_reward_fraction_smooth_0,forecaster_reward_fraction_smooth_1,forecaster_reward_fraction_smooth_2,reputer_reward_fraction_smooth_0,reputer_reward_fraction_smooth_1,reputer_reward_fraction_smooth_2,reputer_reward_fraction_smooth_3,reputer_reward_fraction_smooth_4,inferers_entropy,forecasters_entropy,reputers_entropy,forecaster_task_score,forecasters_utility,inferers_reward_fraction,forecasters_reward_fraction,reputers_reward_fraction,topic_rewards,inferer_reward_0,inferer_reward_1,inferer_reward_2,inferer_reward_3,inferer_reward_4,forecaster_reward_0,forecaster_reward_1,forecaster_reward_2,reputer_reward_0,reputer_reward_1,reputer_reward_2,reputer_reward_3,reputer_reward_4"
	simulatorEpochs := map[int]string{
		300: "0.03985254043403228,-0.023436611594409483,0.009781863350371005,0.02223793659211506,0.11552983586563229,0.032472720698523826,-2.341421686954683,-2.9432576400770207,-3.884181450545189,-1.9647795852794823,-4.111767408188739,-2.677026067794835,-2.944431590946878,-3.0650682375687572,-2.08706693542846,-4.140211608991293,-2.24866014324237,-1.8901641108547267,-4.125883222164734,-0.9729640557942307,-4.0722307692978905,0.028466577592841897,0.031944362071380995,0.02668958663156535,0.028542117962487394,0.028629955003374445,0.0319004949477223,0.028745375104550268,0.02184935021272652,0.031982824213868624,0.03198106394634701,0.031886250603272666,0.032234379285113766,0.01731175367313993,0.027095511247177895,0.026666094481383407,0.03182045375212588,0.026887958564974675,0.021750621231175653,0.028766359025009076,0.023862880192916082,0.027117192043858613,0.028645269738144127,0.03132109982490605,0.032323150637529836,0.019583763245160934,0.029650259064540083,0.029237655188968547,0.031787315702247555,0.028909133221096665,0.02052351705551294,0.029770553172539554,0.028199236401978075,0.029021481116117968,0.028421959172218802,0.03186079290814676,0.026625715101682865,-3.6335715145469636,427718.71341722546,508566.93076744024,326853.3796565003,302211.7853586475,397674.87658679625,-1.285027790259861,-2.3830546751342823,-3.256262594972895,-0.901603218936355,-1.3779496468904517,-1.2731065545153895,-2.4271412552962555,-3.1602027232529477,-0.9710646287668246,-1.5942818258649414,-1.1332372457971156,-2.5227959336961208,-3.207635245298263,-1.0296738594694543,-1.4804203639607978,-1.2889403331644413,-2.6500477861343903,-3.3762923520567085,-1.0920460310220907,-1.5598562784076264,-1.3573311686171754,-2.533322631682507,-3.371331335558988,-0.7816189326383448,-1.596214834724491,-3.3115785510219315,-3.2877049748007687,-5.530942337697515,-3.534576119771144,-3.514418391506154,-5.570847884619171,-3.5753768732028286,-3.3356495733705125,-5.661461535521098,-3.329426673632077,-3.623579828703784,-5.5951936055049245,-3.54400113798208,-3.367045331232364,-5.535600863206606,-3.1301081001341866,-3.1957512807034227,-2.3621028308489165,-3.193277848566245,-3.2686856382267706,-3.344042393686517,-3.2403074559383196,-2.3818986538076574,-3.239856520908847,-3.412862421579881,-5.208623763979314,-3.8638590295588995,-2.0495501639881724,-4.352724903334473,-4.404134667444094,-3.3136705685120145,-3.459379664298094,-2.410256864422572,-3.3559812106482236,-3.4260004032646694,-3.4658957880372796,-3.3723790633987756,-2.3213677172246188,-3.2832777116960608,-3.4773862333080334,-5.364160995992116,-3.938546001939129,-2.1624533857225186,-4.405367570694309,-4.411033109225399,-3.2534412021447183,-3.537542046256922,-2.4711746619294197,-3.3533069258023467,-3.414211808308841,-3.3775236929476917,-3.394844598913295,-2.4192614571634152,-3.612064705114987,-3.4404124004643233,-5.401567041764304,-4.022623070777261,-2.1237991346316223,-4.382945823337009,-4.336293037585006,-3.186193833883546,-3.1659276337381725,-2.356030876383402,-3.3118544806909616,-3.4509977946738952,-3.30793385604937,-3.5389521205609165,-2.440157868666946,-3.290520069020414,-3.2853725820318367,-5.335382734666302,-4.2637803370558,-2.1384711844493403,-4.32480754516248,-4.542926174875601,-3.338238685749474,-3.1799092531345776,-2.2821244635942253,-3.3032887900012375,-3.457390629141493,-3.330908588012489,-3.262847057932108,-2.392955596064933,-3.278253917339019,-3.393708656841288,-5.1556127781645085,-4.182826072654029,-2.1999040105019025,-4.438138282275264,-4.344267459255843,-3.5322838248615733,-3.453308317102212,-3.4131832198182646,-3.4206163990464047,-3.811982022909186,-3.547284701876098,-3.601165416292883,-3.8978714173567774,-3.5729825784892992,-3.6602643272894286,-3.3760650500461873,-3.3770047518703077,-2.2289131822542414,-3.359008249993171,-3.3951394585012804,-3.9657137164736165,-3.3415432732711534,-3.4414278211769798,-3.4667746423263286,-3.3898600105895884,-2.440943464554797,-3.4512922321482247,-3.484673466178761,-3.986885460702953,-3.4425087105259418,-3.3410758031434096,-3.459821863520666,-3.4551342243337735,-2.345248641024609,-3.4602879977562564,-3.736147257659394,-4.057620893238467,-3.566899019758408,-3.38705705627284,-3.55579368477807,-3.475815844672416,-2.308407353587713,-3.415326532476259,-3.5340208335805756,-3.9757499280149124,-3.5055764632571713,-3.0739742699713783,-3.4782989255879118,-3.2857886243494634,-2.496337088192033,-3.5310541353554403,-3.4673831148888774,-3.967152811535712,-3.5449853092995216,-3.379548763032972,-3.2454442520954148,-3.5093611613775724,-5.514121564434474,-3.3954123457523013,-3.5145919437512654,-5.436650708747403,-3.4836062205215543,-3.4312243402413336,-5.602083466766086,-3.328953485039153,-3.3639431574692,-5.596570176629126,-3.2864194725345177,-3.408472068677967,-5.539068164269759,-1.76616067073814,-2.1187742119434816,-2.1504551369992027,-1.3163240071849398,-1.8751440915408812,-3.531001424706194,-3.2819560274176793,-3.2245486300054615,-3.2015911979768186,-3.2735070424262678,-2.905182328232083,-3.4239246420008675,-3.4647940811928266,-3.1302139165412,-3.1674923504261243,-2.8428083522687047,-3.1066901719190443,-3.377531119728719,-2.8752840754758093,-3.0277133197038566,-2.7320486045086287,-3.141611901658348,-3.0006136421717957,-2.2368324200165297,-3.2960017069296526,-3.3561767681748105,-2.9368268923127423,-3.49328409282801,-3.6029694850438,-3.452119861196285,-3.614539721846976,-3.5529088182355175,-3.511808848084088,-3.328296214297316,-3.228241142413552,-1.3051320131914839,-0.703296060069146,0.2376277503990223,-1.6817741148666845,0.46521370804257245,-0.9695276323513315,-0.7021221091992889,-0.5814854625774095,-1.5594867647177066,0.49365790884512606,-1.3978935569037967,-1.75638958929144,0.47932952201856693,-2.673589644351936,0.42567706915172376,-1.7004384708401101,-1.5808214666906708,-1.462975207079379,-2.0717442651680402,-1.6739205650120743,-0.07152812230757898,-0.4277435901742021,-0.5108610934914639,-0.28313730324873926,-0.16352029909929966,-0.04567403948800782,-0.6544430975766687,-0.2566193974207036,-1.2272665099439988,-1.107649505794559,-0.9898032461832673,-1.5985723042719282,-1.2007486041159632,-0.09821435185372787,-0.16185057552581442,-0.4115302454099584,-1.428100973392997,-1.3084839692435573,-1.1906377096322658,-1.7994067677209262,-1.401583067564961,-0.0996029999774416,-0.2712499914063755,-0.4425854039706521,-1.2336039440605,-1.1139869399110605,-0.9961406802997687,-1.6049097383884297,-1.2070860382324642,-0.02317040902626736,-0.22787427857082235,-0.3179850902777186,-1.597855165515639,-1.4782381613661995,-1.3603919017549078,-1.9691609598435689,-1.5713372596876036,-0.07312928974233279,-0.47700297854251217,-0.5060680937296179,-1.7078376585984716,-1.588220654449032,-1.47037439483774,-2.079143452926401,-1.681319752770436,-0.15508951765374668,-0.3329061669387269,-0.5803650025069953,-1.3936800199765291,-1.2740630158270891,-1.1562167562157974,-1.7649858143044583,-1.3671621141484933,0.23523032855600245,-0.12098513931062069,-0.20410264262788252,-1.7407210083989026,-1.6211040042494629,-1.5032577446381707,-2.112026802726832,-1.7142031025708666,-0.11181065986637126,-0.4680261277329944,-0.5511436310502563,-1.651893689374985,-1.5322766852255456,-1.4144304256142533,-2.0231994837029146,-1.6253757835469493,-0.02298334084245383,-0.3791988087090769,-0.4623163120263389,-1.6129346921162913,-1.4933176879668513,-1.3754714283555596,-1.9842404864442207,-1.5864167862882552,0.0159756564162401,-1.3082543311786565,-1.1886373270292163,-1.0707910674179246,-1.6795601255065857,-1.2817364253506205,-0.035559450512748274,-1.1923895357262806,-1.0727725315768406,-0.9549262719655487,-1.5636953300542098,-1.165871629898245,-0.00281215837763411,0.33756980761731104,0.2773947463721531,0.6967446222342213,0.1402874217189538,0.030602029503163486,0.45483284702989846,0.2871397930951871,0.3083492028328402,0.1991264586073697,0.14030166381300077,0.603129479994191,0.044508045130326884,0.012934352455111623,0.4801171298122534,0.24536326582684187,0.2745196043609047,0.989567196734741,0.9878498247747716,0.2849104224881762,0.36927127488409117,0.9903661349917594,1.0,1.0,0.30429051875987756,0.36658188158958693,1.0,29.618179320207084,35.12364552416577,22.70322646592546,23.290488628401047,29.875011746141556,0.22275489459644743,0.3140930654476798,0.1304821808506564,0.12376579679475957,0.20890406231045677,0.395460646374082,0.17043448012968884,0.38223903054638314,0.03833887483412343,0.013526968115723024,0.6353404876689697,0.15896422066182203,0.2056952916692086,0.21551640945370615,0.31160381751982774,0.1254663740020302,0.1305128097538306,0.2169005892706056,1.0732148682643887,0.8307069980321401,1.5095023373934215,1.3967390945304339,0.5,0.3144100481575748,0.2433647119318297,0.4422252399105954,7708.8051494006695,482.6279348429186,340.0527621224311,1461.8204803533156,107.87529721251255,31.349323729247107,900.7242908891355,460.314035678225,515.0128179551391,759.3777188414521,1070.7521196141738,444.81743498088554,421.9210922878555,712.1598408933781",
		301: "0.2011215847521158,0.17114675838705384,-0.01317049616146998,0.24650843075059153,-0.14234745122383394,0.14536735397809786,-2.8908577425531217,-0.9787713933823274,-2.4416698954082987,-0.5138057970695222,-2.0188003586001537,-2.898113688422412,-1.5092177007327892,-3.145347796323594,-0.6902301819749463,-2.4059439135919636,-2.734493551371176,-1.1220224413645161,-2.484388959598741,-0.9321783742303835,-1.8436230936889229,0.1829557390833629,0.21758959264223252,0.18976620357682872,0.22879889195947728,0.1832473203598134,0.1691494388918849,0.18033144100385248,0.18602893353762684,0.23638705317614395,0.2172193700382772,0.1659270896374779,0.22653611774001822,0.22030290751038034,0.24146260229687916,0.18965817490324327,0.17015711849771098,0.18828175277711054,0.19186750548166145,0.1892379539058763,0.1718172334674811,0.17629863741375645,0.18524097725830807,0.2027411909321843,0.23891338042057822,0.19958777729456903,0.23227408456336032,0.1933868006728648,0.16803787515914803,0.18613377705443152,0.19639439865114516,0.2060171595057422,0.1836620310571548,0.18918660652457414,0.1828079236972315,0.21723222435186015,0.18955133030238394,-3.6534525709175663,428478.0911360669,509637.6828870544,327298.1970914812,302633.7064509354,398387.0364276896,-2.1981590133062405,-2.915571188728293,-3.4021034999449347,-2.1046023618220793,-4.1789539859005,-2.482486279663322,-3.0682245947433793,-3.411608136888827,-2.134923717132202,-4.142746014728538,-2.4589115598868836,-3.0436382345229034,-3.696919137357124,-2.156316271273213,-4.390381886533443,-2.4685541191815576,-3.0434005215205047,-3.588278574146972,-2.275767098032603,-4.219627396707465,-2.4944013822614517,-3.0004564125270856,-3.6603945798353177,-2.091580761542833,-4.287897710041386,-3.773713716012218,-3.975173394094266,-3.736875490679752,-3.860940649834854,-4.0378204436854555,-3.7002575190357985,-3.767380491238564,-4.4136667505563,-3.7232199653909057,-3.6761914479238134,-4.32349950286875,-3.715343768421687,-3.938364847640795,-4.123124835664263,-3.65870625940148,-3.745745469705782,-3.814800425667048,-4.175020545016401,-3.816052689104403,-3.2563184221721784,-4.133932540022238,-3.962422138530972,-4.041643364851021,-4.116317692308018,-3.13560856692645,-3.8036518966438533,-3.7300508125872587,-4.079806025639425,-3.6849737231340027,-3.321199591728659,-3.9287725893376084,-3.8540198617541637,-4.225889546168209,-3.9047151445597943,-3.406637576951311,-4.1466840799365725,-4.216546240693634,-4.2148305191870525,-4.172530319680463,-3.2109571982854312,-3.7590282682109084,-3.6241780641666552,-4.284867743293143,-3.778342344471983,-3.412605964239601,-4.082665696431921,-3.9116797966293273,-4.25185358123758,-3.9450092583099154,-3.403229583563158,-4.402006002332816,-4.077098300826788,-4.287835912410726,-4.282757970475015,-3.2364918186950833,-3.7593389727639566,-3.6572767914229973,-4.5749676405613044,-4.168967803768282,-3.3193904607040654,-4.035446344839568,-3.8385329658981577,-4.3386420778397925,-3.8926838154584087,-3.6519641974859796,-4.110092388150805,-4.103023492061023,-4.520196273720914,-4.183996582523024,-3.2751273190182877,-3.845595316001721,-3.608722447923655,-4.096747298202714,-3.9280953615483445,-3.526480125883163,-3.933623554193726,-3.8861012706511215,-4.204960872519002,-3.925202099103636,-3.4044451782915375,-4.117329506536412,-4.226005001391103,-4.090939563608953,-4.4530914160285295,-3.1827885055168537,-3.7431887847483956,-3.6180963468444265,-4.176346557137654,-3.692752617315339,-3.4732648730872637,-3.802553490628828,-3.9376078036123965,-3.984492627699721,-4.096506343824679,-3.6946008263490597,-3.265611273834196,-3.3224579602067177,-3.348635260199292,-3.3738532056983743,-3.4833465510567394,-3.797584200774261,-3.9251201162965526,-4.112514423359991,-3.8422129644099705,-3.342008818817597,-3.892641683577098,-3.703403738063009,-3.8846764641632614,-4.058036010039071,-3.81835260952186,-4.142803687824913,-3.899287422872565,-3.351110613919281,-3.9171162496857077,-3.8861519198050125,-3.8806947842867148,-4.056735944657941,-4.015531130326434,-4.1924890973392825,-3.9418854921793915,-3.2135020565451,-3.9311872453036343,-3.659088596179975,-3.9312518930378815,-4.013099254438839,-3.8618475852330434,-4.258989494959544,-3.9701432886233734,-3.5440439671842774,-4.028921408497121,-3.8433458612351643,-3.9965259102371338,-3.9863434152150163,-3.813760583377391,-4.183644235621818,-3.9083835569482956,-3.6084180875611582,-4.089399681207401,-3.7315942924154344,-3.7467382986915814,-3.7932584639408233,-4.151086787697999,-3.6125193365719,-3.91481044159334,-4.221701470905159,-3.8545602017275,-4.053038234147656,-4.36904653407081,-3.8084355034099557,-3.590116023332827,-4.122397199398057,-3.7505725774538323,-4.046093725288958,-4.064168846213598,-3.6586225498653087,-1.8012648052467877,-2.158423152308019,-2.194224768480649,-1.3549769490369594,-1.9206899953015202,-3.5522887982234392,-3.321193347691597,-3.254664418631588,-3.2384612664685895,-3.3069143920283803,-2.948673343870563,-3.4536488073250413,-3.4590631681360042,-3.171638652796558,-3.2079292193437348,-2.8865043687328527,-3.1488895571547224,-3.3565583801726597,-2.9150586346326173,-3.0620839589152284,-2.7763018974510447,-3.1775627622655915,-3.027841387284449,-2.2789288292639966,-3.331874491526697,-3.3877306669317755,-2.979776780493207,-3.520803213316757,-3.5790391586089187,-3.483351459298749,-3.6278542557771494,-3.5765515878869922,-3.537731129294327,-3.3673725451050345,-3.259343466700818,-0.7427137719938419,-2.6548001211646364,-1.1919016191386649,-3.119765717477441,-1.6147711559468099,-0.7354578261245517,-2.1243538138141744,-0.48822371822336974,-2.9433413325720172,-1.227627600955,-0.8990779631757877,-2.5115490731824472,-1.1491825549482226,-2.70139314031658,-1.7899484208580407,-1.715613400323177,-1.5722422618825587,-1.4626004666151329,-2.094417400839297,-1.6798047660724715,-0.07449168734623379,-0.4181951534793788,-0.49965379937091536,-0.30258997532558624,-0.15921883688496746,-0.0495770416175418,-0.6813939758417056,-0.26678134107488094,-1.2576008275775898,-1.114229689136971,-1.0045878938695454,-1.6364048280937091,-1.2217921933268847,-0.09773423917416585,-0.1616891018462469,-0.41205880655837057,-1.443937462222196,-1.3005663237815772,-1.1909245285141519,-1.8227414627383154,-1.4081288279714905,-0.09772432747003695,-0.262105137024542,-0.4308915343752416,-1.228094747179092,-1.0847236087384733,-0.9750818134710476,-1.6068987476952115,-1.1922861129283866,-0.023963711785905038,-0.21441409188977556,-0.30653406955416296,-1.6100234897710721,-1.4666523513304535,-1.357010556063028,-1.9888274902871919,-1.574214855520367,-0.0725318013672711,-0.4664940463044644,-0.48978532946177267,-1.7148313280748375,-1.5714601896342189,-1.461818394366793,-2.093635328590957,-1.6790226938241322,-0.15157816493566345,-0.3218636280884801,-0.5774482793887428,-1.4225206833840724,-1.2791495449434531,-1.1695077496760278,-1.8013246839001915,-1.3867120491333669,0.21860102959287123,-0.12510243654027384,-0.20656108243181037,-1.7493078526120487,-1.6059367141714296,-1.4962949189040036,-2.1281118531281678,-1.713499218361343,-0.10818613963510515,-0.4518896057682502,-0.5333482516597868,-1.664232998701507,-1.5208618602608885,-1.4112200649934623,-2.0430369992176267,-1.6284243644508016,-0.023111285724563745,-0.36681475185770873,-0.4482733977492454,-1.6252878553094163,-1.481916716868797,-1.3722749216013714,-2.0040918558255356,-1.5894792210587105,0.015833857667527294,-1.3340396720466157,-1.1906685336059963,-1.0810267383385708,-1.7128436725627347,-1.29823103779591,-0.0366214252028172,-1.2189584482990556,-1.0755873098584365,-0.9659455145910107,-1.5977624488151747,-1.1831498140483503,-0.0029988473467936804,0.32157807939086913,0.26572190398579076,0.6736757904243591,0.1326493576008092,0.07441341230864751,0.4422764087216955,0.2913096653155721,0.3027793966321358,0.1924081347805541,0.1366192528149299,0.6050830438646193,0.043186406747932005,0.022703161791964653,0.46734294594756154,0.2584872565736499,0.27416979747878856,0.9890686660490968,0.9872567638506238,0.28850249276167106,0.3705918756685014,0.9899026444855288,1.0,1.0,0.30865562032502286,0.36691527769426435,1.0,28.28757781545392,39.455676135424916,20.44846555448789,22.488185453938403,30.329714563632038,0.2096624502039709,0.3478302086013297,0.11577122053069196,0.1177248065783524,0.2090113140856551,0.37515539521472924,0.16705295739821294,0.4045234318782068,0.03882362802550429,0.014444587483347187,0.6185407334968289,0.16891652425300485,0.2125427422501666,0.21493101352873265,0.31522645662797794,0.12449685865489638,0.12923400943628277,0.21611166175211055,1.0733622885891896,0.8567171868900927,1.5051872886861708,1.3745237416535696,0.5,0.31245383903976,0.24938883810329626,0.4381573228569437,7633.942328283924,458.9423861538707,325.871699514961,1443.277106184709,103.01057481230087,54.15282081459424,889.73685081143,492.11321072241253,521.9699458644577,701.2931645939342,1163.4460414541832,387.23942001004775,393.7739069452977,699.1152004017249",
		302: "0.09568583574498818,0.21073811046992752,0.25712287680943163,0.1997509073157136,0.020714272285501698,0.08417981250377231,-1.829431540887379,-1.8676076856518762,-1.647064399417975,-1.7710435399124593,-3.805608075039177,-2.470608845517157,-1.7126347192668319,-2.298186110212427,-2.9879489153238357,-3.56293462659419,-1.4564411423354358,-1.1897016403791918,-1.4905946075958827,-2.555036220978439,-3.187627300323815,0.08447542377629498,0.0810572690291249,0.07943882468558702,0.08450981197916264,0.0844059064018992,0.0845283136739948,0.08475985034167646,0.238961518476842,0.07939211136765809,0.08232714170005143,0.08023868665066566,0.08576165591468252,0.029245488647121978,0.07878465232586192,0.07975960843767489,0.07869387123768003,0.08468162641467684,0.021651962493707634,0.08381298511996808,0.04252649145286852,0.08051081727085693,0.08435276889696666,0.1486866015966756,0.19326585351012526,0.20536573323275464,0.08287263420950809,0.0837710189360944,0.0832463443484231,0.08521411345570035,0.15364601491010624,0.08128242543913805,0.08431193794072582,0.08439897622066019,0.08493365213878488,0.0817499966437968,0.08025446319565287,-3.6629802871655817,429179.3843006608,510801.1289285086,327685.43651149125,303027.4803578807,399086.15162809135,-2.7889603745056486,-1.1899357397203154,-2.621483031371425,-0.8517206049868495,-2.5509665357091187,-3.1462428559573445,-1.358763489728261,-2.735898739062348,-0.9292393092120302,-2.580631943915396,-3.2919124813236795,-1.4699492714151914,-2.8434539608615226,-0.8652099362319197,-2.5676680751721133,-2.868557493231947,-1.4298645541074524,-2.648858064789955,-0.9904917413512826,-2.521933764599845,-3.1512868780240244,-1.520093270365574,-2.7518063041409655,-0.9857053394676621,-2.4865975264621447,-3.3738572324860363,-3.557383930342202,-3.741954812054786,-3.530890912198275,-3.619304175026249,-3.785359751948616,-3.289296433758026,-3.622080538808617,-3.8765105194317644,-3.6282565679058703,-3.730081873512763,-3.7684562932763517,-3.486497318924992,-3.609222193181339,-3.8169255544705045,-2.970339703121904,-3.461360102124108,-2.8846339007981205,-3.2475279733024602,-3.5228769159527595,-2.8450728442981785,-3.3258016676581073,-3.035480401848652,-3.2754720682588805,-3.282535705301776,-2.7220761881379727,-3.808950876465284,-2.767622555623583,-3.789451796517788,-4.067174102964157,-3.0150811944501723,-3.526962977439696,-2.9139624554030554,-3.4753822688359906,-3.5374726819185804,-2.9648650365982396,-3.6447029774540414,-2.956772916628049,-3.1235925050814006,-3.3473148305185463,-2.7087438895201306,-3.974454711893876,-2.978769412699847,-3.7566790480810264,-4.0038959884738095,-2.981305046426386,-3.442930595999719,-2.8908074251852978,-3.4806921599785974,-3.5608649999627198,-3.0343862524376632,-3.605444356469516,-3.0149004212960064,-3.426407923663417,-3.4725969936865755,-2.8520165614263617,-3.7509144813760327,-3.236683557788094,-3.7660259243111587,-4.012632968656293,-3.2316081647505452,-3.6967325926003047,-3.266957137994818,-3.310957430593477,-3.5438972179357227,-2.778786378342687,-3.5858583043405017,-2.7474967843134888,-3.167276494849555,-3.4097834699948204,-2.793838829647642,-3.8448327267097593,-3.0474774397493136,-3.816090673294009,-4.045629288703057,-3.0896743515383904,-3.396144885765245,-2.9070836248614436,-3.380334336917075,-3.4987206827786355,-2.9634589629288106,-3.6832740425745625,-2.7842344183360908,-3.1962831811258714,-3.541700596720007,-2.684880351875968,-3.9342938098565656,-3.0974213124252,-3.7080860296837153,-3.8923021616456124,-3.8280647545277944,-3.8441465201130343,-3.6404921082510717,-3.832837735955945,-3.6203818471987486,-5.552108046689271,-5.608048204677152,-5.947648156010059,-5.688718232676961,-5.90000055130629,-2.750854792946061,-3.933275874439633,-2.8531965931785934,-3.5238444547507437,-4.490956435759855,-4.689869707055113,-3.459167437779758,-3.6828964631107577,-2.894757419742138,-4.179383053687661,-2.9338282814766403,-3.575764995169115,-4.534543318747015,-4.510285721085386,-3.431315022031831,-3.791345108308755,-2.988196325363162,-4.330422288221255,-2.6571270142207926,-3.186420846068651,-4.478594152142125,-4.63480099432693,-3.6180342038761837,-3.901882385411132,-3.019781529788286,-4.166794456583278,-2.9724957337513684,-3.8609766761751834,-4.558330415623175,-4.501565940784695,-3.68118082301313,-3.8164503502085263,-2.9371171352366745,-4.138474831562546,-3.0191580114440577,-3.471044003482142,-4.702754006611872,-4.505992097792728,-3.556170842078759,-3.8853275215416794,-3.219238827507364,-3.5348379777105605,-3.740817769349432,-3.55091004432102,-3.58621243038906,-3.880682988292037,-3.542033682514666,-3.720226586998413,-3.6168073644954917,-3.3232926366947524,-3.5269982611548194,-3.824538899766658,-3.3477819460507874,-3.590581036753704,-3.8035756553995657,-1.844315107462878,-1.983858942049043,-2.2257930634056575,-1.2865480320471485,-1.9551073193668556,-3.5424234869245077,-3.343419721658186,-3.2867294667160394,-3.2152098979350097,-3.3226754939508676,-2.9494625519704996,-3.445935966561161,-3.4657713776061603,-3.13905294854678,-3.2330954284944617,-2.8894067657081024,-3.1562257723199667,-3.3609885673044007,-2.8945478062799146,-3.1004488909766046,-2.794778863705583,-3.2110100347415016,-3.0685185332470826,-2.3246689998798895,-3.2651236207103476,-3.4250473703623014,-2.970331714150852,-3.520956855548983,-3.6197085472763413,-3.5251552969627196,-3.6172809968714406,-3.594935802795261,-3.521950622080347,-3.385093021934577,-3.290855029163691,-1.8240210300301873,-1.78584488526569,-2.0063881714995913,-1.882409031005107,0.15215550412161072,-1.1828437254004092,-1.9408178516507344,-1.3552664607051392,-0.6655036555937306,-0.09051794432337612,-2.1970114285821305,-2.4637509305383745,-2.1628579633216836,-1.0984163499391273,-0.4658252705937511,-1.7259185782611297,-1.5829301702059566,-1.460059142329612,-2.1226188862672104,-1.6826115862450972,-0.0790981986357178,-0.4083316946821805,-0.48731350147877806,-0.32036636703472876,-0.17737795897955538,-0.054506931103210816,-0.7170666750408091,-0.27705937501869626,-1.2739215961445778,-1.1309331880894045,-1.00806216021306,-1.670621904150658,-1.2306146041285455,-0.09295218753428307,-0.15812725887797896,-0.4079105073455768,-1.4576169422899188,-1.3146285342347452,-1.191757506358401,-1.8543172502959993,-1.414309950273886,-0.09818908236417664,-0.2550898175088718,-0.4202622288762871,-1.2178869331299802,-1.0748985250748069,-0.9520274971984624,-1.6145872411360607,-1.1745799411139475,-0.023654256825349784,-0.20106517754507297,-0.2934359476432736,-1.6166853156025756,-1.4736969075474022,-1.3508258796710577,-2.0133856236086562,-1.5733783235865433,-0.07278071012932621,-0.4563177499969196,-0.4718014785963436,-1.7208875392487002,-1.5778991311935266,-1.4550281033171824,-2.1175878472547804,-1.6775805472326675,-0.1518140654091152,-0.3155492632768262,-0.5748224528527944,-1.4483526339956494,-1.3053642259404756,-1.1824931980641313,-1.8450529420017294,-1.4050456419796165,0.19846774562976294,-0.1307657504166998,-0.20974755721329735,-1.7516736562917001,-1.6086852482365264,-1.4858142203601814,-2.14837396429778,-1.7083666642756672,-0.10485327666628792,-0.43408677271275065,-0.5130685795093483,-1.6728717683645946,-1.5298833603094215,-1.4070123324330766,-2.069572076370675,-1.629564776348562,-0.026051388739182696,-0.35528488478564535,-0.434266691582243,-1.6305226212402215,-1.4875342131850477,-1.3646631853087032,-2.0272229292463018,-1.5872156292241888,0.01629775838519062,-1.3547134962891239,-1.21172508823395,-1.0888540603576056,-1.751413804295204,-1.3114065042730914,-0.037126612710174596,-1.2417165956392315,-1.0987281875840578,-0.9758571597077131,-1.6384169036453116,-1.1984096036231988,-0.0031115188568794847,0.3978566664552341,0.23793291680328021,0.6926485730147296,0.14202343161659847,0.04327173988924038,0.402689148202261,0.29938047323427774,0.29257987059869095,0.25632340862322645,0.10355140176853792,0.581506477160705,0.04404928779508263,0.014569424652447987,0.43373363769663803,0.2879034515690963,0.2783629107342657,0.9888897043393121,0.987043712600504,0.2894816614345477,0.37126905796071497,0.9897362469077233,1.0,1.0,0.3097075884181615,0.36737450589583165,1.0,23.72433952157098,36.136094265416986,19.297712351878022,22.359327358055786,29.427543338213944,0.19037624475254059,0.34512214882417935,0.1182340977914528,0.126683636669392,0.21958387196243517,0.36327219655557896,0.16070280183524543,0.42222173640645666,0.03934619400246213,0.014457071200257268,0.6000600239168099,0.180815216984614,0.21912475909857648,0.21247553665111343,0.3182160258475981,0.12387058256855202,0.1289789721595937,0.216458882773143,1.0651043548366066,0.88438258996186,1.5022935859985023,1.3383112872856922,0.5,0.308566649974901,0.25621055048875546,0.43522279953634335,7649.630948803897,605.0311553310486,244.42490283929126,1372.6000976609544,103.9748637446675,34.3899758407805,850.0815641083055,564.2666262219077,545.5679660986539,633.8184507428459,1149.013029273255,393.63604836604327,421.7670457395242,731.0592228366181",
		303: "0.12868417444689542,0.11896852945769756,0.33365452593707556,0.12805144080124747,0.27236127434415436,-0.20147020424130038,-4.083890692275539,-1.574234147817659,-6.5453604176888875,-1.4370305374385317,-0.8831713457382369,-3.5801251060618835,-0.9921476753188869,-6.088709579208688,-2.14968466865389,-1.3903823505637591,-3.4357908590298543,-1.2123273348600865,-6.33108315920075,-1.3217899440180416,-0.6671285372505664,0.12772502307374056,0.12799824167141802,0.12812453549353106,0.1296254379179432,0.12654424961895694,0.11976499820158709,0.1271076759964956,0.12831028901657437,0.12907253677618763,0.1276968409692371,0.12080409792328939,0.12626177986709272,0.1290921115868246,0.129202887129939,0.127343387632343,0.11967846778443701,0.12750757683554115,0.1286265254786284,0.1278266970014254,0.11952061506284845,0.12299986301933494,0.12782412429837148,0.12803654695846664,0.22509081713664056,0.14641905866416943,0.129407543611151,0.12655756478277447,0.1200962571342988,0.12705281568072496,0.12893920679765603,0.12806772913018952,0.12778826134497584,0.12778285947334997,0.12773149115102028,0.1280288235438581,0.12816663475497517,-3.67907097199836,429813.2027514037,511950.14195778186,328079.0725598573,303449.2474036202,399817.210850928,-1.624127346120368,-1.5129403444892633,-1.9640142514663703,-2.1508919497164767,-3.6981853235132918,-1.9532777039330398,-1.6013233234607125,-2.0115982135546857,-2.2841092924901596,-3.823854214460124,-2.069838607149608,-1.5176523202371526,-2.015970424246431,-2.2891207684745547,-3.8658562078622136,-1.891872066070296,-1.4676166644570616,-1.8947730657315178,-1.9815248404909658,-3.853141592128541,-1.8389925395969602,-1.498204914533122,-1.974690115414631,-2.0476487575736653,-3.8863744094536883,-3.823740009111836,-3.606511820900232,-3.4722510011923013,-3.942419799724722,-3.4295726165993465,-3.477790582437657,-3.9152993702546364,-3.706006240141218,-3.6304736111259506,-3.841225084472241,-3.8114413667719367,-3.541655113350278,-3.858330931259976,-3.5963089040112766,-3.366930643056381,-3.731798066834712,-3.9136162522404656,-3.6798299391482265,-4.019404042971287,-1.668612749447951,-3.5459894134738694,-3.6568948761329514,-3.3085188603870845,-3.8978664671059806,-2.396646821276566,-3.295388886451012,-3.535748551175781,-3.512307139807924,-3.7593788621145063,-2.056946556911231,-3.881661992492083,-3.8381571739516667,-3.9066166568153973,-3.877936493365908,-1.6468480816548168,-3.6746672325204113,-3.8327270007150895,-3.6796767744706544,-3.9796496695158954,-2.283940875461064,-3.540740168719061,-3.6138711349881936,-3.5131040878625703,-3.8736811990603894,-2.167748634939428,-3.9333056594778415,-3.6875282624063406,-3.710081045079253,-3.767061412789594,-1.6612828717529944,-3.485267991504958,-3.686232273009959,-3.8625898879418594,-4.029573629172126,-2.447779300062494,-3.7773432551625703,-3.6060686453579427,-3.5714045180483254,-3.9250747808771393,-2.3124968078902013,-3.5763015085017504,-3.882289430072066,-3.8954402952546467,-3.8028045927250766,-1.7041832614094226,-3.5619367806326068,-3.853646231893604,-3.6125972375881825,-4.123575653462599,-2.3656629920629344,-3.3482870251633883,-3.5830156397397617,-3.573009500926992,-3.923682362391881,-2.207206455309357,-3.8688754939919443,-3.8584352065961074,-3.9069228829570806,-3.926015793579287,-1.7669504384338572,-3.50680099941768,-3.812422934490895,-3.4924143713582616,-3.9593631455182483,-2.297347048964404,-3.7097190314527513,-3.6214173482008762,-3.4933755556997586,-3.8021530289719947,-2.288013749617235,-3.888837541749723,-3.7006888689084585,-3.858941097283234,-4.155203929901036,-3.806519165323311,-1.9237373102935107,-1.933888928695649,-1.829549317925791,-1.9072686110585708,-2.0502044550957343,-3.578964997837621,-3.8236926751080738,-3.5725533599667156,-3.8502641637877884,-2.2449516994843024,-3.538254936639847,-3.6818847914181005,-3.7618884610914063,-3.7385466605925415,-3.8318851976410304,-3.803468837128853,-3.9206726875297337,-2.4264580977004764,-3.5420412700954427,-3.9806513326247646,-3.947866652895654,-3.7075176296339936,-3.866285603877636,-3.999162405479251,-4.131507613015381,-2.5044878424095005,-3.672272598547121,-3.919249063120219,-4.042007398688678,-3.8722484402307233,-4.071509542627785,-3.7130178953538446,-3.9518534306831232,-2.411622340291541,-3.8639739067749255,-3.965111391837072,-3.750891978377816,-3.564571292411596,-3.722800455208614,-3.6500181321336713,-3.8604802738143964,-2.381345714769564,-3.590664570755499,-3.73034121007773,-3.991486750242139,-3.7973652185381797,-3.728991555321245,-3.695930612693094,-3.94124839677625,-3.6620381990009703,-3.496258620726561,-3.997401586092465,-3.9443119336146015,-3.8191500961582565,-3.955779778734557,-3.59017405343853,-3.7660307296469457,-3.9467724786760434,-3.762070866781519,-3.5675404474568384,-1.8466602411838084,-1.9095828355211848,-2.193362504681801,-1.325916736359425,-2.0002076293890623,-3.566522129089849,-3.3636193351973755,-3.3032298527740442,-3.248816395349155,-3.3540267960417496,-2.988809182227155,-3.4746166654409487,-2.62650804249978,-3.1670324133835694,-3.265031921701328,-2.9254567350903975,-3.1949350470760516,-3.076959458663692,-2.9293076157931806,-3.1309310387782285,-2.8317043869732985,-3.2458392196570984,-2.853146926037317,-2.2654993940703867,-3.292863729232222,-3.4530581907171536,-3.0079775396994726,-3.5484194939355613,-3.204219448008956,-3.53394300675745,-3.6358181867398693,-3.6175044717711846,-3.548937572919186,-3.4097038097128776,-3.315974832092652,0.4209104051099577,-2.088746139347923,2.882380130523306,-2.22594974972705,-2.779808941427345,-0.08285518110369816,-2.670832611846695,2.425729292043106,-1.5132956185116915,-2.2725979366018225,-0.2271894281357274,-2.450652952305495,2.6681028720351683,-2.34119034314754,-2.9958517499150155,-1.7365677935164718,-1.6015859668330785,-1.4626240748283068,-2.145672421204383,-1.6822367618815173,-0.08244326306299711,-0.3990436888940609,-0.47616626325333183,-0.33021364561991373,-0.19523181893652003,-0.05626992693174833,-0.7393182733078243,-0.2758826139849591,-1.2911497853349614,-1.1561679586515676,-1.017206066646796,-1.700254413022872,-1.2368187537000068,-0.08806170216916145,-0.1548976645750463,-0.40347506795492327,-1.4724950430142614,-1.3375132163308676,-1.1985513243260963,-1.8815996707021723,-1.4181640113793066,-0.09827331359529938,-0.24838346265956715,-0.41044872118255094,-1.2122299696685488,-1.077248142985155,-0.9382862509803833,-1.6213345973564595,-1.1578989380335938,-0.023205666890046567,-0.1892107402514732,-0.28171966815156363,-1.6251927093174934,-1.4902108826340998,-1.351248990629328,-2.034297337005404,-1.5708616776825388,-0.07288292196585486,-0.44603441968317864,-0.4548793581645555,-1.684554706006345,-1.5495728793229513,-1.4106109873181796,-2.0936593336942555,-1.6302236743713903,-0.19440379941912128,-0.29672033588367003,-0.5524474597646789,-1.4722456471534486,-1.3372638204700547,-1.1983019284652832,-1.881350274841359,-1.4179146155184936,0.18187888330002655,-0.13472154253103727,-0.2118441168903082,-1.7554220852181364,-1.6204402585347424,-1.48147836652997,-2.1645267129060466,-1.7010910535831814,-0.10129755476466117,-0.41789798059572497,-0.495020554954996,-1.6826690145868728,-1.5476871879034795,-1.4087252958987073,-2.0917736422747835,-1.628337982951918,-0.02854448413339799,-0.34514490996446173,-0.42226748432373273,-1.6376980922897373,-1.502716265606343,-1.3637543736015714,-2.0468027199776477,-1.5833670606547825,0.016426438163737872,-1.3755465035131185,-1.2405646768297243,-1.1016027848249528,-1.784651131201029,-1.3212154718781637,-0.03802239889070734,-1.2644763951661928,-1.1294945684827988,-0.990532676478027,-1.673581022854103,-1.210145363531238,-0.0040748649030523,0.38620724276613805,0.22601278128120628,0.6710934322988873,0.13065147806279853,0.474851523989404,0.4297055186428822,0.3184906928544906,0.30879373467594773,0.19183205043669713,0.07434933190118655,0.43656506791083655,0.030683794486704455,0.2665697552645754,0.4294815408266162,0.29127488470371005,0.27924357446967385,0.9899595543727482,0.9883178532656625,0.29701202354055956,0.35611654467440546,0.9907314785043688,1.0,1.0,0.31700579259313877,0.35390264732812493,1.0,25.295880456596656,30.66590089766677,19.257081624647547,20.519820829217437,33.750247952805196,0.20666066436534103,0.29840882653572975,0.12008735216592813,0.11835535116425705,0.2564878057687441,0.34612818194369077,0.15206745484183953,0.4236560695568946,0.03847995405088636,0.039668339606689085,0.5830021756077906,0.1918611837565236,0.22513664063568622,0.2118940494225362,0.3162353059164113,0.12349225952828964,0.12791661006006003,0.22046177507270315,1.1251893412271339,0.9087568402173078,1.5024395692727321,1.4135715779279732,0.5,0.3181749448568916,0.2569733350025554,0.424851720140553,7632.186675272335,465.8393065345855,180.5477298257189,1060.1417647877267,74.51162364681568,647.3301497474314,842.328601595653,571.2682455227099,547.6716161884344,670.1070489861579,967.6048354696779,389.3889600500453,383.772864294062,831.6739286233172",
		304: "-0.10601006107063919,-0.06568637015637532,0.0659614660271801,-0.19990485101340483,-0.4545956573124786,-0.12047057077074849,-2.4398361297810327,-1.4762563625263976,-1.8613615952669258,-0.9007901843450681,-3.608973134491315,-2.808434845647129,-1.6681049323935806,-2.4665825915593462,-0.989392740224861,-3.41341932641455,-2.372371269232899,-1.2340866480974244,-1.7799655462213397,-1.200320298289392,-2.5182847227081746,-0.11928136110429187,-0.11684628294676778,-0.10459573845097897,-0.12071803218301697,-0.11932664490932804,-0.11826215602901617,-0.11974037361546883,-0.0711016642986185,-0.12351414221132465,-0.11714032723935433,-0.11255295058549701,-0.11823543854004556,-0.0907270381982677,-0.12187803100644262,-0.10491904442131358,-0.10246321998232205,-0.10483799355938667,-0.06927242650555475,-0.11674890073094116,-0.12039989023918925,-0.11991651664709103,-0.11835626349381,-0.11117146688795522,-0.07754301778549372,-0.15442949341282458,-0.12186902806990584,-0.11696734889976554,-0.11371474001341668,-0.11768412107798674,-0.07792028246720838,-0.11179769267114195,-0.11685115506562387,-0.11869762196613824,-0.11924535562886919,-0.11683181422610021,-0.1046775743132099,-3.7246436707390296,430483.3098003898,512917.74679325154,328468.46151990735,303833.0202679143,400648.8847795513,-3.788830558901378,-1.3545812733268476,-6.21967381345373,-1.4957472246593195,-0.7962960039363913,-4.0395075414642045,-1.3509370779457226,-6.359244334862703,-1.6037313263152637,-0.9204017837628494,-3.885717113730321,-1.7118174591757729,-6.467605024055432,-1.5461296617673441,-1.1588372835125351,-4.204077700527685,-1.4471876637033854,-6.4832067351676725,-1.5330646846017055,-0.9333795420453835,-4.1035547825501215,-1.350903970173912,-6.392699789723814,-1.6793636054761827,-1.0276668401653932,-5.946700846885931,-6.223648398046331,-6.440460979371132,-6.09521157339534,-6.319309456685293,-6.508922905145321,-5.907078538813678,-6.428013110394836,-6.310890017928512,-6.001489542410059,-6.3542652629899665,-6.561571983996565,-6.011339984869314,-6.438083269991754,-6.5505653105182144,-5.908283520012043,-5.306438952937508,-4.109576910024552,-5.560518090737123,-6.726006618459618,-6.908478776352119,-5.821910961078061,-4.12728916457514,-5.217789190187455,-6.70465096270347,-6.3662116873573265,-5.797497678852825,-3.9610705618480138,-5.6568387918403396,-8.382803106427126,-6.068733478055679,-5.402077235053349,-4.031135179450524,-5.6682175745815675,-6.8315856682651726,-6.6384100238496595,-5.951855677880471,-4.183676312673993,-5.376702684418192,-6.849954745711106,-6.647203850271857,-5.646903015484667,-4.018771596612736,-5.764842707570898,-8.361941321574625,-6.322212730173761,-5.276146914473424,-4.106128746038096,-5.655545106681357,-6.998933247340218,-6.862756441200741,-6.169175623221759,-4.178365674338575,-5.205584637509294,-6.932794390656255,-6.857005707987938,-5.739229791459269,-4.1801554295614185,-5.932014740992132,-8.660260013801118,-6.133640884608881,-5.467919209155174,-4.144069612665628,-5.644554282371298,-6.84831231277236,-6.828566341062329,-6.098280055446379,-4.450157564789865,-5.342069120836546,-6.635061836602435,-6.538533649728425,-5.694165789986637,-4.076506470184774,-6.018424512998871,-8.341542962079131,-6.072372538952213,-5.334382359683572,-3.938160324817248,-5.432165334036068,-6.68323527366152,-6.822297063293875,-5.920979794496007,-4.245666391970502,-5.17181903487837,-6.8142300301219185,-6.465462278405596,-5.664668156655151,-4.161187249461642,-5.783036167760817,-8.558891062040296,-6.0920324368112935,-6.074614561135005,-6.143481609100203,-6.209414817026742,-6.001904310200922,-3.297966819340095,-3.512200570861987,-3.614018931462235,-3.5127212440120474,-3.6705130909552106,-6.233638653343192,-5.24995229391313,-4.095492907853592,-5.519853665859656,-6.979785110382265,-6.450244597563275,-5.952949591432294,-5.7730860315589,-6.206649346818471,-5.376374836834394,-4.094459717576859,-5.569327208953844,-7.092618309634424,-6.259201699361327,-6.0005075549964815,-6.058206265951638,-6.155828808172789,-5.503289380117094,-4.2669972429716845,-5.716286680979858,-7.278049224923465,-6.369682387567458,-6.148676880627727,-6.054805252881494,-6.271745427853205,-5.233139665675644,-4.279897282666416,-5.533646228711143,-7.38426663069524,-6.401070293098238,-5.989261508075433,-5.937741987806402,-6.396639638395666,-5.180418881627904,-4.160669817833773,-5.617908864916435,-7.157524101437322,-6.493953315824765,-6.191071959935304,-5.887461296734575,-5.98831810430147,-6.3893356727485,-6.568641755294001,-5.876510148848174,-6.323281229338256,-6.59376952673427,-5.833971229319948,-6.4112355648726735,-6.650378785283027,-6.21535590439631,-6.350353534287898,-6.6467214747785395,-6.10202309837776,-6.32236139113385,-6.525404504083335,-1.8920770083662517,-1.8289033183710925,-2.2391168021585273,-1.3453047497383595,-1.698033705848228,-3.6121018776197245,-3.4093265747494206,-3.348955049326023,-3.2945037897681946,-3.3993049794275105,-3.0304824600408473,-3.5200053379701055,-2.6722623624068036,-3.2127786957583937,-3.310695525232328,-2.9687946313731253,-3.2402837645859957,-3.122707644528058,-2.9750540011828903,-3.1765601510490917,-2.8746880033938966,-3.291465628671176,-2.8989042953057895,-2.308546362819053,-3.338568280917674,-3.498142585161555,-3.050388810718161,-3.593736021607108,-3.2499715570541032,-3.5796330637914053,-3.681390498813274,-3.663033650538031,-3.5945209670411926,-3.4554067300324034,-3.36170676519329,-1.2392348422173272,-2.2028146094719623,-1.817709376731434,-2.7782807876532916,-0.07009783750704468,-0.870636126351231,-2.0109660396047793,-1.2124883804390136,-2.689678231773499,-0.26565164558381005,-1.306699702765461,-2.4449843239009352,-1.8991054257770201,-2.478750673708968,-1.1607862492901853,-1.7461676804021025,-1.6310014053865642,-1.4649143542035263,-2.1690390711840117,-1.7166740821824458,-0.08545311606862792,-0.3906710296036157,-0.4661184990692993,-0.3388392165032025,-0.22367294148766406,-0.05758589030462605,-0.7617106072851112,-0.3093456182835457,-1.3066839340566074,-1.191517659041069,-1.025430607858031,-1.7295553248385163,-1.2771903358369507,-0.08366198106719326,-0.1519868566334697,-0.3994789891329093,-1.4858520963923656,-1.3706858213768272,-1.2045987701937895,-1.9087234871742746,-1.4563584981727087,-0.09832974280917386,-0.24228982238653315,-0.40156209247554214,-1.206838152936885,-1.0916718779213463,-0.9255848267383083,-1.6297095437187938,-1.1773445547172279,-0.022875735268773272,-0.17844908416082944,-0.2711177820688337,-1.6328393397098298,-1.5176730646942915,-1.3515860135112532,-2.0557107304917386,-1.603345741490173,-0.07296769813296962,-0.43677620341697204,-0.4396184616416931,-1.6518886902744958,-1.5367224152589571,-1.3706353640759192,-2.074760081056404,-1.622395092054839,-0.23273433894193912,-0.2797746935479075,-0.5323094399630424,-1.4937766879806194,-1.3786104129650805,-1.2125233617820428,-1.916648078762528,-1.464283089760962,0.1669378763528558,-0.13828003718213203,-0.21372750664781562,-1.7588112257410249,-1.6436449507254864,-1.4775578995424479,-2.1816826165229335,-1.7293176275213678,-0.09809666140755002,-0.4033145749425378,-0.4787620444082215,-1.6914977773453634,-1.5763315023298254,-1.4102444511467869,-2.114369168127272,-1.6620041791257065,-0.030783213011888844,-0.33600112654687664,-0.41144859601256023,-1.6441726789282578,-1.5290064039127187,-1.3629193527296808,-2.067044069710166,-1.614679080708601,0.01654188540521727,-1.3943248253284217,-1.279158550312883,-1.1130714991298452,-1.8171962161103303,-1.3648312271087648,-0.03882817452993489,-1.2849917313322774,-1.1698254563167387,-1.0037384051337006,-1.7078631221141858,-1.2554981331126203,-0.004942549999473768,0.3860753898213556,0.22650108557747473,0.6742548600208687,0.13090764913192166,0.47467211368492634,0.43025160626625314,0.3191549707476542,0.30949761574430823,0.19108174352668145,0.07436011351066842,0.4382458064141946,0.0306880897119887,0.2656242468364668,0.42720280612355255,0.29225865428540315,0.2805385395910443,0.9894606195596503,0.9877233234911955,0.29895660071245134,0.3587710714284644,0.9902671369728102,1.0,1.0,0.3193582028579077,0.35447571934965205,1.0,36.44466589287524,45.113122270465276,27.13139791504976,33.423418578048214,41.22995730264974,0.21083206630016088,0.3109545995712433,0.11976011960115265,0.13646843541711082,0.22198477911033238,0.33062353810198986,0.14429672070872243,0.4251150432426246,0.037700767616996596,0.06226393032966686,0.5674222386593667,0.20190093080941157,0.23067683053122204,0.21178785111029869,0.3157072352818945,0.12311904553557595,0.1287717925957651,0.22061407547646608,1.1641633286833886,0.9299826456978126,1.503165902658142,1.4160973079199768,0.5,0.3236203499935395,0.2585215509485395,0.4178580990579212,7637.224369762923,472.2702278234963,183.78557312965253,1083.151341504394,75.8474925561116,656.5065885082123,843.4637048005059,577.0317136734411,553.8916705391464,672.8233252796024,992.3419684966179,382.18760229391603,435.50845051398665,708.4147106438423",
		305: "0.29159692486496175,0.31029079846296986,0.08955476434325738,0.2617398331191027,0.3738839134284821,0.2967177729967309,-3.1452659530035922,-1.1072680276336446,-3.063375318983459,-2.0093792471227956,-4.525820385345199,-3.53284074821208,-0.6282715486089985,-3.0293925849638823,-2.4005832820748423,-4.283981901461117,-3.007662061194156,-1.1672887225131325,-2.1388561675756472,-1.6803229287112686,-4.486281759906206,0.29617113272893536,0.2980258056237582,0.29710868619330966,0.29516681986321613,0.2964430169097416,0.29778369542777,0.2958401078043486,0.290252614269198,0.2954991500313263,0.2974720161294266,0.30068250269598196,0.29689463982018205,0.3027462753747562,0.29652141764854334,0.2970805869006165,0.2974152761760803,0.2970125664458738,0.30934307945866635,0.2963480172892989,0.2638746708833908,0.2781762818111343,0.2964563705992664,0.29770844962687815,0.3075296609663054,0.24531915653896308,0.29487924659811365,0.2967295985958966,0.2979688177390903,0.29593031923121443,0.2972222341949748,0.2971576331096388,0.29600190771978324,0.296242121137949,0.295898960108432,0.29763246313419184,0.29666621783131775,-3.741846468755999,431156.1331256694,513910.08876174816,328850.64912220126,304268.5287184283,401357.2994901951,-2.653908466357934,-1.5742050512910253,-1.9843637092657234,-0.7455676580359787,-3.569607599582812,-2.7286473532396722,-1.4053986673853371,-2.105857202059172,-0.8589916670682758,-3.6361553897776577,-2.9481118043500896,-1.587540541986221,-2.001696048525228,-0.9043083651442129,-4.03625551031548,-2.7652022556782696,-1.6250649545398475,-2.206773379011945,-1.140786720738575,-3.6194064062330935,-2.855594013659193,-1.6220883505705936,-2.016820471358728,-1.0991732630204771,-3.571214905592055,-3.5071344334406964,-3.8815576416387585,-5.717235240870905,-3.678114847159122,-4.0554442561564805,-5.701142605835905,-4.0009839406998715,-4.168871884414937,-5.845410661165914,-3.9612129183507707,-3.8133544056547923,-5.829763364753961,-3.721057266884927,-3.862684272156888,-5.5361472948159545,-3.7115002107780577,-3.7191959859975814,-3.6296958281731126,-3.6515787649161733,-2.8082633342586667,-3.514147791311939,-3.844666642039025,-4.181396903672557,-3.6676470309812,-3.5155393183357124,-3.675290517383027,-5.697588750011773,-4.822946422633437,-5.741420181338762,-2.862167957405658,-3.5941860240869534,-3.504657118550956,-3.6710581115056917,-3.6879263030216545,-2.835358120717708,-3.379089460552016,-3.729076606611881,-4.266307942657225,-3.793643404026804,-3.6653011791263586,-3.460189975785796,-5.828586442431741,-4.916001334834285,-5.886996406580581,-2.8083071894615985,-3.5407216513736777,-3.712437976594804,-3.7361195001719283,-3.9947958396197705,-2.7461619562980935,-3.6026679623267395,-4.082347334029975,-4.506128099838635,-3.891666073426024,-3.458237658643273,-3.427626136283357,-6.063799166520881,-4.823699506152138,-5.880114424939508,-2.7033909549913644,-3.670701787266522,-3.8125040666501926,-3.7403767184801127,-3.6950750533586154,-2.9742008723760955,-3.5180003325361295,-4.109056633000881,-4.448154602007948,-3.607469066811318,-3.6456672813182047,-3.722149490271769,-5.900518797114464,-4.8572052029614285,-6.041167121471598,-2.903499030123032,-3.5537558702285574,-3.715868849011448,-3.752304025125682,-3.754359625456676,-2.810387407580534,-3.514488023523139,-3.7844470114856374,-4.415138039322016,-3.6997764933469335,-3.717150539199011,-3.900744958608259,-5.847645172779754,-4.9870742668217325,-5.74615682654132,-2.8304110404839067,-3.773879399454329,-3.9652043854057983,-4.246510532396618,-3.9553627959085023,-3.8142844546119985,-2.459799215326911,-2.5601905067320843,-2.7434448888207665,-2.6117288205360185,-2.655289677902383,-3.457826440701375,-3.910962448164402,-3.929935496963004,-3.6074676175222766,-2.98360994415706,-4.336606457989753,-3.98209227148036,-3.6204748249202456,-3.461076209316377,-3.9792801311946207,-4.188052056838612,-3.8346021283513023,-2.975087914160708,-4.51814346311906,-3.8579472961917256,-3.8563724644965642,-3.957907869525309,-4.04196072977378,-4.404068854663135,-4.075980301383314,-2.9205389854434727,-4.542637740927738,-3.996332790627743,-4.1900400542920035,-3.582068146086556,-3.9316499599451014,-4.3434396598101275,-3.817922252582436,-3.055760695286273,-4.721221981070323,-4.038342368141252,-3.628581141316631,-3.5809594625173986,-3.837366096186873,-4.17358334300608,-3.676387458572343,-2.9859654397878903,-4.447804519457819,-3.692861278365058,-3.7196697201288806,-3.8386274893539194,-3.7780413017504437,-5.610847591860848,-3.791823928864552,-4.079456460052785,-5.622043436360436,-3.8001300247993903,-4.073364811187686,-5.661653232104746,-3.7928220155274293,-3.737912036026601,-5.893938190220067,-3.6026468881372455,-3.9135036266427927,-5.799328904173043,-1.931635367265667,-1.791472067114358,-2.217429365721829,-1.2816277277596733,-1.7432795927817988,-3.6238350836296305,-3.441716662066514,-3.3945048275834586,-3.31775396592761,-3.4202684718552248,-3.066032308014083,-3.537964582828846,-2.6857603711115865,-3.2340145062561167,-3.3437098150860787,-3.0125312207848194,-3.2708576472542146,-3.152881958030962,-3.010289327161335,-3.2222162500966993,-2.9199753595624394,-3.3370895663015263,-2.8905388682352013,-2.330095966154608,-3.357841238666988,-3.5267462567924213,-3.0926507737249143,-3.6098595912937474,-3.2144885523646214,-3.6196273467635947,-3.6990562641912,-3.6747691067892214,-3.60886845577423,-3.485158632817697,-3.4072448658031247,-0.5793777177354373,-2.617375643105385,-0.6612683517555706,-1.715264423616234,0.8011767146061692,-0.19180292252694953,-3.096372122130031,-0.6952510857751473,-1.3240603886641873,0.5593382307220875,-0.7169816095448738,-2.557354948225897,-1.5857875031633824,-2.044320742027761,0.7616380891671768,-1.7525720225109254,-1.662938705012072,-1.4708646290865908,-2.198157038165243,-1.7448633615616211,-0.08870894297440199,-0.38161690731220266,-0.45424081327962346,-0.34480135474177637,-0.25516803724292264,-0.06309396131744134,-0.7903863703960936,-0.33709269379247203,-1.3186361277910787,-1.2290028102922252,-1.036928734366744,-1.764221143445396,-1.3109274668417745,-0.07930451023441173,-0.14917084421120985,-0.3942862813701837,-1.4967779757058044,-1.407144658206951,-1.2150705822814698,-1.942362991360122,-1.4890693147565002,-0.09914454702197614,-0.23636448431851412,-0.39185888389756013,-1.2022558782891213,-1.1126225607902673,-0.920548484864786,-1.6478408939434386,-1.1945472173398166,-0.023250008312979072,-0.168616131038756,-0.2612735452781978,-1.637377828141655,-1.5477445106428014,-1.3556704347173198,-2.0829628437959724,-1.6296691671923507,-0.07286042916616278,-0.42699877747922815,-0.4229336179767459,-1.614985139756942,-1.5253518222580877,-1.3332777463326067,-2.0605701554112588,-1.6072764788076372,-0.2623337231730487,-0.25795788362648275,-0.5114734643796801,-1.5131982171323501,-1.4235648996334962,-1.231490823708015,-1.9587832327866672,-1.5054895561830453,0.15066486240417382,-0.14224310193362688,-0.21486700790104768,-1.7596721928594758,-1.670038875360622,-1.4779647994351401,-2.205257208513793,-1.7519635319101712,-0.09580911332295199,-0.38871707766075264,-0.46134098362817355,-1.6966613735631826,-1.6070280560643293,-1.4149539801388473,-2.1422463892174997,-1.6889527126138781,-0.032798294026659056,-0.3257062583644597,-0.3983301643318805,-1.6474787198862884,-1.557845402387434,-1.3657713264619529,-2.093063735540605,-1.639770058936984,0.01638435965023558,-1.4102446693507826,-1.3206113518519287,-1.1285372759264474,-1.8558296850050997,-1.4025360084014782,-0.03928955415205971,-1.3040535080527955,-1.2144201905539416,-1.02234611462846,-1.7496385237071124,-1.2963448471034908,-0.0057222988214929976,0.3840052300890111,0.21510021196357787,0.6491956950310849,0.13198687746225168,0.5273579163913777,0.4113574638992089,0.32085832008937154,0.3195952463872125,0.1869023016045559,0.06702968560588339,0.40946805784723533,0.030532195652000285,0.30606775929032515,0.40631871998291497,0.2975990708400353,0.29608220917704975,0.991253262116192,0.9898598165990027,0.28991820653703115,0.3506239165708238,0.9919359451742706,1.0,1.0,0.31118301425463324,0.34796245452858543,1.0,27.72192915814533,33.071690827212784,15.936998794998905,22.553047052388802,30.49254562999472,0.22429192290510552,0.3189327807556709,0.09834694185956146,0.12877094329936448,0.22965741118029756,0.31625141445224647,0.13657001719843853,0.4235503447030857,0.036983910420496965,0.0866443132257327,0.5513118867917216,0.21147074481247394,0.23721736839580482,0.21303825828977938,0.3160297898292721,0.12064183516797451,0.12877170766612506,0.22151840904684925,1.1982777252505747,0.9507455342398423,1.5007854039387625,1.4117505026013912,0.5,0.32831247765320726,0.26049188379825067,0.41119563854854213,7681.699798905109,471.3672109494544,169.04872590447476,1032.6775793735671,77.00213312031048,771.9022442188738,813.05206846819,595.5018270654039,592.4665558558412,708.4667371509144,1007.4070596293182,310.64666130439673,406.74639040722,725.4146054571441",
	}

	gettersMap := map[int](func(header string) alloraMath.Dec){}
	for epochNumber, epoch := range simulatorEpochs {
		gettersMap[epochNumber] = GetSimulatedValuesGetterForEpoch(epoch, simulatorHeaders)
	}
	return gettersMap
}

func GetTokenomicsSimulatorValuesGetterForEpochs() map[int]func(header string) alloraMath.Dec {
	const simulatorHeaders = "epoch,time,network_tokens_total,network_tokens_emission,network_tokens_circulating,network_tokens_staked,investors_preseed_tokens_total,investors_preseed_tokens_emission,investors_preseed_tokens_circulating,investors_preseed_tokens_staked,investors_seed_tokens_total,investors_seed_tokens_emission,investors_seed_tokens_circulating,investors_seed_tokens_staked,team_tokens_total,team_tokens_emission,team_tokens_circulating,team_tokens_staked,ecosystem_tokens_total,ecosystem_tokens_emission,ecosystem_tokens_circulating,ecosystem_tokens_staked,foundation_tokens_total,foundation_tokens_emission,foundation_tokens_circulating,foundation_tokens_staked,participants_tokens_total,participants_tokens_emission,participants_tokens_circulating,participants_tokens_staked,ehat_target_i,ehat_max_i,ehat_i,e_i,validator_rewards,topics_rewards,n_active_topics,all_topic_weight_sum,topic_id_0,topic_months_live_0,topic_n_workers_0,topic_n_reputers_0,topic_total_stake_0,topic_total_fee_revenue_0,topic_weights_0,topic_rewards_0,topic_id_1,topic_months_live_1,topic_n_workers_1,topic_n_reputers_1,topic_total_stake_1,topic_total_fee_revenue_1,topic_weights_1,topic_rewards_1,topic_id_2,topic_months_live_2,topic_n_workers_2,topic_n_reputers_2,topic_total_stake_2,topic_total_fee_revenue_2,topic_weights_2,topic_rewards_2,n_active_validators,all_validator_stake_sum,validator_id_0,validator_months_live_0,validator_stake_0,validator_rewards_0,validator_id_1,validator_months_live_1,validator_stake_1,validator_rewards_1,validator_id_2,validator_months_live_2,validator_stake_2,validator_rewards_2"
	simulatorEpochs := map[int]string{
		0:  "0,2024-09-01 00:00:00,1000000000.0,155000000.0,155000000.0,47000000.0,50000000.0,0.0,0.0,0.0,260500000.0,0.0,0.0,0.0,175000000.0,0.0,0.0,0.0,359500000.0,0.0,0.0,0.0,100000000.0,100000000.0,100000000.0,25000000.0,55000000.0,55000000.0,55000000.0,22000000.0,0.0,0.01897758586916609,0.0,0.0,0.0,0.0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
		1:  "1,2024-10-01 00:00:00,1000000000.0,891946.5358508063,155891946.5358508,47321195.640835635,50000000.0,0.0,0.0,0.0,260500000.0,0.0,0.0,0.0,175000000.0,0.0,0.0,0.0,358608053.46414924,891946.5358508063,0.0,0.0,100237219.82336457,0.0,100237219.82336457,25059304.955841143,55654726.71248623,0.0,55654726.71248623,22261890.684994493,0.029639627659574466,0.01897758586916609,0.01897758586916609,0.01897758586916609,222986.63396270157,668959.9018881047,3,1040922.4433738946,1,1,5,7,1116348.8993855934,74337.26358999203,288073.46700455487,185133.48371979792,2,1,9,11,1254714.5661832283,68705.51709378888,293608.26465671515,188690.48041818666,3,1,16,11,1061630.2874523632,198658.64207814567,459240.7117126246,295135.9377501202,3,4000857.234830969,1,1,1220576.890643749,68028.50398354916,2,1,1199203.1614497465,66837.24529860828,3,1,1581077.1827374736,88120.88468054413",
		60: "60,2029-09-01 00:00:00,1000000000.0,3590406.600160135,878425211.2861397,536999908.4204468,59503903.56883433,0.0,59503903.568834305,44627927.67662573,310015337.59362686,0.0,310015337.5936266,232511503.19521996,208263662.4909201,0.0,208263662.49091995,156197746.86818996,121574846.85306002,3590406.600160135,0.0,0.0,110627794.11341459,0.0,110627794.11341459,27656948.528353646,190014455.3801441,0.0,190014455.3801441,76005782.15205763,0.005116099285016781,0.01897758586916609,0.005116099285016781,0.0067101612189675195,897601.6500400337,2692804.950120101,123,126711262.20344725,2,60,138,10,1796523.381265418,181733.15634265263,564435.542084281,11995.104423377166,4,60,6,16,2333441.595711526,274708.64183212764,793120.6937213371,16855.007936598402,5,60,22,17,2867732.521499909,128377.46205139885,613150.536850022,13030.37135047667,70,173843911.23200363,5,60,3304137.379608775,17151.185161458667,6,60,2004269.3514207143,10403.80311418031,8,60,8766567.356476054,45505.680511118146",
		61: "61,2029-10-01 00:00:00,1000000000.0,3510006.3727290803,881935159.5196686,538886005.8885152,59649754.907065846,0.0,59649754.90706582,44737316.18029937,310775223.06581306,0.0,310775223.0658128,233081417.29935962,208774142.17473042,0.0,208774142.17473027,156580606.6310477,118064897.33526179,3510006.3727290803,0.0,0.0,110718181.5269528,0.0,110718181.5269528,27679545.3817382,192017800.99017605,0.0,192017800.99017605,76807120.39607042,0.004971807340705342,0.01897758586916609,0.004971807340705342,0.0065363258311413016,877501.5931822701,2632504.7795468103,126,129174536.82346039,2,61,141,9,1686456.788844432,271173.31762648665,669267.1554811186,13639.290133516148,4,61,6,17,2442127.3593945485,268542.78986087686,808780.4967611671,16482.49396270588,5,61,22,17,2872075.9786167345,251836.99919235928,835635.204878133,17029.777887306784,67,166126657.63616273,5,61,3321288.564770234,17633.819995844067,6,61,2014673.1545348945,10696.566427369544,8,61,8812073.036987172,46786.2116447002",
		62: "62,2029-11-01 00:00:00,1000000000.0,3430415.0116778887,885365517.6764157,540728858.3547686,59792148.25123336,0.0,59792148.25123334,44844111.188425004,311517092.3889258,0.0,311517092.38892555,233637819.29169416,209272518.87931672,0.0,209272518.87931657,156954389.15948743,114634537.90646116,3430415.0116778887,0.0,0.0,110806282.09642053,0.0,110806282.09642053,27701570.52410513,193977420.4776424,0.0,193977420.4776424,77590968.19105695,0.0048305938646891365,0.01897758586916609,0.0048305938646891365,0.006365752634496085,857603.7529194722,2572811.2587584164,128,136957252.81779388,2,62,142,10,1805068.1794510488,285947.9306721282,715366.3560069265,13438.51878600532,4,62,6,17,2447621.524048784,252208.78616830966,787134.872776908,14786.726669642214,5,62,22,17,2877752.5712458366,284968.31189900346,901204.9076219462,16929.589963831695,64,166118372.33898112,5,62,3338922.384766078,17326.49106311559,6,62,2025369.720962264,10510.142592672497,8,62,8858859.248631872,45970.803724319754",
		63: "63,2029-12-01 00:00:00,1000000000.0,3351665.1907215193,888717127.2842599,542528952.8476967,59931129.59480026,0.0,59931129.59480024,44948347.19610018,312241185.18890935,0.0,312241185.1889091,234180888.89168185,209758953.58180088,0.0,209758953.58180073,157319215.18635055,111282927.03931676,3351665.1907215193,0.0,0.0,110892135.09669913,0.0,110892135.09669913,27723033.774174783,195893669.49847353,0.0,195893669.49847353,78357467.7993894,0.004692437765123129,0.01897758586916609,0.004692437765123129,0.00619842114755879,837916.2976803798,2513748.8930411395,129,137711925.36904433,2,63,145,9,1695482.725150939,88174.53525668134,407194.9890475955,7432.805475831214,4,63,6,17,2452550.4329386647,151851.18159802826,621318.8377793868,11341.352874909557,5,63,23,17,2883395.767900447,186121.9717500597,743112.5616226436,13564.53607178878,62,163680435.42279696,5,63,3356248.8758291937,17269.52856719847,6,63,2035879.8635549366,10475.589494047817,8,63,8904830.052356193,45819.67031191015",
		64: "64,2030-01-01 00:00:00,1000000000.0,3273788.234016877,891990861.1946996,544286791.6739756,60066745.73972369,0.0,60066745.73972367,45050059.30479275,312947745.30396044,0.0,312947745.3039602,234710808.97797015,210233610.0890329,0.0,210233610.08903274,157675207.56677455,108009191.88284826,3273788.234016877,0.0,0.0,110975779.79557166,0.0,110975779.79557166,27743944.948892914,197766927.18886304,0.0,197766927.18886304,79106770.87554522,0.004557316096669341,0.01897758586916609,0.004557316096669341,0.006034310642469845,818447.0585042193,2455341.175512658,128,140398856.67473233,2,64,146,9,1697960.3269762162,177037.69858386042,539455.3729969282,9434.172193720415,4,64,6,17,2456330.883896968,164690.07482402082,635109.9304573988,11107.010414207174,5,64,23,17,2887917.2799243764,146300.34028107265,655821.9010270094,11469.22813712916,62,165623988.65236205,5,64,3373518.4043963924,16755.082242839657,6,64,2046355.4530489845,10163.52952728412,8,64,8950649.722668104,44454.73664371108",
		65: "65,2030-02-01 00:00:00,1000000000.0,3196814.0374777904,895187622.1546291,546002891.687115,60199044.24868791,0.0,60199044.248687886,45149283.18651591,313637020.535664,0.0,313637020.5356638,235227765.40174782,210696654.87040764,0.0,210696654.8704075,158022491.15280563,104812429.69065818,3196814.0374777904,0.0,0.0,111057255.43858226,0.0,111057255.43858226,27764313.859645564,199597595.216,0.0,199597595.216,79839038.0864,0.004425204130682418,0.01897758586916609,0.004425204130682418,0.005873399991291103,799203.5093694476,2397610.5281083426,129,141849904.7222437,2,65,148,9,1701105.0510407896,238967.96555247757,631448.2083614848,10673.020015678861,4,65,6,17,2460033.220701704,280603.9005077151,818606.7643083385,13836.457629841489,5,65,23,17,2891740.355970086,189264.7757425952,734551.7172899285,12415.721633813855,64,168845697.42802548,5,65,3390273.486639232,16125.868699412784,6,65,2056518.9825762687,9781.852473426683,8,65,8995104.459311815,42785.30154573348",
	}
	// until shown necessary, skip time and epoch columns
	filteredSimulatorEpochs := map[int]string{}
	for epochNumber, epoch := range simulatorEpochs {
		filteredSimulatorEpochs[epochNumber] = strings.Join(strings.Split(epoch, ",")[2:], ",")
	}
	filteredSimulatorHeaders := strings.Join(strings.Split(simulatorHeaders, ",")[2:], ",")
	gettersMap := map[int](func(header string) alloraMath.Dec){}
	for epochNumber, epoch := range filteredSimulatorEpochs {
		gettersMap[epochNumber] = GetSimulatedValuesGetterForEpoch(epoch, filteredSimulatorHeaders)
	}
	return gettersMap
}

func GetInferencesFromCsv(
	topicId uint64,
	blockHeight int64,
	inferers []string,
	epochGet func(header string) alloraMath.Dec,
) (emissionstypes.Inferences, error) {
	if len(inferers) != 5 {
		return emissionstypes.Inferences{}, fmt.Errorf("expected 5 inferers, got %d", len(inferers))
	}
	return emissionstypes.Inferences{
		Inferences: []*emissionstypes.Inference{
			{
				Inferer:     inferers[0],
				Value:       epochGet("inference_0"),
				TopicId:     topicId,
				BlockHeight: blockHeight,
			},
			{
				Inferer:     inferers[1],
				Value:       epochGet("inference_1"),
				TopicId:     topicId,
				BlockHeight: blockHeight,
			},
			{
				Inferer:     inferers[2],
				Value:       epochGet("inference_2"),
				TopicId:     topicId,
				BlockHeight: blockHeight,
			},
			{
				Inferer:     inferers[3],
				Value:       epochGet("inference_3"),
				TopicId:     topicId,
				BlockHeight: blockHeight,
			},
			{
				Inferer:     inferers[4],
				Value:       epochGet("inference_4"),
				TopicId:     topicId,
				BlockHeight: blockHeight,
			},
		},
	}, nil
}

func GetForecastsFromCsv(
	topicId uint64,
	blockHeight int64,
	inferers []string,
	forecasters []string,
	epochGet func(header string) alloraMath.Dec,
) (emissionstypes.Forecasts, error) {
	if len(inferers) != 5 {
		return emissionstypes.Forecasts{}, fmt.Errorf("expected 5 inferers, got %d", len(inferers))
	}
	if len(forecasters) != 3 {
		return emissionstypes.Forecasts{}, fmt.Errorf("expected 3 forecasters, got %d", len(forecasters))
	}
	return emissionstypes.Forecasts{
		Forecasts: []*emissionstypes.Forecast{
			{
				Forecaster: forecasters[0],
				ForecastElements: []*emissionstypes.ForecastElement{
					{
						Inferer: inferers[0],
						Value:   epochGet("forecasted_loss_0_for_0"),
					},
					{
						Inferer: inferers[1],
						Value:   epochGet("forecasted_loss_0_for_1"),
					},
					{
						Inferer: inferers[2],
						Value:   epochGet("forecasted_loss_0_for_2"),
					},
					{
						Inferer: inferers[3],
						Value:   epochGet("forecasted_loss_0_for_3"),
					},
					{
						Inferer: inferers[4],
						Value:   epochGet("forecasted_loss_0_for_4"),
					},
				},
				TopicId:     topicId,
				BlockHeight: blockHeight,
			},
			{
				Forecaster: forecasters[1],
				ForecastElements: []*emissionstypes.ForecastElement{
					{
						Inferer: inferers[0],
						Value:   epochGet("forecasted_loss_1_for_0"),
					},
					{
						Inferer: inferers[1],
						Value:   epochGet("forecasted_loss_1_for_1"),
					},
					{
						Inferer: inferers[2],
						Value:   epochGet("forecasted_loss_1_for_2"),
					},
					{
						Inferer: inferers[3],
						Value:   epochGet("forecasted_loss_1_for_3"),
					},
					{
						Inferer: inferers[4],
						Value:   epochGet("forecasted_loss_1_for_4"),
					},
				},
				TopicId:     topicId,
				BlockHeight: blockHeight,
			},
			{
				Forecaster: forecasters[2],
				ForecastElements: []*emissionstypes.ForecastElement{
					{
						Inferer: inferers[0],
						Value:   epochGet("forecasted_loss_2_for_0"),
					},
					{
						Inferer: inferers[1],
						Value:   epochGet("forecasted_loss_2_for_1"),
					},
					{
						Inferer: inferers[2],
						Value:   epochGet("forecasted_loss_2_for_2"),
					},
					{
						Inferer: inferers[3],
						Value:   epochGet("forecasted_loss_2_for_3"),
					},
					{
						Inferer: inferers[4],
						Value:   epochGet("forecasted_loss_2_for_4"),
					},
				},
				TopicId:     topicId,
				BlockHeight: blockHeight,
			},
		},
	}, nil
}

func GetNetworkLossFromCsv(
	topicId uint64,
	inferers []string,
	forecasters []string,
	epochGet func(header string) alloraMath.Dec,
) (emissionstypes.ValueBundle, error) {
	if len(inferers) != 5 {
		return emissionstypes.ValueBundle{}, fmt.Errorf("expected 5 inferers, got %d", len(inferers))
	}
	if len(forecasters) != 3 {
		return emissionstypes.ValueBundle{}, fmt.Errorf("expected 3 forecasters, got %d", len(forecasters))
	}
	return emissionstypes.ValueBundle{
		TopicId:       topicId,
		CombinedValue: epochGet("network_loss"),
		InfererValues: []*emissionstypes.WorkerAttributedValue{
			{
				Worker: inferers[0],
				Value:  epochGet("inference_loss_0"),
			},
			{
				Worker: inferers[1],
				Value:  epochGet("inference_loss_1"),
			},
			{
				Worker: inferers[2],
				Value:  epochGet("inference_loss_2"),
			},
			{
				Worker: inferers[3],
				Value:  epochGet("inference_loss_3"),
			},
			{
				Worker: inferers[4],
				Value:  epochGet("inference_loss_4"),
			},
		},
		NaiveValue: epochGet("network_naive_loss"),
		ForecasterValues: []*emissionstypes.WorkerAttributedValue{
			{
				Worker: forecasters[0],
				Value:  epochGet("forecast_implied_inference_loss_0"),
			},
			{
				Worker: forecasters[1],
				Value:  epochGet("forecast_implied_inference_loss_1"),
			},
			{
				Worker: forecasters[2],
				Value:  epochGet("forecast_implied_inference_loss_2"),
			},
		},
		OneOutInfererForecasterValues: []*emissionstypes.OneOutInfererForecasterValues{
			{
				Forecaster: forecasters[0],
				OneOutInfererValues: []*emissionstypes.WithheldWorkerAttributedValue{
					{
						Worker: inferers[0],
						Value:  epochGet("forecast_implied_inference_loss_0_oneout_0"),
					},
					{
						Worker: inferers[1],
						Value:  epochGet("forecast_implied_inference_loss_0_oneout_1"),
					},
					{
						Worker: inferers[2],
						Value:  epochGet("forecast_implied_inference_loss_0_oneout_2"),
					},
					{
						Worker: inferers[3],
						Value:  epochGet("forecast_implied_inference_loss_0_oneout_3"),
					},
					{
						Worker: inferers[4],
						Value:  epochGet("forecast_implied_inference_loss_0_oneout_4"),
					},
				},
			},
			{
				Forecaster: forecasters[1],
				OneOutInfererValues: []*emissionstypes.WithheldWorkerAttributedValue{
					{
						Worker: inferers[0],
						Value:  epochGet("forecast_implied_inference_loss_1_oneout_0"),
					},
					{
						Worker: inferers[1],
						Value:  epochGet("forecast_implied_inference_loss_1_oneout_1"),
					},
					{
						Worker: inferers[2],
						Value:  epochGet("forecast_implied_inference_loss_1_oneout_2"),
					},
					{
						Worker: inferers[3],
						Value:  epochGet("forecast_implied_inference_loss_1_oneout_3"),
					},
					{
						Worker: inferers[4],
						Value:  epochGet("forecast_implied_inference_loss_1_oneout_4"),
					},
				},
			},
			{
				Forecaster: forecasters[2],
				OneOutInfererValues: []*emissionstypes.WithheldWorkerAttributedValue{
					{
						Worker: inferers[0],
						Value:  epochGet("forecast_implied_inference_loss_2_oneout_0"),
					},
					{
						Worker: inferers[1],
						Value:  epochGet("forecast_implied_inference_loss_2_oneout_1"),
					},
					{
						Worker: inferers[2],
						Value:  epochGet("forecast_implied_inference_loss_2_oneout_2"),
					},
					{
						Worker: inferers[3],
						Value:  epochGet("forecast_implied_inference_loss_2_oneout_3"),
					},
					{
						Worker: inferers[4],
						Value:  epochGet("forecast_implied_inference_loss_2_oneout_4"),
					},
				},
			},
		},
		OneOutInfererValues: []*emissionstypes.WithheldWorkerAttributedValue{
			{
				Worker: inferers[0],
				Value:  epochGet("network_loss_oneout_0"),
			},
			{
				Worker: inferers[1],
				Value:  epochGet("network_loss_oneout_1"),
			},
			{
				Worker: inferers[2],
				Value:  epochGet("network_loss_oneout_2"),
			},
			{
				Worker: inferers[3],
				Value:  epochGet("network_loss_oneout_3"),
			},
			{
				Worker: inferers[4],
				Value:  epochGet("network_loss_oneout_4"),
			},
		},
		OneOutForecasterValues: []*emissionstypes.WithheldWorkerAttributedValue{
			{
				Worker: forecasters[0],
				Value:  epochGet("network_loss_oneout_5"),
			},
			{
				Worker: forecasters[1],
				Value:  epochGet("network_loss_oneout_6"),
			},
			{
				Worker: forecasters[2],
				Value:  epochGet("network_loss_oneout_7"),
			},
		},
		OneInForecasterValues: []*emissionstypes.WorkerAttributedValue{
			{
				Worker: forecasters[0],
				Value:  epochGet("network_naive_loss_onein_0"),
			},
			{
				Worker: forecasters[1],
				Value:  epochGet("network_naive_loss_onein_1"),
			},
			{
				Worker: forecasters[2],
				Value:  epochGet("network_naive_loss_onein_2"),
			},
		},
	}, nil
}

func GetReputersDataFromCsv(
	topicId uint64,
	inferers []string,
	forecasters []string,
	reputers []string,
	epochGet func(header string) alloraMath.Dec,
) (emissionstypes.ReputerValueBundles, error) {
	if len(inferers) != 5 {
		return emissionstypes.ReputerValueBundles{}, fmt.Errorf("expected 5 inferers, got %d", len(inferers))
	}
	if len(forecasters) != 3 {
		return emissionstypes.ReputerValueBundles{}, fmt.Errorf("expected 3 forecasters, got %d", len(forecasters))
	}
	if len(reputers) != 5 {
		return emissionstypes.ReputerValueBundles{}, fmt.Errorf("expected 5 reputers, got %d", len(reputers))
	}
	return emissionstypes.ReputerValueBundles{
		ReputerValueBundles: []*emissionstypes.ReputerValueBundle{
			{
				ValueBundle: &emissionstypes.ValueBundle{
					TopicId:       topicId,
					Reputer:       reputers[0],
					CombinedValue: epochGet("reputer_0_loss_network_inference"),
					InfererValues: []*emissionstypes.WorkerAttributedValue{
						{
							Worker: inferers[0],
							Value:  epochGet("reputer_0_loss_inference_0"),
						},
						{
							Worker: inferers[1],
							Value:  epochGet("reputer_0_loss_inference_1"),
						},
						{
							Worker: inferers[2],
							Value:  epochGet("reputer_0_loss_inference_2"),
						},
						{
							Worker: inferers[3],
							Value:  epochGet("reputer_0_loss_inference_3"),
						},
						{
							Worker: inferers[4],
							Value:  epochGet("reputer_0_loss_inference_4"),
						},
					},
					NaiveValue: epochGet("reputer_0_loss_naive_network_inference"),
					ForecasterValues: []*emissionstypes.WorkerAttributedValue{
						{
							Worker: forecasters[0],
							Value:  epochGet("reputer_0_loss_forecast_implied_inference_0"),
						},
						{
							Worker: forecasters[1],
							Value:  epochGet("reputer_0_loss_forecast_implied_inference_1"),
						},
						{
							Worker: forecasters[2],
							Value:  epochGet("reputer_0_loss_forecast_implied_inference_2"),
						},
					},
					OneOutInfererForecasterValues: []*emissionstypes.OneOutInfererForecasterValues{
						{
							Forecaster: forecasters[0],
							OneOutInfererValues: []*emissionstypes.WithheldWorkerAttributedValue{
								{
									Worker: inferers[0],
									Value:  epochGet("reputer_0_loss_forecast_implied_inference_0_oneout_0"),
								},
								{
									Worker: inferers[1],
									Value:  epochGet("reputer_0_loss_forecast_implied_inference_0_oneout_1"),
								},
								{
									Worker: inferers[2],
									Value:  epochGet("reputer_0_loss_forecast_implied_inference_0_oneout_2"),
								},
								{
									Worker: inferers[3],
									Value:  epochGet("reputer_0_loss_forecast_implied_inference_0_oneout_3"),
								},
								{
									Worker: inferers[4],
									Value:  epochGet("reputer_0_loss_forecast_implied_inference_0_oneout_4"),
								},
							},
						},
						{
							Forecaster: forecasters[1],
							OneOutInfererValues: []*emissionstypes.WithheldWorkerAttributedValue{
								{
									Worker: inferers[0],
									Value:  epochGet("reputer_0_loss_forecast_implied_inference_1_oneout_0"),
								},
								{
									Worker: inferers[1],
									Value:  epochGet("reputer_0_loss_forecast_implied_inference_1_oneout_1"),
								},
								{
									Worker: inferers[2],
									Value:  epochGet("reputer_0_loss_forecast_implied_inference_1_oneout_2"),
								},
								{
									Worker: inferers[3],
									Value:  epochGet("reputer_0_loss_forecast_implied_inference_1_oneout_3"),
								},
								{
									Worker: inferers[4],
									Value:  epochGet("reputer_0_loss_forecast_implied_inference_1_oneout_4"),
								},
							},
						},
						{
							Forecaster: forecasters[2],
							OneOutInfererValues: []*emissionstypes.WithheldWorkerAttributedValue{
								{
									Worker: inferers[0],
									Value:  epochGet("reputer_0_loss_forecast_implied_inference_2_oneout_0"),
								},
								{
									Worker: inferers[1],
									Value:  epochGet("reputer_0_loss_forecast_implied_inference_2_oneout_1"),
								},
								{
									Worker: inferers[2],
									Value:  epochGet("reputer_0_loss_forecast_implied_inference_2_oneout_2"),
								},
								{
									Worker: inferers[3],
									Value:  epochGet("reputer_0_loss_forecast_implied_inference_2_oneout_3"),
								},
								{
									Worker: inferers[4],
									Value:  epochGet("reputer_0_loss_forecast_implied_inference_2_oneout_4"),
								},
							},
						},
					},
					OneOutInfererValues: []*emissionstypes.WithheldWorkerAttributedValue{
						{
							Worker: inferers[0],
							Value:  epochGet("reputer_0_loss_network_inference_oneout_0"),
						},
						{
							Worker: inferers[1],
							Value:  epochGet("reputer_0_loss_network_inference_oneout_1"),
						},
						{
							Worker: inferers[2],
							Value:  epochGet("reputer_0_loss_network_inference_oneout_2"),
						},
						{
							Worker: inferers[3],
							Value:  epochGet("reputer_0_loss_network_inference_oneout_3"),
						},
						{
							Worker: inferers[4],
							Value:  epochGet("reputer_0_loss_network_inference_oneout_4"),
						},
					},
					OneOutForecasterValues: []*emissionstypes.WithheldWorkerAttributedValue{
						{
							Worker: forecasters[0],
							Value:  epochGet("reputer_0_loss_network_inference_oneout_5"),
						},
						{
							Worker: forecasters[1],
							Value:  epochGet("reputer_0_loss_network_inference_oneout_6"),
						},
						{
							Worker: forecasters[2],
							Value:  epochGet("reputer_0_loss_network_inference_oneout_7"),
						},
					},
					OneInForecasterValues: []*emissionstypes.WorkerAttributedValue{
						{
							Worker: forecasters[0],
							Value:  epochGet("reputer_0_loss_naive_network_inference_onein_0"),
						},
						{
							Worker: forecasters[1],
							Value:  epochGet("reputer_0_loss_naive_network_inference_onein_1"),
						},
						{
							Worker: forecasters[2],
							Value:  epochGet("reputer_0_loss_naive_network_inference_onein_2"),
						},
					},
				},
			},
			{
				ValueBundle: &emissionstypes.ValueBundle{
					TopicId:       topicId,
					Reputer:       reputers[1],
					CombinedValue: epochGet("reputer_1_loss_network_inference"),
					InfererValues: []*emissionstypes.WorkerAttributedValue{
						{
							Worker: inferers[0],
							Value:  epochGet("reputer_1_loss_inference_0"),
						},
						{
							Worker: inferers[1],
							Value:  epochGet("reputer_1_loss_inference_1"),
						},
						{
							Worker: inferers[2],
							Value:  epochGet("reputer_1_loss_inference_2"),
						},
						{
							Worker: inferers[3],
							Value:  epochGet("reputer_1_loss_inference_3"),
						},
						{
							Worker: inferers[4],
							Value:  epochGet("reputer_1_loss_inference_4"),
						},
					},
					NaiveValue: epochGet("reputer_1_loss_naive_network_inference"),
					ForecasterValues: []*emissionstypes.WorkerAttributedValue{
						{
							Worker: forecasters[0],
							Value:  epochGet("reputer_1_loss_forecast_implied_inference_0"),
						},
						{
							Worker: forecasters[1],
							Value:  epochGet("reputer_1_loss_forecast_implied_inference_1"),
						},
						{
							Worker: forecasters[2],
							Value:  epochGet("reputer_1_loss_forecast_implied_inference_2"),
						},
					},
					OneOutInfererForecasterValues: []*emissionstypes.OneOutInfererForecasterValues{
						{
							Forecaster: forecasters[0],
							OneOutInfererValues: []*emissionstypes.WithheldWorkerAttributedValue{
								{
									Worker: inferers[0],
									Value:  epochGet("reputer_1_loss_forecast_implied_inference_0_oneout_0"),
								},
								{
									Worker: inferers[1],
									Value:  epochGet("reputer_1_loss_forecast_implied_inference_0_oneout_1"),
								},
								{
									Worker: inferers[2],
									Value:  epochGet("reputer_1_loss_forecast_implied_inference_0_oneout_2"),
								},
								{
									Worker: inferers[3],
									Value:  epochGet("reputer_1_loss_forecast_implied_inference_0_oneout_3"),
								},
								{
									Worker: inferers[4],
									Value:  epochGet("reputer_1_loss_forecast_implied_inference_0_oneout_4"),
								},
							},
						},
						{
							Forecaster: forecasters[1],
							OneOutInfererValues: []*emissionstypes.WithheldWorkerAttributedValue{
								{
									Worker: inferers[0],
									Value:  epochGet("reputer_1_loss_forecast_implied_inference_1_oneout_0"),
								},
								{
									Worker: inferers[1],
									Value:  epochGet("reputer_1_loss_forecast_implied_inference_1_oneout_1"),
								},
								{
									Worker: inferers[2],
									Value:  epochGet("reputer_1_loss_forecast_implied_inference_1_oneout_2"),
								},
								{
									Worker: inferers[3],
									Value:  epochGet("reputer_1_loss_forecast_implied_inference_1_oneout_3"),
								},
								{
									Worker: inferers[4],
									Value:  epochGet("reputer_1_loss_forecast_implied_inference_1_oneout_4"),
								},
							},
						},
						{
							Forecaster: forecasters[2],
							OneOutInfererValues: []*emissionstypes.WithheldWorkerAttributedValue{
								{
									Worker: inferers[0],
									Value:  epochGet("reputer_1_loss_forecast_implied_inference_2_oneout_0"),
								},
								{
									Worker: inferers[1],
									Value:  epochGet("reputer_1_loss_forecast_implied_inference_2_oneout_1"),
								},
								{
									Worker: inferers[2],
									Value:  epochGet("reputer_1_loss_forecast_implied_inference_2_oneout_2"),
								},
								{
									Worker: inferers[3],
									Value:  epochGet("reputer_1_loss_forecast_implied_inference_2_oneout_3"),
								},
								{
									Worker: inferers[4],
									Value:  epochGet("reputer_1_loss_forecast_implied_inference_2_oneout_4"),
								},
							},
						},
					},
					OneOutInfererValues: []*emissionstypes.WithheldWorkerAttributedValue{
						{
							Worker: inferers[0],
							Value:  epochGet("reputer_1_loss_network_inference_oneout_0"),
						},
						{
							Worker: inferers[1],
							Value:  epochGet("reputer_1_loss_network_inference_oneout_1"),
						},
						{
							Worker: inferers[2],
							Value:  epochGet("reputer_1_loss_network_inference_oneout_2"),
						},
						{
							Worker: inferers[3],
							Value:  epochGet("reputer_1_loss_network_inference_oneout_3"),
						},
						{
							Worker: inferers[4],
							Value:  epochGet("reputer_1_loss_network_inference_oneout_4"),
						},
					},
					OneOutForecasterValues: []*emissionstypes.WithheldWorkerAttributedValue{
						{
							Worker: forecasters[0],
							Value:  epochGet("reputer_1_loss_network_inference_oneout_5"),
						},
						{
							Worker: forecasters[1],
							Value:  epochGet("reputer_1_loss_network_inference_oneout_6"),
						},
						{
							Worker: forecasters[2],
							Value:  epochGet("reputer_1_loss_network_inference_oneout_7"),
						},
					},
					OneInForecasterValues: []*emissionstypes.WorkerAttributedValue{
						{
							Worker: forecasters[0],
							Value:  epochGet("reputer_1_loss_naive_network_inference_onein_0"),
						},
						{
							Worker: forecasters[1],
							Value:  epochGet("reputer_1_loss_naive_network_inference_onein_1"),
						},
						{
							Worker: forecasters[2],
							Value:  epochGet("reputer_1_loss_naive_network_inference_onein_2"),
						},
					},
				},
			},
			{
				ValueBundle: &emissionstypes.ValueBundle{
					TopicId:       topicId,
					Reputer:       reputers[2],
					CombinedValue: epochGet("reputer_2_loss_network_inference"),
					InfererValues: []*emissionstypes.WorkerAttributedValue{
						{
							Worker: inferers[0],
							Value:  epochGet("reputer_2_loss_inference_0"),
						},
						{
							Worker: inferers[1],
							Value:  epochGet("reputer_2_loss_inference_1"),
						},
						{
							Worker: inferers[2],
							Value:  epochGet("reputer_2_loss_inference_2"),
						},
						{
							Worker: inferers[3],
							Value:  epochGet("reputer_2_loss_inference_3"),
						},
						{
							Worker: inferers[4],
							Value:  epochGet("reputer_2_loss_inference_4"),
						},
					},
					NaiveValue: epochGet("reputer_2_loss_naive_network_inference"),
					ForecasterValues: []*emissionstypes.WorkerAttributedValue{
						{
							Worker: forecasters[0],
							Value:  epochGet("reputer_2_loss_forecast_implied_inference_0"),
						},
						{
							Worker: forecasters[1],
							Value:  epochGet("reputer_2_loss_forecast_implied_inference_1"),
						},
						{
							Worker: forecasters[2],
							Value:  epochGet("reputer_2_loss_forecast_implied_inference_2"),
						},
					},
					OneOutInfererForecasterValues: []*emissionstypes.OneOutInfererForecasterValues{
						{
							Forecaster: forecasters[0],
							OneOutInfererValues: []*emissionstypes.WithheldWorkerAttributedValue{
								{
									Worker: inferers[0],
									Value:  epochGet("reputer_2_loss_forecast_implied_inference_0_oneout_0"),
								},
								{
									Worker: inferers[1],
									Value:  epochGet("reputer_2_loss_forecast_implied_inference_0_oneout_1"),
								},
								{
									Worker: inferers[2],
									Value:  epochGet("reputer_2_loss_forecast_implied_inference_0_oneout_2"),
								},
								{
									Worker: inferers[3],
									Value:  epochGet("reputer_2_loss_forecast_implied_inference_0_oneout_3"),
								},
								{
									Worker: inferers[4],
									Value:  epochGet("reputer_2_loss_forecast_implied_inference_0_oneout_4"),
								},
							},
						},
						{
							Forecaster: forecasters[1],
							OneOutInfererValues: []*emissionstypes.WithheldWorkerAttributedValue{
								{
									Worker: inferers[0],
									Value:  epochGet("reputer_2_loss_forecast_implied_inference_1_oneout_0"),
								},
								{
									Worker: inferers[1],
									Value:  epochGet("reputer_2_loss_forecast_implied_inference_1_oneout_1"),
								},
								{
									Worker: inferers[2],
									Value:  epochGet("reputer_2_loss_forecast_implied_inference_1_oneout_2"),
								},
								{
									Worker: inferers[3],
									Value:  epochGet("reputer_2_loss_forecast_implied_inference_1_oneout_3"),
								},
								{
									Worker: inferers[4],
									Value:  epochGet("reputer_2_loss_forecast_implied_inference_1_oneout_4"),
								},
							},
						},
						{
							Forecaster: forecasters[2],
							OneOutInfererValues: []*emissionstypes.WithheldWorkerAttributedValue{
								{
									Worker: inferers[0],
									Value:  epochGet("reputer_2_loss_forecast_implied_inference_2_oneout_0"),
								},
								{
									Worker: inferers[1],
									Value:  epochGet("reputer_2_loss_forecast_implied_inference_2_oneout_1"),
								},
								{
									Worker: inferers[2],
									Value:  epochGet("reputer_2_loss_forecast_implied_inference_2_oneout_2"),
								},
								{
									Worker: inferers[3],
									Value:  epochGet("reputer_2_loss_forecast_implied_inference_2_oneout_3"),
								},
								{
									Worker: inferers[4],
									Value:  epochGet("reputer_2_loss_forecast_implied_inference_2_oneout_4"),
								},
							},
						},
					},
					OneOutInfererValues: []*emissionstypes.WithheldWorkerAttributedValue{
						{
							Worker: inferers[0],
							Value:  epochGet("reputer_2_loss_network_inference_oneout_0"),
						},
						{
							Worker: inferers[1],
							Value:  epochGet("reputer_2_loss_network_inference_oneout_1"),
						},
						{
							Worker: inferers[2],
							Value:  epochGet("reputer_2_loss_network_inference_oneout_2"),
						},
						{
							Worker: inferers[3],
							Value:  epochGet("reputer_2_loss_network_inference_oneout_3"),
						},
						{
							Worker: inferers[4],
							Value:  epochGet("reputer_2_loss_network_inference_oneout_4"),
						},
					},
					OneOutForecasterValues: []*emissionstypes.WithheldWorkerAttributedValue{
						{
							Worker: forecasters[0],
							Value:  epochGet("reputer_2_loss_network_inference_oneout_5"),
						},
						{
							Worker: forecasters[1],
							Value:  epochGet("reputer_2_loss_network_inference_oneout_6"),
						},
						{
							Worker: forecasters[2],
							Value:  epochGet("reputer_2_loss_network_inference_oneout_7"),
						},
					},
					OneInForecasterValues: []*emissionstypes.WorkerAttributedValue{
						{
							Worker: forecasters[0],
							Value:  epochGet("reputer_2_loss_naive_network_inference_onein_0"),
						},
						{
							Worker: forecasters[1],
							Value:  epochGet("reputer_2_loss_naive_network_inference_onein_1"),
						},
						{
							Worker: forecasters[2],
							Value:  epochGet("reputer_2_loss_naive_network_inference_onein_2"),
						},
					},
				},
			},
			{
				ValueBundle: &emissionstypes.ValueBundle{
					TopicId:       topicId,
					Reputer:       reputers[3],
					CombinedValue: epochGet("reputer_3_loss_network_inference"),
					InfererValues: []*emissionstypes.WorkerAttributedValue{
						{
							Worker: inferers[0],
							Value:  epochGet("reputer_3_loss_inference_0"),
						},
						{
							Worker: inferers[1],
							Value:  epochGet("reputer_3_loss_inference_1"),
						},
						{
							Worker: inferers[2],
							Value:  epochGet("reputer_3_loss_inference_2"),
						},
						{
							Worker: inferers[3],
							Value:  epochGet("reputer_3_loss_inference_3"),
						},
						{
							Worker: inferers[4],
							Value:  epochGet("reputer_3_loss_inference_4"),
						},
					},
					NaiveValue: epochGet("reputer_3_loss_naive_network_inference"),
					ForecasterValues: []*emissionstypes.WorkerAttributedValue{
						{
							Worker: forecasters[0],
							Value:  epochGet("reputer_3_loss_forecast_implied_inference_0"),
						},
						{
							Worker: forecasters[1],
							Value:  epochGet("reputer_3_loss_forecast_implied_inference_1"),
						},
						{
							Worker: forecasters[2],
							Value:  epochGet("reputer_3_loss_forecast_implied_inference_2"),
						},
					},
					OneOutInfererForecasterValues: []*emissionstypes.OneOutInfererForecasterValues{
						{
							Forecaster: forecasters[0],
							OneOutInfererValues: []*emissionstypes.WithheldWorkerAttributedValue{
								{
									Worker: inferers[0],
									Value:  epochGet("reputer_3_loss_forecast_implied_inference_0_oneout_0"),
								},
								{
									Worker: inferers[1],
									Value:  epochGet("reputer_3_loss_forecast_implied_inference_0_oneout_1"),
								},
								{
									Worker: inferers[2],
									Value:  epochGet("reputer_3_loss_forecast_implied_inference_0_oneout_2"),
								},
								{
									Worker: inferers[3],
									Value:  epochGet("reputer_3_loss_forecast_implied_inference_0_oneout_3"),
								},
								{
									Worker: inferers[4],
									Value:  epochGet("reputer_3_loss_forecast_implied_inference_0_oneout_4"),
								},
							},
						},
						{
							Forecaster: forecasters[1],
							OneOutInfererValues: []*emissionstypes.WithheldWorkerAttributedValue{
								{
									Worker: inferers[0],
									Value:  epochGet("reputer_3_loss_forecast_implied_inference_1_oneout_0"),
								},
								{
									Worker: inferers[1],
									Value:  epochGet("reputer_3_loss_forecast_implied_inference_1_oneout_1"),
								},
								{
									Worker: inferers[2],
									Value:  epochGet("reputer_3_loss_forecast_implied_inference_1_oneout_2"),
								},
								{
									Worker: inferers[3],
									Value:  epochGet("reputer_3_loss_forecast_implied_inference_1_oneout_3"),
								},
								{
									Worker: inferers[4],
									Value:  epochGet("reputer_3_loss_forecast_implied_inference_1_oneout_4"),
								},
							},
						},
						{
							Forecaster: forecasters[2],
							OneOutInfererValues: []*emissionstypes.WithheldWorkerAttributedValue{
								{
									Worker: inferers[0],
									Value:  epochGet("reputer_3_loss_forecast_implied_inference_2_oneout_0"),
								},
								{
									Worker: inferers[1],
									Value:  epochGet("reputer_3_loss_forecast_implied_inference_2_oneout_1"),
								},
								{
									Worker: inferers[2],
									Value:  epochGet("reputer_3_loss_forecast_implied_inference_2_oneout_2"),
								},
								{
									Worker: inferers[3],
									Value:  epochGet("reputer_3_loss_forecast_implied_inference_2_oneout_3"),
								},
								{
									Worker: inferers[4],
									Value:  epochGet("reputer_3_loss_forecast_implied_inference_2_oneout_4"),
								},
							},
						},
					},
					OneOutInfererValues: []*emissionstypes.WithheldWorkerAttributedValue{
						{
							Worker: inferers[0],
							Value:  epochGet("reputer_3_loss_network_inference_oneout_0"),
						},
						{
							Worker: inferers[1],
							Value:  epochGet("reputer_3_loss_network_inference_oneout_1"),
						},
						{
							Worker: inferers[2],
							Value:  epochGet("reputer_3_loss_network_inference_oneout_2"),
						},
						{
							Worker: inferers[3],
							Value:  epochGet("reputer_3_loss_network_inference_oneout_3"),
						},
						{
							Worker: inferers[4],
							Value:  epochGet("reputer_3_loss_network_inference_oneout_4"),
						},
					},
					OneOutForecasterValues: []*emissionstypes.WithheldWorkerAttributedValue{
						{
							Worker: forecasters[0],
							Value:  epochGet("reputer_3_loss_network_inference_oneout_5"),
						},
						{
							Worker: forecasters[1],
							Value:  epochGet("reputer_3_loss_network_inference_oneout_6"),
						},
						{
							Worker: forecasters[2],
							Value:  epochGet("reputer_3_loss_network_inference_oneout_7"),
						},
					},
					OneInForecasterValues: []*emissionstypes.WorkerAttributedValue{
						{
							Worker: forecasters[0],
							Value:  epochGet("reputer_3_loss_naive_network_inference_onein_0"),
						},
						{
							Worker: forecasters[1],
							Value:  epochGet("reputer_3_loss_naive_network_inference_onein_1"),
						},
						{
							Worker: forecasters[2],
							Value:  epochGet("reputer_3_loss_naive_network_inference_onein_2"),
						},
					},
				},
			},
			{
				ValueBundle: &emissionstypes.ValueBundle{
					TopicId:       topicId,
					Reputer:       reputers[4],
					CombinedValue: epochGet("reputer_4_loss_network_inference"),
					InfererValues: []*emissionstypes.WorkerAttributedValue{
						{
							Worker: inferers[0],
							Value:  epochGet("reputer_4_loss_inference_0"),
						},
						{
							Worker: inferers[1],
							Value:  epochGet("reputer_4_loss_inference_1"),
						},
						{
							Worker: inferers[2],
							Value:  epochGet("reputer_4_loss_inference_2"),
						},
						{
							Worker: inferers[3],
							Value:  epochGet("reputer_4_loss_inference_3"),
						},
						{
							Worker: inferers[4],
							Value:  epochGet("reputer_4_loss_inference_4"),
						},
					},
					NaiveValue: epochGet("reputer_4_loss_naive_network_inference"),
					ForecasterValues: []*emissionstypes.WorkerAttributedValue{
						{
							Worker: forecasters[0],
							Value:  epochGet("reputer_4_loss_forecast_implied_inference_0"),
						},
						{
							Worker: forecasters[1],
							Value:  epochGet("reputer_4_loss_forecast_implied_inference_1"),
						},
						{
							Worker: forecasters[2],
							Value:  epochGet("reputer_4_loss_forecast_implied_inference_2"),
						},
					},
					OneOutInfererForecasterValues: []*emissionstypes.OneOutInfererForecasterValues{
						{
							Forecaster: forecasters[0],
							OneOutInfererValues: []*emissionstypes.WithheldWorkerAttributedValue{
								{
									Worker: inferers[0],
									Value:  epochGet("reputer_4_loss_forecast_implied_inference_0_oneout_0"),
								},
								{
									Worker: inferers[1],
									Value:  epochGet("reputer_4_loss_forecast_implied_inference_0_oneout_1"),
								},
								{
									Worker: inferers[2],
									Value:  epochGet("reputer_4_loss_forecast_implied_inference_0_oneout_2"),
								},
								{
									Worker: inferers[3],
									Value:  epochGet("reputer_4_loss_forecast_implied_inference_0_oneout_3"),
								},
								{
									Worker: inferers[4],
									Value:  epochGet("reputer_4_loss_forecast_implied_inference_0_oneout_4"),
								},
							},
						},
						{
							Forecaster: forecasters[1],
							OneOutInfererValues: []*emissionstypes.WithheldWorkerAttributedValue{
								{
									Worker: inferers[0],
									Value:  epochGet("reputer_4_loss_forecast_implied_inference_1_oneout_0"),
								},
								{
									Worker: inferers[1],
									Value:  epochGet("reputer_4_loss_forecast_implied_inference_1_oneout_1"),
								},
								{
									Worker: inferers[2],
									Value:  epochGet("reputer_4_loss_forecast_implied_inference_1_oneout_2"),
								},
								{
									Worker: inferers[3],
									Value:  epochGet("reputer_4_loss_forecast_implied_inference_1_oneout_3"),
								},
								{
									Worker: inferers[4],
									Value:  epochGet("reputer_4_loss_forecast_implied_inference_1_oneout_4"),
								},
							},
						},
						{
							Forecaster: forecasters[2],
							OneOutInfererValues: []*emissionstypes.WithheldWorkerAttributedValue{
								{
									Worker: inferers[0],
									Value:  epochGet("reputer_4_loss_forecast_implied_inference_2_oneout_0"),
								},
								{
									Worker: inferers[1],
									Value:  epochGet("reputer_4_loss_forecast_implied_inference_2_oneout_1"),
								},
								{
									Worker: inferers[2],
									Value:  epochGet("reputer_4_loss_forecast_implied_inference_2_oneout_2"),
								},
								{
									Worker: inferers[3],
									Value:  epochGet("reputer_4_loss_forecast_implied_inference_2_oneout_3"),
								},
								{
									Worker: inferers[4],
									Value:  epochGet("reputer_4_loss_forecast_implied_inference_2_oneout_4"),
								},
							},
						},
					},
					OneOutInfererValues: []*emissionstypes.WithheldWorkerAttributedValue{
						{
							Worker: inferers[0],
							Value:  epochGet("reputer_4_loss_network_inference_oneout_0"),
						},
						{
							Worker: inferers[1],
							Value:  epochGet("reputer_4_loss_network_inference_oneout_1"),
						},
						{
							Worker: inferers[2],
							Value:  epochGet("reputer_4_loss_network_inference_oneout_2"),
						},
						{
							Worker: inferers[3],
							Value:  epochGet("reputer_4_loss_network_inference_oneout_3"),
						},
						{
							Worker: inferers[4],
							Value:  epochGet("reputer_4_loss_network_inference_oneout_4"),
						},
					},
					OneOutForecasterValues: []*emissionstypes.WithheldWorkerAttributedValue{
						{
							Worker: forecasters[0],
							Value:  epochGet("reputer_4_loss_network_inference_oneout_5"),
						},
						{
							Worker: forecasters[1],
							Value:  epochGet("reputer_4_loss_network_inference_oneout_6"),
						},
						{
							Worker: forecasters[2],
							Value:  epochGet("reputer_4_loss_network_inference_oneout_7"),
						},
					},
					OneInForecasterValues: []*emissionstypes.WorkerAttributedValue{
						{
							Worker: forecasters[0],
							Value:  epochGet("reputer_4_loss_naive_network_inference_onein_0"),
						},
						{
							Worker: forecasters[1],
							Value:  epochGet("reputer_4_loss_naive_network_inference_onein_1"),
						},
						{
							Worker: forecasters[2],
							Value:  epochGet("reputer_4_loss_naive_network_inference_onein_2"),
						},
					},
				},
			},
		},
	}, nil
}

func GetTotalInfererRewardForTopicInEpoch(
	epochGet func(header string) alloraMath.Dec,
) (alloraMath.Dec, error) {
	infererRewards := []alloraMath.Dec{
		epochGet("inferer_reward_0"),
		epochGet("inferer_reward_1"),
		epochGet("inferer_reward_2"),
		epochGet("inferer_reward_3"),
		epochGet("inferer_reward_4"),
	}
	totalInferersReward := alloraMath.ZeroDec()
	var err error
	for _, reward := range infererRewards {
		totalInferersReward, err = totalInferersReward.Add(reward)
		if err != nil {
			return alloraMath.ZeroDec(), err
		}
	}
	return totalInferersReward, nil
}

func GetTotalForecasterRewardForTopicInEpoch(
	epochGet func(header string) alloraMath.Dec,
) (alloraMath.Dec, error) {
	forecasterRewards := []alloraMath.Dec{
		epochGet("forecaster_reward_0"),
		epochGet("forecaster_reward_1"),
		epochGet("forecaster_reward_2"),
	}
	totalForecastersReward := alloraMath.ZeroDec()
	var err error
	for _, reward := range forecasterRewards {
		totalForecastersReward, err = totalForecastersReward.Add(reward)
		if err != nil {
			return alloraMath.ZeroDec(), err
		}
	}
	return totalForecastersReward, nil
}

func GetTotalReputerRewardForTopicInEpoch(
	epochGet func(header string) alloraMath.Dec,
) (alloraMath.Dec, error) {
	reputerRewards := []alloraMath.Dec{
		epochGet("reputer_reward_0"),
		epochGet("reputer_reward_1"),
		epochGet("reputer_reward_2"),
		epochGet("reputer_reward_3"),
		epochGet("reputer_reward_4"),
	}
	// Reputer rewards
	totalReputersReward := alloraMath.ZeroDec()
	for _, reward := range reputerRewards {
		totalReputersReward, _ = totalReputersReward.Add(reward)
	}
	return totalReputersReward, nil
}

func GetTotalRewardForTopicInEpoch(
	epochGet func(header string) alloraMath.Dec,
) (alloraMath.Dec, error) {
	totalRewardForTopic := alloraMath.ZeroDec()
	totalInferersReward, err := GetTotalInfererRewardForTopicInEpoch(epochGet)
	if err != nil {
		return alloraMath.ZeroDec(), err
	}
	totalForecastersReward, err := GetTotalForecasterRewardForTopicInEpoch(epochGet)
	if err != nil {
		return alloraMath.ZeroDec(), err
	}
	totalReputersReward, err := GetTotalReputerRewardForTopicInEpoch(epochGet)
	if err != nil {
		return alloraMath.ZeroDec(), err
	}
	totalRewardForTopic, err = totalRewardForTopic.Add(totalInferersReward)
	if err != nil {
		return alloraMath.ZeroDec(), err
	}
	totalRewardForTopic, err = totalRewardForTopic.Add(totalForecastersReward)
	if err != nil {
		return alloraMath.ZeroDec(), err
	}
	totalRewardForTopic, err = totalRewardForTopic.Add(totalReputersReward)
	if err != nil {
		return alloraMath.ZeroDec(), err
	}

	return totalRewardForTopic, nil
}

func SetRegretsFromPreviousEpoch(
	ctx sdk.Context,
	k keeper.Keeper,
	topicId uint64,
	blockHeight int64,
	inferers []string,
	forecasters []string,
	epochPrevGet func(header string) alloraMath.Dec,
) error {
	// Set inferer network regrets
	infererNetworkRegrets := map[string]inferencesynthesis.Regret{}
	for i, inferer := range inferers {
		infererNetworkRegrets[inferer] = epochPrevGet(fmt.Sprintf("inference_regret_worker_%v", i))
	}

	for inferer, regret := range infererNetworkRegrets {
		k.SetInfererNetworkRegret(
			ctx,
			topicId,
			inferer,
			emissionstypes.TimestampedValue{BlockHeight: blockHeight, Value: regret},
		)
	}

	// Set forecaster network regrets
	forecasterNetworkRegrets := map[string]inferencesynthesis.Regret{}
	for i, forecaster := range forecasters {
		forecasterNetworkRegrets[forecaster] = epochPrevGet(fmt.Sprintf("inference_regret_worker_%v", i+5))
	}

	for forecaster, regret := range forecasterNetworkRegrets {
		k.SetForecasterNetworkRegret(
			ctx,
			topicId,
			forecaster,
			emissionstypes.TimestampedValue{BlockHeight: blockHeight, Value: regret},
		)
	}

	// Set naive inferer network regrets
	infererNaiveNetworkRegrets := map[string]inferencesynthesis.Regret{}
	for i, inferer := range inferers {
		infererNaiveNetworkRegrets[inferer] = epochPrevGet(fmt.Sprintf("naive_inference_regret_worker_%v", i))
	}

	for inferer, regret := range infererNaiveNetworkRegrets {
		k.SetNaiveInfererNetworkRegret(
			ctx,
			topicId,
			inferer,
			emissionstypes.TimestampedValue{BlockHeight: blockHeight, Value: regret},
		)
	}

	// Set one-out inferer-inferer network regrets
	for i := range inferers {
		for j := range inferers {
			headerName := fmt.Sprintf("inference_regret_worker_%v_oneout_%v", i, j)
			k.SetOneOutInfererInfererNetworkRegret(
				ctx,
				topicId,
				inferers[j],
				inferers[i],
				emissionstypes.TimestampedValue{
					BlockHeight: blockHeight,
					Value:       epochPrevGet(headerName),
				},
			)
		}
	}

	// Set one-out inferer-forecaster network regrets
	for i := range inferers {
		for j := range forecasters {
			headerName := fmt.Sprintf("inference_regret_worker_%v_oneout_%v", j+5, i)
			k.SetOneOutInfererForecasterNetworkRegret(
				ctx,
				topicId,
				inferers[i],
				forecasters[j],
				emissionstypes.TimestampedValue{
					BlockHeight: blockHeight,
					Value:       epochPrevGet(headerName),
				},
			)
		}
	}

	// Set one-out forecaster-inferer network regrets
	for i := range inferers {
		for j := range forecasters {
			headerName := fmt.Sprintf("inference_regret_worker_%v_oneout_%v", i, j+5)
			k.SetOneOutForecasterInfererNetworkRegret(
				ctx,
				topicId,
				forecasters[j],
				inferers[i],
				emissionstypes.TimestampedValue{
					BlockHeight: blockHeight,
					Value:       epochPrevGet(headerName),
				},
			)
		}
	}

	// Set one-out forecaster-forecaster network regrets
	for i := range forecasters {
		for j := range forecasters {
			headerName := fmt.Sprintf("inference_regret_worker_%v_oneout_%v", i+5, j+5)
			k.SetOneOutForecasterForecasterNetworkRegret(
				ctx,
				topicId,
				forecasters[j],
				forecasters[i],
				emissionstypes.TimestampedValue{
					BlockHeight: blockHeight,
					Value:       epochPrevGet(headerName),
				},
			)
		}
	}

	// Set one-in forecaster network regrets
	for i := range forecasters {
		headerName := fmt.Sprintf("inference_regret_worker_5_onein_%v", i)
		k.SetOneInForecasterNetworkRegret(
			ctx,
			topicId,
			forecasters[i],
			forecasters[i],
			emissionstypes.TimestampedValue{
				BlockHeight: blockHeight,
				Value:       epochPrevGet(headerName),
			},
		)
		for j := range inferers {
			headerName := fmt.Sprintf("inference_regret_worker_%v_onein_%v", j, i)
			k.SetOneInForecasterNetworkRegret(
				ctx,
				topicId,
				forecasters[i],
				inferers[j],
				emissionstypes.TimestampedValue{
					BlockHeight: blockHeight,
					Value:       epochPrevGet(headerName),
				},
			)
		}
	}

	return nil
}

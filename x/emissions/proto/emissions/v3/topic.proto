syntax = "proto3";
package emissions.v3;

import "emissions/v3/nonce.proto";
import "gogoproto/gogo.proto";

option go_package = "github.com/allora-network/allora-chain/x/emissions/types";

message Topic {
  reserved 4, 6, 7, 11;
  reserved "loss_logic", "inference_logic", "inference_method", "default_arg";

  uint64 id = 1;
  string creator = 2;
  string metadata = 3;
  string loss_method = 5;
  int64 epoch_last_ended = 8;
  int64 epoch_length = 9;
  int64 ground_truth_lag = 10;
  string p_norm = 12
      [(gogoproto.customtype) = "github.com/allora-network/allora-chain/math.Dec", (gogoproto.nullable) = false];
  string alpha_regret = 13
      [(gogoproto.customtype) = "github.com/allora-network/allora-chain/math.Dec", (gogoproto.nullable) = false];
  bool allow_negative = 14;
  string epsilon = 15
      [(gogoproto.customtype) = "github.com/allora-network/allora-chain/math.Dec", (gogoproto.nullable) = false];
  string initial_regret = 16
      [(gogoproto.customtype) = "github.com/allora-network/allora-chain/math.Dec", (gogoproto.nullable) = false];
  int64 worker_submission_window = 17;
  // alpha parameter to weight previous score EMA importance in
  // filtering the active set of inferers, forecasters, and reputers
  string merit_sortition_alpha = 18
      [(gogoproto.customtype) = "github.com/allora-network/allora-chain/math.Dec", (gogoproto.nullable) = false];
  string active_inferer_quantile = 19
      [(gogoproto.customtype) = "github.com/allora-network/allora-chain/math.Dec", (gogoproto.nullable) = false];
  string active_forecaster_quantile = 20
      [(gogoproto.customtype) = "github.com/allora-network/allora-chain/math.Dec", (gogoproto.nullable) = false];
  string active_reputer_quantile = 21
      [(gogoproto.customtype) = "github.com/allora-network/allora-chain/math.Dec", (gogoproto.nullable) = false];
}

message TopicList {
  repeated Topic topics = 1;
}

message TimestampedActorNonce {
  reserved 2;
  reserved "actor";

  option (gogoproto.equal) = true;

  int64 block_height = 1;  // height at which value calculated or received
  Nonce nonce = 3;
}

message TopicIds {
  option (gogoproto.equal) = true;
  repeated uint64 topic_ids = 1;
}

message TopicIdWeightPair {
  uint64 topic_id = 1;
  string weight = 2
      [(gogoproto.customtype) = "github.com/allora-network/allora-chain/math.Dec", (gogoproto.nullable) = false];
}

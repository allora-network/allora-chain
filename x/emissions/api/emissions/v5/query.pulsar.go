// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package emissionsv5

import (
	fmt "fmt"
	v3 "github.com/allora-network/allora-chain/x/emissions/api/emissions/v3"
	_ "github.com/cosmos/cosmos-proto"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	_ "github.com/cosmos/cosmos-sdk/types/query"
	_ "github.com/cosmos/cosmos-sdk/types/tx/amino"
	_ "github.com/cosmos/gogoproto/gogoproto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	io "io"
	reflect "reflect"
	sync "sync"
)

var (
	md_GetCountInfererInclusionsInTopicRequest          protoreflect.MessageDescriptor
	fd_GetCountInfererInclusionsInTopicRequest_topic_id protoreflect.FieldDescriptor
	fd_GetCountInfererInclusionsInTopicRequest_inferer  protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetCountInfererInclusionsInTopicRequest = File_emissions_v5_query_proto.Messages().ByName("GetCountInfererInclusionsInTopicRequest")
	fd_GetCountInfererInclusionsInTopicRequest_topic_id = md_GetCountInfererInclusionsInTopicRequest.Fields().ByName("topic_id")
	fd_GetCountInfererInclusionsInTopicRequest_inferer = md_GetCountInfererInclusionsInTopicRequest.Fields().ByName("inferer")
}

var _ protoreflect.Message = (*fastReflection_GetCountInfererInclusionsInTopicRequest)(nil)

type fastReflection_GetCountInfererInclusionsInTopicRequest GetCountInfererInclusionsInTopicRequest

func (x *GetCountInfererInclusionsInTopicRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetCountInfererInclusionsInTopicRequest)(x)
}

func (x *GetCountInfererInclusionsInTopicRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetCountInfererInclusionsInTopicRequest_messageType fastReflection_GetCountInfererInclusionsInTopicRequest_messageType
var _ protoreflect.MessageType = fastReflection_GetCountInfererInclusionsInTopicRequest_messageType{}

type fastReflection_GetCountInfererInclusionsInTopicRequest_messageType struct{}

func (x fastReflection_GetCountInfererInclusionsInTopicRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetCountInfererInclusionsInTopicRequest)(nil)
}
func (x fastReflection_GetCountInfererInclusionsInTopicRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_GetCountInfererInclusionsInTopicRequest)
}
func (x fastReflection_GetCountInfererInclusionsInTopicRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetCountInfererInclusionsInTopicRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetCountInfererInclusionsInTopicRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_GetCountInfererInclusionsInTopicRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetCountInfererInclusionsInTopicRequest) Type() protoreflect.MessageType {
	return _fastReflection_GetCountInfererInclusionsInTopicRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetCountInfererInclusionsInTopicRequest) New() protoreflect.Message {
	return new(fastReflection_GetCountInfererInclusionsInTopicRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetCountInfererInclusionsInTopicRequest) Interface() protoreflect.ProtoMessage {
	return (*GetCountInfererInclusionsInTopicRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetCountInfererInclusionsInTopicRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_GetCountInfererInclusionsInTopicRequest_topic_id, value) {
			return
		}
	}
	if x.Inferer != "" {
		value := protoreflect.ValueOfString(x.Inferer)
		if !f(fd_GetCountInfererInclusionsInTopicRequest_inferer, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetCountInfererInclusionsInTopicRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetCountInfererInclusionsInTopicRequest.topic_id":
		return x.TopicId != uint64(0)
	case "emissions.v5.GetCountInfererInclusionsInTopicRequest.inferer":
		return x.Inferer != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetCountInfererInclusionsInTopicRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetCountInfererInclusionsInTopicRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetCountInfererInclusionsInTopicRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetCountInfererInclusionsInTopicRequest.topic_id":
		x.TopicId = uint64(0)
	case "emissions.v5.GetCountInfererInclusionsInTopicRequest.inferer":
		x.Inferer = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetCountInfererInclusionsInTopicRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetCountInfererInclusionsInTopicRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetCountInfererInclusionsInTopicRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetCountInfererInclusionsInTopicRequest.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	case "emissions.v5.GetCountInfererInclusionsInTopicRequest.inferer":
		value := x.Inferer
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetCountInfererInclusionsInTopicRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetCountInfererInclusionsInTopicRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetCountInfererInclusionsInTopicRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetCountInfererInclusionsInTopicRequest.topic_id":
		x.TopicId = value.Uint()
	case "emissions.v5.GetCountInfererInclusionsInTopicRequest.inferer":
		x.Inferer = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetCountInfererInclusionsInTopicRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetCountInfererInclusionsInTopicRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetCountInfererInclusionsInTopicRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetCountInfererInclusionsInTopicRequest.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.GetCountInfererInclusionsInTopicRequest is not mutable"))
	case "emissions.v5.GetCountInfererInclusionsInTopicRequest.inferer":
		panic(fmt.Errorf("field inferer of message emissions.v5.GetCountInfererInclusionsInTopicRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetCountInfererInclusionsInTopicRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetCountInfererInclusionsInTopicRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetCountInfererInclusionsInTopicRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetCountInfererInclusionsInTopicRequest.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "emissions.v5.GetCountInfererInclusionsInTopicRequest.inferer":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetCountInfererInclusionsInTopicRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetCountInfererInclusionsInTopicRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetCountInfererInclusionsInTopicRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetCountInfererInclusionsInTopicRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetCountInfererInclusionsInTopicRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetCountInfererInclusionsInTopicRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetCountInfererInclusionsInTopicRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetCountInfererInclusionsInTopicRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetCountInfererInclusionsInTopicRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		l = len(x.Inferer)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetCountInfererInclusionsInTopicRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Inferer) > 0 {
			i -= len(x.Inferer)
			copy(dAtA[i:], x.Inferer)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Inferer)))
			i--
			dAtA[i] = 0x12
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetCountInfererInclusionsInTopicRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetCountInfererInclusionsInTopicRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetCountInfererInclusionsInTopicRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Inferer", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Inferer = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetCountInfererInclusionsInTopicResponse       protoreflect.MessageDescriptor
	fd_GetCountInfererInclusionsInTopicResponse_count protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetCountInfererInclusionsInTopicResponse = File_emissions_v5_query_proto.Messages().ByName("GetCountInfererInclusionsInTopicResponse")
	fd_GetCountInfererInclusionsInTopicResponse_count = md_GetCountInfererInclusionsInTopicResponse.Fields().ByName("count")
}

var _ protoreflect.Message = (*fastReflection_GetCountInfererInclusionsInTopicResponse)(nil)

type fastReflection_GetCountInfererInclusionsInTopicResponse GetCountInfererInclusionsInTopicResponse

func (x *GetCountInfererInclusionsInTopicResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetCountInfererInclusionsInTopicResponse)(x)
}

func (x *GetCountInfererInclusionsInTopicResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetCountInfererInclusionsInTopicResponse_messageType fastReflection_GetCountInfererInclusionsInTopicResponse_messageType
var _ protoreflect.MessageType = fastReflection_GetCountInfererInclusionsInTopicResponse_messageType{}

type fastReflection_GetCountInfererInclusionsInTopicResponse_messageType struct{}

func (x fastReflection_GetCountInfererInclusionsInTopicResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetCountInfererInclusionsInTopicResponse)(nil)
}
func (x fastReflection_GetCountInfererInclusionsInTopicResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_GetCountInfererInclusionsInTopicResponse)
}
func (x fastReflection_GetCountInfererInclusionsInTopicResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetCountInfererInclusionsInTopicResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetCountInfererInclusionsInTopicResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_GetCountInfererInclusionsInTopicResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetCountInfererInclusionsInTopicResponse) Type() protoreflect.MessageType {
	return _fastReflection_GetCountInfererInclusionsInTopicResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetCountInfererInclusionsInTopicResponse) New() protoreflect.Message {
	return new(fastReflection_GetCountInfererInclusionsInTopicResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetCountInfererInclusionsInTopicResponse) Interface() protoreflect.ProtoMessage {
	return (*GetCountInfererInclusionsInTopicResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetCountInfererInclusionsInTopicResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Count != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Count)
		if !f(fd_GetCountInfererInclusionsInTopicResponse_count, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetCountInfererInclusionsInTopicResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetCountInfererInclusionsInTopicResponse.count":
		return x.Count != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetCountInfererInclusionsInTopicResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetCountInfererInclusionsInTopicResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetCountInfererInclusionsInTopicResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetCountInfererInclusionsInTopicResponse.count":
		x.Count = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetCountInfererInclusionsInTopicResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetCountInfererInclusionsInTopicResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetCountInfererInclusionsInTopicResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetCountInfererInclusionsInTopicResponse.count":
		value := x.Count
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetCountInfererInclusionsInTopicResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetCountInfererInclusionsInTopicResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetCountInfererInclusionsInTopicResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetCountInfererInclusionsInTopicResponse.count":
		x.Count = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetCountInfererInclusionsInTopicResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetCountInfererInclusionsInTopicResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetCountInfererInclusionsInTopicResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetCountInfererInclusionsInTopicResponse.count":
		panic(fmt.Errorf("field count of message emissions.v5.GetCountInfererInclusionsInTopicResponse is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetCountInfererInclusionsInTopicResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetCountInfererInclusionsInTopicResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetCountInfererInclusionsInTopicResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetCountInfererInclusionsInTopicResponse.count":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetCountInfererInclusionsInTopicResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetCountInfererInclusionsInTopicResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetCountInfererInclusionsInTopicResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetCountInfererInclusionsInTopicResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetCountInfererInclusionsInTopicResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetCountInfererInclusionsInTopicResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetCountInfererInclusionsInTopicResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetCountInfererInclusionsInTopicResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetCountInfererInclusionsInTopicResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Count != 0 {
			n += 1 + runtime.Sov(uint64(x.Count))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetCountInfererInclusionsInTopicResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Count != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Count))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetCountInfererInclusionsInTopicResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetCountInfererInclusionsInTopicResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetCountInfererInclusionsInTopicResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Count", wireType)
				}
				x.Count = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Count |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetCountForecasterInclusionsInTopicRequest            protoreflect.MessageDescriptor
	fd_GetCountForecasterInclusionsInTopicRequest_topic_id   protoreflect.FieldDescriptor
	fd_GetCountForecasterInclusionsInTopicRequest_forecaster protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetCountForecasterInclusionsInTopicRequest = File_emissions_v5_query_proto.Messages().ByName("GetCountForecasterInclusionsInTopicRequest")
	fd_GetCountForecasterInclusionsInTopicRequest_topic_id = md_GetCountForecasterInclusionsInTopicRequest.Fields().ByName("topic_id")
	fd_GetCountForecasterInclusionsInTopicRequest_forecaster = md_GetCountForecasterInclusionsInTopicRequest.Fields().ByName("forecaster")
}

var _ protoreflect.Message = (*fastReflection_GetCountForecasterInclusionsInTopicRequest)(nil)

type fastReflection_GetCountForecasterInclusionsInTopicRequest GetCountForecasterInclusionsInTopicRequest

func (x *GetCountForecasterInclusionsInTopicRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetCountForecasterInclusionsInTopicRequest)(x)
}

func (x *GetCountForecasterInclusionsInTopicRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetCountForecasterInclusionsInTopicRequest_messageType fastReflection_GetCountForecasterInclusionsInTopicRequest_messageType
var _ protoreflect.MessageType = fastReflection_GetCountForecasterInclusionsInTopicRequest_messageType{}

type fastReflection_GetCountForecasterInclusionsInTopicRequest_messageType struct{}

func (x fastReflection_GetCountForecasterInclusionsInTopicRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetCountForecasterInclusionsInTopicRequest)(nil)
}
func (x fastReflection_GetCountForecasterInclusionsInTopicRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_GetCountForecasterInclusionsInTopicRequest)
}
func (x fastReflection_GetCountForecasterInclusionsInTopicRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetCountForecasterInclusionsInTopicRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetCountForecasterInclusionsInTopicRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_GetCountForecasterInclusionsInTopicRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetCountForecasterInclusionsInTopicRequest) Type() protoreflect.MessageType {
	return _fastReflection_GetCountForecasterInclusionsInTopicRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetCountForecasterInclusionsInTopicRequest) New() protoreflect.Message {
	return new(fastReflection_GetCountForecasterInclusionsInTopicRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetCountForecasterInclusionsInTopicRequest) Interface() protoreflect.ProtoMessage {
	return (*GetCountForecasterInclusionsInTopicRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetCountForecasterInclusionsInTopicRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_GetCountForecasterInclusionsInTopicRequest_topic_id, value) {
			return
		}
	}
	if x.Forecaster != "" {
		value := protoreflect.ValueOfString(x.Forecaster)
		if !f(fd_GetCountForecasterInclusionsInTopicRequest_forecaster, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetCountForecasterInclusionsInTopicRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetCountForecasterInclusionsInTopicRequest.topic_id":
		return x.TopicId != uint64(0)
	case "emissions.v5.GetCountForecasterInclusionsInTopicRequest.forecaster":
		return x.Forecaster != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetCountForecasterInclusionsInTopicRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetCountForecasterInclusionsInTopicRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetCountForecasterInclusionsInTopicRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetCountForecasterInclusionsInTopicRequest.topic_id":
		x.TopicId = uint64(0)
	case "emissions.v5.GetCountForecasterInclusionsInTopicRequest.forecaster":
		x.Forecaster = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetCountForecasterInclusionsInTopicRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetCountForecasterInclusionsInTopicRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetCountForecasterInclusionsInTopicRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetCountForecasterInclusionsInTopicRequest.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	case "emissions.v5.GetCountForecasterInclusionsInTopicRequest.forecaster":
		value := x.Forecaster
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetCountForecasterInclusionsInTopicRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetCountForecasterInclusionsInTopicRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetCountForecasterInclusionsInTopicRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetCountForecasterInclusionsInTopicRequest.topic_id":
		x.TopicId = value.Uint()
	case "emissions.v5.GetCountForecasterInclusionsInTopicRequest.forecaster":
		x.Forecaster = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetCountForecasterInclusionsInTopicRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetCountForecasterInclusionsInTopicRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetCountForecasterInclusionsInTopicRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetCountForecasterInclusionsInTopicRequest.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.GetCountForecasterInclusionsInTopicRequest is not mutable"))
	case "emissions.v5.GetCountForecasterInclusionsInTopicRequest.forecaster":
		panic(fmt.Errorf("field forecaster of message emissions.v5.GetCountForecasterInclusionsInTopicRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetCountForecasterInclusionsInTopicRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetCountForecasterInclusionsInTopicRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetCountForecasterInclusionsInTopicRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetCountForecasterInclusionsInTopicRequest.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "emissions.v5.GetCountForecasterInclusionsInTopicRequest.forecaster":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetCountForecasterInclusionsInTopicRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetCountForecasterInclusionsInTopicRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetCountForecasterInclusionsInTopicRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetCountForecasterInclusionsInTopicRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetCountForecasterInclusionsInTopicRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetCountForecasterInclusionsInTopicRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetCountForecasterInclusionsInTopicRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetCountForecasterInclusionsInTopicRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetCountForecasterInclusionsInTopicRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		l = len(x.Forecaster)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetCountForecasterInclusionsInTopicRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Forecaster) > 0 {
			i -= len(x.Forecaster)
			copy(dAtA[i:], x.Forecaster)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Forecaster)))
			i--
			dAtA[i] = 0x12
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetCountForecasterInclusionsInTopicRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetCountForecasterInclusionsInTopicRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetCountForecasterInclusionsInTopicRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Forecaster", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Forecaster = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetCountForecasterInclusionsInTopicResponse       protoreflect.MessageDescriptor
	fd_GetCountForecasterInclusionsInTopicResponse_count protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetCountForecasterInclusionsInTopicResponse = File_emissions_v5_query_proto.Messages().ByName("GetCountForecasterInclusionsInTopicResponse")
	fd_GetCountForecasterInclusionsInTopicResponse_count = md_GetCountForecasterInclusionsInTopicResponse.Fields().ByName("count")
}

var _ protoreflect.Message = (*fastReflection_GetCountForecasterInclusionsInTopicResponse)(nil)

type fastReflection_GetCountForecasterInclusionsInTopicResponse GetCountForecasterInclusionsInTopicResponse

func (x *GetCountForecasterInclusionsInTopicResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetCountForecasterInclusionsInTopicResponse)(x)
}

func (x *GetCountForecasterInclusionsInTopicResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetCountForecasterInclusionsInTopicResponse_messageType fastReflection_GetCountForecasterInclusionsInTopicResponse_messageType
var _ protoreflect.MessageType = fastReflection_GetCountForecasterInclusionsInTopicResponse_messageType{}

type fastReflection_GetCountForecasterInclusionsInTopicResponse_messageType struct{}

func (x fastReflection_GetCountForecasterInclusionsInTopicResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetCountForecasterInclusionsInTopicResponse)(nil)
}
func (x fastReflection_GetCountForecasterInclusionsInTopicResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_GetCountForecasterInclusionsInTopicResponse)
}
func (x fastReflection_GetCountForecasterInclusionsInTopicResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetCountForecasterInclusionsInTopicResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetCountForecasterInclusionsInTopicResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_GetCountForecasterInclusionsInTopicResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetCountForecasterInclusionsInTopicResponse) Type() protoreflect.MessageType {
	return _fastReflection_GetCountForecasterInclusionsInTopicResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetCountForecasterInclusionsInTopicResponse) New() protoreflect.Message {
	return new(fastReflection_GetCountForecasterInclusionsInTopicResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetCountForecasterInclusionsInTopicResponse) Interface() protoreflect.ProtoMessage {
	return (*GetCountForecasterInclusionsInTopicResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetCountForecasterInclusionsInTopicResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Count != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Count)
		if !f(fd_GetCountForecasterInclusionsInTopicResponse_count, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetCountForecasterInclusionsInTopicResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetCountForecasterInclusionsInTopicResponse.count":
		return x.Count != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetCountForecasterInclusionsInTopicResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetCountForecasterInclusionsInTopicResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetCountForecasterInclusionsInTopicResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetCountForecasterInclusionsInTopicResponse.count":
		x.Count = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetCountForecasterInclusionsInTopicResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetCountForecasterInclusionsInTopicResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetCountForecasterInclusionsInTopicResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetCountForecasterInclusionsInTopicResponse.count":
		value := x.Count
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetCountForecasterInclusionsInTopicResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetCountForecasterInclusionsInTopicResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetCountForecasterInclusionsInTopicResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetCountForecasterInclusionsInTopicResponse.count":
		x.Count = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetCountForecasterInclusionsInTopicResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetCountForecasterInclusionsInTopicResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetCountForecasterInclusionsInTopicResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetCountForecasterInclusionsInTopicResponse.count":
		panic(fmt.Errorf("field count of message emissions.v5.GetCountForecasterInclusionsInTopicResponse is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetCountForecasterInclusionsInTopicResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetCountForecasterInclusionsInTopicResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetCountForecasterInclusionsInTopicResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetCountForecasterInclusionsInTopicResponse.count":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetCountForecasterInclusionsInTopicResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetCountForecasterInclusionsInTopicResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetCountForecasterInclusionsInTopicResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetCountForecasterInclusionsInTopicResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetCountForecasterInclusionsInTopicResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetCountForecasterInclusionsInTopicResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetCountForecasterInclusionsInTopicResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetCountForecasterInclusionsInTopicResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetCountForecasterInclusionsInTopicResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Count != 0 {
			n += 1 + runtime.Sov(uint64(x.Count))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetCountForecasterInclusionsInTopicResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Count != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Count))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetCountForecasterInclusionsInTopicResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetCountForecasterInclusionsInTopicResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetCountForecasterInclusionsInTopicResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Count", wireType)
				}
				x.Count = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Count |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetNaiveInfererNetworkRegretRequest          protoreflect.MessageDescriptor
	fd_GetNaiveInfererNetworkRegretRequest_topic_id protoreflect.FieldDescriptor
	fd_GetNaiveInfererNetworkRegretRequest_inferer  protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetNaiveInfererNetworkRegretRequest = File_emissions_v5_query_proto.Messages().ByName("GetNaiveInfererNetworkRegretRequest")
	fd_GetNaiveInfererNetworkRegretRequest_topic_id = md_GetNaiveInfererNetworkRegretRequest.Fields().ByName("topic_id")
	fd_GetNaiveInfererNetworkRegretRequest_inferer = md_GetNaiveInfererNetworkRegretRequest.Fields().ByName("inferer")
}

var _ protoreflect.Message = (*fastReflection_GetNaiveInfererNetworkRegretRequest)(nil)

type fastReflection_GetNaiveInfererNetworkRegretRequest GetNaiveInfererNetworkRegretRequest

func (x *GetNaiveInfererNetworkRegretRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetNaiveInfererNetworkRegretRequest)(x)
}

func (x *GetNaiveInfererNetworkRegretRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetNaiveInfererNetworkRegretRequest_messageType fastReflection_GetNaiveInfererNetworkRegretRequest_messageType
var _ protoreflect.MessageType = fastReflection_GetNaiveInfererNetworkRegretRequest_messageType{}

type fastReflection_GetNaiveInfererNetworkRegretRequest_messageType struct{}

func (x fastReflection_GetNaiveInfererNetworkRegretRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetNaiveInfererNetworkRegretRequest)(nil)
}
func (x fastReflection_GetNaiveInfererNetworkRegretRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_GetNaiveInfererNetworkRegretRequest)
}
func (x fastReflection_GetNaiveInfererNetworkRegretRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetNaiveInfererNetworkRegretRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetNaiveInfererNetworkRegretRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_GetNaiveInfererNetworkRegretRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetNaiveInfererNetworkRegretRequest) Type() protoreflect.MessageType {
	return _fastReflection_GetNaiveInfererNetworkRegretRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetNaiveInfererNetworkRegretRequest) New() protoreflect.Message {
	return new(fastReflection_GetNaiveInfererNetworkRegretRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetNaiveInfererNetworkRegretRequest) Interface() protoreflect.ProtoMessage {
	return (*GetNaiveInfererNetworkRegretRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetNaiveInfererNetworkRegretRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_GetNaiveInfererNetworkRegretRequest_topic_id, value) {
			return
		}
	}
	if x.Inferer != "" {
		value := protoreflect.ValueOfString(x.Inferer)
		if !f(fd_GetNaiveInfererNetworkRegretRequest_inferer, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetNaiveInfererNetworkRegretRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetNaiveInfererNetworkRegretRequest.topic_id":
		return x.TopicId != uint64(0)
	case "emissions.v5.GetNaiveInfererNetworkRegretRequest.inferer":
		return x.Inferer != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetNaiveInfererNetworkRegretRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetNaiveInfererNetworkRegretRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetNaiveInfererNetworkRegretRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetNaiveInfererNetworkRegretRequest.topic_id":
		x.TopicId = uint64(0)
	case "emissions.v5.GetNaiveInfererNetworkRegretRequest.inferer":
		x.Inferer = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetNaiveInfererNetworkRegretRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetNaiveInfererNetworkRegretRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetNaiveInfererNetworkRegretRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetNaiveInfererNetworkRegretRequest.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	case "emissions.v5.GetNaiveInfererNetworkRegretRequest.inferer":
		value := x.Inferer
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetNaiveInfererNetworkRegretRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetNaiveInfererNetworkRegretRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetNaiveInfererNetworkRegretRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetNaiveInfererNetworkRegretRequest.topic_id":
		x.TopicId = value.Uint()
	case "emissions.v5.GetNaiveInfererNetworkRegretRequest.inferer":
		x.Inferer = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetNaiveInfererNetworkRegretRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetNaiveInfererNetworkRegretRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetNaiveInfererNetworkRegretRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetNaiveInfererNetworkRegretRequest.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.GetNaiveInfererNetworkRegretRequest is not mutable"))
	case "emissions.v5.GetNaiveInfererNetworkRegretRequest.inferer":
		panic(fmt.Errorf("field inferer of message emissions.v5.GetNaiveInfererNetworkRegretRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetNaiveInfererNetworkRegretRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetNaiveInfererNetworkRegretRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetNaiveInfererNetworkRegretRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetNaiveInfererNetworkRegretRequest.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "emissions.v5.GetNaiveInfererNetworkRegretRequest.inferer":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetNaiveInfererNetworkRegretRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetNaiveInfererNetworkRegretRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetNaiveInfererNetworkRegretRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetNaiveInfererNetworkRegretRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetNaiveInfererNetworkRegretRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetNaiveInfererNetworkRegretRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetNaiveInfererNetworkRegretRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetNaiveInfererNetworkRegretRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetNaiveInfererNetworkRegretRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		l = len(x.Inferer)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetNaiveInfererNetworkRegretRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Inferer) > 0 {
			i -= len(x.Inferer)
			copy(dAtA[i:], x.Inferer)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Inferer)))
			i--
			dAtA[i] = 0x12
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetNaiveInfererNetworkRegretRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetNaiveInfererNetworkRegretRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetNaiveInfererNetworkRegretRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Inferer", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Inferer = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetNaiveInfererNetworkRegretResponse        protoreflect.MessageDescriptor
	fd_GetNaiveInfererNetworkRegretResponse_regret protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetNaiveInfererNetworkRegretResponse = File_emissions_v5_query_proto.Messages().ByName("GetNaiveInfererNetworkRegretResponse")
	fd_GetNaiveInfererNetworkRegretResponse_regret = md_GetNaiveInfererNetworkRegretResponse.Fields().ByName("regret")
}

var _ protoreflect.Message = (*fastReflection_GetNaiveInfererNetworkRegretResponse)(nil)

type fastReflection_GetNaiveInfererNetworkRegretResponse GetNaiveInfererNetworkRegretResponse

func (x *GetNaiveInfererNetworkRegretResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetNaiveInfererNetworkRegretResponse)(x)
}

func (x *GetNaiveInfererNetworkRegretResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetNaiveInfererNetworkRegretResponse_messageType fastReflection_GetNaiveInfererNetworkRegretResponse_messageType
var _ protoreflect.MessageType = fastReflection_GetNaiveInfererNetworkRegretResponse_messageType{}

type fastReflection_GetNaiveInfererNetworkRegretResponse_messageType struct{}

func (x fastReflection_GetNaiveInfererNetworkRegretResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetNaiveInfererNetworkRegretResponse)(nil)
}
func (x fastReflection_GetNaiveInfererNetworkRegretResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_GetNaiveInfererNetworkRegretResponse)
}
func (x fastReflection_GetNaiveInfererNetworkRegretResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetNaiveInfererNetworkRegretResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetNaiveInfererNetworkRegretResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_GetNaiveInfererNetworkRegretResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetNaiveInfererNetworkRegretResponse) Type() protoreflect.MessageType {
	return _fastReflection_GetNaiveInfererNetworkRegretResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetNaiveInfererNetworkRegretResponse) New() protoreflect.Message {
	return new(fastReflection_GetNaiveInfererNetworkRegretResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetNaiveInfererNetworkRegretResponse) Interface() protoreflect.ProtoMessage {
	return (*GetNaiveInfererNetworkRegretResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetNaiveInfererNetworkRegretResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Regret != nil {
		value := protoreflect.ValueOfMessage(x.Regret.ProtoReflect())
		if !f(fd_GetNaiveInfererNetworkRegretResponse_regret, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetNaiveInfererNetworkRegretResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetNaiveInfererNetworkRegretResponse.regret":
		return x.Regret != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetNaiveInfererNetworkRegretResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetNaiveInfererNetworkRegretResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetNaiveInfererNetworkRegretResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetNaiveInfererNetworkRegretResponse.regret":
		x.Regret = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetNaiveInfererNetworkRegretResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetNaiveInfererNetworkRegretResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetNaiveInfererNetworkRegretResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetNaiveInfererNetworkRegretResponse.regret":
		value := x.Regret
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetNaiveInfererNetworkRegretResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetNaiveInfererNetworkRegretResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetNaiveInfererNetworkRegretResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetNaiveInfererNetworkRegretResponse.regret":
		x.Regret = value.Message().Interface().(*v3.TimestampedValue)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetNaiveInfererNetworkRegretResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetNaiveInfererNetworkRegretResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetNaiveInfererNetworkRegretResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetNaiveInfererNetworkRegretResponse.regret":
		if x.Regret == nil {
			x.Regret = new(v3.TimestampedValue)
		}
		return protoreflect.ValueOfMessage(x.Regret.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetNaiveInfererNetworkRegretResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetNaiveInfererNetworkRegretResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetNaiveInfererNetworkRegretResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetNaiveInfererNetworkRegretResponse.regret":
		m := new(v3.TimestampedValue)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetNaiveInfererNetworkRegretResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetNaiveInfererNetworkRegretResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetNaiveInfererNetworkRegretResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetNaiveInfererNetworkRegretResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetNaiveInfererNetworkRegretResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetNaiveInfererNetworkRegretResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetNaiveInfererNetworkRegretResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetNaiveInfererNetworkRegretResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetNaiveInfererNetworkRegretResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Regret != nil {
			l = options.Size(x.Regret)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetNaiveInfererNetworkRegretResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Regret != nil {
			encoded, err := options.Marshal(x.Regret)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetNaiveInfererNetworkRegretResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetNaiveInfererNetworkRegretResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetNaiveInfererNetworkRegretResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Regret", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Regret == nil {
					x.Regret = &v3.TimestampedValue{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Regret); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetOneOutInfererInfererNetworkRegretRequest                 protoreflect.MessageDescriptor
	fd_GetOneOutInfererInfererNetworkRegretRequest_topic_id        protoreflect.FieldDescriptor
	fd_GetOneOutInfererInfererNetworkRegretRequest_one_out_inferer protoreflect.FieldDescriptor
	fd_GetOneOutInfererInfererNetworkRegretRequest_inferer         protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetOneOutInfererInfererNetworkRegretRequest = File_emissions_v5_query_proto.Messages().ByName("GetOneOutInfererInfererNetworkRegretRequest")
	fd_GetOneOutInfererInfererNetworkRegretRequest_topic_id = md_GetOneOutInfererInfererNetworkRegretRequest.Fields().ByName("topic_id")
	fd_GetOneOutInfererInfererNetworkRegretRequest_one_out_inferer = md_GetOneOutInfererInfererNetworkRegretRequest.Fields().ByName("one_out_inferer")
	fd_GetOneOutInfererInfererNetworkRegretRequest_inferer = md_GetOneOutInfererInfererNetworkRegretRequest.Fields().ByName("inferer")
}

var _ protoreflect.Message = (*fastReflection_GetOneOutInfererInfererNetworkRegretRequest)(nil)

type fastReflection_GetOneOutInfererInfererNetworkRegretRequest GetOneOutInfererInfererNetworkRegretRequest

func (x *GetOneOutInfererInfererNetworkRegretRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetOneOutInfererInfererNetworkRegretRequest)(x)
}

func (x *GetOneOutInfererInfererNetworkRegretRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetOneOutInfererInfererNetworkRegretRequest_messageType fastReflection_GetOneOutInfererInfererNetworkRegretRequest_messageType
var _ protoreflect.MessageType = fastReflection_GetOneOutInfererInfererNetworkRegretRequest_messageType{}

type fastReflection_GetOneOutInfererInfererNetworkRegretRequest_messageType struct{}

func (x fastReflection_GetOneOutInfererInfererNetworkRegretRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetOneOutInfererInfererNetworkRegretRequest)(nil)
}
func (x fastReflection_GetOneOutInfererInfererNetworkRegretRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_GetOneOutInfererInfererNetworkRegretRequest)
}
func (x fastReflection_GetOneOutInfererInfererNetworkRegretRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetOneOutInfererInfererNetworkRegretRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetOneOutInfererInfererNetworkRegretRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_GetOneOutInfererInfererNetworkRegretRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetOneOutInfererInfererNetworkRegretRequest) Type() protoreflect.MessageType {
	return _fastReflection_GetOneOutInfererInfererNetworkRegretRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetOneOutInfererInfererNetworkRegretRequest) New() protoreflect.Message {
	return new(fastReflection_GetOneOutInfererInfererNetworkRegretRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetOneOutInfererInfererNetworkRegretRequest) Interface() protoreflect.ProtoMessage {
	return (*GetOneOutInfererInfererNetworkRegretRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetOneOutInfererInfererNetworkRegretRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_GetOneOutInfererInfererNetworkRegretRequest_topic_id, value) {
			return
		}
	}
	if x.OneOutInferer != "" {
		value := protoreflect.ValueOfString(x.OneOutInferer)
		if !f(fd_GetOneOutInfererInfererNetworkRegretRequest_one_out_inferer, value) {
			return
		}
	}
	if x.Inferer != "" {
		value := protoreflect.ValueOfString(x.Inferer)
		if !f(fd_GetOneOutInfererInfererNetworkRegretRequest_inferer, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetOneOutInfererInfererNetworkRegretRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetOneOutInfererInfererNetworkRegretRequest.topic_id":
		return x.TopicId != uint64(0)
	case "emissions.v5.GetOneOutInfererInfererNetworkRegretRequest.one_out_inferer":
		return x.OneOutInferer != ""
	case "emissions.v5.GetOneOutInfererInfererNetworkRegretRequest.inferer":
		return x.Inferer != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetOneOutInfererInfererNetworkRegretRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetOneOutInfererInfererNetworkRegretRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetOneOutInfererInfererNetworkRegretRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetOneOutInfererInfererNetworkRegretRequest.topic_id":
		x.TopicId = uint64(0)
	case "emissions.v5.GetOneOutInfererInfererNetworkRegretRequest.one_out_inferer":
		x.OneOutInferer = ""
	case "emissions.v5.GetOneOutInfererInfererNetworkRegretRequest.inferer":
		x.Inferer = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetOneOutInfererInfererNetworkRegretRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetOneOutInfererInfererNetworkRegretRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetOneOutInfererInfererNetworkRegretRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetOneOutInfererInfererNetworkRegretRequest.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	case "emissions.v5.GetOneOutInfererInfererNetworkRegretRequest.one_out_inferer":
		value := x.OneOutInferer
		return protoreflect.ValueOfString(value)
	case "emissions.v5.GetOneOutInfererInfererNetworkRegretRequest.inferer":
		value := x.Inferer
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetOneOutInfererInfererNetworkRegretRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetOneOutInfererInfererNetworkRegretRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetOneOutInfererInfererNetworkRegretRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetOneOutInfererInfererNetworkRegretRequest.topic_id":
		x.TopicId = value.Uint()
	case "emissions.v5.GetOneOutInfererInfererNetworkRegretRequest.one_out_inferer":
		x.OneOutInferer = value.Interface().(string)
	case "emissions.v5.GetOneOutInfererInfererNetworkRegretRequest.inferer":
		x.Inferer = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetOneOutInfererInfererNetworkRegretRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetOneOutInfererInfererNetworkRegretRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetOneOutInfererInfererNetworkRegretRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetOneOutInfererInfererNetworkRegretRequest.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.GetOneOutInfererInfererNetworkRegretRequest is not mutable"))
	case "emissions.v5.GetOneOutInfererInfererNetworkRegretRequest.one_out_inferer":
		panic(fmt.Errorf("field one_out_inferer of message emissions.v5.GetOneOutInfererInfererNetworkRegretRequest is not mutable"))
	case "emissions.v5.GetOneOutInfererInfererNetworkRegretRequest.inferer":
		panic(fmt.Errorf("field inferer of message emissions.v5.GetOneOutInfererInfererNetworkRegretRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetOneOutInfererInfererNetworkRegretRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetOneOutInfererInfererNetworkRegretRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetOneOutInfererInfererNetworkRegretRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetOneOutInfererInfererNetworkRegretRequest.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "emissions.v5.GetOneOutInfererInfererNetworkRegretRequest.one_out_inferer":
		return protoreflect.ValueOfString("")
	case "emissions.v5.GetOneOutInfererInfererNetworkRegretRequest.inferer":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetOneOutInfererInfererNetworkRegretRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetOneOutInfererInfererNetworkRegretRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetOneOutInfererInfererNetworkRegretRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetOneOutInfererInfererNetworkRegretRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetOneOutInfererInfererNetworkRegretRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetOneOutInfererInfererNetworkRegretRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetOneOutInfererInfererNetworkRegretRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetOneOutInfererInfererNetworkRegretRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetOneOutInfererInfererNetworkRegretRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		l = len(x.OneOutInferer)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Inferer)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetOneOutInfererInfererNetworkRegretRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Inferer) > 0 {
			i -= len(x.Inferer)
			copy(dAtA[i:], x.Inferer)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Inferer)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.OneOutInferer) > 0 {
			i -= len(x.OneOutInferer)
			copy(dAtA[i:], x.OneOutInferer)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.OneOutInferer)))
			i--
			dAtA[i] = 0x12
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetOneOutInfererInfererNetworkRegretRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetOneOutInfererInfererNetworkRegretRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetOneOutInfererInfererNetworkRegretRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field OneOutInferer", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.OneOutInferer = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Inferer", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Inferer = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetOneOutInfererInfererNetworkRegretResponse        protoreflect.MessageDescriptor
	fd_GetOneOutInfererInfererNetworkRegretResponse_regret protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetOneOutInfererInfererNetworkRegretResponse = File_emissions_v5_query_proto.Messages().ByName("GetOneOutInfererInfererNetworkRegretResponse")
	fd_GetOneOutInfererInfererNetworkRegretResponse_regret = md_GetOneOutInfererInfererNetworkRegretResponse.Fields().ByName("regret")
}

var _ protoreflect.Message = (*fastReflection_GetOneOutInfererInfererNetworkRegretResponse)(nil)

type fastReflection_GetOneOutInfererInfererNetworkRegretResponse GetOneOutInfererInfererNetworkRegretResponse

func (x *GetOneOutInfererInfererNetworkRegretResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetOneOutInfererInfererNetworkRegretResponse)(x)
}

func (x *GetOneOutInfererInfererNetworkRegretResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetOneOutInfererInfererNetworkRegretResponse_messageType fastReflection_GetOneOutInfererInfererNetworkRegretResponse_messageType
var _ protoreflect.MessageType = fastReflection_GetOneOutInfererInfererNetworkRegretResponse_messageType{}

type fastReflection_GetOneOutInfererInfererNetworkRegretResponse_messageType struct{}

func (x fastReflection_GetOneOutInfererInfererNetworkRegretResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetOneOutInfererInfererNetworkRegretResponse)(nil)
}
func (x fastReflection_GetOneOutInfererInfererNetworkRegretResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_GetOneOutInfererInfererNetworkRegretResponse)
}
func (x fastReflection_GetOneOutInfererInfererNetworkRegretResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetOneOutInfererInfererNetworkRegretResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetOneOutInfererInfererNetworkRegretResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_GetOneOutInfererInfererNetworkRegretResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetOneOutInfererInfererNetworkRegretResponse) Type() protoreflect.MessageType {
	return _fastReflection_GetOneOutInfererInfererNetworkRegretResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetOneOutInfererInfererNetworkRegretResponse) New() protoreflect.Message {
	return new(fastReflection_GetOneOutInfererInfererNetworkRegretResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetOneOutInfererInfererNetworkRegretResponse) Interface() protoreflect.ProtoMessage {
	return (*GetOneOutInfererInfererNetworkRegretResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetOneOutInfererInfererNetworkRegretResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Regret != nil {
		value := protoreflect.ValueOfMessage(x.Regret.ProtoReflect())
		if !f(fd_GetOneOutInfererInfererNetworkRegretResponse_regret, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetOneOutInfererInfererNetworkRegretResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetOneOutInfererInfererNetworkRegretResponse.regret":
		return x.Regret != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetOneOutInfererInfererNetworkRegretResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetOneOutInfererInfererNetworkRegretResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetOneOutInfererInfererNetworkRegretResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetOneOutInfererInfererNetworkRegretResponse.regret":
		x.Regret = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetOneOutInfererInfererNetworkRegretResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetOneOutInfererInfererNetworkRegretResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetOneOutInfererInfererNetworkRegretResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetOneOutInfererInfererNetworkRegretResponse.regret":
		value := x.Regret
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetOneOutInfererInfererNetworkRegretResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetOneOutInfererInfererNetworkRegretResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetOneOutInfererInfererNetworkRegretResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetOneOutInfererInfererNetworkRegretResponse.regret":
		x.Regret = value.Message().Interface().(*v3.TimestampedValue)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetOneOutInfererInfererNetworkRegretResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetOneOutInfererInfererNetworkRegretResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetOneOutInfererInfererNetworkRegretResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetOneOutInfererInfererNetworkRegretResponse.regret":
		if x.Regret == nil {
			x.Regret = new(v3.TimestampedValue)
		}
		return protoreflect.ValueOfMessage(x.Regret.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetOneOutInfererInfererNetworkRegretResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetOneOutInfererInfererNetworkRegretResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetOneOutInfererInfererNetworkRegretResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetOneOutInfererInfererNetworkRegretResponse.regret":
		m := new(v3.TimestampedValue)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetOneOutInfererInfererNetworkRegretResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetOneOutInfererInfererNetworkRegretResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetOneOutInfererInfererNetworkRegretResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetOneOutInfererInfererNetworkRegretResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetOneOutInfererInfererNetworkRegretResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetOneOutInfererInfererNetworkRegretResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetOneOutInfererInfererNetworkRegretResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetOneOutInfererInfererNetworkRegretResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetOneOutInfererInfererNetworkRegretResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Regret != nil {
			l = options.Size(x.Regret)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetOneOutInfererInfererNetworkRegretResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Regret != nil {
			encoded, err := options.Marshal(x.Regret)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetOneOutInfererInfererNetworkRegretResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetOneOutInfererInfererNetworkRegretResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetOneOutInfererInfererNetworkRegretResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Regret", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Regret == nil {
					x.Regret = &v3.TimestampedValue{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Regret); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetOneOutInfererForecasterNetworkRegretRequest                 protoreflect.MessageDescriptor
	fd_GetOneOutInfererForecasterNetworkRegretRequest_topic_id        protoreflect.FieldDescriptor
	fd_GetOneOutInfererForecasterNetworkRegretRequest_one_out_inferer protoreflect.FieldDescriptor
	fd_GetOneOutInfererForecasterNetworkRegretRequest_forecaster      protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetOneOutInfererForecasterNetworkRegretRequest = File_emissions_v5_query_proto.Messages().ByName("GetOneOutInfererForecasterNetworkRegretRequest")
	fd_GetOneOutInfererForecasterNetworkRegretRequest_topic_id = md_GetOneOutInfererForecasterNetworkRegretRequest.Fields().ByName("topic_id")
	fd_GetOneOutInfererForecasterNetworkRegretRequest_one_out_inferer = md_GetOneOutInfererForecasterNetworkRegretRequest.Fields().ByName("one_out_inferer")
	fd_GetOneOutInfererForecasterNetworkRegretRequest_forecaster = md_GetOneOutInfererForecasterNetworkRegretRequest.Fields().ByName("forecaster")
}

var _ protoreflect.Message = (*fastReflection_GetOneOutInfererForecasterNetworkRegretRequest)(nil)

type fastReflection_GetOneOutInfererForecasterNetworkRegretRequest GetOneOutInfererForecasterNetworkRegretRequest

func (x *GetOneOutInfererForecasterNetworkRegretRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetOneOutInfererForecasterNetworkRegretRequest)(x)
}

func (x *GetOneOutInfererForecasterNetworkRegretRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetOneOutInfererForecasterNetworkRegretRequest_messageType fastReflection_GetOneOutInfererForecasterNetworkRegretRequest_messageType
var _ protoreflect.MessageType = fastReflection_GetOneOutInfererForecasterNetworkRegretRequest_messageType{}

type fastReflection_GetOneOutInfererForecasterNetworkRegretRequest_messageType struct{}

func (x fastReflection_GetOneOutInfererForecasterNetworkRegretRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetOneOutInfererForecasterNetworkRegretRequest)(nil)
}
func (x fastReflection_GetOneOutInfererForecasterNetworkRegretRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_GetOneOutInfererForecasterNetworkRegretRequest)
}
func (x fastReflection_GetOneOutInfererForecasterNetworkRegretRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetOneOutInfererForecasterNetworkRegretRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetOneOutInfererForecasterNetworkRegretRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_GetOneOutInfererForecasterNetworkRegretRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetOneOutInfererForecasterNetworkRegretRequest) Type() protoreflect.MessageType {
	return _fastReflection_GetOneOutInfererForecasterNetworkRegretRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetOneOutInfererForecasterNetworkRegretRequest) New() protoreflect.Message {
	return new(fastReflection_GetOneOutInfererForecasterNetworkRegretRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetOneOutInfererForecasterNetworkRegretRequest) Interface() protoreflect.ProtoMessage {
	return (*GetOneOutInfererForecasterNetworkRegretRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetOneOutInfererForecasterNetworkRegretRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_GetOneOutInfererForecasterNetworkRegretRequest_topic_id, value) {
			return
		}
	}
	if x.OneOutInferer != "" {
		value := protoreflect.ValueOfString(x.OneOutInferer)
		if !f(fd_GetOneOutInfererForecasterNetworkRegretRequest_one_out_inferer, value) {
			return
		}
	}
	if x.Forecaster != "" {
		value := protoreflect.ValueOfString(x.Forecaster)
		if !f(fd_GetOneOutInfererForecasterNetworkRegretRequest_forecaster, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetOneOutInfererForecasterNetworkRegretRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetOneOutInfererForecasterNetworkRegretRequest.topic_id":
		return x.TopicId != uint64(0)
	case "emissions.v5.GetOneOutInfererForecasterNetworkRegretRequest.one_out_inferer":
		return x.OneOutInferer != ""
	case "emissions.v5.GetOneOutInfererForecasterNetworkRegretRequest.forecaster":
		return x.Forecaster != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetOneOutInfererForecasterNetworkRegretRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetOneOutInfererForecasterNetworkRegretRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetOneOutInfererForecasterNetworkRegretRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetOneOutInfererForecasterNetworkRegretRequest.topic_id":
		x.TopicId = uint64(0)
	case "emissions.v5.GetOneOutInfererForecasterNetworkRegretRequest.one_out_inferer":
		x.OneOutInferer = ""
	case "emissions.v5.GetOneOutInfererForecasterNetworkRegretRequest.forecaster":
		x.Forecaster = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetOneOutInfererForecasterNetworkRegretRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetOneOutInfererForecasterNetworkRegretRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetOneOutInfererForecasterNetworkRegretRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetOneOutInfererForecasterNetworkRegretRequest.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	case "emissions.v5.GetOneOutInfererForecasterNetworkRegretRequest.one_out_inferer":
		value := x.OneOutInferer
		return protoreflect.ValueOfString(value)
	case "emissions.v5.GetOneOutInfererForecasterNetworkRegretRequest.forecaster":
		value := x.Forecaster
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetOneOutInfererForecasterNetworkRegretRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetOneOutInfererForecasterNetworkRegretRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetOneOutInfererForecasterNetworkRegretRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetOneOutInfererForecasterNetworkRegretRequest.topic_id":
		x.TopicId = value.Uint()
	case "emissions.v5.GetOneOutInfererForecasterNetworkRegretRequest.one_out_inferer":
		x.OneOutInferer = value.Interface().(string)
	case "emissions.v5.GetOneOutInfererForecasterNetworkRegretRequest.forecaster":
		x.Forecaster = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetOneOutInfererForecasterNetworkRegretRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetOneOutInfererForecasterNetworkRegretRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetOneOutInfererForecasterNetworkRegretRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetOneOutInfererForecasterNetworkRegretRequest.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.GetOneOutInfererForecasterNetworkRegretRequest is not mutable"))
	case "emissions.v5.GetOneOutInfererForecasterNetworkRegretRequest.one_out_inferer":
		panic(fmt.Errorf("field one_out_inferer of message emissions.v5.GetOneOutInfererForecasterNetworkRegretRequest is not mutable"))
	case "emissions.v5.GetOneOutInfererForecasterNetworkRegretRequest.forecaster":
		panic(fmt.Errorf("field forecaster of message emissions.v5.GetOneOutInfererForecasterNetworkRegretRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetOneOutInfererForecasterNetworkRegretRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetOneOutInfererForecasterNetworkRegretRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetOneOutInfererForecasterNetworkRegretRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetOneOutInfererForecasterNetworkRegretRequest.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "emissions.v5.GetOneOutInfererForecasterNetworkRegretRequest.one_out_inferer":
		return protoreflect.ValueOfString("")
	case "emissions.v5.GetOneOutInfererForecasterNetworkRegretRequest.forecaster":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetOneOutInfererForecasterNetworkRegretRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetOneOutInfererForecasterNetworkRegretRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetOneOutInfererForecasterNetworkRegretRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetOneOutInfererForecasterNetworkRegretRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetOneOutInfererForecasterNetworkRegretRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetOneOutInfererForecasterNetworkRegretRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetOneOutInfererForecasterNetworkRegretRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetOneOutInfererForecasterNetworkRegretRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetOneOutInfererForecasterNetworkRegretRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		l = len(x.OneOutInferer)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Forecaster)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetOneOutInfererForecasterNetworkRegretRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Forecaster) > 0 {
			i -= len(x.Forecaster)
			copy(dAtA[i:], x.Forecaster)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Forecaster)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.OneOutInferer) > 0 {
			i -= len(x.OneOutInferer)
			copy(dAtA[i:], x.OneOutInferer)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.OneOutInferer)))
			i--
			dAtA[i] = 0x12
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetOneOutInfererForecasterNetworkRegretRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetOneOutInfererForecasterNetworkRegretRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetOneOutInfererForecasterNetworkRegretRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field OneOutInferer", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.OneOutInferer = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Forecaster", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Forecaster = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetOneOutInfererForecasterNetworkRegretResponse        protoreflect.MessageDescriptor
	fd_GetOneOutInfererForecasterNetworkRegretResponse_regret protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetOneOutInfererForecasterNetworkRegretResponse = File_emissions_v5_query_proto.Messages().ByName("GetOneOutInfererForecasterNetworkRegretResponse")
	fd_GetOneOutInfererForecasterNetworkRegretResponse_regret = md_GetOneOutInfererForecasterNetworkRegretResponse.Fields().ByName("regret")
}

var _ protoreflect.Message = (*fastReflection_GetOneOutInfererForecasterNetworkRegretResponse)(nil)

type fastReflection_GetOneOutInfererForecasterNetworkRegretResponse GetOneOutInfererForecasterNetworkRegretResponse

func (x *GetOneOutInfererForecasterNetworkRegretResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetOneOutInfererForecasterNetworkRegretResponse)(x)
}

func (x *GetOneOutInfererForecasterNetworkRegretResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetOneOutInfererForecasterNetworkRegretResponse_messageType fastReflection_GetOneOutInfererForecasterNetworkRegretResponse_messageType
var _ protoreflect.MessageType = fastReflection_GetOneOutInfererForecasterNetworkRegretResponse_messageType{}

type fastReflection_GetOneOutInfererForecasterNetworkRegretResponse_messageType struct{}

func (x fastReflection_GetOneOutInfererForecasterNetworkRegretResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetOneOutInfererForecasterNetworkRegretResponse)(nil)
}
func (x fastReflection_GetOneOutInfererForecasterNetworkRegretResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_GetOneOutInfererForecasterNetworkRegretResponse)
}
func (x fastReflection_GetOneOutInfererForecasterNetworkRegretResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetOneOutInfererForecasterNetworkRegretResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetOneOutInfererForecasterNetworkRegretResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_GetOneOutInfererForecasterNetworkRegretResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetOneOutInfererForecasterNetworkRegretResponse) Type() protoreflect.MessageType {
	return _fastReflection_GetOneOutInfererForecasterNetworkRegretResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetOneOutInfererForecasterNetworkRegretResponse) New() protoreflect.Message {
	return new(fastReflection_GetOneOutInfererForecasterNetworkRegretResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetOneOutInfererForecasterNetworkRegretResponse) Interface() protoreflect.ProtoMessage {
	return (*GetOneOutInfererForecasterNetworkRegretResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetOneOutInfererForecasterNetworkRegretResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Regret != nil {
		value := protoreflect.ValueOfMessage(x.Regret.ProtoReflect())
		if !f(fd_GetOneOutInfererForecasterNetworkRegretResponse_regret, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetOneOutInfererForecasterNetworkRegretResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetOneOutInfererForecasterNetworkRegretResponse.regret":
		return x.Regret != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetOneOutInfererForecasterNetworkRegretResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetOneOutInfererForecasterNetworkRegretResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetOneOutInfererForecasterNetworkRegretResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetOneOutInfererForecasterNetworkRegretResponse.regret":
		x.Regret = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetOneOutInfererForecasterNetworkRegretResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetOneOutInfererForecasterNetworkRegretResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetOneOutInfererForecasterNetworkRegretResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetOneOutInfererForecasterNetworkRegretResponse.regret":
		value := x.Regret
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetOneOutInfererForecasterNetworkRegretResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetOneOutInfererForecasterNetworkRegretResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetOneOutInfererForecasterNetworkRegretResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetOneOutInfererForecasterNetworkRegretResponse.regret":
		x.Regret = value.Message().Interface().(*v3.TimestampedValue)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetOneOutInfererForecasterNetworkRegretResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetOneOutInfererForecasterNetworkRegretResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetOneOutInfererForecasterNetworkRegretResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetOneOutInfererForecasterNetworkRegretResponse.regret":
		if x.Regret == nil {
			x.Regret = new(v3.TimestampedValue)
		}
		return protoreflect.ValueOfMessage(x.Regret.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetOneOutInfererForecasterNetworkRegretResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetOneOutInfererForecasterNetworkRegretResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetOneOutInfererForecasterNetworkRegretResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetOneOutInfererForecasterNetworkRegretResponse.regret":
		m := new(v3.TimestampedValue)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetOneOutInfererForecasterNetworkRegretResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetOneOutInfererForecasterNetworkRegretResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetOneOutInfererForecasterNetworkRegretResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetOneOutInfererForecasterNetworkRegretResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetOneOutInfererForecasterNetworkRegretResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetOneOutInfererForecasterNetworkRegretResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetOneOutInfererForecasterNetworkRegretResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetOneOutInfererForecasterNetworkRegretResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetOneOutInfererForecasterNetworkRegretResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Regret != nil {
			l = options.Size(x.Regret)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetOneOutInfererForecasterNetworkRegretResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Regret != nil {
			encoded, err := options.Marshal(x.Regret)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetOneOutInfererForecasterNetworkRegretResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetOneOutInfererForecasterNetworkRegretResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetOneOutInfererForecasterNetworkRegretResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Regret", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Regret == nil {
					x.Regret = &v3.TimestampedValue{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Regret); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetOneOutForecasterInfererNetworkRegretRequest                    protoreflect.MessageDescriptor
	fd_GetOneOutForecasterInfererNetworkRegretRequest_topic_id           protoreflect.FieldDescriptor
	fd_GetOneOutForecasterInfererNetworkRegretRequest_one_out_forecaster protoreflect.FieldDescriptor
	fd_GetOneOutForecasterInfererNetworkRegretRequest_inferer            protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetOneOutForecasterInfererNetworkRegretRequest = File_emissions_v5_query_proto.Messages().ByName("GetOneOutForecasterInfererNetworkRegretRequest")
	fd_GetOneOutForecasterInfererNetworkRegretRequest_topic_id = md_GetOneOutForecasterInfererNetworkRegretRequest.Fields().ByName("topic_id")
	fd_GetOneOutForecasterInfererNetworkRegretRequest_one_out_forecaster = md_GetOneOutForecasterInfererNetworkRegretRequest.Fields().ByName("one_out_forecaster")
	fd_GetOneOutForecasterInfererNetworkRegretRequest_inferer = md_GetOneOutForecasterInfererNetworkRegretRequest.Fields().ByName("inferer")
}

var _ protoreflect.Message = (*fastReflection_GetOneOutForecasterInfererNetworkRegretRequest)(nil)

type fastReflection_GetOneOutForecasterInfererNetworkRegretRequest GetOneOutForecasterInfererNetworkRegretRequest

func (x *GetOneOutForecasterInfererNetworkRegretRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetOneOutForecasterInfererNetworkRegretRequest)(x)
}

func (x *GetOneOutForecasterInfererNetworkRegretRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetOneOutForecasterInfererNetworkRegretRequest_messageType fastReflection_GetOneOutForecasterInfererNetworkRegretRequest_messageType
var _ protoreflect.MessageType = fastReflection_GetOneOutForecasterInfererNetworkRegretRequest_messageType{}

type fastReflection_GetOneOutForecasterInfererNetworkRegretRequest_messageType struct{}

func (x fastReflection_GetOneOutForecasterInfererNetworkRegretRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetOneOutForecasterInfererNetworkRegretRequest)(nil)
}
func (x fastReflection_GetOneOutForecasterInfererNetworkRegretRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_GetOneOutForecasterInfererNetworkRegretRequest)
}
func (x fastReflection_GetOneOutForecasterInfererNetworkRegretRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetOneOutForecasterInfererNetworkRegretRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetOneOutForecasterInfererNetworkRegretRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_GetOneOutForecasterInfererNetworkRegretRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetOneOutForecasterInfererNetworkRegretRequest) Type() protoreflect.MessageType {
	return _fastReflection_GetOneOutForecasterInfererNetworkRegretRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetOneOutForecasterInfererNetworkRegretRequest) New() protoreflect.Message {
	return new(fastReflection_GetOneOutForecasterInfererNetworkRegretRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetOneOutForecasterInfererNetworkRegretRequest) Interface() protoreflect.ProtoMessage {
	return (*GetOneOutForecasterInfererNetworkRegretRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetOneOutForecasterInfererNetworkRegretRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_GetOneOutForecasterInfererNetworkRegretRequest_topic_id, value) {
			return
		}
	}
	if x.OneOutForecaster != "" {
		value := protoreflect.ValueOfString(x.OneOutForecaster)
		if !f(fd_GetOneOutForecasterInfererNetworkRegretRequest_one_out_forecaster, value) {
			return
		}
	}
	if x.Inferer != "" {
		value := protoreflect.ValueOfString(x.Inferer)
		if !f(fd_GetOneOutForecasterInfererNetworkRegretRequest_inferer, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetOneOutForecasterInfererNetworkRegretRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetOneOutForecasterInfererNetworkRegretRequest.topic_id":
		return x.TopicId != uint64(0)
	case "emissions.v5.GetOneOutForecasterInfererNetworkRegretRequest.one_out_forecaster":
		return x.OneOutForecaster != ""
	case "emissions.v5.GetOneOutForecasterInfererNetworkRegretRequest.inferer":
		return x.Inferer != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetOneOutForecasterInfererNetworkRegretRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetOneOutForecasterInfererNetworkRegretRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetOneOutForecasterInfererNetworkRegretRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetOneOutForecasterInfererNetworkRegretRequest.topic_id":
		x.TopicId = uint64(0)
	case "emissions.v5.GetOneOutForecasterInfererNetworkRegretRequest.one_out_forecaster":
		x.OneOutForecaster = ""
	case "emissions.v5.GetOneOutForecasterInfererNetworkRegretRequest.inferer":
		x.Inferer = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetOneOutForecasterInfererNetworkRegretRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetOneOutForecasterInfererNetworkRegretRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetOneOutForecasterInfererNetworkRegretRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetOneOutForecasterInfererNetworkRegretRequest.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	case "emissions.v5.GetOneOutForecasterInfererNetworkRegretRequest.one_out_forecaster":
		value := x.OneOutForecaster
		return protoreflect.ValueOfString(value)
	case "emissions.v5.GetOneOutForecasterInfererNetworkRegretRequest.inferer":
		value := x.Inferer
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetOneOutForecasterInfererNetworkRegretRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetOneOutForecasterInfererNetworkRegretRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetOneOutForecasterInfererNetworkRegretRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetOneOutForecasterInfererNetworkRegretRequest.topic_id":
		x.TopicId = value.Uint()
	case "emissions.v5.GetOneOutForecasterInfererNetworkRegretRequest.one_out_forecaster":
		x.OneOutForecaster = value.Interface().(string)
	case "emissions.v5.GetOneOutForecasterInfererNetworkRegretRequest.inferer":
		x.Inferer = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetOneOutForecasterInfererNetworkRegretRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetOneOutForecasterInfererNetworkRegretRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetOneOutForecasterInfererNetworkRegretRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetOneOutForecasterInfererNetworkRegretRequest.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.GetOneOutForecasterInfererNetworkRegretRequest is not mutable"))
	case "emissions.v5.GetOneOutForecasterInfererNetworkRegretRequest.one_out_forecaster":
		panic(fmt.Errorf("field one_out_forecaster of message emissions.v5.GetOneOutForecasterInfererNetworkRegretRequest is not mutable"))
	case "emissions.v5.GetOneOutForecasterInfererNetworkRegretRequest.inferer":
		panic(fmt.Errorf("field inferer of message emissions.v5.GetOneOutForecasterInfererNetworkRegretRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetOneOutForecasterInfererNetworkRegretRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetOneOutForecasterInfererNetworkRegretRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetOneOutForecasterInfererNetworkRegretRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetOneOutForecasterInfererNetworkRegretRequest.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "emissions.v5.GetOneOutForecasterInfererNetworkRegretRequest.one_out_forecaster":
		return protoreflect.ValueOfString("")
	case "emissions.v5.GetOneOutForecasterInfererNetworkRegretRequest.inferer":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetOneOutForecasterInfererNetworkRegretRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetOneOutForecasterInfererNetworkRegretRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetOneOutForecasterInfererNetworkRegretRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetOneOutForecasterInfererNetworkRegretRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetOneOutForecasterInfererNetworkRegretRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetOneOutForecasterInfererNetworkRegretRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetOneOutForecasterInfererNetworkRegretRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetOneOutForecasterInfererNetworkRegretRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetOneOutForecasterInfererNetworkRegretRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		l = len(x.OneOutForecaster)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Inferer)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetOneOutForecasterInfererNetworkRegretRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Inferer) > 0 {
			i -= len(x.Inferer)
			copy(dAtA[i:], x.Inferer)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Inferer)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.OneOutForecaster) > 0 {
			i -= len(x.OneOutForecaster)
			copy(dAtA[i:], x.OneOutForecaster)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.OneOutForecaster)))
			i--
			dAtA[i] = 0x12
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetOneOutForecasterInfererNetworkRegretRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetOneOutForecasterInfererNetworkRegretRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetOneOutForecasterInfererNetworkRegretRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field OneOutForecaster", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.OneOutForecaster = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Inferer", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Inferer = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetOneOutForecasterInfererNetworkRegretResponse        protoreflect.MessageDescriptor
	fd_GetOneOutForecasterInfererNetworkRegretResponse_regret protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetOneOutForecasterInfererNetworkRegretResponse = File_emissions_v5_query_proto.Messages().ByName("GetOneOutForecasterInfererNetworkRegretResponse")
	fd_GetOneOutForecasterInfererNetworkRegretResponse_regret = md_GetOneOutForecasterInfererNetworkRegretResponse.Fields().ByName("regret")
}

var _ protoreflect.Message = (*fastReflection_GetOneOutForecasterInfererNetworkRegretResponse)(nil)

type fastReflection_GetOneOutForecasterInfererNetworkRegretResponse GetOneOutForecasterInfererNetworkRegretResponse

func (x *GetOneOutForecasterInfererNetworkRegretResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetOneOutForecasterInfererNetworkRegretResponse)(x)
}

func (x *GetOneOutForecasterInfererNetworkRegretResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetOneOutForecasterInfererNetworkRegretResponse_messageType fastReflection_GetOneOutForecasterInfererNetworkRegretResponse_messageType
var _ protoreflect.MessageType = fastReflection_GetOneOutForecasterInfererNetworkRegretResponse_messageType{}

type fastReflection_GetOneOutForecasterInfererNetworkRegretResponse_messageType struct{}

func (x fastReflection_GetOneOutForecasterInfererNetworkRegretResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetOneOutForecasterInfererNetworkRegretResponse)(nil)
}
func (x fastReflection_GetOneOutForecasterInfererNetworkRegretResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_GetOneOutForecasterInfererNetworkRegretResponse)
}
func (x fastReflection_GetOneOutForecasterInfererNetworkRegretResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetOneOutForecasterInfererNetworkRegretResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetOneOutForecasterInfererNetworkRegretResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_GetOneOutForecasterInfererNetworkRegretResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetOneOutForecasterInfererNetworkRegretResponse) Type() protoreflect.MessageType {
	return _fastReflection_GetOneOutForecasterInfererNetworkRegretResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetOneOutForecasterInfererNetworkRegretResponse) New() protoreflect.Message {
	return new(fastReflection_GetOneOutForecasterInfererNetworkRegretResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetOneOutForecasterInfererNetworkRegretResponse) Interface() protoreflect.ProtoMessage {
	return (*GetOneOutForecasterInfererNetworkRegretResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetOneOutForecasterInfererNetworkRegretResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Regret != nil {
		value := protoreflect.ValueOfMessage(x.Regret.ProtoReflect())
		if !f(fd_GetOneOutForecasterInfererNetworkRegretResponse_regret, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetOneOutForecasterInfererNetworkRegretResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetOneOutForecasterInfererNetworkRegretResponse.regret":
		return x.Regret != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetOneOutForecasterInfererNetworkRegretResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetOneOutForecasterInfererNetworkRegretResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetOneOutForecasterInfererNetworkRegretResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetOneOutForecasterInfererNetworkRegretResponse.regret":
		x.Regret = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetOneOutForecasterInfererNetworkRegretResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetOneOutForecasterInfererNetworkRegretResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetOneOutForecasterInfererNetworkRegretResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetOneOutForecasterInfererNetworkRegretResponse.regret":
		value := x.Regret
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetOneOutForecasterInfererNetworkRegretResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetOneOutForecasterInfererNetworkRegretResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetOneOutForecasterInfererNetworkRegretResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetOneOutForecasterInfererNetworkRegretResponse.regret":
		x.Regret = value.Message().Interface().(*v3.TimestampedValue)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetOneOutForecasterInfererNetworkRegretResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetOneOutForecasterInfererNetworkRegretResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetOneOutForecasterInfererNetworkRegretResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetOneOutForecasterInfererNetworkRegretResponse.regret":
		if x.Regret == nil {
			x.Regret = new(v3.TimestampedValue)
		}
		return protoreflect.ValueOfMessage(x.Regret.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetOneOutForecasterInfererNetworkRegretResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetOneOutForecasterInfererNetworkRegretResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetOneOutForecasterInfererNetworkRegretResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetOneOutForecasterInfererNetworkRegretResponse.regret":
		m := new(v3.TimestampedValue)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetOneOutForecasterInfererNetworkRegretResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetOneOutForecasterInfererNetworkRegretResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetOneOutForecasterInfererNetworkRegretResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetOneOutForecasterInfererNetworkRegretResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetOneOutForecasterInfererNetworkRegretResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetOneOutForecasterInfererNetworkRegretResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetOneOutForecasterInfererNetworkRegretResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetOneOutForecasterInfererNetworkRegretResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetOneOutForecasterInfererNetworkRegretResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Regret != nil {
			l = options.Size(x.Regret)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetOneOutForecasterInfererNetworkRegretResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Regret != nil {
			encoded, err := options.Marshal(x.Regret)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetOneOutForecasterInfererNetworkRegretResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetOneOutForecasterInfererNetworkRegretResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetOneOutForecasterInfererNetworkRegretResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Regret", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Regret == nil {
					x.Regret = &v3.TimestampedValue{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Regret); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetOneOutForecasterForecasterNetworkRegretRequest                    protoreflect.MessageDescriptor
	fd_GetOneOutForecasterForecasterNetworkRegretRequest_topic_id           protoreflect.FieldDescriptor
	fd_GetOneOutForecasterForecasterNetworkRegretRequest_one_out_forecaster protoreflect.FieldDescriptor
	fd_GetOneOutForecasterForecasterNetworkRegretRequest_forecaster         protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetOneOutForecasterForecasterNetworkRegretRequest = File_emissions_v5_query_proto.Messages().ByName("GetOneOutForecasterForecasterNetworkRegretRequest")
	fd_GetOneOutForecasterForecasterNetworkRegretRequest_topic_id = md_GetOneOutForecasterForecasterNetworkRegretRequest.Fields().ByName("topic_id")
	fd_GetOneOutForecasterForecasterNetworkRegretRequest_one_out_forecaster = md_GetOneOutForecasterForecasterNetworkRegretRequest.Fields().ByName("one_out_forecaster")
	fd_GetOneOutForecasterForecasterNetworkRegretRequest_forecaster = md_GetOneOutForecasterForecasterNetworkRegretRequest.Fields().ByName("forecaster")
}

var _ protoreflect.Message = (*fastReflection_GetOneOutForecasterForecasterNetworkRegretRequest)(nil)

type fastReflection_GetOneOutForecasterForecasterNetworkRegretRequest GetOneOutForecasterForecasterNetworkRegretRequest

func (x *GetOneOutForecasterForecasterNetworkRegretRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetOneOutForecasterForecasterNetworkRegretRequest)(x)
}

func (x *GetOneOutForecasterForecasterNetworkRegretRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetOneOutForecasterForecasterNetworkRegretRequest_messageType fastReflection_GetOneOutForecasterForecasterNetworkRegretRequest_messageType
var _ protoreflect.MessageType = fastReflection_GetOneOutForecasterForecasterNetworkRegretRequest_messageType{}

type fastReflection_GetOneOutForecasterForecasterNetworkRegretRequest_messageType struct{}

func (x fastReflection_GetOneOutForecasterForecasterNetworkRegretRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetOneOutForecasterForecasterNetworkRegretRequest)(nil)
}
func (x fastReflection_GetOneOutForecasterForecasterNetworkRegretRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_GetOneOutForecasterForecasterNetworkRegretRequest)
}
func (x fastReflection_GetOneOutForecasterForecasterNetworkRegretRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetOneOutForecasterForecasterNetworkRegretRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetOneOutForecasterForecasterNetworkRegretRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_GetOneOutForecasterForecasterNetworkRegretRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetOneOutForecasterForecasterNetworkRegretRequest) Type() protoreflect.MessageType {
	return _fastReflection_GetOneOutForecasterForecasterNetworkRegretRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetOneOutForecasterForecasterNetworkRegretRequest) New() protoreflect.Message {
	return new(fastReflection_GetOneOutForecasterForecasterNetworkRegretRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetOneOutForecasterForecasterNetworkRegretRequest) Interface() protoreflect.ProtoMessage {
	return (*GetOneOutForecasterForecasterNetworkRegretRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetOneOutForecasterForecasterNetworkRegretRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_GetOneOutForecasterForecasterNetworkRegretRequest_topic_id, value) {
			return
		}
	}
	if x.OneOutForecaster != "" {
		value := protoreflect.ValueOfString(x.OneOutForecaster)
		if !f(fd_GetOneOutForecasterForecasterNetworkRegretRequest_one_out_forecaster, value) {
			return
		}
	}
	if x.Forecaster != "" {
		value := protoreflect.ValueOfString(x.Forecaster)
		if !f(fd_GetOneOutForecasterForecasterNetworkRegretRequest_forecaster, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetOneOutForecasterForecasterNetworkRegretRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetOneOutForecasterForecasterNetworkRegretRequest.topic_id":
		return x.TopicId != uint64(0)
	case "emissions.v5.GetOneOutForecasterForecasterNetworkRegretRequest.one_out_forecaster":
		return x.OneOutForecaster != ""
	case "emissions.v5.GetOneOutForecasterForecasterNetworkRegretRequest.forecaster":
		return x.Forecaster != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetOneOutForecasterForecasterNetworkRegretRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetOneOutForecasterForecasterNetworkRegretRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetOneOutForecasterForecasterNetworkRegretRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetOneOutForecasterForecasterNetworkRegretRequest.topic_id":
		x.TopicId = uint64(0)
	case "emissions.v5.GetOneOutForecasterForecasterNetworkRegretRequest.one_out_forecaster":
		x.OneOutForecaster = ""
	case "emissions.v5.GetOneOutForecasterForecasterNetworkRegretRequest.forecaster":
		x.Forecaster = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetOneOutForecasterForecasterNetworkRegretRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetOneOutForecasterForecasterNetworkRegretRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetOneOutForecasterForecasterNetworkRegretRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetOneOutForecasterForecasterNetworkRegretRequest.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	case "emissions.v5.GetOneOutForecasterForecasterNetworkRegretRequest.one_out_forecaster":
		value := x.OneOutForecaster
		return protoreflect.ValueOfString(value)
	case "emissions.v5.GetOneOutForecasterForecasterNetworkRegretRequest.forecaster":
		value := x.Forecaster
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetOneOutForecasterForecasterNetworkRegretRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetOneOutForecasterForecasterNetworkRegretRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetOneOutForecasterForecasterNetworkRegretRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetOneOutForecasterForecasterNetworkRegretRequest.topic_id":
		x.TopicId = value.Uint()
	case "emissions.v5.GetOneOutForecasterForecasterNetworkRegretRequest.one_out_forecaster":
		x.OneOutForecaster = value.Interface().(string)
	case "emissions.v5.GetOneOutForecasterForecasterNetworkRegretRequest.forecaster":
		x.Forecaster = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetOneOutForecasterForecasterNetworkRegretRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetOneOutForecasterForecasterNetworkRegretRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetOneOutForecasterForecasterNetworkRegretRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetOneOutForecasterForecasterNetworkRegretRequest.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.GetOneOutForecasterForecasterNetworkRegretRequest is not mutable"))
	case "emissions.v5.GetOneOutForecasterForecasterNetworkRegretRequest.one_out_forecaster":
		panic(fmt.Errorf("field one_out_forecaster of message emissions.v5.GetOneOutForecasterForecasterNetworkRegretRequest is not mutable"))
	case "emissions.v5.GetOneOutForecasterForecasterNetworkRegretRequest.forecaster":
		panic(fmt.Errorf("field forecaster of message emissions.v5.GetOneOutForecasterForecasterNetworkRegretRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetOneOutForecasterForecasterNetworkRegretRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetOneOutForecasterForecasterNetworkRegretRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetOneOutForecasterForecasterNetworkRegretRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetOneOutForecasterForecasterNetworkRegretRequest.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "emissions.v5.GetOneOutForecasterForecasterNetworkRegretRequest.one_out_forecaster":
		return protoreflect.ValueOfString("")
	case "emissions.v5.GetOneOutForecasterForecasterNetworkRegretRequest.forecaster":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetOneOutForecasterForecasterNetworkRegretRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetOneOutForecasterForecasterNetworkRegretRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetOneOutForecasterForecasterNetworkRegretRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetOneOutForecasterForecasterNetworkRegretRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetOneOutForecasterForecasterNetworkRegretRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetOneOutForecasterForecasterNetworkRegretRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetOneOutForecasterForecasterNetworkRegretRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetOneOutForecasterForecasterNetworkRegretRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetOneOutForecasterForecasterNetworkRegretRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		l = len(x.OneOutForecaster)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Forecaster)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetOneOutForecasterForecasterNetworkRegretRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Forecaster) > 0 {
			i -= len(x.Forecaster)
			copy(dAtA[i:], x.Forecaster)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Forecaster)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.OneOutForecaster) > 0 {
			i -= len(x.OneOutForecaster)
			copy(dAtA[i:], x.OneOutForecaster)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.OneOutForecaster)))
			i--
			dAtA[i] = 0x12
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetOneOutForecasterForecasterNetworkRegretRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetOneOutForecasterForecasterNetworkRegretRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetOneOutForecasterForecasterNetworkRegretRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field OneOutForecaster", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.OneOutForecaster = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Forecaster", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Forecaster = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetOneOutForecasterForecasterNetworkRegretResponse        protoreflect.MessageDescriptor
	fd_GetOneOutForecasterForecasterNetworkRegretResponse_regret protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetOneOutForecasterForecasterNetworkRegretResponse = File_emissions_v5_query_proto.Messages().ByName("GetOneOutForecasterForecasterNetworkRegretResponse")
	fd_GetOneOutForecasterForecasterNetworkRegretResponse_regret = md_GetOneOutForecasterForecasterNetworkRegretResponse.Fields().ByName("regret")
}

var _ protoreflect.Message = (*fastReflection_GetOneOutForecasterForecasterNetworkRegretResponse)(nil)

type fastReflection_GetOneOutForecasterForecasterNetworkRegretResponse GetOneOutForecasterForecasterNetworkRegretResponse

func (x *GetOneOutForecasterForecasterNetworkRegretResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetOneOutForecasterForecasterNetworkRegretResponse)(x)
}

func (x *GetOneOutForecasterForecasterNetworkRegretResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetOneOutForecasterForecasterNetworkRegretResponse_messageType fastReflection_GetOneOutForecasterForecasterNetworkRegretResponse_messageType
var _ protoreflect.MessageType = fastReflection_GetOneOutForecasterForecasterNetworkRegretResponse_messageType{}

type fastReflection_GetOneOutForecasterForecasterNetworkRegretResponse_messageType struct{}

func (x fastReflection_GetOneOutForecasterForecasterNetworkRegretResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetOneOutForecasterForecasterNetworkRegretResponse)(nil)
}
func (x fastReflection_GetOneOutForecasterForecasterNetworkRegretResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_GetOneOutForecasterForecasterNetworkRegretResponse)
}
func (x fastReflection_GetOneOutForecasterForecasterNetworkRegretResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetOneOutForecasterForecasterNetworkRegretResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetOneOutForecasterForecasterNetworkRegretResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_GetOneOutForecasterForecasterNetworkRegretResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetOneOutForecasterForecasterNetworkRegretResponse) Type() protoreflect.MessageType {
	return _fastReflection_GetOneOutForecasterForecasterNetworkRegretResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetOneOutForecasterForecasterNetworkRegretResponse) New() protoreflect.Message {
	return new(fastReflection_GetOneOutForecasterForecasterNetworkRegretResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetOneOutForecasterForecasterNetworkRegretResponse) Interface() protoreflect.ProtoMessage {
	return (*GetOneOutForecasterForecasterNetworkRegretResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetOneOutForecasterForecasterNetworkRegretResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Regret != nil {
		value := protoreflect.ValueOfMessage(x.Regret.ProtoReflect())
		if !f(fd_GetOneOutForecasterForecasterNetworkRegretResponse_regret, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetOneOutForecasterForecasterNetworkRegretResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetOneOutForecasterForecasterNetworkRegretResponse.regret":
		return x.Regret != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetOneOutForecasterForecasterNetworkRegretResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetOneOutForecasterForecasterNetworkRegretResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetOneOutForecasterForecasterNetworkRegretResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetOneOutForecasterForecasterNetworkRegretResponse.regret":
		x.Regret = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetOneOutForecasterForecasterNetworkRegretResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetOneOutForecasterForecasterNetworkRegretResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetOneOutForecasterForecasterNetworkRegretResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetOneOutForecasterForecasterNetworkRegretResponse.regret":
		value := x.Regret
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetOneOutForecasterForecasterNetworkRegretResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetOneOutForecasterForecasterNetworkRegretResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetOneOutForecasterForecasterNetworkRegretResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetOneOutForecasterForecasterNetworkRegretResponse.regret":
		x.Regret = value.Message().Interface().(*v3.TimestampedValue)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetOneOutForecasterForecasterNetworkRegretResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetOneOutForecasterForecasterNetworkRegretResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetOneOutForecasterForecasterNetworkRegretResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetOneOutForecasterForecasterNetworkRegretResponse.regret":
		if x.Regret == nil {
			x.Regret = new(v3.TimestampedValue)
		}
		return protoreflect.ValueOfMessage(x.Regret.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetOneOutForecasterForecasterNetworkRegretResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetOneOutForecasterForecasterNetworkRegretResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetOneOutForecasterForecasterNetworkRegretResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetOneOutForecasterForecasterNetworkRegretResponse.regret":
		m := new(v3.TimestampedValue)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetOneOutForecasterForecasterNetworkRegretResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetOneOutForecasterForecasterNetworkRegretResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetOneOutForecasterForecasterNetworkRegretResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetOneOutForecasterForecasterNetworkRegretResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetOneOutForecasterForecasterNetworkRegretResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetOneOutForecasterForecasterNetworkRegretResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetOneOutForecasterForecasterNetworkRegretResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetOneOutForecasterForecasterNetworkRegretResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetOneOutForecasterForecasterNetworkRegretResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Regret != nil {
			l = options.Size(x.Regret)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetOneOutForecasterForecasterNetworkRegretResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Regret != nil {
			encoded, err := options.Marshal(x.Regret)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetOneOutForecasterForecasterNetworkRegretResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetOneOutForecasterForecasterNetworkRegretResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetOneOutForecasterForecasterNetworkRegretResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Regret", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Regret == nil {
					x.Regret = &v3.TimestampedValue{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Regret); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetParamsRequest protoreflect.MessageDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetParamsRequest = File_emissions_v5_query_proto.Messages().ByName("GetParamsRequest")
}

var _ protoreflect.Message = (*fastReflection_GetParamsRequest)(nil)

type fastReflection_GetParamsRequest GetParamsRequest

func (x *GetParamsRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetParamsRequest)(x)
}

func (x *GetParamsRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetParamsRequest_messageType fastReflection_GetParamsRequest_messageType
var _ protoreflect.MessageType = fastReflection_GetParamsRequest_messageType{}

type fastReflection_GetParamsRequest_messageType struct{}

func (x fastReflection_GetParamsRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetParamsRequest)(nil)
}
func (x fastReflection_GetParamsRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_GetParamsRequest)
}
func (x fastReflection_GetParamsRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetParamsRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetParamsRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_GetParamsRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetParamsRequest) Type() protoreflect.MessageType {
	return _fastReflection_GetParamsRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetParamsRequest) New() protoreflect.Message {
	return new(fastReflection_GetParamsRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetParamsRequest) Interface() protoreflect.ProtoMessage {
	return (*GetParamsRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetParamsRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetParamsRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetParamsRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetParamsRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetParamsRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetParamsRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetParamsRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetParamsRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetParamsRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetParamsRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetParamsRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetParamsRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetParamsRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetParamsRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetParamsRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetParamsRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetParamsRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetParamsRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetParamsRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetParamsRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetParamsRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetParamsRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetParamsRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetParamsRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetParamsRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetParamsRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetParamsRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetParamsRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetParamsRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetParamsRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetParamsResponse        protoreflect.MessageDescriptor
	fd_GetParamsResponse_params protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetParamsResponse = File_emissions_v5_query_proto.Messages().ByName("GetParamsResponse")
	fd_GetParamsResponse_params = md_GetParamsResponse.Fields().ByName("params")
}

var _ protoreflect.Message = (*fastReflection_GetParamsResponse)(nil)

type fastReflection_GetParamsResponse GetParamsResponse

func (x *GetParamsResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetParamsResponse)(x)
}

func (x *GetParamsResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetParamsResponse_messageType fastReflection_GetParamsResponse_messageType
var _ protoreflect.MessageType = fastReflection_GetParamsResponse_messageType{}

type fastReflection_GetParamsResponse_messageType struct{}

func (x fastReflection_GetParamsResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetParamsResponse)(nil)
}
func (x fastReflection_GetParamsResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_GetParamsResponse)
}
func (x fastReflection_GetParamsResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetParamsResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetParamsResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_GetParamsResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetParamsResponse) Type() protoreflect.MessageType {
	return _fastReflection_GetParamsResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetParamsResponse) New() protoreflect.Message {
	return new(fastReflection_GetParamsResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetParamsResponse) Interface() protoreflect.ProtoMessage {
	return (*GetParamsResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetParamsResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Params != nil {
		value := protoreflect.ValueOfMessage(x.Params.ProtoReflect())
		if !f(fd_GetParamsResponse_params, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetParamsResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetParamsResponse.params":
		return x.Params != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetParamsResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetParamsResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetParamsResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetParamsResponse.params":
		x.Params = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetParamsResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetParamsResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetParamsResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetParamsResponse.params":
		value := x.Params
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetParamsResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetParamsResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetParamsResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetParamsResponse.params":
		x.Params = value.Message().Interface().(*Params)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetParamsResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetParamsResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetParamsResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetParamsResponse.params":
		if x.Params == nil {
			x.Params = new(Params)
		}
		return protoreflect.ValueOfMessage(x.Params.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetParamsResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetParamsResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetParamsResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetParamsResponse.params":
		m := new(Params)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetParamsResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetParamsResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetParamsResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetParamsResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetParamsResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetParamsResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetParamsResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetParamsResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetParamsResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Params != nil {
			l = options.Size(x.Params)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetParamsResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Params != nil {
			encoded, err := options.Marshal(x.Params)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetParamsResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetParamsResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetParamsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Params == nil {
					x.Params = &Params{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Params); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetTotalStakeRequest protoreflect.MessageDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetTotalStakeRequest = File_emissions_v5_query_proto.Messages().ByName("GetTotalStakeRequest")
}

var _ protoreflect.Message = (*fastReflection_GetTotalStakeRequest)(nil)

type fastReflection_GetTotalStakeRequest GetTotalStakeRequest

func (x *GetTotalStakeRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetTotalStakeRequest)(x)
}

func (x *GetTotalStakeRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetTotalStakeRequest_messageType fastReflection_GetTotalStakeRequest_messageType
var _ protoreflect.MessageType = fastReflection_GetTotalStakeRequest_messageType{}

type fastReflection_GetTotalStakeRequest_messageType struct{}

func (x fastReflection_GetTotalStakeRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetTotalStakeRequest)(nil)
}
func (x fastReflection_GetTotalStakeRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_GetTotalStakeRequest)
}
func (x fastReflection_GetTotalStakeRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetTotalStakeRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetTotalStakeRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_GetTotalStakeRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetTotalStakeRequest) Type() protoreflect.MessageType {
	return _fastReflection_GetTotalStakeRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetTotalStakeRequest) New() protoreflect.Message {
	return new(fastReflection_GetTotalStakeRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetTotalStakeRequest) Interface() protoreflect.ProtoMessage {
	return (*GetTotalStakeRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetTotalStakeRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetTotalStakeRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetTotalStakeRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetTotalStakeRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetTotalStakeRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetTotalStakeRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetTotalStakeRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetTotalStakeRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetTotalStakeRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetTotalStakeRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetTotalStakeRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetTotalStakeRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetTotalStakeRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetTotalStakeRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetTotalStakeRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetTotalStakeRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetTotalStakeRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetTotalStakeRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetTotalStakeRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetTotalStakeRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetTotalStakeRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetTotalStakeRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetTotalStakeRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetTotalStakeRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetTotalStakeRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetTotalStakeRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetTotalStakeRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetTotalStakeRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetTotalStakeRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetTotalStakeRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetTotalStakeResponse        protoreflect.MessageDescriptor
	fd_GetTotalStakeResponse_amount protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetTotalStakeResponse = File_emissions_v5_query_proto.Messages().ByName("GetTotalStakeResponse")
	fd_GetTotalStakeResponse_amount = md_GetTotalStakeResponse.Fields().ByName("amount")
}

var _ protoreflect.Message = (*fastReflection_GetTotalStakeResponse)(nil)

type fastReflection_GetTotalStakeResponse GetTotalStakeResponse

func (x *GetTotalStakeResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetTotalStakeResponse)(x)
}

func (x *GetTotalStakeResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetTotalStakeResponse_messageType fastReflection_GetTotalStakeResponse_messageType
var _ protoreflect.MessageType = fastReflection_GetTotalStakeResponse_messageType{}

type fastReflection_GetTotalStakeResponse_messageType struct{}

func (x fastReflection_GetTotalStakeResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetTotalStakeResponse)(nil)
}
func (x fastReflection_GetTotalStakeResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_GetTotalStakeResponse)
}
func (x fastReflection_GetTotalStakeResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetTotalStakeResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetTotalStakeResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_GetTotalStakeResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetTotalStakeResponse) Type() protoreflect.MessageType {
	return _fastReflection_GetTotalStakeResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetTotalStakeResponse) New() protoreflect.Message {
	return new(fastReflection_GetTotalStakeResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetTotalStakeResponse) Interface() protoreflect.ProtoMessage {
	return (*GetTotalStakeResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetTotalStakeResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Amount != "" {
		value := protoreflect.ValueOfString(x.Amount)
		if !f(fd_GetTotalStakeResponse_amount, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetTotalStakeResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetTotalStakeResponse.amount":
		return x.Amount != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetTotalStakeResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetTotalStakeResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetTotalStakeResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetTotalStakeResponse.amount":
		x.Amount = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetTotalStakeResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetTotalStakeResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetTotalStakeResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetTotalStakeResponse.amount":
		value := x.Amount
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetTotalStakeResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetTotalStakeResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetTotalStakeResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetTotalStakeResponse.amount":
		x.Amount = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetTotalStakeResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetTotalStakeResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetTotalStakeResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetTotalStakeResponse.amount":
		panic(fmt.Errorf("field amount of message emissions.v5.GetTotalStakeResponse is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetTotalStakeResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetTotalStakeResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetTotalStakeResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetTotalStakeResponse.amount":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetTotalStakeResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetTotalStakeResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetTotalStakeResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetTotalStakeResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetTotalStakeResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetTotalStakeResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetTotalStakeResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetTotalStakeResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetTotalStakeResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Amount)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetTotalStakeResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Amount) > 0 {
			i -= len(x.Amount)
			copy(dAtA[i:], x.Amount)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Amount)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetTotalStakeResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetTotalStakeResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetTotalStakeResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Amount = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetReputerStakeInTopicRequest          protoreflect.MessageDescriptor
	fd_GetReputerStakeInTopicRequest_address  protoreflect.FieldDescriptor
	fd_GetReputerStakeInTopicRequest_topic_id protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetReputerStakeInTopicRequest = File_emissions_v5_query_proto.Messages().ByName("GetReputerStakeInTopicRequest")
	fd_GetReputerStakeInTopicRequest_address = md_GetReputerStakeInTopicRequest.Fields().ByName("address")
	fd_GetReputerStakeInTopicRequest_topic_id = md_GetReputerStakeInTopicRequest.Fields().ByName("topic_id")
}

var _ protoreflect.Message = (*fastReflection_GetReputerStakeInTopicRequest)(nil)

type fastReflection_GetReputerStakeInTopicRequest GetReputerStakeInTopicRequest

func (x *GetReputerStakeInTopicRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetReputerStakeInTopicRequest)(x)
}

func (x *GetReputerStakeInTopicRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetReputerStakeInTopicRequest_messageType fastReflection_GetReputerStakeInTopicRequest_messageType
var _ protoreflect.MessageType = fastReflection_GetReputerStakeInTopicRequest_messageType{}

type fastReflection_GetReputerStakeInTopicRequest_messageType struct{}

func (x fastReflection_GetReputerStakeInTopicRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetReputerStakeInTopicRequest)(nil)
}
func (x fastReflection_GetReputerStakeInTopicRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_GetReputerStakeInTopicRequest)
}
func (x fastReflection_GetReputerStakeInTopicRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetReputerStakeInTopicRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetReputerStakeInTopicRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_GetReputerStakeInTopicRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetReputerStakeInTopicRequest) Type() protoreflect.MessageType {
	return _fastReflection_GetReputerStakeInTopicRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetReputerStakeInTopicRequest) New() protoreflect.Message {
	return new(fastReflection_GetReputerStakeInTopicRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetReputerStakeInTopicRequest) Interface() protoreflect.ProtoMessage {
	return (*GetReputerStakeInTopicRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetReputerStakeInTopicRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Address != "" {
		value := protoreflect.ValueOfString(x.Address)
		if !f(fd_GetReputerStakeInTopicRequest_address, value) {
			return
		}
	}
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_GetReputerStakeInTopicRequest_topic_id, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetReputerStakeInTopicRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetReputerStakeInTopicRequest.address":
		return x.Address != ""
	case "emissions.v5.GetReputerStakeInTopicRequest.topic_id":
		return x.TopicId != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetReputerStakeInTopicRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetReputerStakeInTopicRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetReputerStakeInTopicRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetReputerStakeInTopicRequest.address":
		x.Address = ""
	case "emissions.v5.GetReputerStakeInTopicRequest.topic_id":
		x.TopicId = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetReputerStakeInTopicRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetReputerStakeInTopicRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetReputerStakeInTopicRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetReputerStakeInTopicRequest.address":
		value := x.Address
		return protoreflect.ValueOfString(value)
	case "emissions.v5.GetReputerStakeInTopicRequest.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetReputerStakeInTopicRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetReputerStakeInTopicRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetReputerStakeInTopicRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetReputerStakeInTopicRequest.address":
		x.Address = value.Interface().(string)
	case "emissions.v5.GetReputerStakeInTopicRequest.topic_id":
		x.TopicId = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetReputerStakeInTopicRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetReputerStakeInTopicRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetReputerStakeInTopicRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetReputerStakeInTopicRequest.address":
		panic(fmt.Errorf("field address of message emissions.v5.GetReputerStakeInTopicRequest is not mutable"))
	case "emissions.v5.GetReputerStakeInTopicRequest.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.GetReputerStakeInTopicRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetReputerStakeInTopicRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetReputerStakeInTopicRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetReputerStakeInTopicRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetReputerStakeInTopicRequest.address":
		return protoreflect.ValueOfString("")
	case "emissions.v5.GetReputerStakeInTopicRequest.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetReputerStakeInTopicRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetReputerStakeInTopicRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetReputerStakeInTopicRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetReputerStakeInTopicRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetReputerStakeInTopicRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetReputerStakeInTopicRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetReputerStakeInTopicRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetReputerStakeInTopicRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetReputerStakeInTopicRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Address)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetReputerStakeInTopicRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x10
		}
		if len(x.Address) > 0 {
			i -= len(x.Address)
			copy(dAtA[i:], x.Address)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Address)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetReputerStakeInTopicRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetReputerStakeInTopicRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetReputerStakeInTopicRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Address = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetReputerStakeInTopicResponse        protoreflect.MessageDescriptor
	fd_GetReputerStakeInTopicResponse_amount protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetReputerStakeInTopicResponse = File_emissions_v5_query_proto.Messages().ByName("GetReputerStakeInTopicResponse")
	fd_GetReputerStakeInTopicResponse_amount = md_GetReputerStakeInTopicResponse.Fields().ByName("amount")
}

var _ protoreflect.Message = (*fastReflection_GetReputerStakeInTopicResponse)(nil)

type fastReflection_GetReputerStakeInTopicResponse GetReputerStakeInTopicResponse

func (x *GetReputerStakeInTopicResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetReputerStakeInTopicResponse)(x)
}

func (x *GetReputerStakeInTopicResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetReputerStakeInTopicResponse_messageType fastReflection_GetReputerStakeInTopicResponse_messageType
var _ protoreflect.MessageType = fastReflection_GetReputerStakeInTopicResponse_messageType{}

type fastReflection_GetReputerStakeInTopicResponse_messageType struct{}

func (x fastReflection_GetReputerStakeInTopicResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetReputerStakeInTopicResponse)(nil)
}
func (x fastReflection_GetReputerStakeInTopicResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_GetReputerStakeInTopicResponse)
}
func (x fastReflection_GetReputerStakeInTopicResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetReputerStakeInTopicResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetReputerStakeInTopicResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_GetReputerStakeInTopicResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetReputerStakeInTopicResponse) Type() protoreflect.MessageType {
	return _fastReflection_GetReputerStakeInTopicResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetReputerStakeInTopicResponse) New() protoreflect.Message {
	return new(fastReflection_GetReputerStakeInTopicResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetReputerStakeInTopicResponse) Interface() protoreflect.ProtoMessage {
	return (*GetReputerStakeInTopicResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetReputerStakeInTopicResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Amount != "" {
		value := protoreflect.ValueOfString(x.Amount)
		if !f(fd_GetReputerStakeInTopicResponse_amount, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetReputerStakeInTopicResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetReputerStakeInTopicResponse.amount":
		return x.Amount != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetReputerStakeInTopicResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetReputerStakeInTopicResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetReputerStakeInTopicResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetReputerStakeInTopicResponse.amount":
		x.Amount = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetReputerStakeInTopicResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetReputerStakeInTopicResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetReputerStakeInTopicResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetReputerStakeInTopicResponse.amount":
		value := x.Amount
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetReputerStakeInTopicResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetReputerStakeInTopicResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetReputerStakeInTopicResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetReputerStakeInTopicResponse.amount":
		x.Amount = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetReputerStakeInTopicResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetReputerStakeInTopicResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetReputerStakeInTopicResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetReputerStakeInTopicResponse.amount":
		panic(fmt.Errorf("field amount of message emissions.v5.GetReputerStakeInTopicResponse is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetReputerStakeInTopicResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetReputerStakeInTopicResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetReputerStakeInTopicResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetReputerStakeInTopicResponse.amount":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetReputerStakeInTopicResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetReputerStakeInTopicResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetReputerStakeInTopicResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetReputerStakeInTopicResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetReputerStakeInTopicResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetReputerStakeInTopicResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetReputerStakeInTopicResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetReputerStakeInTopicResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetReputerStakeInTopicResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Amount)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetReputerStakeInTopicResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Amount) > 0 {
			i -= len(x.Amount)
			copy(dAtA[i:], x.Amount)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Amount)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetReputerStakeInTopicResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetReputerStakeInTopicResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetReputerStakeInTopicResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Amount = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_GetMultiReputerStakeInTopicRequest_1_list)(nil)

type _GetMultiReputerStakeInTopicRequest_1_list struct {
	list *[]string
}

func (x *_GetMultiReputerStakeInTopicRequest_1_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GetMultiReputerStakeInTopicRequest_1_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfString((*x.list)[i])
}

func (x *_GetMultiReputerStakeInTopicRequest_1_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_GetMultiReputerStakeInTopicRequest_1_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_GetMultiReputerStakeInTopicRequest_1_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message GetMultiReputerStakeInTopicRequest at list field Addresses as it is not of Message kind"))
}

func (x *_GetMultiReputerStakeInTopicRequest_1_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_GetMultiReputerStakeInTopicRequest_1_list) NewElement() protoreflect.Value {
	v := ""
	return protoreflect.ValueOfString(v)
}

func (x *_GetMultiReputerStakeInTopicRequest_1_list) IsValid() bool {
	return x.list != nil
}

var (
	md_GetMultiReputerStakeInTopicRequest           protoreflect.MessageDescriptor
	fd_GetMultiReputerStakeInTopicRequest_addresses protoreflect.FieldDescriptor
	fd_GetMultiReputerStakeInTopicRequest_topic_id  protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetMultiReputerStakeInTopicRequest = File_emissions_v5_query_proto.Messages().ByName("GetMultiReputerStakeInTopicRequest")
	fd_GetMultiReputerStakeInTopicRequest_addresses = md_GetMultiReputerStakeInTopicRequest.Fields().ByName("addresses")
	fd_GetMultiReputerStakeInTopicRequest_topic_id = md_GetMultiReputerStakeInTopicRequest.Fields().ByName("topic_id")
}

var _ protoreflect.Message = (*fastReflection_GetMultiReputerStakeInTopicRequest)(nil)

type fastReflection_GetMultiReputerStakeInTopicRequest GetMultiReputerStakeInTopicRequest

func (x *GetMultiReputerStakeInTopicRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetMultiReputerStakeInTopicRequest)(x)
}

func (x *GetMultiReputerStakeInTopicRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetMultiReputerStakeInTopicRequest_messageType fastReflection_GetMultiReputerStakeInTopicRequest_messageType
var _ protoreflect.MessageType = fastReflection_GetMultiReputerStakeInTopicRequest_messageType{}

type fastReflection_GetMultiReputerStakeInTopicRequest_messageType struct{}

func (x fastReflection_GetMultiReputerStakeInTopicRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetMultiReputerStakeInTopicRequest)(nil)
}
func (x fastReflection_GetMultiReputerStakeInTopicRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_GetMultiReputerStakeInTopicRequest)
}
func (x fastReflection_GetMultiReputerStakeInTopicRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetMultiReputerStakeInTopicRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetMultiReputerStakeInTopicRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_GetMultiReputerStakeInTopicRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetMultiReputerStakeInTopicRequest) Type() protoreflect.MessageType {
	return _fastReflection_GetMultiReputerStakeInTopicRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetMultiReputerStakeInTopicRequest) New() protoreflect.Message {
	return new(fastReflection_GetMultiReputerStakeInTopicRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetMultiReputerStakeInTopicRequest) Interface() protoreflect.ProtoMessage {
	return (*GetMultiReputerStakeInTopicRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetMultiReputerStakeInTopicRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.Addresses) != 0 {
		value := protoreflect.ValueOfList(&_GetMultiReputerStakeInTopicRequest_1_list{list: &x.Addresses})
		if !f(fd_GetMultiReputerStakeInTopicRequest_addresses, value) {
			return
		}
	}
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_GetMultiReputerStakeInTopicRequest_topic_id, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetMultiReputerStakeInTopicRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetMultiReputerStakeInTopicRequest.addresses":
		return len(x.Addresses) != 0
	case "emissions.v5.GetMultiReputerStakeInTopicRequest.topic_id":
		return x.TopicId != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetMultiReputerStakeInTopicRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetMultiReputerStakeInTopicRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetMultiReputerStakeInTopicRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetMultiReputerStakeInTopicRequest.addresses":
		x.Addresses = nil
	case "emissions.v5.GetMultiReputerStakeInTopicRequest.topic_id":
		x.TopicId = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetMultiReputerStakeInTopicRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetMultiReputerStakeInTopicRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetMultiReputerStakeInTopicRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetMultiReputerStakeInTopicRequest.addresses":
		if len(x.Addresses) == 0 {
			return protoreflect.ValueOfList(&_GetMultiReputerStakeInTopicRequest_1_list{})
		}
		listValue := &_GetMultiReputerStakeInTopicRequest_1_list{list: &x.Addresses}
		return protoreflect.ValueOfList(listValue)
	case "emissions.v5.GetMultiReputerStakeInTopicRequest.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetMultiReputerStakeInTopicRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetMultiReputerStakeInTopicRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetMultiReputerStakeInTopicRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetMultiReputerStakeInTopicRequest.addresses":
		lv := value.List()
		clv := lv.(*_GetMultiReputerStakeInTopicRequest_1_list)
		x.Addresses = *clv.list
	case "emissions.v5.GetMultiReputerStakeInTopicRequest.topic_id":
		x.TopicId = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetMultiReputerStakeInTopicRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetMultiReputerStakeInTopicRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetMultiReputerStakeInTopicRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetMultiReputerStakeInTopicRequest.addresses":
		if x.Addresses == nil {
			x.Addresses = []string{}
		}
		value := &_GetMultiReputerStakeInTopicRequest_1_list{list: &x.Addresses}
		return protoreflect.ValueOfList(value)
	case "emissions.v5.GetMultiReputerStakeInTopicRequest.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.GetMultiReputerStakeInTopicRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetMultiReputerStakeInTopicRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetMultiReputerStakeInTopicRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetMultiReputerStakeInTopicRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetMultiReputerStakeInTopicRequest.addresses":
		list := []string{}
		return protoreflect.ValueOfList(&_GetMultiReputerStakeInTopicRequest_1_list{list: &list})
	case "emissions.v5.GetMultiReputerStakeInTopicRequest.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetMultiReputerStakeInTopicRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetMultiReputerStakeInTopicRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetMultiReputerStakeInTopicRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetMultiReputerStakeInTopicRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetMultiReputerStakeInTopicRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetMultiReputerStakeInTopicRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetMultiReputerStakeInTopicRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetMultiReputerStakeInTopicRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetMultiReputerStakeInTopicRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if len(x.Addresses) > 0 {
			for _, s := range x.Addresses {
				l = len(s)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetMultiReputerStakeInTopicRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x10
		}
		if len(x.Addresses) > 0 {
			for iNdEx := len(x.Addresses) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.Addresses[iNdEx])
				copy(dAtA[i:], x.Addresses[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Addresses[iNdEx])))
				i--
				dAtA[i] = 0xa
			}
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetMultiReputerStakeInTopicRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetMultiReputerStakeInTopicRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetMultiReputerStakeInTopicRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Addresses", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Addresses = append(x.Addresses, string(dAtA[iNdEx:postIndex]))
				iNdEx = postIndex
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_GetMultiReputerStakeInTopicResponse_1_list)(nil)

type _GetMultiReputerStakeInTopicResponse_1_list struct {
	list *[]*v3.StakeInfo
}

func (x *_GetMultiReputerStakeInTopicResponse_1_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GetMultiReputerStakeInTopicResponse_1_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GetMultiReputerStakeInTopicResponse_1_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*v3.StakeInfo)
	(*x.list)[i] = concreteValue
}

func (x *_GetMultiReputerStakeInTopicResponse_1_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*v3.StakeInfo)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GetMultiReputerStakeInTopicResponse_1_list) AppendMutable() protoreflect.Value {
	v := new(v3.StakeInfo)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GetMultiReputerStakeInTopicResponse_1_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GetMultiReputerStakeInTopicResponse_1_list) NewElement() protoreflect.Value {
	v := new(v3.StakeInfo)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GetMultiReputerStakeInTopicResponse_1_list) IsValid() bool {
	return x.list != nil
}

var (
	md_GetMultiReputerStakeInTopicResponse         protoreflect.MessageDescriptor
	fd_GetMultiReputerStakeInTopicResponse_amounts protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetMultiReputerStakeInTopicResponse = File_emissions_v5_query_proto.Messages().ByName("GetMultiReputerStakeInTopicResponse")
	fd_GetMultiReputerStakeInTopicResponse_amounts = md_GetMultiReputerStakeInTopicResponse.Fields().ByName("amounts")
}

var _ protoreflect.Message = (*fastReflection_GetMultiReputerStakeInTopicResponse)(nil)

type fastReflection_GetMultiReputerStakeInTopicResponse GetMultiReputerStakeInTopicResponse

func (x *GetMultiReputerStakeInTopicResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetMultiReputerStakeInTopicResponse)(x)
}

func (x *GetMultiReputerStakeInTopicResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetMultiReputerStakeInTopicResponse_messageType fastReflection_GetMultiReputerStakeInTopicResponse_messageType
var _ protoreflect.MessageType = fastReflection_GetMultiReputerStakeInTopicResponse_messageType{}

type fastReflection_GetMultiReputerStakeInTopicResponse_messageType struct{}

func (x fastReflection_GetMultiReputerStakeInTopicResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetMultiReputerStakeInTopicResponse)(nil)
}
func (x fastReflection_GetMultiReputerStakeInTopicResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_GetMultiReputerStakeInTopicResponse)
}
func (x fastReflection_GetMultiReputerStakeInTopicResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetMultiReputerStakeInTopicResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetMultiReputerStakeInTopicResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_GetMultiReputerStakeInTopicResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetMultiReputerStakeInTopicResponse) Type() protoreflect.MessageType {
	return _fastReflection_GetMultiReputerStakeInTopicResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetMultiReputerStakeInTopicResponse) New() protoreflect.Message {
	return new(fastReflection_GetMultiReputerStakeInTopicResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetMultiReputerStakeInTopicResponse) Interface() protoreflect.ProtoMessage {
	return (*GetMultiReputerStakeInTopicResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetMultiReputerStakeInTopicResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.Amounts) != 0 {
		value := protoreflect.ValueOfList(&_GetMultiReputerStakeInTopicResponse_1_list{list: &x.Amounts})
		if !f(fd_GetMultiReputerStakeInTopicResponse_amounts, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetMultiReputerStakeInTopicResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetMultiReputerStakeInTopicResponse.amounts":
		return len(x.Amounts) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetMultiReputerStakeInTopicResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetMultiReputerStakeInTopicResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetMultiReputerStakeInTopicResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetMultiReputerStakeInTopicResponse.amounts":
		x.Amounts = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetMultiReputerStakeInTopicResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetMultiReputerStakeInTopicResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetMultiReputerStakeInTopicResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetMultiReputerStakeInTopicResponse.amounts":
		if len(x.Amounts) == 0 {
			return protoreflect.ValueOfList(&_GetMultiReputerStakeInTopicResponse_1_list{})
		}
		listValue := &_GetMultiReputerStakeInTopicResponse_1_list{list: &x.Amounts}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetMultiReputerStakeInTopicResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetMultiReputerStakeInTopicResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetMultiReputerStakeInTopicResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetMultiReputerStakeInTopicResponse.amounts":
		lv := value.List()
		clv := lv.(*_GetMultiReputerStakeInTopicResponse_1_list)
		x.Amounts = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetMultiReputerStakeInTopicResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetMultiReputerStakeInTopicResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetMultiReputerStakeInTopicResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetMultiReputerStakeInTopicResponse.amounts":
		if x.Amounts == nil {
			x.Amounts = []*v3.StakeInfo{}
		}
		value := &_GetMultiReputerStakeInTopicResponse_1_list{list: &x.Amounts}
		return protoreflect.ValueOfList(value)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetMultiReputerStakeInTopicResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetMultiReputerStakeInTopicResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetMultiReputerStakeInTopicResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetMultiReputerStakeInTopicResponse.amounts":
		list := []*v3.StakeInfo{}
		return protoreflect.ValueOfList(&_GetMultiReputerStakeInTopicResponse_1_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetMultiReputerStakeInTopicResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetMultiReputerStakeInTopicResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetMultiReputerStakeInTopicResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetMultiReputerStakeInTopicResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetMultiReputerStakeInTopicResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetMultiReputerStakeInTopicResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetMultiReputerStakeInTopicResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetMultiReputerStakeInTopicResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetMultiReputerStakeInTopicResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if len(x.Amounts) > 0 {
			for _, e := range x.Amounts {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetMultiReputerStakeInTopicResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Amounts) > 0 {
			for iNdEx := len(x.Amounts) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.Amounts[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0xa
			}
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetMultiReputerStakeInTopicResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetMultiReputerStakeInTopicResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetMultiReputerStakeInTopicResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Amounts", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Amounts = append(x.Amounts, &v3.StakeInfo{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Amounts[len(x.Amounts)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetStakeFromReputerInTopicInSelfRequest                 protoreflect.MessageDescriptor
	fd_GetStakeFromReputerInTopicInSelfRequest_reputer_address protoreflect.FieldDescriptor
	fd_GetStakeFromReputerInTopicInSelfRequest_topic_id        protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetStakeFromReputerInTopicInSelfRequest = File_emissions_v5_query_proto.Messages().ByName("GetStakeFromReputerInTopicInSelfRequest")
	fd_GetStakeFromReputerInTopicInSelfRequest_reputer_address = md_GetStakeFromReputerInTopicInSelfRequest.Fields().ByName("reputer_address")
	fd_GetStakeFromReputerInTopicInSelfRequest_topic_id = md_GetStakeFromReputerInTopicInSelfRequest.Fields().ByName("topic_id")
}

var _ protoreflect.Message = (*fastReflection_GetStakeFromReputerInTopicInSelfRequest)(nil)

type fastReflection_GetStakeFromReputerInTopicInSelfRequest GetStakeFromReputerInTopicInSelfRequest

func (x *GetStakeFromReputerInTopicInSelfRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetStakeFromReputerInTopicInSelfRequest)(x)
}

func (x *GetStakeFromReputerInTopicInSelfRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetStakeFromReputerInTopicInSelfRequest_messageType fastReflection_GetStakeFromReputerInTopicInSelfRequest_messageType
var _ protoreflect.MessageType = fastReflection_GetStakeFromReputerInTopicInSelfRequest_messageType{}

type fastReflection_GetStakeFromReputerInTopicInSelfRequest_messageType struct{}

func (x fastReflection_GetStakeFromReputerInTopicInSelfRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetStakeFromReputerInTopicInSelfRequest)(nil)
}
func (x fastReflection_GetStakeFromReputerInTopicInSelfRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_GetStakeFromReputerInTopicInSelfRequest)
}
func (x fastReflection_GetStakeFromReputerInTopicInSelfRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetStakeFromReputerInTopicInSelfRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetStakeFromReputerInTopicInSelfRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_GetStakeFromReputerInTopicInSelfRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetStakeFromReputerInTopicInSelfRequest) Type() protoreflect.MessageType {
	return _fastReflection_GetStakeFromReputerInTopicInSelfRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetStakeFromReputerInTopicInSelfRequest) New() protoreflect.Message {
	return new(fastReflection_GetStakeFromReputerInTopicInSelfRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetStakeFromReputerInTopicInSelfRequest) Interface() protoreflect.ProtoMessage {
	return (*GetStakeFromReputerInTopicInSelfRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetStakeFromReputerInTopicInSelfRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.ReputerAddress != "" {
		value := protoreflect.ValueOfString(x.ReputerAddress)
		if !f(fd_GetStakeFromReputerInTopicInSelfRequest_reputer_address, value) {
			return
		}
	}
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_GetStakeFromReputerInTopicInSelfRequest_topic_id, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetStakeFromReputerInTopicInSelfRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetStakeFromReputerInTopicInSelfRequest.reputer_address":
		return x.ReputerAddress != ""
	case "emissions.v5.GetStakeFromReputerInTopicInSelfRequest.topic_id":
		return x.TopicId != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetStakeFromReputerInTopicInSelfRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetStakeFromReputerInTopicInSelfRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetStakeFromReputerInTopicInSelfRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetStakeFromReputerInTopicInSelfRequest.reputer_address":
		x.ReputerAddress = ""
	case "emissions.v5.GetStakeFromReputerInTopicInSelfRequest.topic_id":
		x.TopicId = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetStakeFromReputerInTopicInSelfRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetStakeFromReputerInTopicInSelfRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetStakeFromReputerInTopicInSelfRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetStakeFromReputerInTopicInSelfRequest.reputer_address":
		value := x.ReputerAddress
		return protoreflect.ValueOfString(value)
	case "emissions.v5.GetStakeFromReputerInTopicInSelfRequest.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetStakeFromReputerInTopicInSelfRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetStakeFromReputerInTopicInSelfRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetStakeFromReputerInTopicInSelfRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetStakeFromReputerInTopicInSelfRequest.reputer_address":
		x.ReputerAddress = value.Interface().(string)
	case "emissions.v5.GetStakeFromReputerInTopicInSelfRequest.topic_id":
		x.TopicId = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetStakeFromReputerInTopicInSelfRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetStakeFromReputerInTopicInSelfRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetStakeFromReputerInTopicInSelfRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetStakeFromReputerInTopicInSelfRequest.reputer_address":
		panic(fmt.Errorf("field reputer_address of message emissions.v5.GetStakeFromReputerInTopicInSelfRequest is not mutable"))
	case "emissions.v5.GetStakeFromReputerInTopicInSelfRequest.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.GetStakeFromReputerInTopicInSelfRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetStakeFromReputerInTopicInSelfRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetStakeFromReputerInTopicInSelfRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetStakeFromReputerInTopicInSelfRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetStakeFromReputerInTopicInSelfRequest.reputer_address":
		return protoreflect.ValueOfString("")
	case "emissions.v5.GetStakeFromReputerInTopicInSelfRequest.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetStakeFromReputerInTopicInSelfRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetStakeFromReputerInTopicInSelfRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetStakeFromReputerInTopicInSelfRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetStakeFromReputerInTopicInSelfRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetStakeFromReputerInTopicInSelfRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetStakeFromReputerInTopicInSelfRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetStakeFromReputerInTopicInSelfRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetStakeFromReputerInTopicInSelfRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetStakeFromReputerInTopicInSelfRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.ReputerAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetStakeFromReputerInTopicInSelfRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x10
		}
		if len(x.ReputerAddress) > 0 {
			i -= len(x.ReputerAddress)
			copy(dAtA[i:], x.ReputerAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ReputerAddress)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetStakeFromReputerInTopicInSelfRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetStakeFromReputerInTopicInSelfRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetStakeFromReputerInTopicInSelfRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ReputerAddress", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ReputerAddress = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetStakeFromReputerInTopicInSelfResponse        protoreflect.MessageDescriptor
	fd_GetStakeFromReputerInTopicInSelfResponse_amount protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetStakeFromReputerInTopicInSelfResponse = File_emissions_v5_query_proto.Messages().ByName("GetStakeFromReputerInTopicInSelfResponse")
	fd_GetStakeFromReputerInTopicInSelfResponse_amount = md_GetStakeFromReputerInTopicInSelfResponse.Fields().ByName("amount")
}

var _ protoreflect.Message = (*fastReflection_GetStakeFromReputerInTopicInSelfResponse)(nil)

type fastReflection_GetStakeFromReputerInTopicInSelfResponse GetStakeFromReputerInTopicInSelfResponse

func (x *GetStakeFromReputerInTopicInSelfResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetStakeFromReputerInTopicInSelfResponse)(x)
}

func (x *GetStakeFromReputerInTopicInSelfResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetStakeFromReputerInTopicInSelfResponse_messageType fastReflection_GetStakeFromReputerInTopicInSelfResponse_messageType
var _ protoreflect.MessageType = fastReflection_GetStakeFromReputerInTopicInSelfResponse_messageType{}

type fastReflection_GetStakeFromReputerInTopicInSelfResponse_messageType struct{}

func (x fastReflection_GetStakeFromReputerInTopicInSelfResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetStakeFromReputerInTopicInSelfResponse)(nil)
}
func (x fastReflection_GetStakeFromReputerInTopicInSelfResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_GetStakeFromReputerInTopicInSelfResponse)
}
func (x fastReflection_GetStakeFromReputerInTopicInSelfResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetStakeFromReputerInTopicInSelfResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetStakeFromReputerInTopicInSelfResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_GetStakeFromReputerInTopicInSelfResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetStakeFromReputerInTopicInSelfResponse) Type() protoreflect.MessageType {
	return _fastReflection_GetStakeFromReputerInTopicInSelfResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetStakeFromReputerInTopicInSelfResponse) New() protoreflect.Message {
	return new(fastReflection_GetStakeFromReputerInTopicInSelfResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetStakeFromReputerInTopicInSelfResponse) Interface() protoreflect.ProtoMessage {
	return (*GetStakeFromReputerInTopicInSelfResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetStakeFromReputerInTopicInSelfResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Amount != "" {
		value := protoreflect.ValueOfString(x.Amount)
		if !f(fd_GetStakeFromReputerInTopicInSelfResponse_amount, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetStakeFromReputerInTopicInSelfResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetStakeFromReputerInTopicInSelfResponse.amount":
		return x.Amount != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetStakeFromReputerInTopicInSelfResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetStakeFromReputerInTopicInSelfResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetStakeFromReputerInTopicInSelfResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetStakeFromReputerInTopicInSelfResponse.amount":
		x.Amount = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetStakeFromReputerInTopicInSelfResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetStakeFromReputerInTopicInSelfResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetStakeFromReputerInTopicInSelfResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetStakeFromReputerInTopicInSelfResponse.amount":
		value := x.Amount
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetStakeFromReputerInTopicInSelfResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetStakeFromReputerInTopicInSelfResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetStakeFromReputerInTopicInSelfResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetStakeFromReputerInTopicInSelfResponse.amount":
		x.Amount = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetStakeFromReputerInTopicInSelfResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetStakeFromReputerInTopicInSelfResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetStakeFromReputerInTopicInSelfResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetStakeFromReputerInTopicInSelfResponse.amount":
		panic(fmt.Errorf("field amount of message emissions.v5.GetStakeFromReputerInTopicInSelfResponse is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetStakeFromReputerInTopicInSelfResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetStakeFromReputerInTopicInSelfResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetStakeFromReputerInTopicInSelfResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetStakeFromReputerInTopicInSelfResponse.amount":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetStakeFromReputerInTopicInSelfResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetStakeFromReputerInTopicInSelfResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetStakeFromReputerInTopicInSelfResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetStakeFromReputerInTopicInSelfResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetStakeFromReputerInTopicInSelfResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetStakeFromReputerInTopicInSelfResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetStakeFromReputerInTopicInSelfResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetStakeFromReputerInTopicInSelfResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetStakeFromReputerInTopicInSelfResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Amount)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetStakeFromReputerInTopicInSelfResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Amount) > 0 {
			i -= len(x.Amount)
			copy(dAtA[i:], x.Amount)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Amount)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetStakeFromReputerInTopicInSelfResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetStakeFromReputerInTopicInSelfResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetStakeFromReputerInTopicInSelfResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Amount = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetDelegateStakeInTopicInReputerRequest                 protoreflect.MessageDescriptor
	fd_GetDelegateStakeInTopicInReputerRequest_reputer_address protoreflect.FieldDescriptor
	fd_GetDelegateStakeInTopicInReputerRequest_topic_id        protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetDelegateStakeInTopicInReputerRequest = File_emissions_v5_query_proto.Messages().ByName("GetDelegateStakeInTopicInReputerRequest")
	fd_GetDelegateStakeInTopicInReputerRequest_reputer_address = md_GetDelegateStakeInTopicInReputerRequest.Fields().ByName("reputer_address")
	fd_GetDelegateStakeInTopicInReputerRequest_topic_id = md_GetDelegateStakeInTopicInReputerRequest.Fields().ByName("topic_id")
}

var _ protoreflect.Message = (*fastReflection_GetDelegateStakeInTopicInReputerRequest)(nil)

type fastReflection_GetDelegateStakeInTopicInReputerRequest GetDelegateStakeInTopicInReputerRequest

func (x *GetDelegateStakeInTopicInReputerRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetDelegateStakeInTopicInReputerRequest)(x)
}

func (x *GetDelegateStakeInTopicInReputerRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetDelegateStakeInTopicInReputerRequest_messageType fastReflection_GetDelegateStakeInTopicInReputerRequest_messageType
var _ protoreflect.MessageType = fastReflection_GetDelegateStakeInTopicInReputerRequest_messageType{}

type fastReflection_GetDelegateStakeInTopicInReputerRequest_messageType struct{}

func (x fastReflection_GetDelegateStakeInTopicInReputerRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetDelegateStakeInTopicInReputerRequest)(nil)
}
func (x fastReflection_GetDelegateStakeInTopicInReputerRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_GetDelegateStakeInTopicInReputerRequest)
}
func (x fastReflection_GetDelegateStakeInTopicInReputerRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetDelegateStakeInTopicInReputerRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetDelegateStakeInTopicInReputerRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_GetDelegateStakeInTopicInReputerRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetDelegateStakeInTopicInReputerRequest) Type() protoreflect.MessageType {
	return _fastReflection_GetDelegateStakeInTopicInReputerRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetDelegateStakeInTopicInReputerRequest) New() protoreflect.Message {
	return new(fastReflection_GetDelegateStakeInTopicInReputerRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetDelegateStakeInTopicInReputerRequest) Interface() protoreflect.ProtoMessage {
	return (*GetDelegateStakeInTopicInReputerRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetDelegateStakeInTopicInReputerRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.ReputerAddress != "" {
		value := protoreflect.ValueOfString(x.ReputerAddress)
		if !f(fd_GetDelegateStakeInTopicInReputerRequest_reputer_address, value) {
			return
		}
	}
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_GetDelegateStakeInTopicInReputerRequest_topic_id, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetDelegateStakeInTopicInReputerRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetDelegateStakeInTopicInReputerRequest.reputer_address":
		return x.ReputerAddress != ""
	case "emissions.v5.GetDelegateStakeInTopicInReputerRequest.topic_id":
		return x.TopicId != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetDelegateStakeInTopicInReputerRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetDelegateStakeInTopicInReputerRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetDelegateStakeInTopicInReputerRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetDelegateStakeInTopicInReputerRequest.reputer_address":
		x.ReputerAddress = ""
	case "emissions.v5.GetDelegateStakeInTopicInReputerRequest.topic_id":
		x.TopicId = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetDelegateStakeInTopicInReputerRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetDelegateStakeInTopicInReputerRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetDelegateStakeInTopicInReputerRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetDelegateStakeInTopicInReputerRequest.reputer_address":
		value := x.ReputerAddress
		return protoreflect.ValueOfString(value)
	case "emissions.v5.GetDelegateStakeInTopicInReputerRequest.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetDelegateStakeInTopicInReputerRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetDelegateStakeInTopicInReputerRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetDelegateStakeInTopicInReputerRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetDelegateStakeInTopicInReputerRequest.reputer_address":
		x.ReputerAddress = value.Interface().(string)
	case "emissions.v5.GetDelegateStakeInTopicInReputerRequest.topic_id":
		x.TopicId = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetDelegateStakeInTopicInReputerRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetDelegateStakeInTopicInReputerRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetDelegateStakeInTopicInReputerRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetDelegateStakeInTopicInReputerRequest.reputer_address":
		panic(fmt.Errorf("field reputer_address of message emissions.v5.GetDelegateStakeInTopicInReputerRequest is not mutable"))
	case "emissions.v5.GetDelegateStakeInTopicInReputerRequest.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.GetDelegateStakeInTopicInReputerRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetDelegateStakeInTopicInReputerRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetDelegateStakeInTopicInReputerRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetDelegateStakeInTopicInReputerRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetDelegateStakeInTopicInReputerRequest.reputer_address":
		return protoreflect.ValueOfString("")
	case "emissions.v5.GetDelegateStakeInTopicInReputerRequest.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetDelegateStakeInTopicInReputerRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetDelegateStakeInTopicInReputerRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetDelegateStakeInTopicInReputerRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetDelegateStakeInTopicInReputerRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetDelegateStakeInTopicInReputerRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetDelegateStakeInTopicInReputerRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetDelegateStakeInTopicInReputerRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetDelegateStakeInTopicInReputerRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetDelegateStakeInTopicInReputerRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.ReputerAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetDelegateStakeInTopicInReputerRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x10
		}
		if len(x.ReputerAddress) > 0 {
			i -= len(x.ReputerAddress)
			copy(dAtA[i:], x.ReputerAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ReputerAddress)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetDelegateStakeInTopicInReputerRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetDelegateStakeInTopicInReputerRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetDelegateStakeInTopicInReputerRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ReputerAddress", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ReputerAddress = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetDelegateStakeInTopicInReputerResponse        protoreflect.MessageDescriptor
	fd_GetDelegateStakeInTopicInReputerResponse_amount protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetDelegateStakeInTopicInReputerResponse = File_emissions_v5_query_proto.Messages().ByName("GetDelegateStakeInTopicInReputerResponse")
	fd_GetDelegateStakeInTopicInReputerResponse_amount = md_GetDelegateStakeInTopicInReputerResponse.Fields().ByName("amount")
}

var _ protoreflect.Message = (*fastReflection_GetDelegateStakeInTopicInReputerResponse)(nil)

type fastReflection_GetDelegateStakeInTopicInReputerResponse GetDelegateStakeInTopicInReputerResponse

func (x *GetDelegateStakeInTopicInReputerResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetDelegateStakeInTopicInReputerResponse)(x)
}

func (x *GetDelegateStakeInTopicInReputerResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetDelegateStakeInTopicInReputerResponse_messageType fastReflection_GetDelegateStakeInTopicInReputerResponse_messageType
var _ protoreflect.MessageType = fastReflection_GetDelegateStakeInTopicInReputerResponse_messageType{}

type fastReflection_GetDelegateStakeInTopicInReputerResponse_messageType struct{}

func (x fastReflection_GetDelegateStakeInTopicInReputerResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetDelegateStakeInTopicInReputerResponse)(nil)
}
func (x fastReflection_GetDelegateStakeInTopicInReputerResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_GetDelegateStakeInTopicInReputerResponse)
}
func (x fastReflection_GetDelegateStakeInTopicInReputerResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetDelegateStakeInTopicInReputerResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetDelegateStakeInTopicInReputerResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_GetDelegateStakeInTopicInReputerResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetDelegateStakeInTopicInReputerResponse) Type() protoreflect.MessageType {
	return _fastReflection_GetDelegateStakeInTopicInReputerResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetDelegateStakeInTopicInReputerResponse) New() protoreflect.Message {
	return new(fastReflection_GetDelegateStakeInTopicInReputerResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetDelegateStakeInTopicInReputerResponse) Interface() protoreflect.ProtoMessage {
	return (*GetDelegateStakeInTopicInReputerResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetDelegateStakeInTopicInReputerResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Amount != "" {
		value := protoreflect.ValueOfString(x.Amount)
		if !f(fd_GetDelegateStakeInTopicInReputerResponse_amount, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetDelegateStakeInTopicInReputerResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetDelegateStakeInTopicInReputerResponse.amount":
		return x.Amount != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetDelegateStakeInTopicInReputerResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetDelegateStakeInTopicInReputerResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetDelegateStakeInTopicInReputerResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetDelegateStakeInTopicInReputerResponse.amount":
		x.Amount = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetDelegateStakeInTopicInReputerResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetDelegateStakeInTopicInReputerResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetDelegateStakeInTopicInReputerResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetDelegateStakeInTopicInReputerResponse.amount":
		value := x.Amount
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetDelegateStakeInTopicInReputerResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetDelegateStakeInTopicInReputerResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetDelegateStakeInTopicInReputerResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetDelegateStakeInTopicInReputerResponse.amount":
		x.Amount = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetDelegateStakeInTopicInReputerResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetDelegateStakeInTopicInReputerResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetDelegateStakeInTopicInReputerResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetDelegateStakeInTopicInReputerResponse.amount":
		panic(fmt.Errorf("field amount of message emissions.v5.GetDelegateStakeInTopicInReputerResponse is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetDelegateStakeInTopicInReputerResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetDelegateStakeInTopicInReputerResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetDelegateStakeInTopicInReputerResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetDelegateStakeInTopicInReputerResponse.amount":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetDelegateStakeInTopicInReputerResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetDelegateStakeInTopicInReputerResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetDelegateStakeInTopicInReputerResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetDelegateStakeInTopicInReputerResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetDelegateStakeInTopicInReputerResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetDelegateStakeInTopicInReputerResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetDelegateStakeInTopicInReputerResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetDelegateStakeInTopicInReputerResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetDelegateStakeInTopicInReputerResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Amount)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetDelegateStakeInTopicInReputerResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Amount) > 0 {
			i -= len(x.Amount)
			copy(dAtA[i:], x.Amount)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Amount)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetDelegateStakeInTopicInReputerResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetDelegateStakeInTopicInReputerResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetDelegateStakeInTopicInReputerResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Amount = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetStakeFromDelegatorInTopicInReputerRequest                   protoreflect.MessageDescriptor
	fd_GetStakeFromDelegatorInTopicInReputerRequest_delegator_address protoreflect.FieldDescriptor
	fd_GetStakeFromDelegatorInTopicInReputerRequest_reputer_address   protoreflect.FieldDescriptor
	fd_GetStakeFromDelegatorInTopicInReputerRequest_topic_id          protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetStakeFromDelegatorInTopicInReputerRequest = File_emissions_v5_query_proto.Messages().ByName("GetStakeFromDelegatorInTopicInReputerRequest")
	fd_GetStakeFromDelegatorInTopicInReputerRequest_delegator_address = md_GetStakeFromDelegatorInTopicInReputerRequest.Fields().ByName("delegator_address")
	fd_GetStakeFromDelegatorInTopicInReputerRequest_reputer_address = md_GetStakeFromDelegatorInTopicInReputerRequest.Fields().ByName("reputer_address")
	fd_GetStakeFromDelegatorInTopicInReputerRequest_topic_id = md_GetStakeFromDelegatorInTopicInReputerRequest.Fields().ByName("topic_id")
}

var _ protoreflect.Message = (*fastReflection_GetStakeFromDelegatorInTopicInReputerRequest)(nil)

type fastReflection_GetStakeFromDelegatorInTopicInReputerRequest GetStakeFromDelegatorInTopicInReputerRequest

func (x *GetStakeFromDelegatorInTopicInReputerRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetStakeFromDelegatorInTopicInReputerRequest)(x)
}

func (x *GetStakeFromDelegatorInTopicInReputerRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetStakeFromDelegatorInTopicInReputerRequest_messageType fastReflection_GetStakeFromDelegatorInTopicInReputerRequest_messageType
var _ protoreflect.MessageType = fastReflection_GetStakeFromDelegatorInTopicInReputerRequest_messageType{}

type fastReflection_GetStakeFromDelegatorInTopicInReputerRequest_messageType struct{}

func (x fastReflection_GetStakeFromDelegatorInTopicInReputerRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetStakeFromDelegatorInTopicInReputerRequest)(nil)
}
func (x fastReflection_GetStakeFromDelegatorInTopicInReputerRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_GetStakeFromDelegatorInTopicInReputerRequest)
}
func (x fastReflection_GetStakeFromDelegatorInTopicInReputerRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetStakeFromDelegatorInTopicInReputerRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetStakeFromDelegatorInTopicInReputerRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_GetStakeFromDelegatorInTopicInReputerRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetStakeFromDelegatorInTopicInReputerRequest) Type() protoreflect.MessageType {
	return _fastReflection_GetStakeFromDelegatorInTopicInReputerRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetStakeFromDelegatorInTopicInReputerRequest) New() protoreflect.Message {
	return new(fastReflection_GetStakeFromDelegatorInTopicInReputerRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetStakeFromDelegatorInTopicInReputerRequest) Interface() protoreflect.ProtoMessage {
	return (*GetStakeFromDelegatorInTopicInReputerRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetStakeFromDelegatorInTopicInReputerRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.DelegatorAddress != "" {
		value := protoreflect.ValueOfString(x.DelegatorAddress)
		if !f(fd_GetStakeFromDelegatorInTopicInReputerRequest_delegator_address, value) {
			return
		}
	}
	if x.ReputerAddress != "" {
		value := protoreflect.ValueOfString(x.ReputerAddress)
		if !f(fd_GetStakeFromDelegatorInTopicInReputerRequest_reputer_address, value) {
			return
		}
	}
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_GetStakeFromDelegatorInTopicInReputerRequest_topic_id, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetStakeFromDelegatorInTopicInReputerRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetStakeFromDelegatorInTopicInReputerRequest.delegator_address":
		return x.DelegatorAddress != ""
	case "emissions.v5.GetStakeFromDelegatorInTopicInReputerRequest.reputer_address":
		return x.ReputerAddress != ""
	case "emissions.v5.GetStakeFromDelegatorInTopicInReputerRequest.topic_id":
		return x.TopicId != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetStakeFromDelegatorInTopicInReputerRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetStakeFromDelegatorInTopicInReputerRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetStakeFromDelegatorInTopicInReputerRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetStakeFromDelegatorInTopicInReputerRequest.delegator_address":
		x.DelegatorAddress = ""
	case "emissions.v5.GetStakeFromDelegatorInTopicInReputerRequest.reputer_address":
		x.ReputerAddress = ""
	case "emissions.v5.GetStakeFromDelegatorInTopicInReputerRequest.topic_id":
		x.TopicId = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetStakeFromDelegatorInTopicInReputerRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetStakeFromDelegatorInTopicInReputerRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetStakeFromDelegatorInTopicInReputerRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetStakeFromDelegatorInTopicInReputerRequest.delegator_address":
		value := x.DelegatorAddress
		return protoreflect.ValueOfString(value)
	case "emissions.v5.GetStakeFromDelegatorInTopicInReputerRequest.reputer_address":
		value := x.ReputerAddress
		return protoreflect.ValueOfString(value)
	case "emissions.v5.GetStakeFromDelegatorInTopicInReputerRequest.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetStakeFromDelegatorInTopicInReputerRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetStakeFromDelegatorInTopicInReputerRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetStakeFromDelegatorInTopicInReputerRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetStakeFromDelegatorInTopicInReputerRequest.delegator_address":
		x.DelegatorAddress = value.Interface().(string)
	case "emissions.v5.GetStakeFromDelegatorInTopicInReputerRequest.reputer_address":
		x.ReputerAddress = value.Interface().(string)
	case "emissions.v5.GetStakeFromDelegatorInTopicInReputerRequest.topic_id":
		x.TopicId = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetStakeFromDelegatorInTopicInReputerRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetStakeFromDelegatorInTopicInReputerRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetStakeFromDelegatorInTopicInReputerRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetStakeFromDelegatorInTopicInReputerRequest.delegator_address":
		panic(fmt.Errorf("field delegator_address of message emissions.v5.GetStakeFromDelegatorInTopicInReputerRequest is not mutable"))
	case "emissions.v5.GetStakeFromDelegatorInTopicInReputerRequest.reputer_address":
		panic(fmt.Errorf("field reputer_address of message emissions.v5.GetStakeFromDelegatorInTopicInReputerRequest is not mutable"))
	case "emissions.v5.GetStakeFromDelegatorInTopicInReputerRequest.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.GetStakeFromDelegatorInTopicInReputerRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetStakeFromDelegatorInTopicInReputerRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetStakeFromDelegatorInTopicInReputerRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetStakeFromDelegatorInTopicInReputerRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetStakeFromDelegatorInTopicInReputerRequest.delegator_address":
		return protoreflect.ValueOfString("")
	case "emissions.v5.GetStakeFromDelegatorInTopicInReputerRequest.reputer_address":
		return protoreflect.ValueOfString("")
	case "emissions.v5.GetStakeFromDelegatorInTopicInReputerRequest.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetStakeFromDelegatorInTopicInReputerRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetStakeFromDelegatorInTopicInReputerRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetStakeFromDelegatorInTopicInReputerRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetStakeFromDelegatorInTopicInReputerRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetStakeFromDelegatorInTopicInReputerRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetStakeFromDelegatorInTopicInReputerRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetStakeFromDelegatorInTopicInReputerRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetStakeFromDelegatorInTopicInReputerRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetStakeFromDelegatorInTopicInReputerRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.DelegatorAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ReputerAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetStakeFromDelegatorInTopicInReputerRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x18
		}
		if len(x.ReputerAddress) > 0 {
			i -= len(x.ReputerAddress)
			copy(dAtA[i:], x.ReputerAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ReputerAddress)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.DelegatorAddress) > 0 {
			i -= len(x.DelegatorAddress)
			copy(dAtA[i:], x.DelegatorAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.DelegatorAddress)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetStakeFromDelegatorInTopicInReputerRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetStakeFromDelegatorInTopicInReputerRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetStakeFromDelegatorInTopicInReputerRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field DelegatorAddress", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.DelegatorAddress = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ReputerAddress", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ReputerAddress = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetStakeFromDelegatorInTopicInReputerResponse        protoreflect.MessageDescriptor
	fd_GetStakeFromDelegatorInTopicInReputerResponse_amount protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetStakeFromDelegatorInTopicInReputerResponse = File_emissions_v5_query_proto.Messages().ByName("GetStakeFromDelegatorInTopicInReputerResponse")
	fd_GetStakeFromDelegatorInTopicInReputerResponse_amount = md_GetStakeFromDelegatorInTopicInReputerResponse.Fields().ByName("amount")
}

var _ protoreflect.Message = (*fastReflection_GetStakeFromDelegatorInTopicInReputerResponse)(nil)

type fastReflection_GetStakeFromDelegatorInTopicInReputerResponse GetStakeFromDelegatorInTopicInReputerResponse

func (x *GetStakeFromDelegatorInTopicInReputerResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetStakeFromDelegatorInTopicInReputerResponse)(x)
}

func (x *GetStakeFromDelegatorInTopicInReputerResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetStakeFromDelegatorInTopicInReputerResponse_messageType fastReflection_GetStakeFromDelegatorInTopicInReputerResponse_messageType
var _ protoreflect.MessageType = fastReflection_GetStakeFromDelegatorInTopicInReputerResponse_messageType{}

type fastReflection_GetStakeFromDelegatorInTopicInReputerResponse_messageType struct{}

func (x fastReflection_GetStakeFromDelegatorInTopicInReputerResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetStakeFromDelegatorInTopicInReputerResponse)(nil)
}
func (x fastReflection_GetStakeFromDelegatorInTopicInReputerResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_GetStakeFromDelegatorInTopicInReputerResponse)
}
func (x fastReflection_GetStakeFromDelegatorInTopicInReputerResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetStakeFromDelegatorInTopicInReputerResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetStakeFromDelegatorInTopicInReputerResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_GetStakeFromDelegatorInTopicInReputerResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetStakeFromDelegatorInTopicInReputerResponse) Type() protoreflect.MessageType {
	return _fastReflection_GetStakeFromDelegatorInTopicInReputerResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetStakeFromDelegatorInTopicInReputerResponse) New() protoreflect.Message {
	return new(fastReflection_GetStakeFromDelegatorInTopicInReputerResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetStakeFromDelegatorInTopicInReputerResponse) Interface() protoreflect.ProtoMessage {
	return (*GetStakeFromDelegatorInTopicInReputerResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetStakeFromDelegatorInTopicInReputerResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Amount != "" {
		value := protoreflect.ValueOfString(x.Amount)
		if !f(fd_GetStakeFromDelegatorInTopicInReputerResponse_amount, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetStakeFromDelegatorInTopicInReputerResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetStakeFromDelegatorInTopicInReputerResponse.amount":
		return x.Amount != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetStakeFromDelegatorInTopicInReputerResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetStakeFromDelegatorInTopicInReputerResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetStakeFromDelegatorInTopicInReputerResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetStakeFromDelegatorInTopicInReputerResponse.amount":
		x.Amount = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetStakeFromDelegatorInTopicInReputerResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetStakeFromDelegatorInTopicInReputerResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetStakeFromDelegatorInTopicInReputerResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetStakeFromDelegatorInTopicInReputerResponse.amount":
		value := x.Amount
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetStakeFromDelegatorInTopicInReputerResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetStakeFromDelegatorInTopicInReputerResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetStakeFromDelegatorInTopicInReputerResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetStakeFromDelegatorInTopicInReputerResponse.amount":
		x.Amount = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetStakeFromDelegatorInTopicInReputerResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetStakeFromDelegatorInTopicInReputerResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetStakeFromDelegatorInTopicInReputerResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetStakeFromDelegatorInTopicInReputerResponse.amount":
		panic(fmt.Errorf("field amount of message emissions.v5.GetStakeFromDelegatorInTopicInReputerResponse is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetStakeFromDelegatorInTopicInReputerResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetStakeFromDelegatorInTopicInReputerResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetStakeFromDelegatorInTopicInReputerResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetStakeFromDelegatorInTopicInReputerResponse.amount":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetStakeFromDelegatorInTopicInReputerResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetStakeFromDelegatorInTopicInReputerResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetStakeFromDelegatorInTopicInReputerResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetStakeFromDelegatorInTopicInReputerResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetStakeFromDelegatorInTopicInReputerResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetStakeFromDelegatorInTopicInReputerResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetStakeFromDelegatorInTopicInReputerResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetStakeFromDelegatorInTopicInReputerResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetStakeFromDelegatorInTopicInReputerResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Amount)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetStakeFromDelegatorInTopicInReputerResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Amount) > 0 {
			i -= len(x.Amount)
			copy(dAtA[i:], x.Amount)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Amount)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetStakeFromDelegatorInTopicInReputerResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetStakeFromDelegatorInTopicInReputerResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetStakeFromDelegatorInTopicInReputerResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Amount = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetStakeFromDelegatorInTopicRequest                   protoreflect.MessageDescriptor
	fd_GetStakeFromDelegatorInTopicRequest_delegator_address protoreflect.FieldDescriptor
	fd_GetStakeFromDelegatorInTopicRequest_topic_id          protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetStakeFromDelegatorInTopicRequest = File_emissions_v5_query_proto.Messages().ByName("GetStakeFromDelegatorInTopicRequest")
	fd_GetStakeFromDelegatorInTopicRequest_delegator_address = md_GetStakeFromDelegatorInTopicRequest.Fields().ByName("delegator_address")
	fd_GetStakeFromDelegatorInTopicRequest_topic_id = md_GetStakeFromDelegatorInTopicRequest.Fields().ByName("topic_id")
}

var _ protoreflect.Message = (*fastReflection_GetStakeFromDelegatorInTopicRequest)(nil)

type fastReflection_GetStakeFromDelegatorInTopicRequest GetStakeFromDelegatorInTopicRequest

func (x *GetStakeFromDelegatorInTopicRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetStakeFromDelegatorInTopicRequest)(x)
}

func (x *GetStakeFromDelegatorInTopicRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetStakeFromDelegatorInTopicRequest_messageType fastReflection_GetStakeFromDelegatorInTopicRequest_messageType
var _ protoreflect.MessageType = fastReflection_GetStakeFromDelegatorInTopicRequest_messageType{}

type fastReflection_GetStakeFromDelegatorInTopicRequest_messageType struct{}

func (x fastReflection_GetStakeFromDelegatorInTopicRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetStakeFromDelegatorInTopicRequest)(nil)
}
func (x fastReflection_GetStakeFromDelegatorInTopicRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_GetStakeFromDelegatorInTopicRequest)
}
func (x fastReflection_GetStakeFromDelegatorInTopicRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetStakeFromDelegatorInTopicRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetStakeFromDelegatorInTopicRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_GetStakeFromDelegatorInTopicRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetStakeFromDelegatorInTopicRequest) Type() protoreflect.MessageType {
	return _fastReflection_GetStakeFromDelegatorInTopicRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetStakeFromDelegatorInTopicRequest) New() protoreflect.Message {
	return new(fastReflection_GetStakeFromDelegatorInTopicRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetStakeFromDelegatorInTopicRequest) Interface() protoreflect.ProtoMessage {
	return (*GetStakeFromDelegatorInTopicRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetStakeFromDelegatorInTopicRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.DelegatorAddress != "" {
		value := protoreflect.ValueOfString(x.DelegatorAddress)
		if !f(fd_GetStakeFromDelegatorInTopicRequest_delegator_address, value) {
			return
		}
	}
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_GetStakeFromDelegatorInTopicRequest_topic_id, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetStakeFromDelegatorInTopicRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetStakeFromDelegatorInTopicRequest.delegator_address":
		return x.DelegatorAddress != ""
	case "emissions.v5.GetStakeFromDelegatorInTopicRequest.topic_id":
		return x.TopicId != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetStakeFromDelegatorInTopicRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetStakeFromDelegatorInTopicRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetStakeFromDelegatorInTopicRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetStakeFromDelegatorInTopicRequest.delegator_address":
		x.DelegatorAddress = ""
	case "emissions.v5.GetStakeFromDelegatorInTopicRequest.topic_id":
		x.TopicId = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetStakeFromDelegatorInTopicRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetStakeFromDelegatorInTopicRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetStakeFromDelegatorInTopicRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetStakeFromDelegatorInTopicRequest.delegator_address":
		value := x.DelegatorAddress
		return protoreflect.ValueOfString(value)
	case "emissions.v5.GetStakeFromDelegatorInTopicRequest.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetStakeFromDelegatorInTopicRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetStakeFromDelegatorInTopicRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetStakeFromDelegatorInTopicRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetStakeFromDelegatorInTopicRequest.delegator_address":
		x.DelegatorAddress = value.Interface().(string)
	case "emissions.v5.GetStakeFromDelegatorInTopicRequest.topic_id":
		x.TopicId = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetStakeFromDelegatorInTopicRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetStakeFromDelegatorInTopicRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetStakeFromDelegatorInTopicRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetStakeFromDelegatorInTopicRequest.delegator_address":
		panic(fmt.Errorf("field delegator_address of message emissions.v5.GetStakeFromDelegatorInTopicRequest is not mutable"))
	case "emissions.v5.GetStakeFromDelegatorInTopicRequest.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.GetStakeFromDelegatorInTopicRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetStakeFromDelegatorInTopicRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetStakeFromDelegatorInTopicRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetStakeFromDelegatorInTopicRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetStakeFromDelegatorInTopicRequest.delegator_address":
		return protoreflect.ValueOfString("")
	case "emissions.v5.GetStakeFromDelegatorInTopicRequest.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetStakeFromDelegatorInTopicRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetStakeFromDelegatorInTopicRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetStakeFromDelegatorInTopicRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetStakeFromDelegatorInTopicRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetStakeFromDelegatorInTopicRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetStakeFromDelegatorInTopicRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetStakeFromDelegatorInTopicRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetStakeFromDelegatorInTopicRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetStakeFromDelegatorInTopicRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.DelegatorAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetStakeFromDelegatorInTopicRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x10
		}
		if len(x.DelegatorAddress) > 0 {
			i -= len(x.DelegatorAddress)
			copy(dAtA[i:], x.DelegatorAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.DelegatorAddress)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetStakeFromDelegatorInTopicRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetStakeFromDelegatorInTopicRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetStakeFromDelegatorInTopicRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field DelegatorAddress", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.DelegatorAddress = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetStakeFromDelegatorInTopicResponse        protoreflect.MessageDescriptor
	fd_GetStakeFromDelegatorInTopicResponse_amount protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetStakeFromDelegatorInTopicResponse = File_emissions_v5_query_proto.Messages().ByName("GetStakeFromDelegatorInTopicResponse")
	fd_GetStakeFromDelegatorInTopicResponse_amount = md_GetStakeFromDelegatorInTopicResponse.Fields().ByName("amount")
}

var _ protoreflect.Message = (*fastReflection_GetStakeFromDelegatorInTopicResponse)(nil)

type fastReflection_GetStakeFromDelegatorInTopicResponse GetStakeFromDelegatorInTopicResponse

func (x *GetStakeFromDelegatorInTopicResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetStakeFromDelegatorInTopicResponse)(x)
}

func (x *GetStakeFromDelegatorInTopicResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetStakeFromDelegatorInTopicResponse_messageType fastReflection_GetStakeFromDelegatorInTopicResponse_messageType
var _ protoreflect.MessageType = fastReflection_GetStakeFromDelegatorInTopicResponse_messageType{}

type fastReflection_GetStakeFromDelegatorInTopicResponse_messageType struct{}

func (x fastReflection_GetStakeFromDelegatorInTopicResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetStakeFromDelegatorInTopicResponse)(nil)
}
func (x fastReflection_GetStakeFromDelegatorInTopicResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_GetStakeFromDelegatorInTopicResponse)
}
func (x fastReflection_GetStakeFromDelegatorInTopicResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetStakeFromDelegatorInTopicResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetStakeFromDelegatorInTopicResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_GetStakeFromDelegatorInTopicResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetStakeFromDelegatorInTopicResponse) Type() protoreflect.MessageType {
	return _fastReflection_GetStakeFromDelegatorInTopicResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetStakeFromDelegatorInTopicResponse) New() protoreflect.Message {
	return new(fastReflection_GetStakeFromDelegatorInTopicResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetStakeFromDelegatorInTopicResponse) Interface() protoreflect.ProtoMessage {
	return (*GetStakeFromDelegatorInTopicResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetStakeFromDelegatorInTopicResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Amount != "" {
		value := protoreflect.ValueOfString(x.Amount)
		if !f(fd_GetStakeFromDelegatorInTopicResponse_amount, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetStakeFromDelegatorInTopicResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetStakeFromDelegatorInTopicResponse.amount":
		return x.Amount != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetStakeFromDelegatorInTopicResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetStakeFromDelegatorInTopicResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetStakeFromDelegatorInTopicResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetStakeFromDelegatorInTopicResponse.amount":
		x.Amount = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetStakeFromDelegatorInTopicResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetStakeFromDelegatorInTopicResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetStakeFromDelegatorInTopicResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetStakeFromDelegatorInTopicResponse.amount":
		value := x.Amount
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetStakeFromDelegatorInTopicResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetStakeFromDelegatorInTopicResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetStakeFromDelegatorInTopicResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetStakeFromDelegatorInTopicResponse.amount":
		x.Amount = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetStakeFromDelegatorInTopicResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetStakeFromDelegatorInTopicResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetStakeFromDelegatorInTopicResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetStakeFromDelegatorInTopicResponse.amount":
		panic(fmt.Errorf("field amount of message emissions.v5.GetStakeFromDelegatorInTopicResponse is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetStakeFromDelegatorInTopicResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetStakeFromDelegatorInTopicResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetStakeFromDelegatorInTopicResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetStakeFromDelegatorInTopicResponse.amount":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetStakeFromDelegatorInTopicResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetStakeFromDelegatorInTopicResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetStakeFromDelegatorInTopicResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetStakeFromDelegatorInTopicResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetStakeFromDelegatorInTopicResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetStakeFromDelegatorInTopicResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetStakeFromDelegatorInTopicResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetStakeFromDelegatorInTopicResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetStakeFromDelegatorInTopicResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Amount)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetStakeFromDelegatorInTopicResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Amount) > 0 {
			i -= len(x.Amount)
			copy(dAtA[i:], x.Amount)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Amount)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetStakeFromDelegatorInTopicResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetStakeFromDelegatorInTopicResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetStakeFromDelegatorInTopicResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Amount = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetTopicStakeRequest          protoreflect.MessageDescriptor
	fd_GetTopicStakeRequest_topic_id protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetTopicStakeRequest = File_emissions_v5_query_proto.Messages().ByName("GetTopicStakeRequest")
	fd_GetTopicStakeRequest_topic_id = md_GetTopicStakeRequest.Fields().ByName("topic_id")
}

var _ protoreflect.Message = (*fastReflection_GetTopicStakeRequest)(nil)

type fastReflection_GetTopicStakeRequest GetTopicStakeRequest

func (x *GetTopicStakeRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetTopicStakeRequest)(x)
}

func (x *GetTopicStakeRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetTopicStakeRequest_messageType fastReflection_GetTopicStakeRequest_messageType
var _ protoreflect.MessageType = fastReflection_GetTopicStakeRequest_messageType{}

type fastReflection_GetTopicStakeRequest_messageType struct{}

func (x fastReflection_GetTopicStakeRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetTopicStakeRequest)(nil)
}
func (x fastReflection_GetTopicStakeRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_GetTopicStakeRequest)
}
func (x fastReflection_GetTopicStakeRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetTopicStakeRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetTopicStakeRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_GetTopicStakeRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetTopicStakeRequest) Type() protoreflect.MessageType {
	return _fastReflection_GetTopicStakeRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetTopicStakeRequest) New() protoreflect.Message {
	return new(fastReflection_GetTopicStakeRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetTopicStakeRequest) Interface() protoreflect.ProtoMessage {
	return (*GetTopicStakeRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetTopicStakeRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_GetTopicStakeRequest_topic_id, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetTopicStakeRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetTopicStakeRequest.topic_id":
		return x.TopicId != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetTopicStakeRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetTopicStakeRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetTopicStakeRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetTopicStakeRequest.topic_id":
		x.TopicId = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetTopicStakeRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetTopicStakeRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetTopicStakeRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetTopicStakeRequest.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetTopicStakeRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetTopicStakeRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetTopicStakeRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetTopicStakeRequest.topic_id":
		x.TopicId = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetTopicStakeRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetTopicStakeRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetTopicStakeRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetTopicStakeRequest.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.GetTopicStakeRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetTopicStakeRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetTopicStakeRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetTopicStakeRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetTopicStakeRequest.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetTopicStakeRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetTopicStakeRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetTopicStakeRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetTopicStakeRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetTopicStakeRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetTopicStakeRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetTopicStakeRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetTopicStakeRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetTopicStakeRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetTopicStakeRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetTopicStakeRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetTopicStakeRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetTopicStakeRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetTopicStakeResponse        protoreflect.MessageDescriptor
	fd_GetTopicStakeResponse_amount protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetTopicStakeResponse = File_emissions_v5_query_proto.Messages().ByName("GetTopicStakeResponse")
	fd_GetTopicStakeResponse_amount = md_GetTopicStakeResponse.Fields().ByName("amount")
}

var _ protoreflect.Message = (*fastReflection_GetTopicStakeResponse)(nil)

type fastReflection_GetTopicStakeResponse GetTopicStakeResponse

func (x *GetTopicStakeResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetTopicStakeResponse)(x)
}

func (x *GetTopicStakeResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetTopicStakeResponse_messageType fastReflection_GetTopicStakeResponse_messageType
var _ protoreflect.MessageType = fastReflection_GetTopicStakeResponse_messageType{}

type fastReflection_GetTopicStakeResponse_messageType struct{}

func (x fastReflection_GetTopicStakeResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetTopicStakeResponse)(nil)
}
func (x fastReflection_GetTopicStakeResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_GetTopicStakeResponse)
}
func (x fastReflection_GetTopicStakeResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetTopicStakeResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetTopicStakeResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_GetTopicStakeResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetTopicStakeResponse) Type() protoreflect.MessageType {
	return _fastReflection_GetTopicStakeResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetTopicStakeResponse) New() protoreflect.Message {
	return new(fastReflection_GetTopicStakeResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetTopicStakeResponse) Interface() protoreflect.ProtoMessage {
	return (*GetTopicStakeResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetTopicStakeResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Amount != "" {
		value := protoreflect.ValueOfString(x.Amount)
		if !f(fd_GetTopicStakeResponse_amount, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetTopicStakeResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetTopicStakeResponse.amount":
		return x.Amount != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetTopicStakeResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetTopicStakeResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetTopicStakeResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetTopicStakeResponse.amount":
		x.Amount = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetTopicStakeResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetTopicStakeResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetTopicStakeResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetTopicStakeResponse.amount":
		value := x.Amount
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetTopicStakeResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetTopicStakeResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetTopicStakeResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetTopicStakeResponse.amount":
		x.Amount = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetTopicStakeResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetTopicStakeResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetTopicStakeResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetTopicStakeResponse.amount":
		panic(fmt.Errorf("field amount of message emissions.v5.GetTopicStakeResponse is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetTopicStakeResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetTopicStakeResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetTopicStakeResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetTopicStakeResponse.amount":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetTopicStakeResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetTopicStakeResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetTopicStakeResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetTopicStakeResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetTopicStakeResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetTopicStakeResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetTopicStakeResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetTopicStakeResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetTopicStakeResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Amount)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetTopicStakeResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Amount) > 0 {
			i -= len(x.Amount)
			copy(dAtA[i:], x.Amount)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Amount)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetTopicStakeResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetTopicStakeResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetTopicStakeResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Amount = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetNetworkLossBundleAtBlockRequest              protoreflect.MessageDescriptor
	fd_GetNetworkLossBundleAtBlockRequest_topic_id     protoreflect.FieldDescriptor
	fd_GetNetworkLossBundleAtBlockRequest_block_height protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetNetworkLossBundleAtBlockRequest = File_emissions_v5_query_proto.Messages().ByName("GetNetworkLossBundleAtBlockRequest")
	fd_GetNetworkLossBundleAtBlockRequest_topic_id = md_GetNetworkLossBundleAtBlockRequest.Fields().ByName("topic_id")
	fd_GetNetworkLossBundleAtBlockRequest_block_height = md_GetNetworkLossBundleAtBlockRequest.Fields().ByName("block_height")
}

var _ protoreflect.Message = (*fastReflection_GetNetworkLossBundleAtBlockRequest)(nil)

type fastReflection_GetNetworkLossBundleAtBlockRequest GetNetworkLossBundleAtBlockRequest

func (x *GetNetworkLossBundleAtBlockRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetNetworkLossBundleAtBlockRequest)(x)
}

func (x *GetNetworkLossBundleAtBlockRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetNetworkLossBundleAtBlockRequest_messageType fastReflection_GetNetworkLossBundleAtBlockRequest_messageType
var _ protoreflect.MessageType = fastReflection_GetNetworkLossBundleAtBlockRequest_messageType{}

type fastReflection_GetNetworkLossBundleAtBlockRequest_messageType struct{}

func (x fastReflection_GetNetworkLossBundleAtBlockRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetNetworkLossBundleAtBlockRequest)(nil)
}
func (x fastReflection_GetNetworkLossBundleAtBlockRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_GetNetworkLossBundleAtBlockRequest)
}
func (x fastReflection_GetNetworkLossBundleAtBlockRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetNetworkLossBundleAtBlockRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetNetworkLossBundleAtBlockRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_GetNetworkLossBundleAtBlockRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetNetworkLossBundleAtBlockRequest) Type() protoreflect.MessageType {
	return _fastReflection_GetNetworkLossBundleAtBlockRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetNetworkLossBundleAtBlockRequest) New() protoreflect.Message {
	return new(fastReflection_GetNetworkLossBundleAtBlockRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetNetworkLossBundleAtBlockRequest) Interface() protoreflect.ProtoMessage {
	return (*GetNetworkLossBundleAtBlockRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetNetworkLossBundleAtBlockRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_GetNetworkLossBundleAtBlockRequest_topic_id, value) {
			return
		}
	}
	if x.BlockHeight != int64(0) {
		value := protoreflect.ValueOfInt64(x.BlockHeight)
		if !f(fd_GetNetworkLossBundleAtBlockRequest_block_height, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetNetworkLossBundleAtBlockRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetNetworkLossBundleAtBlockRequest.topic_id":
		return x.TopicId != uint64(0)
	case "emissions.v5.GetNetworkLossBundleAtBlockRequest.block_height":
		return x.BlockHeight != int64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetNetworkLossBundleAtBlockRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetNetworkLossBundleAtBlockRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetNetworkLossBundleAtBlockRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetNetworkLossBundleAtBlockRequest.topic_id":
		x.TopicId = uint64(0)
	case "emissions.v5.GetNetworkLossBundleAtBlockRequest.block_height":
		x.BlockHeight = int64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetNetworkLossBundleAtBlockRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetNetworkLossBundleAtBlockRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetNetworkLossBundleAtBlockRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetNetworkLossBundleAtBlockRequest.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	case "emissions.v5.GetNetworkLossBundleAtBlockRequest.block_height":
		value := x.BlockHeight
		return protoreflect.ValueOfInt64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetNetworkLossBundleAtBlockRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetNetworkLossBundleAtBlockRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetNetworkLossBundleAtBlockRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetNetworkLossBundleAtBlockRequest.topic_id":
		x.TopicId = value.Uint()
	case "emissions.v5.GetNetworkLossBundleAtBlockRequest.block_height":
		x.BlockHeight = value.Int()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetNetworkLossBundleAtBlockRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetNetworkLossBundleAtBlockRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetNetworkLossBundleAtBlockRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetNetworkLossBundleAtBlockRequest.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.GetNetworkLossBundleAtBlockRequest is not mutable"))
	case "emissions.v5.GetNetworkLossBundleAtBlockRequest.block_height":
		panic(fmt.Errorf("field block_height of message emissions.v5.GetNetworkLossBundleAtBlockRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetNetworkLossBundleAtBlockRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetNetworkLossBundleAtBlockRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetNetworkLossBundleAtBlockRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetNetworkLossBundleAtBlockRequest.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "emissions.v5.GetNetworkLossBundleAtBlockRequest.block_height":
		return protoreflect.ValueOfInt64(int64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetNetworkLossBundleAtBlockRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetNetworkLossBundleAtBlockRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetNetworkLossBundleAtBlockRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetNetworkLossBundleAtBlockRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetNetworkLossBundleAtBlockRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetNetworkLossBundleAtBlockRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetNetworkLossBundleAtBlockRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetNetworkLossBundleAtBlockRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetNetworkLossBundleAtBlockRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		if x.BlockHeight != 0 {
			n += 1 + runtime.Sov(uint64(x.BlockHeight))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetNetworkLossBundleAtBlockRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.BlockHeight != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.BlockHeight))
			i--
			dAtA[i] = 0x10
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetNetworkLossBundleAtBlockRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetNetworkLossBundleAtBlockRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetNetworkLossBundleAtBlockRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BlockHeight", wireType)
				}
				x.BlockHeight = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.BlockHeight |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetNetworkLossBundleAtBlockResponse             protoreflect.MessageDescriptor
	fd_GetNetworkLossBundleAtBlockResponse_loss_bundle protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetNetworkLossBundleAtBlockResponse = File_emissions_v5_query_proto.Messages().ByName("GetNetworkLossBundleAtBlockResponse")
	fd_GetNetworkLossBundleAtBlockResponse_loss_bundle = md_GetNetworkLossBundleAtBlockResponse.Fields().ByName("loss_bundle")
}

var _ protoreflect.Message = (*fastReflection_GetNetworkLossBundleAtBlockResponse)(nil)

type fastReflection_GetNetworkLossBundleAtBlockResponse GetNetworkLossBundleAtBlockResponse

func (x *GetNetworkLossBundleAtBlockResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetNetworkLossBundleAtBlockResponse)(x)
}

func (x *GetNetworkLossBundleAtBlockResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetNetworkLossBundleAtBlockResponse_messageType fastReflection_GetNetworkLossBundleAtBlockResponse_messageType
var _ protoreflect.MessageType = fastReflection_GetNetworkLossBundleAtBlockResponse_messageType{}

type fastReflection_GetNetworkLossBundleAtBlockResponse_messageType struct{}

func (x fastReflection_GetNetworkLossBundleAtBlockResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetNetworkLossBundleAtBlockResponse)(nil)
}
func (x fastReflection_GetNetworkLossBundleAtBlockResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_GetNetworkLossBundleAtBlockResponse)
}
func (x fastReflection_GetNetworkLossBundleAtBlockResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetNetworkLossBundleAtBlockResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetNetworkLossBundleAtBlockResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_GetNetworkLossBundleAtBlockResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetNetworkLossBundleAtBlockResponse) Type() protoreflect.MessageType {
	return _fastReflection_GetNetworkLossBundleAtBlockResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetNetworkLossBundleAtBlockResponse) New() protoreflect.Message {
	return new(fastReflection_GetNetworkLossBundleAtBlockResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetNetworkLossBundleAtBlockResponse) Interface() protoreflect.ProtoMessage {
	return (*GetNetworkLossBundleAtBlockResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetNetworkLossBundleAtBlockResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.LossBundle != nil {
		value := protoreflect.ValueOfMessage(x.LossBundle.ProtoReflect())
		if !f(fd_GetNetworkLossBundleAtBlockResponse_loss_bundle, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetNetworkLossBundleAtBlockResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetNetworkLossBundleAtBlockResponse.loss_bundle":
		return x.LossBundle != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetNetworkLossBundleAtBlockResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetNetworkLossBundleAtBlockResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetNetworkLossBundleAtBlockResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetNetworkLossBundleAtBlockResponse.loss_bundle":
		x.LossBundle = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetNetworkLossBundleAtBlockResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetNetworkLossBundleAtBlockResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetNetworkLossBundleAtBlockResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetNetworkLossBundleAtBlockResponse.loss_bundle":
		value := x.LossBundle
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetNetworkLossBundleAtBlockResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetNetworkLossBundleAtBlockResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetNetworkLossBundleAtBlockResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetNetworkLossBundleAtBlockResponse.loss_bundle":
		x.LossBundle = value.Message().Interface().(*v3.ValueBundle)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetNetworkLossBundleAtBlockResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetNetworkLossBundleAtBlockResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetNetworkLossBundleAtBlockResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetNetworkLossBundleAtBlockResponse.loss_bundle":
		if x.LossBundle == nil {
			x.LossBundle = new(v3.ValueBundle)
		}
		return protoreflect.ValueOfMessage(x.LossBundle.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetNetworkLossBundleAtBlockResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetNetworkLossBundleAtBlockResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetNetworkLossBundleAtBlockResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetNetworkLossBundleAtBlockResponse.loss_bundle":
		m := new(v3.ValueBundle)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetNetworkLossBundleAtBlockResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetNetworkLossBundleAtBlockResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetNetworkLossBundleAtBlockResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetNetworkLossBundleAtBlockResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetNetworkLossBundleAtBlockResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetNetworkLossBundleAtBlockResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetNetworkLossBundleAtBlockResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetNetworkLossBundleAtBlockResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetNetworkLossBundleAtBlockResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.LossBundle != nil {
			l = options.Size(x.LossBundle)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetNetworkLossBundleAtBlockResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.LossBundle != nil {
			encoded, err := options.Marshal(x.LossBundle)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetNetworkLossBundleAtBlockResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetNetworkLossBundleAtBlockResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetNetworkLossBundleAtBlockResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field LossBundle", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.LossBundle == nil {
					x.LossBundle = &v3.ValueBundle{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.LossBundle); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetNextTopicIdRequest protoreflect.MessageDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetNextTopicIdRequest = File_emissions_v5_query_proto.Messages().ByName("GetNextTopicIdRequest")
}

var _ protoreflect.Message = (*fastReflection_GetNextTopicIdRequest)(nil)

type fastReflection_GetNextTopicIdRequest GetNextTopicIdRequest

func (x *GetNextTopicIdRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetNextTopicIdRequest)(x)
}

func (x *GetNextTopicIdRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetNextTopicIdRequest_messageType fastReflection_GetNextTopicIdRequest_messageType
var _ protoreflect.MessageType = fastReflection_GetNextTopicIdRequest_messageType{}

type fastReflection_GetNextTopicIdRequest_messageType struct{}

func (x fastReflection_GetNextTopicIdRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetNextTopicIdRequest)(nil)
}
func (x fastReflection_GetNextTopicIdRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_GetNextTopicIdRequest)
}
func (x fastReflection_GetNextTopicIdRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetNextTopicIdRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetNextTopicIdRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_GetNextTopicIdRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetNextTopicIdRequest) Type() protoreflect.MessageType {
	return _fastReflection_GetNextTopicIdRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetNextTopicIdRequest) New() protoreflect.Message {
	return new(fastReflection_GetNextTopicIdRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetNextTopicIdRequest) Interface() protoreflect.ProtoMessage {
	return (*GetNextTopicIdRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetNextTopicIdRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetNextTopicIdRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetNextTopicIdRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetNextTopicIdRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetNextTopicIdRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetNextTopicIdRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetNextTopicIdRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetNextTopicIdRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetNextTopicIdRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetNextTopicIdRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetNextTopicIdRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetNextTopicIdRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetNextTopicIdRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetNextTopicIdRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetNextTopicIdRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetNextTopicIdRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetNextTopicIdRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetNextTopicIdRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetNextTopicIdRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetNextTopicIdRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetNextTopicIdRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetNextTopicIdRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetNextTopicIdRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetNextTopicIdRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetNextTopicIdRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetNextTopicIdRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetNextTopicIdRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetNextTopicIdRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetNextTopicIdRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetNextTopicIdRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetNextTopicIdResponse               protoreflect.MessageDescriptor
	fd_GetNextTopicIdResponse_next_topic_id protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetNextTopicIdResponse = File_emissions_v5_query_proto.Messages().ByName("GetNextTopicIdResponse")
	fd_GetNextTopicIdResponse_next_topic_id = md_GetNextTopicIdResponse.Fields().ByName("next_topic_id")
}

var _ protoreflect.Message = (*fastReflection_GetNextTopicIdResponse)(nil)

type fastReflection_GetNextTopicIdResponse GetNextTopicIdResponse

func (x *GetNextTopicIdResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetNextTopicIdResponse)(x)
}

func (x *GetNextTopicIdResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetNextTopicIdResponse_messageType fastReflection_GetNextTopicIdResponse_messageType
var _ protoreflect.MessageType = fastReflection_GetNextTopicIdResponse_messageType{}

type fastReflection_GetNextTopicIdResponse_messageType struct{}

func (x fastReflection_GetNextTopicIdResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetNextTopicIdResponse)(nil)
}
func (x fastReflection_GetNextTopicIdResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_GetNextTopicIdResponse)
}
func (x fastReflection_GetNextTopicIdResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetNextTopicIdResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetNextTopicIdResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_GetNextTopicIdResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetNextTopicIdResponse) Type() protoreflect.MessageType {
	return _fastReflection_GetNextTopicIdResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetNextTopicIdResponse) New() protoreflect.Message {
	return new(fastReflection_GetNextTopicIdResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetNextTopicIdResponse) Interface() protoreflect.ProtoMessage {
	return (*GetNextTopicIdResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetNextTopicIdResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.NextTopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.NextTopicId)
		if !f(fd_GetNextTopicIdResponse_next_topic_id, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetNextTopicIdResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetNextTopicIdResponse.next_topic_id":
		return x.NextTopicId != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetNextTopicIdResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetNextTopicIdResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetNextTopicIdResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetNextTopicIdResponse.next_topic_id":
		x.NextTopicId = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetNextTopicIdResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetNextTopicIdResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetNextTopicIdResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetNextTopicIdResponse.next_topic_id":
		value := x.NextTopicId
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetNextTopicIdResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetNextTopicIdResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetNextTopicIdResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetNextTopicIdResponse.next_topic_id":
		x.NextTopicId = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetNextTopicIdResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetNextTopicIdResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetNextTopicIdResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetNextTopicIdResponse.next_topic_id":
		panic(fmt.Errorf("field next_topic_id of message emissions.v5.GetNextTopicIdResponse is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetNextTopicIdResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetNextTopicIdResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetNextTopicIdResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetNextTopicIdResponse.next_topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetNextTopicIdResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetNextTopicIdResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetNextTopicIdResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetNextTopicIdResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetNextTopicIdResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetNextTopicIdResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetNextTopicIdResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetNextTopicIdResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetNextTopicIdResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.NextTopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.NextTopicId))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetNextTopicIdResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.NextTopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.NextTopicId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetNextTopicIdResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetNextTopicIdResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetNextTopicIdResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field NextTopicId", wireType)
				}
				x.NextTopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.NextTopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetTopicRequest          protoreflect.MessageDescriptor
	fd_GetTopicRequest_topic_id protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetTopicRequest = File_emissions_v5_query_proto.Messages().ByName("GetTopicRequest")
	fd_GetTopicRequest_topic_id = md_GetTopicRequest.Fields().ByName("topic_id")
}

var _ protoreflect.Message = (*fastReflection_GetTopicRequest)(nil)

type fastReflection_GetTopicRequest GetTopicRequest

func (x *GetTopicRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetTopicRequest)(x)
}

func (x *GetTopicRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetTopicRequest_messageType fastReflection_GetTopicRequest_messageType
var _ protoreflect.MessageType = fastReflection_GetTopicRequest_messageType{}

type fastReflection_GetTopicRequest_messageType struct{}

func (x fastReflection_GetTopicRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetTopicRequest)(nil)
}
func (x fastReflection_GetTopicRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_GetTopicRequest)
}
func (x fastReflection_GetTopicRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetTopicRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetTopicRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_GetTopicRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetTopicRequest) Type() protoreflect.MessageType {
	return _fastReflection_GetTopicRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetTopicRequest) New() protoreflect.Message {
	return new(fastReflection_GetTopicRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetTopicRequest) Interface() protoreflect.ProtoMessage {
	return (*GetTopicRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetTopicRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_GetTopicRequest_topic_id, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetTopicRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetTopicRequest.topic_id":
		return x.TopicId != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetTopicRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetTopicRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetTopicRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetTopicRequest.topic_id":
		x.TopicId = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetTopicRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetTopicRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetTopicRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetTopicRequest.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetTopicRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetTopicRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetTopicRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetTopicRequest.topic_id":
		x.TopicId = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetTopicRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetTopicRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetTopicRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetTopicRequest.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.GetTopicRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetTopicRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetTopicRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetTopicRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetTopicRequest.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetTopicRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetTopicRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetTopicRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetTopicRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetTopicRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetTopicRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetTopicRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetTopicRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetTopicRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetTopicRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetTopicRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetTopicRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetTopicRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetTopicResponse                   protoreflect.MessageDescriptor
	fd_GetTopicResponse_topic             protoreflect.FieldDescriptor
	fd_GetTopicResponse_weight            protoreflect.FieldDescriptor
	fd_GetTopicResponse_effective_revenue protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetTopicResponse = File_emissions_v5_query_proto.Messages().ByName("GetTopicResponse")
	fd_GetTopicResponse_topic = md_GetTopicResponse.Fields().ByName("topic")
	fd_GetTopicResponse_weight = md_GetTopicResponse.Fields().ByName("weight")
	fd_GetTopicResponse_effective_revenue = md_GetTopicResponse.Fields().ByName("effective_revenue")
}

var _ protoreflect.Message = (*fastReflection_GetTopicResponse)(nil)

type fastReflection_GetTopicResponse GetTopicResponse

func (x *GetTopicResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetTopicResponse)(x)
}

func (x *GetTopicResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetTopicResponse_messageType fastReflection_GetTopicResponse_messageType
var _ protoreflect.MessageType = fastReflection_GetTopicResponse_messageType{}

type fastReflection_GetTopicResponse_messageType struct{}

func (x fastReflection_GetTopicResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetTopicResponse)(nil)
}
func (x fastReflection_GetTopicResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_GetTopicResponse)
}
func (x fastReflection_GetTopicResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetTopicResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetTopicResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_GetTopicResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetTopicResponse) Type() protoreflect.MessageType {
	return _fastReflection_GetTopicResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetTopicResponse) New() protoreflect.Message {
	return new(fastReflection_GetTopicResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetTopicResponse) Interface() protoreflect.ProtoMessage {
	return (*GetTopicResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetTopicResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Topic != nil {
		value := protoreflect.ValueOfMessage(x.Topic.ProtoReflect())
		if !f(fd_GetTopicResponse_topic, value) {
			return
		}
	}
	if x.Weight != "" {
		value := protoreflect.ValueOfString(x.Weight)
		if !f(fd_GetTopicResponse_weight, value) {
			return
		}
	}
	if x.EffectiveRevenue != "" {
		value := protoreflect.ValueOfString(x.EffectiveRevenue)
		if !f(fd_GetTopicResponse_effective_revenue, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetTopicResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetTopicResponse.topic":
		return x.Topic != nil
	case "emissions.v5.GetTopicResponse.weight":
		return x.Weight != ""
	case "emissions.v5.GetTopicResponse.effective_revenue":
		return x.EffectiveRevenue != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetTopicResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetTopicResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetTopicResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetTopicResponse.topic":
		x.Topic = nil
	case "emissions.v5.GetTopicResponse.weight":
		x.Weight = ""
	case "emissions.v5.GetTopicResponse.effective_revenue":
		x.EffectiveRevenue = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetTopicResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetTopicResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetTopicResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetTopicResponse.topic":
		value := x.Topic
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "emissions.v5.GetTopicResponse.weight":
		value := x.Weight
		return protoreflect.ValueOfString(value)
	case "emissions.v5.GetTopicResponse.effective_revenue":
		value := x.EffectiveRevenue
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetTopicResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetTopicResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetTopicResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetTopicResponse.topic":
		x.Topic = value.Message().Interface().(*v3.Topic)
	case "emissions.v5.GetTopicResponse.weight":
		x.Weight = value.Interface().(string)
	case "emissions.v5.GetTopicResponse.effective_revenue":
		x.EffectiveRevenue = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetTopicResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetTopicResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetTopicResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetTopicResponse.topic":
		if x.Topic == nil {
			x.Topic = new(v3.Topic)
		}
		return protoreflect.ValueOfMessage(x.Topic.ProtoReflect())
	case "emissions.v5.GetTopicResponse.weight":
		panic(fmt.Errorf("field weight of message emissions.v5.GetTopicResponse is not mutable"))
	case "emissions.v5.GetTopicResponse.effective_revenue":
		panic(fmt.Errorf("field effective_revenue of message emissions.v5.GetTopicResponse is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetTopicResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetTopicResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetTopicResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetTopicResponse.topic":
		m := new(v3.Topic)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "emissions.v5.GetTopicResponse.weight":
		return protoreflect.ValueOfString("")
	case "emissions.v5.GetTopicResponse.effective_revenue":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetTopicResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetTopicResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetTopicResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetTopicResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetTopicResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetTopicResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetTopicResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetTopicResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetTopicResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Topic != nil {
			l = options.Size(x.Topic)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Weight)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.EffectiveRevenue)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetTopicResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.EffectiveRevenue) > 0 {
			i -= len(x.EffectiveRevenue)
			copy(dAtA[i:], x.EffectiveRevenue)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.EffectiveRevenue)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.Weight) > 0 {
			i -= len(x.Weight)
			copy(dAtA[i:], x.Weight)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Weight)))
			i--
			dAtA[i] = 0x12
		}
		if x.Topic != nil {
			encoded, err := options.Marshal(x.Topic)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetTopicResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetTopicResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetTopicResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Topic", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Topic == nil {
					x.Topic = &v3.Topic{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Topic); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Weight", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Weight = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field EffectiveRevenue", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.EffectiveRevenue = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetActiveTopicsRequest            protoreflect.MessageDescriptor
	fd_GetActiveTopicsRequest_pagination protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetActiveTopicsRequest = File_emissions_v5_query_proto.Messages().ByName("GetActiveTopicsRequest")
	fd_GetActiveTopicsRequest_pagination = md_GetActiveTopicsRequest.Fields().ByName("pagination")
}

var _ protoreflect.Message = (*fastReflection_GetActiveTopicsRequest)(nil)

type fastReflection_GetActiveTopicsRequest GetActiveTopicsRequest

func (x *GetActiveTopicsRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetActiveTopicsRequest)(x)
}

func (x *GetActiveTopicsRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetActiveTopicsRequest_messageType fastReflection_GetActiveTopicsRequest_messageType
var _ protoreflect.MessageType = fastReflection_GetActiveTopicsRequest_messageType{}

type fastReflection_GetActiveTopicsRequest_messageType struct{}

func (x fastReflection_GetActiveTopicsRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetActiveTopicsRequest)(nil)
}
func (x fastReflection_GetActiveTopicsRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_GetActiveTopicsRequest)
}
func (x fastReflection_GetActiveTopicsRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetActiveTopicsRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetActiveTopicsRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_GetActiveTopicsRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetActiveTopicsRequest) Type() protoreflect.MessageType {
	return _fastReflection_GetActiveTopicsRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetActiveTopicsRequest) New() protoreflect.Message {
	return new(fastReflection_GetActiveTopicsRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetActiveTopicsRequest) Interface() protoreflect.ProtoMessage {
	return (*GetActiveTopicsRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetActiveTopicsRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Pagination != nil {
		value := protoreflect.ValueOfMessage(x.Pagination.ProtoReflect())
		if !f(fd_GetActiveTopicsRequest_pagination, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetActiveTopicsRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetActiveTopicsRequest.pagination":
		return x.Pagination != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetActiveTopicsRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetActiveTopicsRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetActiveTopicsRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetActiveTopicsRequest.pagination":
		x.Pagination = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetActiveTopicsRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetActiveTopicsRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetActiveTopicsRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetActiveTopicsRequest.pagination":
		value := x.Pagination
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetActiveTopicsRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetActiveTopicsRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetActiveTopicsRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetActiveTopicsRequest.pagination":
		x.Pagination = value.Message().Interface().(*v3.SimpleCursorPaginationRequest)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetActiveTopicsRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetActiveTopicsRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetActiveTopicsRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetActiveTopicsRequest.pagination":
		if x.Pagination == nil {
			x.Pagination = new(v3.SimpleCursorPaginationRequest)
		}
		return protoreflect.ValueOfMessage(x.Pagination.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetActiveTopicsRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetActiveTopicsRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetActiveTopicsRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetActiveTopicsRequest.pagination":
		m := new(v3.SimpleCursorPaginationRequest)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetActiveTopicsRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetActiveTopicsRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetActiveTopicsRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetActiveTopicsRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetActiveTopicsRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetActiveTopicsRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetActiveTopicsRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetActiveTopicsRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetActiveTopicsRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Pagination != nil {
			l = options.Size(x.Pagination)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetActiveTopicsRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Pagination != nil {
			encoded, err := options.Marshal(x.Pagination)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetActiveTopicsRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetActiveTopicsRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetActiveTopicsRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Pagination", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Pagination == nil {
					x.Pagination = &v3.SimpleCursorPaginationRequest{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Pagination); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_GetActiveTopicsResponse_1_list)(nil)

type _GetActiveTopicsResponse_1_list struct {
	list *[]*v3.Topic
}

func (x *_GetActiveTopicsResponse_1_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GetActiveTopicsResponse_1_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GetActiveTopicsResponse_1_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*v3.Topic)
	(*x.list)[i] = concreteValue
}

func (x *_GetActiveTopicsResponse_1_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*v3.Topic)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GetActiveTopicsResponse_1_list) AppendMutable() protoreflect.Value {
	v := new(v3.Topic)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GetActiveTopicsResponse_1_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GetActiveTopicsResponse_1_list) NewElement() protoreflect.Value {
	v := new(v3.Topic)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GetActiveTopicsResponse_1_list) IsValid() bool {
	return x.list != nil
}

var (
	md_GetActiveTopicsResponse            protoreflect.MessageDescriptor
	fd_GetActiveTopicsResponse_topics     protoreflect.FieldDescriptor
	fd_GetActiveTopicsResponse_pagination protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetActiveTopicsResponse = File_emissions_v5_query_proto.Messages().ByName("GetActiveTopicsResponse")
	fd_GetActiveTopicsResponse_topics = md_GetActiveTopicsResponse.Fields().ByName("topics")
	fd_GetActiveTopicsResponse_pagination = md_GetActiveTopicsResponse.Fields().ByName("pagination")
}

var _ protoreflect.Message = (*fastReflection_GetActiveTopicsResponse)(nil)

type fastReflection_GetActiveTopicsResponse GetActiveTopicsResponse

func (x *GetActiveTopicsResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetActiveTopicsResponse)(x)
}

func (x *GetActiveTopicsResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetActiveTopicsResponse_messageType fastReflection_GetActiveTopicsResponse_messageType
var _ protoreflect.MessageType = fastReflection_GetActiveTopicsResponse_messageType{}

type fastReflection_GetActiveTopicsResponse_messageType struct{}

func (x fastReflection_GetActiveTopicsResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetActiveTopicsResponse)(nil)
}
func (x fastReflection_GetActiveTopicsResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_GetActiveTopicsResponse)
}
func (x fastReflection_GetActiveTopicsResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetActiveTopicsResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetActiveTopicsResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_GetActiveTopicsResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetActiveTopicsResponse) Type() protoreflect.MessageType {
	return _fastReflection_GetActiveTopicsResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetActiveTopicsResponse) New() protoreflect.Message {
	return new(fastReflection_GetActiveTopicsResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetActiveTopicsResponse) Interface() protoreflect.ProtoMessage {
	return (*GetActiveTopicsResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetActiveTopicsResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.Topics) != 0 {
		value := protoreflect.ValueOfList(&_GetActiveTopicsResponse_1_list{list: &x.Topics})
		if !f(fd_GetActiveTopicsResponse_topics, value) {
			return
		}
	}
	if x.Pagination != nil {
		value := protoreflect.ValueOfMessage(x.Pagination.ProtoReflect())
		if !f(fd_GetActiveTopicsResponse_pagination, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetActiveTopicsResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetActiveTopicsResponse.topics":
		return len(x.Topics) != 0
	case "emissions.v5.GetActiveTopicsResponse.pagination":
		return x.Pagination != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetActiveTopicsResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetActiveTopicsResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetActiveTopicsResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetActiveTopicsResponse.topics":
		x.Topics = nil
	case "emissions.v5.GetActiveTopicsResponse.pagination":
		x.Pagination = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetActiveTopicsResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetActiveTopicsResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetActiveTopicsResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetActiveTopicsResponse.topics":
		if len(x.Topics) == 0 {
			return protoreflect.ValueOfList(&_GetActiveTopicsResponse_1_list{})
		}
		listValue := &_GetActiveTopicsResponse_1_list{list: &x.Topics}
		return protoreflect.ValueOfList(listValue)
	case "emissions.v5.GetActiveTopicsResponse.pagination":
		value := x.Pagination
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetActiveTopicsResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetActiveTopicsResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetActiveTopicsResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetActiveTopicsResponse.topics":
		lv := value.List()
		clv := lv.(*_GetActiveTopicsResponse_1_list)
		x.Topics = *clv.list
	case "emissions.v5.GetActiveTopicsResponse.pagination":
		x.Pagination = value.Message().Interface().(*v3.SimpleCursorPaginationResponse)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetActiveTopicsResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetActiveTopicsResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetActiveTopicsResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetActiveTopicsResponse.topics":
		if x.Topics == nil {
			x.Topics = []*v3.Topic{}
		}
		value := &_GetActiveTopicsResponse_1_list{list: &x.Topics}
		return protoreflect.ValueOfList(value)
	case "emissions.v5.GetActiveTopicsResponse.pagination":
		if x.Pagination == nil {
			x.Pagination = new(v3.SimpleCursorPaginationResponse)
		}
		return protoreflect.ValueOfMessage(x.Pagination.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetActiveTopicsResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetActiveTopicsResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetActiveTopicsResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetActiveTopicsResponse.topics":
		list := []*v3.Topic{}
		return protoreflect.ValueOfList(&_GetActiveTopicsResponse_1_list{list: &list})
	case "emissions.v5.GetActiveTopicsResponse.pagination":
		m := new(v3.SimpleCursorPaginationResponse)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetActiveTopicsResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetActiveTopicsResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetActiveTopicsResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetActiveTopicsResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetActiveTopicsResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetActiveTopicsResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetActiveTopicsResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetActiveTopicsResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetActiveTopicsResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if len(x.Topics) > 0 {
			for _, e := range x.Topics {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.Pagination != nil {
			l = options.Size(x.Pagination)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetActiveTopicsResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Pagination != nil {
			encoded, err := options.Marshal(x.Pagination)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Topics) > 0 {
			for iNdEx := len(x.Topics) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.Topics[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0xa
			}
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetActiveTopicsResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetActiveTopicsResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetActiveTopicsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Topics", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Topics = append(x.Topics, &v3.Topic{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Topics[len(x.Topics)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Pagination", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Pagination == nil {
					x.Pagination = &v3.SimpleCursorPaginationResponse{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Pagination); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetInferencesAtBlockRequest              protoreflect.MessageDescriptor
	fd_GetInferencesAtBlockRequest_topic_id     protoreflect.FieldDescriptor
	fd_GetInferencesAtBlockRequest_block_height protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetInferencesAtBlockRequest = File_emissions_v5_query_proto.Messages().ByName("GetInferencesAtBlockRequest")
	fd_GetInferencesAtBlockRequest_topic_id = md_GetInferencesAtBlockRequest.Fields().ByName("topic_id")
	fd_GetInferencesAtBlockRequest_block_height = md_GetInferencesAtBlockRequest.Fields().ByName("block_height")
}

var _ protoreflect.Message = (*fastReflection_GetInferencesAtBlockRequest)(nil)

type fastReflection_GetInferencesAtBlockRequest GetInferencesAtBlockRequest

func (x *GetInferencesAtBlockRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetInferencesAtBlockRequest)(x)
}

func (x *GetInferencesAtBlockRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetInferencesAtBlockRequest_messageType fastReflection_GetInferencesAtBlockRequest_messageType
var _ protoreflect.MessageType = fastReflection_GetInferencesAtBlockRequest_messageType{}

type fastReflection_GetInferencesAtBlockRequest_messageType struct{}

func (x fastReflection_GetInferencesAtBlockRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetInferencesAtBlockRequest)(nil)
}
func (x fastReflection_GetInferencesAtBlockRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_GetInferencesAtBlockRequest)
}
func (x fastReflection_GetInferencesAtBlockRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetInferencesAtBlockRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetInferencesAtBlockRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_GetInferencesAtBlockRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetInferencesAtBlockRequest) Type() protoreflect.MessageType {
	return _fastReflection_GetInferencesAtBlockRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetInferencesAtBlockRequest) New() protoreflect.Message {
	return new(fastReflection_GetInferencesAtBlockRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetInferencesAtBlockRequest) Interface() protoreflect.ProtoMessage {
	return (*GetInferencesAtBlockRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetInferencesAtBlockRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_GetInferencesAtBlockRequest_topic_id, value) {
			return
		}
	}
	if x.BlockHeight != int64(0) {
		value := protoreflect.ValueOfInt64(x.BlockHeight)
		if !f(fd_GetInferencesAtBlockRequest_block_height, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetInferencesAtBlockRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetInferencesAtBlockRequest.topic_id":
		return x.TopicId != uint64(0)
	case "emissions.v5.GetInferencesAtBlockRequest.block_height":
		return x.BlockHeight != int64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetInferencesAtBlockRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetInferencesAtBlockRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetInferencesAtBlockRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetInferencesAtBlockRequest.topic_id":
		x.TopicId = uint64(0)
	case "emissions.v5.GetInferencesAtBlockRequest.block_height":
		x.BlockHeight = int64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetInferencesAtBlockRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetInferencesAtBlockRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetInferencesAtBlockRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetInferencesAtBlockRequest.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	case "emissions.v5.GetInferencesAtBlockRequest.block_height":
		value := x.BlockHeight
		return protoreflect.ValueOfInt64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetInferencesAtBlockRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetInferencesAtBlockRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetInferencesAtBlockRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetInferencesAtBlockRequest.topic_id":
		x.TopicId = value.Uint()
	case "emissions.v5.GetInferencesAtBlockRequest.block_height":
		x.BlockHeight = value.Int()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetInferencesAtBlockRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetInferencesAtBlockRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetInferencesAtBlockRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetInferencesAtBlockRequest.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.GetInferencesAtBlockRequest is not mutable"))
	case "emissions.v5.GetInferencesAtBlockRequest.block_height":
		panic(fmt.Errorf("field block_height of message emissions.v5.GetInferencesAtBlockRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetInferencesAtBlockRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetInferencesAtBlockRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetInferencesAtBlockRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetInferencesAtBlockRequest.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "emissions.v5.GetInferencesAtBlockRequest.block_height":
		return protoreflect.ValueOfInt64(int64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetInferencesAtBlockRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetInferencesAtBlockRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetInferencesAtBlockRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetInferencesAtBlockRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetInferencesAtBlockRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetInferencesAtBlockRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetInferencesAtBlockRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetInferencesAtBlockRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetInferencesAtBlockRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		if x.BlockHeight != 0 {
			n += 1 + runtime.Sov(uint64(x.BlockHeight))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetInferencesAtBlockRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.BlockHeight != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.BlockHeight))
			i--
			dAtA[i] = 0x10
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetInferencesAtBlockRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetInferencesAtBlockRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetInferencesAtBlockRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BlockHeight", wireType)
				}
				x.BlockHeight = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.BlockHeight |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetInferencesAtBlockResponse            protoreflect.MessageDescriptor
	fd_GetInferencesAtBlockResponse_inferences protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetInferencesAtBlockResponse = File_emissions_v5_query_proto.Messages().ByName("GetInferencesAtBlockResponse")
	fd_GetInferencesAtBlockResponse_inferences = md_GetInferencesAtBlockResponse.Fields().ByName("inferences")
}

var _ protoreflect.Message = (*fastReflection_GetInferencesAtBlockResponse)(nil)

type fastReflection_GetInferencesAtBlockResponse GetInferencesAtBlockResponse

func (x *GetInferencesAtBlockResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetInferencesAtBlockResponse)(x)
}

func (x *GetInferencesAtBlockResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetInferencesAtBlockResponse_messageType fastReflection_GetInferencesAtBlockResponse_messageType
var _ protoreflect.MessageType = fastReflection_GetInferencesAtBlockResponse_messageType{}

type fastReflection_GetInferencesAtBlockResponse_messageType struct{}

func (x fastReflection_GetInferencesAtBlockResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetInferencesAtBlockResponse)(nil)
}
func (x fastReflection_GetInferencesAtBlockResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_GetInferencesAtBlockResponse)
}
func (x fastReflection_GetInferencesAtBlockResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetInferencesAtBlockResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetInferencesAtBlockResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_GetInferencesAtBlockResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetInferencesAtBlockResponse) Type() protoreflect.MessageType {
	return _fastReflection_GetInferencesAtBlockResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetInferencesAtBlockResponse) New() protoreflect.Message {
	return new(fastReflection_GetInferencesAtBlockResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetInferencesAtBlockResponse) Interface() protoreflect.ProtoMessage {
	return (*GetInferencesAtBlockResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetInferencesAtBlockResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Inferences != nil {
		value := protoreflect.ValueOfMessage(x.Inferences.ProtoReflect())
		if !f(fd_GetInferencesAtBlockResponse_inferences, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetInferencesAtBlockResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetInferencesAtBlockResponse.inferences":
		return x.Inferences != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetInferencesAtBlockResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetInferencesAtBlockResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetInferencesAtBlockResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetInferencesAtBlockResponse.inferences":
		x.Inferences = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetInferencesAtBlockResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetInferencesAtBlockResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetInferencesAtBlockResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetInferencesAtBlockResponse.inferences":
		value := x.Inferences
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetInferencesAtBlockResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetInferencesAtBlockResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetInferencesAtBlockResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetInferencesAtBlockResponse.inferences":
		x.Inferences = value.Message().Interface().(*v3.Inferences)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetInferencesAtBlockResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetInferencesAtBlockResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetInferencesAtBlockResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetInferencesAtBlockResponse.inferences":
		if x.Inferences == nil {
			x.Inferences = new(v3.Inferences)
		}
		return protoreflect.ValueOfMessage(x.Inferences.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetInferencesAtBlockResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetInferencesAtBlockResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetInferencesAtBlockResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetInferencesAtBlockResponse.inferences":
		m := new(v3.Inferences)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetInferencesAtBlockResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetInferencesAtBlockResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetInferencesAtBlockResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetInferencesAtBlockResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetInferencesAtBlockResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetInferencesAtBlockResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetInferencesAtBlockResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetInferencesAtBlockResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetInferencesAtBlockResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Inferences != nil {
			l = options.Size(x.Inferences)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetInferencesAtBlockResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Inferences != nil {
			encoded, err := options.Marshal(x.Inferences)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetInferencesAtBlockResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetInferencesAtBlockResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetInferencesAtBlockResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Inferences", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Inferences == nil {
					x.Inferences = &v3.Inferences{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Inferences); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetLatestTopicInferencesRequest          protoreflect.MessageDescriptor
	fd_GetLatestTopicInferencesRequest_topic_id protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetLatestTopicInferencesRequest = File_emissions_v5_query_proto.Messages().ByName("GetLatestTopicInferencesRequest")
	fd_GetLatestTopicInferencesRequest_topic_id = md_GetLatestTopicInferencesRequest.Fields().ByName("topic_id")
}

var _ protoreflect.Message = (*fastReflection_GetLatestTopicInferencesRequest)(nil)

type fastReflection_GetLatestTopicInferencesRequest GetLatestTopicInferencesRequest

func (x *GetLatestTopicInferencesRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetLatestTopicInferencesRequest)(x)
}

func (x *GetLatestTopicInferencesRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetLatestTopicInferencesRequest_messageType fastReflection_GetLatestTopicInferencesRequest_messageType
var _ protoreflect.MessageType = fastReflection_GetLatestTopicInferencesRequest_messageType{}

type fastReflection_GetLatestTopicInferencesRequest_messageType struct{}

func (x fastReflection_GetLatestTopicInferencesRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetLatestTopicInferencesRequest)(nil)
}
func (x fastReflection_GetLatestTopicInferencesRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_GetLatestTopicInferencesRequest)
}
func (x fastReflection_GetLatestTopicInferencesRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetLatestTopicInferencesRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetLatestTopicInferencesRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_GetLatestTopicInferencesRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetLatestTopicInferencesRequest) Type() protoreflect.MessageType {
	return _fastReflection_GetLatestTopicInferencesRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetLatestTopicInferencesRequest) New() protoreflect.Message {
	return new(fastReflection_GetLatestTopicInferencesRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetLatestTopicInferencesRequest) Interface() protoreflect.ProtoMessage {
	return (*GetLatestTopicInferencesRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetLatestTopicInferencesRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_GetLatestTopicInferencesRequest_topic_id, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetLatestTopicInferencesRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetLatestTopicInferencesRequest.topic_id":
		return x.TopicId != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetLatestTopicInferencesRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetLatestTopicInferencesRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetLatestTopicInferencesRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetLatestTopicInferencesRequest.topic_id":
		x.TopicId = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetLatestTopicInferencesRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetLatestTopicInferencesRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetLatestTopicInferencesRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetLatestTopicInferencesRequest.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetLatestTopicInferencesRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetLatestTopicInferencesRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetLatestTopicInferencesRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetLatestTopicInferencesRequest.topic_id":
		x.TopicId = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetLatestTopicInferencesRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetLatestTopicInferencesRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetLatestTopicInferencesRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetLatestTopicInferencesRequest.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.GetLatestTopicInferencesRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetLatestTopicInferencesRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetLatestTopicInferencesRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetLatestTopicInferencesRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetLatestTopicInferencesRequest.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetLatestTopicInferencesRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetLatestTopicInferencesRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetLatestTopicInferencesRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetLatestTopicInferencesRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetLatestTopicInferencesRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetLatestTopicInferencesRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetLatestTopicInferencesRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetLatestTopicInferencesRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetLatestTopicInferencesRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetLatestTopicInferencesRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetLatestTopicInferencesRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetLatestTopicInferencesRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetLatestTopicInferencesRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetLatestTopicInferencesResponse              protoreflect.MessageDescriptor
	fd_GetLatestTopicInferencesResponse_inferences   protoreflect.FieldDescriptor
	fd_GetLatestTopicInferencesResponse_block_height protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetLatestTopicInferencesResponse = File_emissions_v5_query_proto.Messages().ByName("GetLatestTopicInferencesResponse")
	fd_GetLatestTopicInferencesResponse_inferences = md_GetLatestTopicInferencesResponse.Fields().ByName("inferences")
	fd_GetLatestTopicInferencesResponse_block_height = md_GetLatestTopicInferencesResponse.Fields().ByName("block_height")
}

var _ protoreflect.Message = (*fastReflection_GetLatestTopicInferencesResponse)(nil)

type fastReflection_GetLatestTopicInferencesResponse GetLatestTopicInferencesResponse

func (x *GetLatestTopicInferencesResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetLatestTopicInferencesResponse)(x)
}

func (x *GetLatestTopicInferencesResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetLatestTopicInferencesResponse_messageType fastReflection_GetLatestTopicInferencesResponse_messageType
var _ protoreflect.MessageType = fastReflection_GetLatestTopicInferencesResponse_messageType{}

type fastReflection_GetLatestTopicInferencesResponse_messageType struct{}

func (x fastReflection_GetLatestTopicInferencesResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetLatestTopicInferencesResponse)(nil)
}
func (x fastReflection_GetLatestTopicInferencesResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_GetLatestTopicInferencesResponse)
}
func (x fastReflection_GetLatestTopicInferencesResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetLatestTopicInferencesResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetLatestTopicInferencesResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_GetLatestTopicInferencesResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetLatestTopicInferencesResponse) Type() protoreflect.MessageType {
	return _fastReflection_GetLatestTopicInferencesResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetLatestTopicInferencesResponse) New() protoreflect.Message {
	return new(fastReflection_GetLatestTopicInferencesResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetLatestTopicInferencesResponse) Interface() protoreflect.ProtoMessage {
	return (*GetLatestTopicInferencesResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetLatestTopicInferencesResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Inferences != nil {
		value := protoreflect.ValueOfMessage(x.Inferences.ProtoReflect())
		if !f(fd_GetLatestTopicInferencesResponse_inferences, value) {
			return
		}
	}
	if x.BlockHeight != int64(0) {
		value := protoreflect.ValueOfInt64(x.BlockHeight)
		if !f(fd_GetLatestTopicInferencesResponse_block_height, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetLatestTopicInferencesResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetLatestTopicInferencesResponse.inferences":
		return x.Inferences != nil
	case "emissions.v5.GetLatestTopicInferencesResponse.block_height":
		return x.BlockHeight != int64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetLatestTopicInferencesResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetLatestTopicInferencesResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetLatestTopicInferencesResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetLatestTopicInferencesResponse.inferences":
		x.Inferences = nil
	case "emissions.v5.GetLatestTopicInferencesResponse.block_height":
		x.BlockHeight = int64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetLatestTopicInferencesResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetLatestTopicInferencesResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetLatestTopicInferencesResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetLatestTopicInferencesResponse.inferences":
		value := x.Inferences
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "emissions.v5.GetLatestTopicInferencesResponse.block_height":
		value := x.BlockHeight
		return protoreflect.ValueOfInt64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetLatestTopicInferencesResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetLatestTopicInferencesResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetLatestTopicInferencesResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetLatestTopicInferencesResponse.inferences":
		x.Inferences = value.Message().Interface().(*v3.Inferences)
	case "emissions.v5.GetLatestTopicInferencesResponse.block_height":
		x.BlockHeight = value.Int()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetLatestTopicInferencesResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetLatestTopicInferencesResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetLatestTopicInferencesResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetLatestTopicInferencesResponse.inferences":
		if x.Inferences == nil {
			x.Inferences = new(v3.Inferences)
		}
		return protoreflect.ValueOfMessage(x.Inferences.ProtoReflect())
	case "emissions.v5.GetLatestTopicInferencesResponse.block_height":
		panic(fmt.Errorf("field block_height of message emissions.v5.GetLatestTopicInferencesResponse is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetLatestTopicInferencesResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetLatestTopicInferencesResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetLatestTopicInferencesResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetLatestTopicInferencesResponse.inferences":
		m := new(v3.Inferences)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "emissions.v5.GetLatestTopicInferencesResponse.block_height":
		return protoreflect.ValueOfInt64(int64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetLatestTopicInferencesResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetLatestTopicInferencesResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetLatestTopicInferencesResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetLatestTopicInferencesResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetLatestTopicInferencesResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetLatestTopicInferencesResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetLatestTopicInferencesResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetLatestTopicInferencesResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetLatestTopicInferencesResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Inferences != nil {
			l = options.Size(x.Inferences)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.BlockHeight != 0 {
			n += 1 + runtime.Sov(uint64(x.BlockHeight))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetLatestTopicInferencesResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.BlockHeight != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.BlockHeight))
			i--
			dAtA[i] = 0x10
		}
		if x.Inferences != nil {
			encoded, err := options.Marshal(x.Inferences)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetLatestTopicInferencesResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetLatestTopicInferencesResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetLatestTopicInferencesResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Inferences", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Inferences == nil {
					x.Inferences = &v3.Inferences{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Inferences); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BlockHeight", wireType)
				}
				x.BlockHeight = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.BlockHeight |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetForecastsAtBlockRequest              protoreflect.MessageDescriptor
	fd_GetForecastsAtBlockRequest_topic_id     protoreflect.FieldDescriptor
	fd_GetForecastsAtBlockRequest_block_height protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetForecastsAtBlockRequest = File_emissions_v5_query_proto.Messages().ByName("GetForecastsAtBlockRequest")
	fd_GetForecastsAtBlockRequest_topic_id = md_GetForecastsAtBlockRequest.Fields().ByName("topic_id")
	fd_GetForecastsAtBlockRequest_block_height = md_GetForecastsAtBlockRequest.Fields().ByName("block_height")
}

var _ protoreflect.Message = (*fastReflection_GetForecastsAtBlockRequest)(nil)

type fastReflection_GetForecastsAtBlockRequest GetForecastsAtBlockRequest

func (x *GetForecastsAtBlockRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetForecastsAtBlockRequest)(x)
}

func (x *GetForecastsAtBlockRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetForecastsAtBlockRequest_messageType fastReflection_GetForecastsAtBlockRequest_messageType
var _ protoreflect.MessageType = fastReflection_GetForecastsAtBlockRequest_messageType{}

type fastReflection_GetForecastsAtBlockRequest_messageType struct{}

func (x fastReflection_GetForecastsAtBlockRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetForecastsAtBlockRequest)(nil)
}
func (x fastReflection_GetForecastsAtBlockRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_GetForecastsAtBlockRequest)
}
func (x fastReflection_GetForecastsAtBlockRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetForecastsAtBlockRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetForecastsAtBlockRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_GetForecastsAtBlockRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetForecastsAtBlockRequest) Type() protoreflect.MessageType {
	return _fastReflection_GetForecastsAtBlockRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetForecastsAtBlockRequest) New() protoreflect.Message {
	return new(fastReflection_GetForecastsAtBlockRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetForecastsAtBlockRequest) Interface() protoreflect.ProtoMessage {
	return (*GetForecastsAtBlockRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetForecastsAtBlockRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_GetForecastsAtBlockRequest_topic_id, value) {
			return
		}
	}
	if x.BlockHeight != int64(0) {
		value := protoreflect.ValueOfInt64(x.BlockHeight)
		if !f(fd_GetForecastsAtBlockRequest_block_height, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetForecastsAtBlockRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetForecastsAtBlockRequest.topic_id":
		return x.TopicId != uint64(0)
	case "emissions.v5.GetForecastsAtBlockRequest.block_height":
		return x.BlockHeight != int64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetForecastsAtBlockRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetForecastsAtBlockRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetForecastsAtBlockRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetForecastsAtBlockRequest.topic_id":
		x.TopicId = uint64(0)
	case "emissions.v5.GetForecastsAtBlockRequest.block_height":
		x.BlockHeight = int64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetForecastsAtBlockRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetForecastsAtBlockRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetForecastsAtBlockRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetForecastsAtBlockRequest.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	case "emissions.v5.GetForecastsAtBlockRequest.block_height":
		value := x.BlockHeight
		return protoreflect.ValueOfInt64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetForecastsAtBlockRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetForecastsAtBlockRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetForecastsAtBlockRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetForecastsAtBlockRequest.topic_id":
		x.TopicId = value.Uint()
	case "emissions.v5.GetForecastsAtBlockRequest.block_height":
		x.BlockHeight = value.Int()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetForecastsAtBlockRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetForecastsAtBlockRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetForecastsAtBlockRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetForecastsAtBlockRequest.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.GetForecastsAtBlockRequest is not mutable"))
	case "emissions.v5.GetForecastsAtBlockRequest.block_height":
		panic(fmt.Errorf("field block_height of message emissions.v5.GetForecastsAtBlockRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetForecastsAtBlockRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetForecastsAtBlockRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetForecastsAtBlockRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetForecastsAtBlockRequest.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "emissions.v5.GetForecastsAtBlockRequest.block_height":
		return protoreflect.ValueOfInt64(int64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetForecastsAtBlockRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetForecastsAtBlockRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetForecastsAtBlockRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetForecastsAtBlockRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetForecastsAtBlockRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetForecastsAtBlockRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetForecastsAtBlockRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetForecastsAtBlockRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetForecastsAtBlockRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		if x.BlockHeight != 0 {
			n += 1 + runtime.Sov(uint64(x.BlockHeight))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetForecastsAtBlockRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.BlockHeight != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.BlockHeight))
			i--
			dAtA[i] = 0x10
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetForecastsAtBlockRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetForecastsAtBlockRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetForecastsAtBlockRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BlockHeight", wireType)
				}
				x.BlockHeight = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.BlockHeight |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetForecastsAtBlockResponse           protoreflect.MessageDescriptor
	fd_GetForecastsAtBlockResponse_forecasts protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetForecastsAtBlockResponse = File_emissions_v5_query_proto.Messages().ByName("GetForecastsAtBlockResponse")
	fd_GetForecastsAtBlockResponse_forecasts = md_GetForecastsAtBlockResponse.Fields().ByName("forecasts")
}

var _ protoreflect.Message = (*fastReflection_GetForecastsAtBlockResponse)(nil)

type fastReflection_GetForecastsAtBlockResponse GetForecastsAtBlockResponse

func (x *GetForecastsAtBlockResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetForecastsAtBlockResponse)(x)
}

func (x *GetForecastsAtBlockResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetForecastsAtBlockResponse_messageType fastReflection_GetForecastsAtBlockResponse_messageType
var _ protoreflect.MessageType = fastReflection_GetForecastsAtBlockResponse_messageType{}

type fastReflection_GetForecastsAtBlockResponse_messageType struct{}

func (x fastReflection_GetForecastsAtBlockResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetForecastsAtBlockResponse)(nil)
}
func (x fastReflection_GetForecastsAtBlockResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_GetForecastsAtBlockResponse)
}
func (x fastReflection_GetForecastsAtBlockResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetForecastsAtBlockResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetForecastsAtBlockResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_GetForecastsAtBlockResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetForecastsAtBlockResponse) Type() protoreflect.MessageType {
	return _fastReflection_GetForecastsAtBlockResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetForecastsAtBlockResponse) New() protoreflect.Message {
	return new(fastReflection_GetForecastsAtBlockResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetForecastsAtBlockResponse) Interface() protoreflect.ProtoMessage {
	return (*GetForecastsAtBlockResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetForecastsAtBlockResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Forecasts != nil {
		value := protoreflect.ValueOfMessage(x.Forecasts.ProtoReflect())
		if !f(fd_GetForecastsAtBlockResponse_forecasts, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetForecastsAtBlockResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetForecastsAtBlockResponse.forecasts":
		return x.Forecasts != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetForecastsAtBlockResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetForecastsAtBlockResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetForecastsAtBlockResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetForecastsAtBlockResponse.forecasts":
		x.Forecasts = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetForecastsAtBlockResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetForecastsAtBlockResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetForecastsAtBlockResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetForecastsAtBlockResponse.forecasts":
		value := x.Forecasts
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetForecastsAtBlockResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetForecastsAtBlockResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetForecastsAtBlockResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetForecastsAtBlockResponse.forecasts":
		x.Forecasts = value.Message().Interface().(*v3.Forecasts)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetForecastsAtBlockResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetForecastsAtBlockResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetForecastsAtBlockResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetForecastsAtBlockResponse.forecasts":
		if x.Forecasts == nil {
			x.Forecasts = new(v3.Forecasts)
		}
		return protoreflect.ValueOfMessage(x.Forecasts.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetForecastsAtBlockResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetForecastsAtBlockResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetForecastsAtBlockResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetForecastsAtBlockResponse.forecasts":
		m := new(v3.Forecasts)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetForecastsAtBlockResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetForecastsAtBlockResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetForecastsAtBlockResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetForecastsAtBlockResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetForecastsAtBlockResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetForecastsAtBlockResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetForecastsAtBlockResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetForecastsAtBlockResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetForecastsAtBlockResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Forecasts != nil {
			l = options.Size(x.Forecasts)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetForecastsAtBlockResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Forecasts != nil {
			encoded, err := options.Marshal(x.Forecasts)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetForecastsAtBlockResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetForecastsAtBlockResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetForecastsAtBlockResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Forecasts", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Forecasts == nil {
					x.Forecasts = &v3.Forecasts{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Forecasts); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetWorkerLatestInferenceByTopicIdRequest                protoreflect.MessageDescriptor
	fd_GetWorkerLatestInferenceByTopicIdRequest_topic_id       protoreflect.FieldDescriptor
	fd_GetWorkerLatestInferenceByTopicIdRequest_worker_address protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetWorkerLatestInferenceByTopicIdRequest = File_emissions_v5_query_proto.Messages().ByName("GetWorkerLatestInferenceByTopicIdRequest")
	fd_GetWorkerLatestInferenceByTopicIdRequest_topic_id = md_GetWorkerLatestInferenceByTopicIdRequest.Fields().ByName("topic_id")
	fd_GetWorkerLatestInferenceByTopicIdRequest_worker_address = md_GetWorkerLatestInferenceByTopicIdRequest.Fields().ByName("worker_address")
}

var _ protoreflect.Message = (*fastReflection_GetWorkerLatestInferenceByTopicIdRequest)(nil)

type fastReflection_GetWorkerLatestInferenceByTopicIdRequest GetWorkerLatestInferenceByTopicIdRequest

func (x *GetWorkerLatestInferenceByTopicIdRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetWorkerLatestInferenceByTopicIdRequest)(x)
}

func (x *GetWorkerLatestInferenceByTopicIdRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetWorkerLatestInferenceByTopicIdRequest_messageType fastReflection_GetWorkerLatestInferenceByTopicIdRequest_messageType
var _ protoreflect.MessageType = fastReflection_GetWorkerLatestInferenceByTopicIdRequest_messageType{}

type fastReflection_GetWorkerLatestInferenceByTopicIdRequest_messageType struct{}

func (x fastReflection_GetWorkerLatestInferenceByTopicIdRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetWorkerLatestInferenceByTopicIdRequest)(nil)
}
func (x fastReflection_GetWorkerLatestInferenceByTopicIdRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_GetWorkerLatestInferenceByTopicIdRequest)
}
func (x fastReflection_GetWorkerLatestInferenceByTopicIdRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetWorkerLatestInferenceByTopicIdRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetWorkerLatestInferenceByTopicIdRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_GetWorkerLatestInferenceByTopicIdRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetWorkerLatestInferenceByTopicIdRequest) Type() protoreflect.MessageType {
	return _fastReflection_GetWorkerLatestInferenceByTopicIdRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetWorkerLatestInferenceByTopicIdRequest) New() protoreflect.Message {
	return new(fastReflection_GetWorkerLatestInferenceByTopicIdRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetWorkerLatestInferenceByTopicIdRequest) Interface() protoreflect.ProtoMessage {
	return (*GetWorkerLatestInferenceByTopicIdRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetWorkerLatestInferenceByTopicIdRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_GetWorkerLatestInferenceByTopicIdRequest_topic_id, value) {
			return
		}
	}
	if x.WorkerAddress != "" {
		value := protoreflect.ValueOfString(x.WorkerAddress)
		if !f(fd_GetWorkerLatestInferenceByTopicIdRequest_worker_address, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetWorkerLatestInferenceByTopicIdRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetWorkerLatestInferenceByTopicIdRequest.topic_id":
		return x.TopicId != uint64(0)
	case "emissions.v5.GetWorkerLatestInferenceByTopicIdRequest.worker_address":
		return x.WorkerAddress != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetWorkerLatestInferenceByTopicIdRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetWorkerLatestInferenceByTopicIdRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetWorkerLatestInferenceByTopicIdRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetWorkerLatestInferenceByTopicIdRequest.topic_id":
		x.TopicId = uint64(0)
	case "emissions.v5.GetWorkerLatestInferenceByTopicIdRequest.worker_address":
		x.WorkerAddress = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetWorkerLatestInferenceByTopicIdRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetWorkerLatestInferenceByTopicIdRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetWorkerLatestInferenceByTopicIdRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetWorkerLatestInferenceByTopicIdRequest.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	case "emissions.v5.GetWorkerLatestInferenceByTopicIdRequest.worker_address":
		value := x.WorkerAddress
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetWorkerLatestInferenceByTopicIdRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetWorkerLatestInferenceByTopicIdRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetWorkerLatestInferenceByTopicIdRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetWorkerLatestInferenceByTopicIdRequest.topic_id":
		x.TopicId = value.Uint()
	case "emissions.v5.GetWorkerLatestInferenceByTopicIdRequest.worker_address":
		x.WorkerAddress = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetWorkerLatestInferenceByTopicIdRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetWorkerLatestInferenceByTopicIdRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetWorkerLatestInferenceByTopicIdRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetWorkerLatestInferenceByTopicIdRequest.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.GetWorkerLatestInferenceByTopicIdRequest is not mutable"))
	case "emissions.v5.GetWorkerLatestInferenceByTopicIdRequest.worker_address":
		panic(fmt.Errorf("field worker_address of message emissions.v5.GetWorkerLatestInferenceByTopicIdRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetWorkerLatestInferenceByTopicIdRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetWorkerLatestInferenceByTopicIdRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetWorkerLatestInferenceByTopicIdRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetWorkerLatestInferenceByTopicIdRequest.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "emissions.v5.GetWorkerLatestInferenceByTopicIdRequest.worker_address":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetWorkerLatestInferenceByTopicIdRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetWorkerLatestInferenceByTopicIdRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetWorkerLatestInferenceByTopicIdRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetWorkerLatestInferenceByTopicIdRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetWorkerLatestInferenceByTopicIdRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetWorkerLatestInferenceByTopicIdRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetWorkerLatestInferenceByTopicIdRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetWorkerLatestInferenceByTopicIdRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetWorkerLatestInferenceByTopicIdRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		l = len(x.WorkerAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetWorkerLatestInferenceByTopicIdRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.WorkerAddress) > 0 {
			i -= len(x.WorkerAddress)
			copy(dAtA[i:], x.WorkerAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.WorkerAddress)))
			i--
			dAtA[i] = 0x12
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetWorkerLatestInferenceByTopicIdRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetWorkerLatestInferenceByTopicIdRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetWorkerLatestInferenceByTopicIdRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field WorkerAddress", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.WorkerAddress = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetWorkerLatestInferenceByTopicIdResponse                  protoreflect.MessageDescriptor
	fd_GetWorkerLatestInferenceByTopicIdResponse_latest_inference protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetWorkerLatestInferenceByTopicIdResponse = File_emissions_v5_query_proto.Messages().ByName("GetWorkerLatestInferenceByTopicIdResponse")
	fd_GetWorkerLatestInferenceByTopicIdResponse_latest_inference = md_GetWorkerLatestInferenceByTopicIdResponse.Fields().ByName("latest_inference")
}

var _ protoreflect.Message = (*fastReflection_GetWorkerLatestInferenceByTopicIdResponse)(nil)

type fastReflection_GetWorkerLatestInferenceByTopicIdResponse GetWorkerLatestInferenceByTopicIdResponse

func (x *GetWorkerLatestInferenceByTopicIdResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetWorkerLatestInferenceByTopicIdResponse)(x)
}

func (x *GetWorkerLatestInferenceByTopicIdResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetWorkerLatestInferenceByTopicIdResponse_messageType fastReflection_GetWorkerLatestInferenceByTopicIdResponse_messageType
var _ protoreflect.MessageType = fastReflection_GetWorkerLatestInferenceByTopicIdResponse_messageType{}

type fastReflection_GetWorkerLatestInferenceByTopicIdResponse_messageType struct{}

func (x fastReflection_GetWorkerLatestInferenceByTopicIdResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetWorkerLatestInferenceByTopicIdResponse)(nil)
}
func (x fastReflection_GetWorkerLatestInferenceByTopicIdResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_GetWorkerLatestInferenceByTopicIdResponse)
}
func (x fastReflection_GetWorkerLatestInferenceByTopicIdResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetWorkerLatestInferenceByTopicIdResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetWorkerLatestInferenceByTopicIdResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_GetWorkerLatestInferenceByTopicIdResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetWorkerLatestInferenceByTopicIdResponse) Type() protoreflect.MessageType {
	return _fastReflection_GetWorkerLatestInferenceByTopicIdResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetWorkerLatestInferenceByTopicIdResponse) New() protoreflect.Message {
	return new(fastReflection_GetWorkerLatestInferenceByTopicIdResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetWorkerLatestInferenceByTopicIdResponse) Interface() protoreflect.ProtoMessage {
	return (*GetWorkerLatestInferenceByTopicIdResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetWorkerLatestInferenceByTopicIdResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.LatestInference != nil {
		value := protoreflect.ValueOfMessage(x.LatestInference.ProtoReflect())
		if !f(fd_GetWorkerLatestInferenceByTopicIdResponse_latest_inference, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetWorkerLatestInferenceByTopicIdResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetWorkerLatestInferenceByTopicIdResponse.latest_inference":
		return x.LatestInference != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetWorkerLatestInferenceByTopicIdResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetWorkerLatestInferenceByTopicIdResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetWorkerLatestInferenceByTopicIdResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetWorkerLatestInferenceByTopicIdResponse.latest_inference":
		x.LatestInference = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetWorkerLatestInferenceByTopicIdResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetWorkerLatestInferenceByTopicIdResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetWorkerLatestInferenceByTopicIdResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetWorkerLatestInferenceByTopicIdResponse.latest_inference":
		value := x.LatestInference
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetWorkerLatestInferenceByTopicIdResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetWorkerLatestInferenceByTopicIdResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetWorkerLatestInferenceByTopicIdResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetWorkerLatestInferenceByTopicIdResponse.latest_inference":
		x.LatestInference = value.Message().Interface().(*v3.Inference)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetWorkerLatestInferenceByTopicIdResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetWorkerLatestInferenceByTopicIdResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetWorkerLatestInferenceByTopicIdResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetWorkerLatestInferenceByTopicIdResponse.latest_inference":
		if x.LatestInference == nil {
			x.LatestInference = new(v3.Inference)
		}
		return protoreflect.ValueOfMessage(x.LatestInference.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetWorkerLatestInferenceByTopicIdResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetWorkerLatestInferenceByTopicIdResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetWorkerLatestInferenceByTopicIdResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetWorkerLatestInferenceByTopicIdResponse.latest_inference":
		m := new(v3.Inference)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetWorkerLatestInferenceByTopicIdResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetWorkerLatestInferenceByTopicIdResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetWorkerLatestInferenceByTopicIdResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetWorkerLatestInferenceByTopicIdResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetWorkerLatestInferenceByTopicIdResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetWorkerLatestInferenceByTopicIdResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetWorkerLatestInferenceByTopicIdResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetWorkerLatestInferenceByTopicIdResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetWorkerLatestInferenceByTopicIdResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.LatestInference != nil {
			l = options.Size(x.LatestInference)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetWorkerLatestInferenceByTopicIdResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.LatestInference != nil {
			encoded, err := options.Marshal(x.LatestInference)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetWorkerLatestInferenceByTopicIdResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetWorkerLatestInferenceByTopicIdResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetWorkerLatestInferenceByTopicIdResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field LatestInference", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.LatestInference == nil {
					x.LatestInference = &v3.Inference{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.LatestInference); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetWorkerNodeInfoRequest         protoreflect.MessageDescriptor
	fd_GetWorkerNodeInfoRequest_address protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetWorkerNodeInfoRequest = File_emissions_v5_query_proto.Messages().ByName("GetWorkerNodeInfoRequest")
	fd_GetWorkerNodeInfoRequest_address = md_GetWorkerNodeInfoRequest.Fields().ByName("address")
}

var _ protoreflect.Message = (*fastReflection_GetWorkerNodeInfoRequest)(nil)

type fastReflection_GetWorkerNodeInfoRequest GetWorkerNodeInfoRequest

func (x *GetWorkerNodeInfoRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetWorkerNodeInfoRequest)(x)
}

func (x *GetWorkerNodeInfoRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetWorkerNodeInfoRequest_messageType fastReflection_GetWorkerNodeInfoRequest_messageType
var _ protoreflect.MessageType = fastReflection_GetWorkerNodeInfoRequest_messageType{}

type fastReflection_GetWorkerNodeInfoRequest_messageType struct{}

func (x fastReflection_GetWorkerNodeInfoRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetWorkerNodeInfoRequest)(nil)
}
func (x fastReflection_GetWorkerNodeInfoRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_GetWorkerNodeInfoRequest)
}
func (x fastReflection_GetWorkerNodeInfoRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetWorkerNodeInfoRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetWorkerNodeInfoRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_GetWorkerNodeInfoRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetWorkerNodeInfoRequest) Type() protoreflect.MessageType {
	return _fastReflection_GetWorkerNodeInfoRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetWorkerNodeInfoRequest) New() protoreflect.Message {
	return new(fastReflection_GetWorkerNodeInfoRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetWorkerNodeInfoRequest) Interface() protoreflect.ProtoMessage {
	return (*GetWorkerNodeInfoRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetWorkerNodeInfoRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Address != "" {
		value := protoreflect.ValueOfString(x.Address)
		if !f(fd_GetWorkerNodeInfoRequest_address, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetWorkerNodeInfoRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetWorkerNodeInfoRequest.address":
		return x.Address != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetWorkerNodeInfoRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetWorkerNodeInfoRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetWorkerNodeInfoRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetWorkerNodeInfoRequest.address":
		x.Address = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetWorkerNodeInfoRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetWorkerNodeInfoRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetWorkerNodeInfoRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetWorkerNodeInfoRequest.address":
		value := x.Address
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetWorkerNodeInfoRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetWorkerNodeInfoRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetWorkerNodeInfoRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetWorkerNodeInfoRequest.address":
		x.Address = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetWorkerNodeInfoRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetWorkerNodeInfoRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetWorkerNodeInfoRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetWorkerNodeInfoRequest.address":
		panic(fmt.Errorf("field address of message emissions.v5.GetWorkerNodeInfoRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetWorkerNodeInfoRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetWorkerNodeInfoRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetWorkerNodeInfoRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetWorkerNodeInfoRequest.address":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetWorkerNodeInfoRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetWorkerNodeInfoRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetWorkerNodeInfoRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetWorkerNodeInfoRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetWorkerNodeInfoRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetWorkerNodeInfoRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetWorkerNodeInfoRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetWorkerNodeInfoRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetWorkerNodeInfoRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Address)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetWorkerNodeInfoRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Address) > 0 {
			i -= len(x.Address)
			copy(dAtA[i:], x.Address)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Address)))
			i--
			dAtA[i] = 0x12
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetWorkerNodeInfoRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetWorkerNodeInfoRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetWorkerNodeInfoRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Address = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetWorkerNodeInfoResponse           protoreflect.MessageDescriptor
	fd_GetWorkerNodeInfoResponse_node_info protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetWorkerNodeInfoResponse = File_emissions_v5_query_proto.Messages().ByName("GetWorkerNodeInfoResponse")
	fd_GetWorkerNodeInfoResponse_node_info = md_GetWorkerNodeInfoResponse.Fields().ByName("node_info")
}

var _ protoreflect.Message = (*fastReflection_GetWorkerNodeInfoResponse)(nil)

type fastReflection_GetWorkerNodeInfoResponse GetWorkerNodeInfoResponse

func (x *GetWorkerNodeInfoResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetWorkerNodeInfoResponse)(x)
}

func (x *GetWorkerNodeInfoResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetWorkerNodeInfoResponse_messageType fastReflection_GetWorkerNodeInfoResponse_messageType
var _ protoreflect.MessageType = fastReflection_GetWorkerNodeInfoResponse_messageType{}

type fastReflection_GetWorkerNodeInfoResponse_messageType struct{}

func (x fastReflection_GetWorkerNodeInfoResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetWorkerNodeInfoResponse)(nil)
}
func (x fastReflection_GetWorkerNodeInfoResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_GetWorkerNodeInfoResponse)
}
func (x fastReflection_GetWorkerNodeInfoResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetWorkerNodeInfoResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetWorkerNodeInfoResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_GetWorkerNodeInfoResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetWorkerNodeInfoResponse) Type() protoreflect.MessageType {
	return _fastReflection_GetWorkerNodeInfoResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetWorkerNodeInfoResponse) New() protoreflect.Message {
	return new(fastReflection_GetWorkerNodeInfoResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetWorkerNodeInfoResponse) Interface() protoreflect.ProtoMessage {
	return (*GetWorkerNodeInfoResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetWorkerNodeInfoResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.NodeInfo != nil {
		value := protoreflect.ValueOfMessage(x.NodeInfo.ProtoReflect())
		if !f(fd_GetWorkerNodeInfoResponse_node_info, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetWorkerNodeInfoResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetWorkerNodeInfoResponse.node_info":
		return x.NodeInfo != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetWorkerNodeInfoResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetWorkerNodeInfoResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetWorkerNodeInfoResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetWorkerNodeInfoResponse.node_info":
		x.NodeInfo = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetWorkerNodeInfoResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetWorkerNodeInfoResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetWorkerNodeInfoResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetWorkerNodeInfoResponse.node_info":
		value := x.NodeInfo
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetWorkerNodeInfoResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetWorkerNodeInfoResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetWorkerNodeInfoResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetWorkerNodeInfoResponse.node_info":
		x.NodeInfo = value.Message().Interface().(*v3.OffchainNode)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetWorkerNodeInfoResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetWorkerNodeInfoResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetWorkerNodeInfoResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetWorkerNodeInfoResponse.node_info":
		if x.NodeInfo == nil {
			x.NodeInfo = new(v3.OffchainNode)
		}
		return protoreflect.ValueOfMessage(x.NodeInfo.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetWorkerNodeInfoResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetWorkerNodeInfoResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetWorkerNodeInfoResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetWorkerNodeInfoResponse.node_info":
		m := new(v3.OffchainNode)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetWorkerNodeInfoResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetWorkerNodeInfoResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetWorkerNodeInfoResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetWorkerNodeInfoResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetWorkerNodeInfoResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetWorkerNodeInfoResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetWorkerNodeInfoResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetWorkerNodeInfoResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetWorkerNodeInfoResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.NodeInfo != nil {
			l = options.Size(x.NodeInfo)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetWorkerNodeInfoResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.NodeInfo != nil {
			encoded, err := options.Marshal(x.NodeInfo)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetWorkerNodeInfoResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetWorkerNodeInfoResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetWorkerNodeInfoResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field NodeInfo", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.NodeInfo == nil {
					x.NodeInfo = &v3.OffchainNode{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.NodeInfo); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetReputerNodeInfoRequest         protoreflect.MessageDescriptor
	fd_GetReputerNodeInfoRequest_address protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetReputerNodeInfoRequest = File_emissions_v5_query_proto.Messages().ByName("GetReputerNodeInfoRequest")
	fd_GetReputerNodeInfoRequest_address = md_GetReputerNodeInfoRequest.Fields().ByName("address")
}

var _ protoreflect.Message = (*fastReflection_GetReputerNodeInfoRequest)(nil)

type fastReflection_GetReputerNodeInfoRequest GetReputerNodeInfoRequest

func (x *GetReputerNodeInfoRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetReputerNodeInfoRequest)(x)
}

func (x *GetReputerNodeInfoRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetReputerNodeInfoRequest_messageType fastReflection_GetReputerNodeInfoRequest_messageType
var _ protoreflect.MessageType = fastReflection_GetReputerNodeInfoRequest_messageType{}

type fastReflection_GetReputerNodeInfoRequest_messageType struct{}

func (x fastReflection_GetReputerNodeInfoRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetReputerNodeInfoRequest)(nil)
}
func (x fastReflection_GetReputerNodeInfoRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_GetReputerNodeInfoRequest)
}
func (x fastReflection_GetReputerNodeInfoRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetReputerNodeInfoRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetReputerNodeInfoRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_GetReputerNodeInfoRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetReputerNodeInfoRequest) Type() protoreflect.MessageType {
	return _fastReflection_GetReputerNodeInfoRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetReputerNodeInfoRequest) New() protoreflect.Message {
	return new(fastReflection_GetReputerNodeInfoRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetReputerNodeInfoRequest) Interface() protoreflect.ProtoMessage {
	return (*GetReputerNodeInfoRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetReputerNodeInfoRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Address != "" {
		value := protoreflect.ValueOfString(x.Address)
		if !f(fd_GetReputerNodeInfoRequest_address, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetReputerNodeInfoRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetReputerNodeInfoRequest.address":
		return x.Address != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetReputerNodeInfoRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetReputerNodeInfoRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetReputerNodeInfoRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetReputerNodeInfoRequest.address":
		x.Address = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetReputerNodeInfoRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetReputerNodeInfoRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetReputerNodeInfoRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetReputerNodeInfoRequest.address":
		value := x.Address
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetReputerNodeInfoRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetReputerNodeInfoRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetReputerNodeInfoRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetReputerNodeInfoRequest.address":
		x.Address = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetReputerNodeInfoRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetReputerNodeInfoRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetReputerNodeInfoRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetReputerNodeInfoRequest.address":
		panic(fmt.Errorf("field address of message emissions.v5.GetReputerNodeInfoRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetReputerNodeInfoRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetReputerNodeInfoRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetReputerNodeInfoRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetReputerNodeInfoRequest.address":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetReputerNodeInfoRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetReputerNodeInfoRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetReputerNodeInfoRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetReputerNodeInfoRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetReputerNodeInfoRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetReputerNodeInfoRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetReputerNodeInfoRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetReputerNodeInfoRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetReputerNodeInfoRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Address)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetReputerNodeInfoRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Address) > 0 {
			i -= len(x.Address)
			copy(dAtA[i:], x.Address)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Address)))
			i--
			dAtA[i] = 0x12
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetReputerNodeInfoRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetReputerNodeInfoRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetReputerNodeInfoRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Address = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetReputerNodeInfoResponse           protoreflect.MessageDescriptor
	fd_GetReputerNodeInfoResponse_node_info protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetReputerNodeInfoResponse = File_emissions_v5_query_proto.Messages().ByName("GetReputerNodeInfoResponse")
	fd_GetReputerNodeInfoResponse_node_info = md_GetReputerNodeInfoResponse.Fields().ByName("node_info")
}

var _ protoreflect.Message = (*fastReflection_GetReputerNodeInfoResponse)(nil)

type fastReflection_GetReputerNodeInfoResponse GetReputerNodeInfoResponse

func (x *GetReputerNodeInfoResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetReputerNodeInfoResponse)(x)
}

func (x *GetReputerNodeInfoResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetReputerNodeInfoResponse_messageType fastReflection_GetReputerNodeInfoResponse_messageType
var _ protoreflect.MessageType = fastReflection_GetReputerNodeInfoResponse_messageType{}

type fastReflection_GetReputerNodeInfoResponse_messageType struct{}

func (x fastReflection_GetReputerNodeInfoResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetReputerNodeInfoResponse)(nil)
}
func (x fastReflection_GetReputerNodeInfoResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_GetReputerNodeInfoResponse)
}
func (x fastReflection_GetReputerNodeInfoResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetReputerNodeInfoResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetReputerNodeInfoResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_GetReputerNodeInfoResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetReputerNodeInfoResponse) Type() protoreflect.MessageType {
	return _fastReflection_GetReputerNodeInfoResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetReputerNodeInfoResponse) New() protoreflect.Message {
	return new(fastReflection_GetReputerNodeInfoResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetReputerNodeInfoResponse) Interface() protoreflect.ProtoMessage {
	return (*GetReputerNodeInfoResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetReputerNodeInfoResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.NodeInfo != nil {
		value := protoreflect.ValueOfMessage(x.NodeInfo.ProtoReflect())
		if !f(fd_GetReputerNodeInfoResponse_node_info, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetReputerNodeInfoResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetReputerNodeInfoResponse.node_info":
		return x.NodeInfo != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetReputerNodeInfoResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetReputerNodeInfoResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetReputerNodeInfoResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetReputerNodeInfoResponse.node_info":
		x.NodeInfo = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetReputerNodeInfoResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetReputerNodeInfoResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetReputerNodeInfoResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetReputerNodeInfoResponse.node_info":
		value := x.NodeInfo
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetReputerNodeInfoResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetReputerNodeInfoResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetReputerNodeInfoResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetReputerNodeInfoResponse.node_info":
		x.NodeInfo = value.Message().Interface().(*v3.OffchainNode)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetReputerNodeInfoResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetReputerNodeInfoResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetReputerNodeInfoResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetReputerNodeInfoResponse.node_info":
		if x.NodeInfo == nil {
			x.NodeInfo = new(v3.OffchainNode)
		}
		return protoreflect.ValueOfMessage(x.NodeInfo.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetReputerNodeInfoResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetReputerNodeInfoResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetReputerNodeInfoResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetReputerNodeInfoResponse.node_info":
		m := new(v3.OffchainNode)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetReputerNodeInfoResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetReputerNodeInfoResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetReputerNodeInfoResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetReputerNodeInfoResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetReputerNodeInfoResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetReputerNodeInfoResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetReputerNodeInfoResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetReputerNodeInfoResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetReputerNodeInfoResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.NodeInfo != nil {
			l = options.Size(x.NodeInfo)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetReputerNodeInfoResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.NodeInfo != nil {
			encoded, err := options.Marshal(x.NodeInfo)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetReputerNodeInfoResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetReputerNodeInfoResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetReputerNodeInfoResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field NodeInfo", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.NodeInfo == nil {
					x.NodeInfo = &v3.OffchainNode{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.NodeInfo); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetNetworkInferencesAtBlockRequest                             protoreflect.MessageDescriptor
	fd_GetNetworkInferencesAtBlockRequest_topic_id                    protoreflect.FieldDescriptor
	fd_GetNetworkInferencesAtBlockRequest_block_height_last_inference protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetNetworkInferencesAtBlockRequest = File_emissions_v5_query_proto.Messages().ByName("GetNetworkInferencesAtBlockRequest")
	fd_GetNetworkInferencesAtBlockRequest_topic_id = md_GetNetworkInferencesAtBlockRequest.Fields().ByName("topic_id")
	fd_GetNetworkInferencesAtBlockRequest_block_height_last_inference = md_GetNetworkInferencesAtBlockRequest.Fields().ByName("block_height_last_inference")
}

var _ protoreflect.Message = (*fastReflection_GetNetworkInferencesAtBlockRequest)(nil)

type fastReflection_GetNetworkInferencesAtBlockRequest GetNetworkInferencesAtBlockRequest

func (x *GetNetworkInferencesAtBlockRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetNetworkInferencesAtBlockRequest)(x)
}

func (x *GetNetworkInferencesAtBlockRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetNetworkInferencesAtBlockRequest_messageType fastReflection_GetNetworkInferencesAtBlockRequest_messageType
var _ protoreflect.MessageType = fastReflection_GetNetworkInferencesAtBlockRequest_messageType{}

type fastReflection_GetNetworkInferencesAtBlockRequest_messageType struct{}

func (x fastReflection_GetNetworkInferencesAtBlockRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetNetworkInferencesAtBlockRequest)(nil)
}
func (x fastReflection_GetNetworkInferencesAtBlockRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_GetNetworkInferencesAtBlockRequest)
}
func (x fastReflection_GetNetworkInferencesAtBlockRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetNetworkInferencesAtBlockRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetNetworkInferencesAtBlockRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_GetNetworkInferencesAtBlockRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetNetworkInferencesAtBlockRequest) Type() protoreflect.MessageType {
	return _fastReflection_GetNetworkInferencesAtBlockRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetNetworkInferencesAtBlockRequest) New() protoreflect.Message {
	return new(fastReflection_GetNetworkInferencesAtBlockRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetNetworkInferencesAtBlockRequest) Interface() protoreflect.ProtoMessage {
	return (*GetNetworkInferencesAtBlockRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetNetworkInferencesAtBlockRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_GetNetworkInferencesAtBlockRequest_topic_id, value) {
			return
		}
	}
	if x.BlockHeightLastInference != int64(0) {
		value := protoreflect.ValueOfInt64(x.BlockHeightLastInference)
		if !f(fd_GetNetworkInferencesAtBlockRequest_block_height_last_inference, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetNetworkInferencesAtBlockRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetNetworkInferencesAtBlockRequest.topic_id":
		return x.TopicId != uint64(0)
	case "emissions.v5.GetNetworkInferencesAtBlockRequest.block_height_last_inference":
		return x.BlockHeightLastInference != int64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetNetworkInferencesAtBlockRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetNetworkInferencesAtBlockRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetNetworkInferencesAtBlockRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetNetworkInferencesAtBlockRequest.topic_id":
		x.TopicId = uint64(0)
	case "emissions.v5.GetNetworkInferencesAtBlockRequest.block_height_last_inference":
		x.BlockHeightLastInference = int64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetNetworkInferencesAtBlockRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetNetworkInferencesAtBlockRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetNetworkInferencesAtBlockRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetNetworkInferencesAtBlockRequest.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	case "emissions.v5.GetNetworkInferencesAtBlockRequest.block_height_last_inference":
		value := x.BlockHeightLastInference
		return protoreflect.ValueOfInt64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetNetworkInferencesAtBlockRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetNetworkInferencesAtBlockRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetNetworkInferencesAtBlockRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetNetworkInferencesAtBlockRequest.topic_id":
		x.TopicId = value.Uint()
	case "emissions.v5.GetNetworkInferencesAtBlockRequest.block_height_last_inference":
		x.BlockHeightLastInference = value.Int()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetNetworkInferencesAtBlockRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetNetworkInferencesAtBlockRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetNetworkInferencesAtBlockRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetNetworkInferencesAtBlockRequest.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.GetNetworkInferencesAtBlockRequest is not mutable"))
	case "emissions.v5.GetNetworkInferencesAtBlockRequest.block_height_last_inference":
		panic(fmt.Errorf("field block_height_last_inference of message emissions.v5.GetNetworkInferencesAtBlockRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetNetworkInferencesAtBlockRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetNetworkInferencesAtBlockRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetNetworkInferencesAtBlockRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetNetworkInferencesAtBlockRequest.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "emissions.v5.GetNetworkInferencesAtBlockRequest.block_height_last_inference":
		return protoreflect.ValueOfInt64(int64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetNetworkInferencesAtBlockRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetNetworkInferencesAtBlockRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetNetworkInferencesAtBlockRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetNetworkInferencesAtBlockRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetNetworkInferencesAtBlockRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetNetworkInferencesAtBlockRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetNetworkInferencesAtBlockRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetNetworkInferencesAtBlockRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetNetworkInferencesAtBlockRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		if x.BlockHeightLastInference != 0 {
			n += 1 + runtime.Sov(uint64(x.BlockHeightLastInference))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetNetworkInferencesAtBlockRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.BlockHeightLastInference != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.BlockHeightLastInference))
			i--
			dAtA[i] = 0x10
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetNetworkInferencesAtBlockRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetNetworkInferencesAtBlockRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetNetworkInferencesAtBlockRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BlockHeightLastInference", wireType)
				}
				x.BlockHeightLastInference = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.BlockHeightLastInference |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetLatestNetworkInferencesRequest          protoreflect.MessageDescriptor
	fd_GetLatestNetworkInferencesRequest_topic_id protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetLatestNetworkInferencesRequest = File_emissions_v5_query_proto.Messages().ByName("GetLatestNetworkInferencesRequest")
	fd_GetLatestNetworkInferencesRequest_topic_id = md_GetLatestNetworkInferencesRequest.Fields().ByName("topic_id")
}

var _ protoreflect.Message = (*fastReflection_GetLatestNetworkInferencesRequest)(nil)

type fastReflection_GetLatestNetworkInferencesRequest GetLatestNetworkInferencesRequest

func (x *GetLatestNetworkInferencesRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetLatestNetworkInferencesRequest)(x)
}

func (x *GetLatestNetworkInferencesRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetLatestNetworkInferencesRequest_messageType fastReflection_GetLatestNetworkInferencesRequest_messageType
var _ protoreflect.MessageType = fastReflection_GetLatestNetworkInferencesRequest_messageType{}

type fastReflection_GetLatestNetworkInferencesRequest_messageType struct{}

func (x fastReflection_GetLatestNetworkInferencesRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetLatestNetworkInferencesRequest)(nil)
}
func (x fastReflection_GetLatestNetworkInferencesRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_GetLatestNetworkInferencesRequest)
}
func (x fastReflection_GetLatestNetworkInferencesRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetLatestNetworkInferencesRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetLatestNetworkInferencesRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_GetLatestNetworkInferencesRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetLatestNetworkInferencesRequest) Type() protoreflect.MessageType {
	return _fastReflection_GetLatestNetworkInferencesRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetLatestNetworkInferencesRequest) New() protoreflect.Message {
	return new(fastReflection_GetLatestNetworkInferencesRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetLatestNetworkInferencesRequest) Interface() protoreflect.ProtoMessage {
	return (*GetLatestNetworkInferencesRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetLatestNetworkInferencesRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_GetLatestNetworkInferencesRequest_topic_id, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetLatestNetworkInferencesRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetLatestNetworkInferencesRequest.topic_id":
		return x.TopicId != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetLatestNetworkInferencesRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetLatestNetworkInferencesRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetLatestNetworkInferencesRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetLatestNetworkInferencesRequest.topic_id":
		x.TopicId = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetLatestNetworkInferencesRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetLatestNetworkInferencesRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetLatestNetworkInferencesRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetLatestNetworkInferencesRequest.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetLatestNetworkInferencesRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetLatestNetworkInferencesRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetLatestNetworkInferencesRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetLatestNetworkInferencesRequest.topic_id":
		x.TopicId = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetLatestNetworkInferencesRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetLatestNetworkInferencesRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetLatestNetworkInferencesRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetLatestNetworkInferencesRequest.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.GetLatestNetworkInferencesRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetLatestNetworkInferencesRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetLatestNetworkInferencesRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetLatestNetworkInferencesRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetLatestNetworkInferencesRequest.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetLatestNetworkInferencesRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetLatestNetworkInferencesRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetLatestNetworkInferencesRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetLatestNetworkInferencesRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetLatestNetworkInferencesRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetLatestNetworkInferencesRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetLatestNetworkInferencesRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetLatestNetworkInferencesRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetLatestNetworkInferencesRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetLatestNetworkInferencesRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetLatestNetworkInferencesRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetLatestNetworkInferencesRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetLatestNetworkInferencesRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetLatestAvailableNetworkInferencesRequest          protoreflect.MessageDescriptor
	fd_GetLatestAvailableNetworkInferencesRequest_topic_id protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetLatestAvailableNetworkInferencesRequest = File_emissions_v5_query_proto.Messages().ByName("GetLatestAvailableNetworkInferencesRequest")
	fd_GetLatestAvailableNetworkInferencesRequest_topic_id = md_GetLatestAvailableNetworkInferencesRequest.Fields().ByName("topic_id")
}

var _ protoreflect.Message = (*fastReflection_GetLatestAvailableNetworkInferencesRequest)(nil)

type fastReflection_GetLatestAvailableNetworkInferencesRequest GetLatestAvailableNetworkInferencesRequest

func (x *GetLatestAvailableNetworkInferencesRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetLatestAvailableNetworkInferencesRequest)(x)
}

func (x *GetLatestAvailableNetworkInferencesRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetLatestAvailableNetworkInferencesRequest_messageType fastReflection_GetLatestAvailableNetworkInferencesRequest_messageType
var _ protoreflect.MessageType = fastReflection_GetLatestAvailableNetworkInferencesRequest_messageType{}

type fastReflection_GetLatestAvailableNetworkInferencesRequest_messageType struct{}

func (x fastReflection_GetLatestAvailableNetworkInferencesRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetLatestAvailableNetworkInferencesRequest)(nil)
}
func (x fastReflection_GetLatestAvailableNetworkInferencesRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_GetLatestAvailableNetworkInferencesRequest)
}
func (x fastReflection_GetLatestAvailableNetworkInferencesRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetLatestAvailableNetworkInferencesRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetLatestAvailableNetworkInferencesRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_GetLatestAvailableNetworkInferencesRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetLatestAvailableNetworkInferencesRequest) Type() protoreflect.MessageType {
	return _fastReflection_GetLatestAvailableNetworkInferencesRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetLatestAvailableNetworkInferencesRequest) New() protoreflect.Message {
	return new(fastReflection_GetLatestAvailableNetworkInferencesRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetLatestAvailableNetworkInferencesRequest) Interface() protoreflect.ProtoMessage {
	return (*GetLatestAvailableNetworkInferencesRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetLatestAvailableNetworkInferencesRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_GetLatestAvailableNetworkInferencesRequest_topic_id, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetLatestAvailableNetworkInferencesRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetLatestAvailableNetworkInferencesRequest.topic_id":
		return x.TopicId != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetLatestAvailableNetworkInferencesRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetLatestAvailableNetworkInferencesRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetLatestAvailableNetworkInferencesRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetLatestAvailableNetworkInferencesRequest.topic_id":
		x.TopicId = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetLatestAvailableNetworkInferencesRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetLatestAvailableNetworkInferencesRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetLatestAvailableNetworkInferencesRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetLatestAvailableNetworkInferencesRequest.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetLatestAvailableNetworkInferencesRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetLatestAvailableNetworkInferencesRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetLatestAvailableNetworkInferencesRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetLatestAvailableNetworkInferencesRequest.topic_id":
		x.TopicId = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetLatestAvailableNetworkInferencesRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetLatestAvailableNetworkInferencesRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetLatestAvailableNetworkInferencesRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetLatestAvailableNetworkInferencesRequest.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.GetLatestAvailableNetworkInferencesRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetLatestAvailableNetworkInferencesRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetLatestAvailableNetworkInferencesRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetLatestAvailableNetworkInferencesRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetLatestAvailableNetworkInferencesRequest.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetLatestAvailableNetworkInferencesRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetLatestAvailableNetworkInferencesRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetLatestAvailableNetworkInferencesRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetLatestAvailableNetworkInferencesRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetLatestAvailableNetworkInferencesRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetLatestAvailableNetworkInferencesRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetLatestAvailableNetworkInferencesRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetLatestAvailableNetworkInferencesRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetLatestAvailableNetworkInferencesRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetLatestAvailableNetworkInferencesRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetLatestAvailableNetworkInferencesRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetLatestAvailableNetworkInferencesRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetLatestAvailableNetworkInferencesRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_IsWorkerNonceUnfulfilledRequest              protoreflect.MessageDescriptor
	fd_IsWorkerNonceUnfulfilledRequest_topic_id     protoreflect.FieldDescriptor
	fd_IsWorkerNonceUnfulfilledRequest_block_height protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_IsWorkerNonceUnfulfilledRequest = File_emissions_v5_query_proto.Messages().ByName("IsWorkerNonceUnfulfilledRequest")
	fd_IsWorkerNonceUnfulfilledRequest_topic_id = md_IsWorkerNonceUnfulfilledRequest.Fields().ByName("topic_id")
	fd_IsWorkerNonceUnfulfilledRequest_block_height = md_IsWorkerNonceUnfulfilledRequest.Fields().ByName("block_height")
}

var _ protoreflect.Message = (*fastReflection_IsWorkerNonceUnfulfilledRequest)(nil)

type fastReflection_IsWorkerNonceUnfulfilledRequest IsWorkerNonceUnfulfilledRequest

func (x *IsWorkerNonceUnfulfilledRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_IsWorkerNonceUnfulfilledRequest)(x)
}

func (x *IsWorkerNonceUnfulfilledRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_IsWorkerNonceUnfulfilledRequest_messageType fastReflection_IsWorkerNonceUnfulfilledRequest_messageType
var _ protoreflect.MessageType = fastReflection_IsWorkerNonceUnfulfilledRequest_messageType{}

type fastReflection_IsWorkerNonceUnfulfilledRequest_messageType struct{}

func (x fastReflection_IsWorkerNonceUnfulfilledRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_IsWorkerNonceUnfulfilledRequest)(nil)
}
func (x fastReflection_IsWorkerNonceUnfulfilledRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_IsWorkerNonceUnfulfilledRequest)
}
func (x fastReflection_IsWorkerNonceUnfulfilledRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_IsWorkerNonceUnfulfilledRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_IsWorkerNonceUnfulfilledRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_IsWorkerNonceUnfulfilledRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_IsWorkerNonceUnfulfilledRequest) Type() protoreflect.MessageType {
	return _fastReflection_IsWorkerNonceUnfulfilledRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_IsWorkerNonceUnfulfilledRequest) New() protoreflect.Message {
	return new(fastReflection_IsWorkerNonceUnfulfilledRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_IsWorkerNonceUnfulfilledRequest) Interface() protoreflect.ProtoMessage {
	return (*IsWorkerNonceUnfulfilledRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_IsWorkerNonceUnfulfilledRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_IsWorkerNonceUnfulfilledRequest_topic_id, value) {
			return
		}
	}
	if x.BlockHeight != int64(0) {
		value := protoreflect.ValueOfInt64(x.BlockHeight)
		if !f(fd_IsWorkerNonceUnfulfilledRequest_block_height, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_IsWorkerNonceUnfulfilledRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.IsWorkerNonceUnfulfilledRequest.topic_id":
		return x.TopicId != uint64(0)
	case "emissions.v5.IsWorkerNonceUnfulfilledRequest.block_height":
		return x.BlockHeight != int64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.IsWorkerNonceUnfulfilledRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.IsWorkerNonceUnfulfilledRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_IsWorkerNonceUnfulfilledRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.IsWorkerNonceUnfulfilledRequest.topic_id":
		x.TopicId = uint64(0)
	case "emissions.v5.IsWorkerNonceUnfulfilledRequest.block_height":
		x.BlockHeight = int64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.IsWorkerNonceUnfulfilledRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.IsWorkerNonceUnfulfilledRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_IsWorkerNonceUnfulfilledRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.IsWorkerNonceUnfulfilledRequest.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	case "emissions.v5.IsWorkerNonceUnfulfilledRequest.block_height":
		value := x.BlockHeight
		return protoreflect.ValueOfInt64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.IsWorkerNonceUnfulfilledRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.IsWorkerNonceUnfulfilledRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_IsWorkerNonceUnfulfilledRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.IsWorkerNonceUnfulfilledRequest.topic_id":
		x.TopicId = value.Uint()
	case "emissions.v5.IsWorkerNonceUnfulfilledRequest.block_height":
		x.BlockHeight = value.Int()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.IsWorkerNonceUnfulfilledRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.IsWorkerNonceUnfulfilledRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_IsWorkerNonceUnfulfilledRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.IsWorkerNonceUnfulfilledRequest.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.IsWorkerNonceUnfulfilledRequest is not mutable"))
	case "emissions.v5.IsWorkerNonceUnfulfilledRequest.block_height":
		panic(fmt.Errorf("field block_height of message emissions.v5.IsWorkerNonceUnfulfilledRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.IsWorkerNonceUnfulfilledRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.IsWorkerNonceUnfulfilledRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_IsWorkerNonceUnfulfilledRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.IsWorkerNonceUnfulfilledRequest.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "emissions.v5.IsWorkerNonceUnfulfilledRequest.block_height":
		return protoreflect.ValueOfInt64(int64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.IsWorkerNonceUnfulfilledRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.IsWorkerNonceUnfulfilledRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_IsWorkerNonceUnfulfilledRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.IsWorkerNonceUnfulfilledRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_IsWorkerNonceUnfulfilledRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_IsWorkerNonceUnfulfilledRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_IsWorkerNonceUnfulfilledRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_IsWorkerNonceUnfulfilledRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*IsWorkerNonceUnfulfilledRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		if x.BlockHeight != 0 {
			n += 1 + runtime.Sov(uint64(x.BlockHeight))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*IsWorkerNonceUnfulfilledRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.BlockHeight != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.BlockHeight))
			i--
			dAtA[i] = 0x10
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*IsWorkerNonceUnfulfilledRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: IsWorkerNonceUnfulfilledRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: IsWorkerNonceUnfulfilledRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BlockHeight", wireType)
				}
				x.BlockHeight = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.BlockHeight |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_IsWorkerNonceUnfulfilledResponse                             protoreflect.MessageDescriptor
	fd_IsWorkerNonceUnfulfilledResponse_is_worker_nonce_unfulfilled protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_IsWorkerNonceUnfulfilledResponse = File_emissions_v5_query_proto.Messages().ByName("IsWorkerNonceUnfulfilledResponse")
	fd_IsWorkerNonceUnfulfilledResponse_is_worker_nonce_unfulfilled = md_IsWorkerNonceUnfulfilledResponse.Fields().ByName("is_worker_nonce_unfulfilled")
}

var _ protoreflect.Message = (*fastReflection_IsWorkerNonceUnfulfilledResponse)(nil)

type fastReflection_IsWorkerNonceUnfulfilledResponse IsWorkerNonceUnfulfilledResponse

func (x *IsWorkerNonceUnfulfilledResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_IsWorkerNonceUnfulfilledResponse)(x)
}

func (x *IsWorkerNonceUnfulfilledResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_IsWorkerNonceUnfulfilledResponse_messageType fastReflection_IsWorkerNonceUnfulfilledResponse_messageType
var _ protoreflect.MessageType = fastReflection_IsWorkerNonceUnfulfilledResponse_messageType{}

type fastReflection_IsWorkerNonceUnfulfilledResponse_messageType struct{}

func (x fastReflection_IsWorkerNonceUnfulfilledResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_IsWorkerNonceUnfulfilledResponse)(nil)
}
func (x fastReflection_IsWorkerNonceUnfulfilledResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_IsWorkerNonceUnfulfilledResponse)
}
func (x fastReflection_IsWorkerNonceUnfulfilledResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_IsWorkerNonceUnfulfilledResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_IsWorkerNonceUnfulfilledResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_IsWorkerNonceUnfulfilledResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_IsWorkerNonceUnfulfilledResponse) Type() protoreflect.MessageType {
	return _fastReflection_IsWorkerNonceUnfulfilledResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_IsWorkerNonceUnfulfilledResponse) New() protoreflect.Message {
	return new(fastReflection_IsWorkerNonceUnfulfilledResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_IsWorkerNonceUnfulfilledResponse) Interface() protoreflect.ProtoMessage {
	return (*IsWorkerNonceUnfulfilledResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_IsWorkerNonceUnfulfilledResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.IsWorkerNonceUnfulfilled != false {
		value := protoreflect.ValueOfBool(x.IsWorkerNonceUnfulfilled)
		if !f(fd_IsWorkerNonceUnfulfilledResponse_is_worker_nonce_unfulfilled, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_IsWorkerNonceUnfulfilledResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.IsWorkerNonceUnfulfilledResponse.is_worker_nonce_unfulfilled":
		return x.IsWorkerNonceUnfulfilled != false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.IsWorkerNonceUnfulfilledResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.IsWorkerNonceUnfulfilledResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_IsWorkerNonceUnfulfilledResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.IsWorkerNonceUnfulfilledResponse.is_worker_nonce_unfulfilled":
		x.IsWorkerNonceUnfulfilled = false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.IsWorkerNonceUnfulfilledResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.IsWorkerNonceUnfulfilledResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_IsWorkerNonceUnfulfilledResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.IsWorkerNonceUnfulfilledResponse.is_worker_nonce_unfulfilled":
		value := x.IsWorkerNonceUnfulfilled
		return protoreflect.ValueOfBool(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.IsWorkerNonceUnfulfilledResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.IsWorkerNonceUnfulfilledResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_IsWorkerNonceUnfulfilledResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.IsWorkerNonceUnfulfilledResponse.is_worker_nonce_unfulfilled":
		x.IsWorkerNonceUnfulfilled = value.Bool()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.IsWorkerNonceUnfulfilledResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.IsWorkerNonceUnfulfilledResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_IsWorkerNonceUnfulfilledResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.IsWorkerNonceUnfulfilledResponse.is_worker_nonce_unfulfilled":
		panic(fmt.Errorf("field is_worker_nonce_unfulfilled of message emissions.v5.IsWorkerNonceUnfulfilledResponse is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.IsWorkerNonceUnfulfilledResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.IsWorkerNonceUnfulfilledResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_IsWorkerNonceUnfulfilledResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.IsWorkerNonceUnfulfilledResponse.is_worker_nonce_unfulfilled":
		return protoreflect.ValueOfBool(false)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.IsWorkerNonceUnfulfilledResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.IsWorkerNonceUnfulfilledResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_IsWorkerNonceUnfulfilledResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.IsWorkerNonceUnfulfilledResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_IsWorkerNonceUnfulfilledResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_IsWorkerNonceUnfulfilledResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_IsWorkerNonceUnfulfilledResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_IsWorkerNonceUnfulfilledResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*IsWorkerNonceUnfulfilledResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.IsWorkerNonceUnfulfilled {
			n += 2
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*IsWorkerNonceUnfulfilledResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.IsWorkerNonceUnfulfilled {
			i--
			if x.IsWorkerNonceUnfulfilled {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*IsWorkerNonceUnfulfilledResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: IsWorkerNonceUnfulfilledResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: IsWorkerNonceUnfulfilledResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field IsWorkerNonceUnfulfilled", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.IsWorkerNonceUnfulfilled = bool(v != 0)
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetUnfulfilledReputerNoncesRequest          protoreflect.MessageDescriptor
	fd_GetUnfulfilledReputerNoncesRequest_topic_id protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetUnfulfilledReputerNoncesRequest = File_emissions_v5_query_proto.Messages().ByName("GetUnfulfilledReputerNoncesRequest")
	fd_GetUnfulfilledReputerNoncesRequest_topic_id = md_GetUnfulfilledReputerNoncesRequest.Fields().ByName("topic_id")
}

var _ protoreflect.Message = (*fastReflection_GetUnfulfilledReputerNoncesRequest)(nil)

type fastReflection_GetUnfulfilledReputerNoncesRequest GetUnfulfilledReputerNoncesRequest

func (x *GetUnfulfilledReputerNoncesRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetUnfulfilledReputerNoncesRequest)(x)
}

func (x *GetUnfulfilledReputerNoncesRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetUnfulfilledReputerNoncesRequest_messageType fastReflection_GetUnfulfilledReputerNoncesRequest_messageType
var _ protoreflect.MessageType = fastReflection_GetUnfulfilledReputerNoncesRequest_messageType{}

type fastReflection_GetUnfulfilledReputerNoncesRequest_messageType struct{}

func (x fastReflection_GetUnfulfilledReputerNoncesRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetUnfulfilledReputerNoncesRequest)(nil)
}
func (x fastReflection_GetUnfulfilledReputerNoncesRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_GetUnfulfilledReputerNoncesRequest)
}
func (x fastReflection_GetUnfulfilledReputerNoncesRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetUnfulfilledReputerNoncesRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetUnfulfilledReputerNoncesRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_GetUnfulfilledReputerNoncesRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetUnfulfilledReputerNoncesRequest) Type() protoreflect.MessageType {
	return _fastReflection_GetUnfulfilledReputerNoncesRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetUnfulfilledReputerNoncesRequest) New() protoreflect.Message {
	return new(fastReflection_GetUnfulfilledReputerNoncesRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetUnfulfilledReputerNoncesRequest) Interface() protoreflect.ProtoMessage {
	return (*GetUnfulfilledReputerNoncesRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetUnfulfilledReputerNoncesRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_GetUnfulfilledReputerNoncesRequest_topic_id, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetUnfulfilledReputerNoncesRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetUnfulfilledReputerNoncesRequest.topic_id":
		return x.TopicId != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetUnfulfilledReputerNoncesRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetUnfulfilledReputerNoncesRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetUnfulfilledReputerNoncesRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetUnfulfilledReputerNoncesRequest.topic_id":
		x.TopicId = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetUnfulfilledReputerNoncesRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetUnfulfilledReputerNoncesRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetUnfulfilledReputerNoncesRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetUnfulfilledReputerNoncesRequest.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetUnfulfilledReputerNoncesRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetUnfulfilledReputerNoncesRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetUnfulfilledReputerNoncesRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetUnfulfilledReputerNoncesRequest.topic_id":
		x.TopicId = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetUnfulfilledReputerNoncesRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetUnfulfilledReputerNoncesRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetUnfulfilledReputerNoncesRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetUnfulfilledReputerNoncesRequest.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.GetUnfulfilledReputerNoncesRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetUnfulfilledReputerNoncesRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetUnfulfilledReputerNoncesRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetUnfulfilledReputerNoncesRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetUnfulfilledReputerNoncesRequest.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetUnfulfilledReputerNoncesRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetUnfulfilledReputerNoncesRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetUnfulfilledReputerNoncesRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetUnfulfilledReputerNoncesRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetUnfulfilledReputerNoncesRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetUnfulfilledReputerNoncesRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetUnfulfilledReputerNoncesRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetUnfulfilledReputerNoncesRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetUnfulfilledReputerNoncesRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetUnfulfilledReputerNoncesRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetUnfulfilledReputerNoncesRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetUnfulfilledReputerNoncesRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetUnfulfilledReputerNoncesRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetUnfulfilledReputerNoncesResponse        protoreflect.MessageDescriptor
	fd_GetUnfulfilledReputerNoncesResponse_nonces protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetUnfulfilledReputerNoncesResponse = File_emissions_v5_query_proto.Messages().ByName("GetUnfulfilledReputerNoncesResponse")
	fd_GetUnfulfilledReputerNoncesResponse_nonces = md_GetUnfulfilledReputerNoncesResponse.Fields().ByName("nonces")
}

var _ protoreflect.Message = (*fastReflection_GetUnfulfilledReputerNoncesResponse)(nil)

type fastReflection_GetUnfulfilledReputerNoncesResponse GetUnfulfilledReputerNoncesResponse

func (x *GetUnfulfilledReputerNoncesResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetUnfulfilledReputerNoncesResponse)(x)
}

func (x *GetUnfulfilledReputerNoncesResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetUnfulfilledReputerNoncesResponse_messageType fastReflection_GetUnfulfilledReputerNoncesResponse_messageType
var _ protoreflect.MessageType = fastReflection_GetUnfulfilledReputerNoncesResponse_messageType{}

type fastReflection_GetUnfulfilledReputerNoncesResponse_messageType struct{}

func (x fastReflection_GetUnfulfilledReputerNoncesResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetUnfulfilledReputerNoncesResponse)(nil)
}
func (x fastReflection_GetUnfulfilledReputerNoncesResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_GetUnfulfilledReputerNoncesResponse)
}
func (x fastReflection_GetUnfulfilledReputerNoncesResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetUnfulfilledReputerNoncesResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetUnfulfilledReputerNoncesResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_GetUnfulfilledReputerNoncesResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetUnfulfilledReputerNoncesResponse) Type() protoreflect.MessageType {
	return _fastReflection_GetUnfulfilledReputerNoncesResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetUnfulfilledReputerNoncesResponse) New() protoreflect.Message {
	return new(fastReflection_GetUnfulfilledReputerNoncesResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetUnfulfilledReputerNoncesResponse) Interface() protoreflect.ProtoMessage {
	return (*GetUnfulfilledReputerNoncesResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetUnfulfilledReputerNoncesResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Nonces != nil {
		value := protoreflect.ValueOfMessage(x.Nonces.ProtoReflect())
		if !f(fd_GetUnfulfilledReputerNoncesResponse_nonces, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetUnfulfilledReputerNoncesResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetUnfulfilledReputerNoncesResponse.nonces":
		return x.Nonces != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetUnfulfilledReputerNoncesResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetUnfulfilledReputerNoncesResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetUnfulfilledReputerNoncesResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetUnfulfilledReputerNoncesResponse.nonces":
		x.Nonces = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetUnfulfilledReputerNoncesResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetUnfulfilledReputerNoncesResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetUnfulfilledReputerNoncesResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetUnfulfilledReputerNoncesResponse.nonces":
		value := x.Nonces
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetUnfulfilledReputerNoncesResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetUnfulfilledReputerNoncesResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetUnfulfilledReputerNoncesResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetUnfulfilledReputerNoncesResponse.nonces":
		x.Nonces = value.Message().Interface().(*v3.ReputerRequestNonces)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetUnfulfilledReputerNoncesResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetUnfulfilledReputerNoncesResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetUnfulfilledReputerNoncesResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetUnfulfilledReputerNoncesResponse.nonces":
		if x.Nonces == nil {
			x.Nonces = new(v3.ReputerRequestNonces)
		}
		return protoreflect.ValueOfMessage(x.Nonces.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetUnfulfilledReputerNoncesResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetUnfulfilledReputerNoncesResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetUnfulfilledReputerNoncesResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetUnfulfilledReputerNoncesResponse.nonces":
		m := new(v3.ReputerRequestNonces)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetUnfulfilledReputerNoncesResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetUnfulfilledReputerNoncesResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetUnfulfilledReputerNoncesResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetUnfulfilledReputerNoncesResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetUnfulfilledReputerNoncesResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetUnfulfilledReputerNoncesResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetUnfulfilledReputerNoncesResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetUnfulfilledReputerNoncesResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetUnfulfilledReputerNoncesResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Nonces != nil {
			l = options.Size(x.Nonces)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetUnfulfilledReputerNoncesResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Nonces != nil {
			encoded, err := options.Marshal(x.Nonces)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetUnfulfilledReputerNoncesResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetUnfulfilledReputerNoncesResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetUnfulfilledReputerNoncesResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Nonces", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Nonces == nil {
					x.Nonces = &v3.ReputerRequestNonces{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Nonces); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetUnfulfilledWorkerNoncesRequest          protoreflect.MessageDescriptor
	fd_GetUnfulfilledWorkerNoncesRequest_topic_id protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetUnfulfilledWorkerNoncesRequest = File_emissions_v5_query_proto.Messages().ByName("GetUnfulfilledWorkerNoncesRequest")
	fd_GetUnfulfilledWorkerNoncesRequest_topic_id = md_GetUnfulfilledWorkerNoncesRequest.Fields().ByName("topic_id")
}

var _ protoreflect.Message = (*fastReflection_GetUnfulfilledWorkerNoncesRequest)(nil)

type fastReflection_GetUnfulfilledWorkerNoncesRequest GetUnfulfilledWorkerNoncesRequest

func (x *GetUnfulfilledWorkerNoncesRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetUnfulfilledWorkerNoncesRequest)(x)
}

func (x *GetUnfulfilledWorkerNoncesRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetUnfulfilledWorkerNoncesRequest_messageType fastReflection_GetUnfulfilledWorkerNoncesRequest_messageType
var _ protoreflect.MessageType = fastReflection_GetUnfulfilledWorkerNoncesRequest_messageType{}

type fastReflection_GetUnfulfilledWorkerNoncesRequest_messageType struct{}

func (x fastReflection_GetUnfulfilledWorkerNoncesRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetUnfulfilledWorkerNoncesRequest)(nil)
}
func (x fastReflection_GetUnfulfilledWorkerNoncesRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_GetUnfulfilledWorkerNoncesRequest)
}
func (x fastReflection_GetUnfulfilledWorkerNoncesRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetUnfulfilledWorkerNoncesRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetUnfulfilledWorkerNoncesRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_GetUnfulfilledWorkerNoncesRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetUnfulfilledWorkerNoncesRequest) Type() protoreflect.MessageType {
	return _fastReflection_GetUnfulfilledWorkerNoncesRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetUnfulfilledWorkerNoncesRequest) New() protoreflect.Message {
	return new(fastReflection_GetUnfulfilledWorkerNoncesRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetUnfulfilledWorkerNoncesRequest) Interface() protoreflect.ProtoMessage {
	return (*GetUnfulfilledWorkerNoncesRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetUnfulfilledWorkerNoncesRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_GetUnfulfilledWorkerNoncesRequest_topic_id, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetUnfulfilledWorkerNoncesRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetUnfulfilledWorkerNoncesRequest.topic_id":
		return x.TopicId != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetUnfulfilledWorkerNoncesRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetUnfulfilledWorkerNoncesRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetUnfulfilledWorkerNoncesRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetUnfulfilledWorkerNoncesRequest.topic_id":
		x.TopicId = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetUnfulfilledWorkerNoncesRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetUnfulfilledWorkerNoncesRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetUnfulfilledWorkerNoncesRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetUnfulfilledWorkerNoncesRequest.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetUnfulfilledWorkerNoncesRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetUnfulfilledWorkerNoncesRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetUnfulfilledWorkerNoncesRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetUnfulfilledWorkerNoncesRequest.topic_id":
		x.TopicId = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetUnfulfilledWorkerNoncesRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetUnfulfilledWorkerNoncesRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetUnfulfilledWorkerNoncesRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetUnfulfilledWorkerNoncesRequest.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.GetUnfulfilledWorkerNoncesRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetUnfulfilledWorkerNoncesRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetUnfulfilledWorkerNoncesRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetUnfulfilledWorkerNoncesRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetUnfulfilledWorkerNoncesRequest.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetUnfulfilledWorkerNoncesRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetUnfulfilledWorkerNoncesRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetUnfulfilledWorkerNoncesRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetUnfulfilledWorkerNoncesRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetUnfulfilledWorkerNoncesRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetUnfulfilledWorkerNoncesRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetUnfulfilledWorkerNoncesRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetUnfulfilledWorkerNoncesRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetUnfulfilledWorkerNoncesRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetUnfulfilledWorkerNoncesRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetUnfulfilledWorkerNoncesRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetUnfulfilledWorkerNoncesRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetUnfulfilledWorkerNoncesRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetUnfulfilledWorkerNoncesResponse        protoreflect.MessageDescriptor
	fd_GetUnfulfilledWorkerNoncesResponse_nonces protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetUnfulfilledWorkerNoncesResponse = File_emissions_v5_query_proto.Messages().ByName("GetUnfulfilledWorkerNoncesResponse")
	fd_GetUnfulfilledWorkerNoncesResponse_nonces = md_GetUnfulfilledWorkerNoncesResponse.Fields().ByName("nonces")
}

var _ protoreflect.Message = (*fastReflection_GetUnfulfilledWorkerNoncesResponse)(nil)

type fastReflection_GetUnfulfilledWorkerNoncesResponse GetUnfulfilledWorkerNoncesResponse

func (x *GetUnfulfilledWorkerNoncesResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetUnfulfilledWorkerNoncesResponse)(x)
}

func (x *GetUnfulfilledWorkerNoncesResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetUnfulfilledWorkerNoncesResponse_messageType fastReflection_GetUnfulfilledWorkerNoncesResponse_messageType
var _ protoreflect.MessageType = fastReflection_GetUnfulfilledWorkerNoncesResponse_messageType{}

type fastReflection_GetUnfulfilledWorkerNoncesResponse_messageType struct{}

func (x fastReflection_GetUnfulfilledWorkerNoncesResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetUnfulfilledWorkerNoncesResponse)(nil)
}
func (x fastReflection_GetUnfulfilledWorkerNoncesResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_GetUnfulfilledWorkerNoncesResponse)
}
func (x fastReflection_GetUnfulfilledWorkerNoncesResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetUnfulfilledWorkerNoncesResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetUnfulfilledWorkerNoncesResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_GetUnfulfilledWorkerNoncesResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetUnfulfilledWorkerNoncesResponse) Type() protoreflect.MessageType {
	return _fastReflection_GetUnfulfilledWorkerNoncesResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetUnfulfilledWorkerNoncesResponse) New() protoreflect.Message {
	return new(fastReflection_GetUnfulfilledWorkerNoncesResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetUnfulfilledWorkerNoncesResponse) Interface() protoreflect.ProtoMessage {
	return (*GetUnfulfilledWorkerNoncesResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetUnfulfilledWorkerNoncesResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Nonces != nil {
		value := protoreflect.ValueOfMessage(x.Nonces.ProtoReflect())
		if !f(fd_GetUnfulfilledWorkerNoncesResponse_nonces, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetUnfulfilledWorkerNoncesResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetUnfulfilledWorkerNoncesResponse.nonces":
		return x.Nonces != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetUnfulfilledWorkerNoncesResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetUnfulfilledWorkerNoncesResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetUnfulfilledWorkerNoncesResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetUnfulfilledWorkerNoncesResponse.nonces":
		x.Nonces = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetUnfulfilledWorkerNoncesResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetUnfulfilledWorkerNoncesResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetUnfulfilledWorkerNoncesResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetUnfulfilledWorkerNoncesResponse.nonces":
		value := x.Nonces
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetUnfulfilledWorkerNoncesResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetUnfulfilledWorkerNoncesResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetUnfulfilledWorkerNoncesResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetUnfulfilledWorkerNoncesResponse.nonces":
		x.Nonces = value.Message().Interface().(*v3.Nonces)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetUnfulfilledWorkerNoncesResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetUnfulfilledWorkerNoncesResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetUnfulfilledWorkerNoncesResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetUnfulfilledWorkerNoncesResponse.nonces":
		if x.Nonces == nil {
			x.Nonces = new(v3.Nonces)
		}
		return protoreflect.ValueOfMessage(x.Nonces.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetUnfulfilledWorkerNoncesResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetUnfulfilledWorkerNoncesResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetUnfulfilledWorkerNoncesResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetUnfulfilledWorkerNoncesResponse.nonces":
		m := new(v3.Nonces)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetUnfulfilledWorkerNoncesResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetUnfulfilledWorkerNoncesResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetUnfulfilledWorkerNoncesResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetUnfulfilledWorkerNoncesResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetUnfulfilledWorkerNoncesResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetUnfulfilledWorkerNoncesResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetUnfulfilledWorkerNoncesResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetUnfulfilledWorkerNoncesResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetUnfulfilledWorkerNoncesResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Nonces != nil {
			l = options.Size(x.Nonces)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetUnfulfilledWorkerNoncesResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Nonces != nil {
			encoded, err := options.Marshal(x.Nonces)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetUnfulfilledWorkerNoncesResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetUnfulfilledWorkerNoncesResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetUnfulfilledWorkerNoncesResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Nonces", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Nonces == nil {
					x.Nonces = &v3.Nonces{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Nonces); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetInfererNetworkRegretRequest          protoreflect.MessageDescriptor
	fd_GetInfererNetworkRegretRequest_topic_id protoreflect.FieldDescriptor
	fd_GetInfererNetworkRegretRequest_actor_id protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetInfererNetworkRegretRequest = File_emissions_v5_query_proto.Messages().ByName("GetInfererNetworkRegretRequest")
	fd_GetInfererNetworkRegretRequest_topic_id = md_GetInfererNetworkRegretRequest.Fields().ByName("topic_id")
	fd_GetInfererNetworkRegretRequest_actor_id = md_GetInfererNetworkRegretRequest.Fields().ByName("actor_id")
}

var _ protoreflect.Message = (*fastReflection_GetInfererNetworkRegretRequest)(nil)

type fastReflection_GetInfererNetworkRegretRequest GetInfererNetworkRegretRequest

func (x *GetInfererNetworkRegretRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetInfererNetworkRegretRequest)(x)
}

func (x *GetInfererNetworkRegretRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetInfererNetworkRegretRequest_messageType fastReflection_GetInfererNetworkRegretRequest_messageType
var _ protoreflect.MessageType = fastReflection_GetInfererNetworkRegretRequest_messageType{}

type fastReflection_GetInfererNetworkRegretRequest_messageType struct{}

func (x fastReflection_GetInfererNetworkRegretRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetInfererNetworkRegretRequest)(nil)
}
func (x fastReflection_GetInfererNetworkRegretRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_GetInfererNetworkRegretRequest)
}
func (x fastReflection_GetInfererNetworkRegretRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetInfererNetworkRegretRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetInfererNetworkRegretRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_GetInfererNetworkRegretRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetInfererNetworkRegretRequest) Type() protoreflect.MessageType {
	return _fastReflection_GetInfererNetworkRegretRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetInfererNetworkRegretRequest) New() protoreflect.Message {
	return new(fastReflection_GetInfererNetworkRegretRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetInfererNetworkRegretRequest) Interface() protoreflect.ProtoMessage {
	return (*GetInfererNetworkRegretRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetInfererNetworkRegretRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_GetInfererNetworkRegretRequest_topic_id, value) {
			return
		}
	}
	if x.ActorId != "" {
		value := protoreflect.ValueOfString(x.ActorId)
		if !f(fd_GetInfererNetworkRegretRequest_actor_id, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetInfererNetworkRegretRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetInfererNetworkRegretRequest.topic_id":
		return x.TopicId != uint64(0)
	case "emissions.v5.GetInfererNetworkRegretRequest.actor_id":
		return x.ActorId != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetInfererNetworkRegretRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetInfererNetworkRegretRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetInfererNetworkRegretRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetInfererNetworkRegretRequest.topic_id":
		x.TopicId = uint64(0)
	case "emissions.v5.GetInfererNetworkRegretRequest.actor_id":
		x.ActorId = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetInfererNetworkRegretRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetInfererNetworkRegretRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetInfererNetworkRegretRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetInfererNetworkRegretRequest.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	case "emissions.v5.GetInfererNetworkRegretRequest.actor_id":
		value := x.ActorId
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetInfererNetworkRegretRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetInfererNetworkRegretRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetInfererNetworkRegretRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetInfererNetworkRegretRequest.topic_id":
		x.TopicId = value.Uint()
	case "emissions.v5.GetInfererNetworkRegretRequest.actor_id":
		x.ActorId = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetInfererNetworkRegretRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetInfererNetworkRegretRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetInfererNetworkRegretRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetInfererNetworkRegretRequest.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.GetInfererNetworkRegretRequest is not mutable"))
	case "emissions.v5.GetInfererNetworkRegretRequest.actor_id":
		panic(fmt.Errorf("field actor_id of message emissions.v5.GetInfererNetworkRegretRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetInfererNetworkRegretRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetInfererNetworkRegretRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetInfererNetworkRegretRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetInfererNetworkRegretRequest.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "emissions.v5.GetInfererNetworkRegretRequest.actor_id":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetInfererNetworkRegretRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetInfererNetworkRegretRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetInfererNetworkRegretRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetInfererNetworkRegretRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetInfererNetworkRegretRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetInfererNetworkRegretRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetInfererNetworkRegretRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetInfererNetworkRegretRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetInfererNetworkRegretRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		l = len(x.ActorId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetInfererNetworkRegretRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.ActorId) > 0 {
			i -= len(x.ActorId)
			copy(dAtA[i:], x.ActorId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ActorId)))
			i--
			dAtA[i] = 0x12
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetInfererNetworkRegretRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetInfererNetworkRegretRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetInfererNetworkRegretRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ActorId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ActorId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetInfererNetworkRegretResponse        protoreflect.MessageDescriptor
	fd_GetInfererNetworkRegretResponse_regret protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetInfererNetworkRegretResponse = File_emissions_v5_query_proto.Messages().ByName("GetInfererNetworkRegretResponse")
	fd_GetInfererNetworkRegretResponse_regret = md_GetInfererNetworkRegretResponse.Fields().ByName("regret")
}

var _ protoreflect.Message = (*fastReflection_GetInfererNetworkRegretResponse)(nil)

type fastReflection_GetInfererNetworkRegretResponse GetInfererNetworkRegretResponse

func (x *GetInfererNetworkRegretResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetInfererNetworkRegretResponse)(x)
}

func (x *GetInfererNetworkRegretResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetInfererNetworkRegretResponse_messageType fastReflection_GetInfererNetworkRegretResponse_messageType
var _ protoreflect.MessageType = fastReflection_GetInfererNetworkRegretResponse_messageType{}

type fastReflection_GetInfererNetworkRegretResponse_messageType struct{}

func (x fastReflection_GetInfererNetworkRegretResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetInfererNetworkRegretResponse)(nil)
}
func (x fastReflection_GetInfererNetworkRegretResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_GetInfererNetworkRegretResponse)
}
func (x fastReflection_GetInfererNetworkRegretResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetInfererNetworkRegretResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetInfererNetworkRegretResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_GetInfererNetworkRegretResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetInfererNetworkRegretResponse) Type() protoreflect.MessageType {
	return _fastReflection_GetInfererNetworkRegretResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetInfererNetworkRegretResponse) New() protoreflect.Message {
	return new(fastReflection_GetInfererNetworkRegretResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetInfererNetworkRegretResponse) Interface() protoreflect.ProtoMessage {
	return (*GetInfererNetworkRegretResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetInfererNetworkRegretResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Regret != nil {
		value := protoreflect.ValueOfMessage(x.Regret.ProtoReflect())
		if !f(fd_GetInfererNetworkRegretResponse_regret, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetInfererNetworkRegretResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetInfererNetworkRegretResponse.regret":
		return x.Regret != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetInfererNetworkRegretResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetInfererNetworkRegretResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetInfererNetworkRegretResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetInfererNetworkRegretResponse.regret":
		x.Regret = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetInfererNetworkRegretResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetInfererNetworkRegretResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetInfererNetworkRegretResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetInfererNetworkRegretResponse.regret":
		value := x.Regret
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetInfererNetworkRegretResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetInfererNetworkRegretResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetInfererNetworkRegretResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetInfererNetworkRegretResponse.regret":
		x.Regret = value.Message().Interface().(*v3.TimestampedValue)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetInfererNetworkRegretResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetInfererNetworkRegretResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetInfererNetworkRegretResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetInfererNetworkRegretResponse.regret":
		if x.Regret == nil {
			x.Regret = new(v3.TimestampedValue)
		}
		return protoreflect.ValueOfMessage(x.Regret.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetInfererNetworkRegretResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetInfererNetworkRegretResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetInfererNetworkRegretResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetInfererNetworkRegretResponse.regret":
		m := new(v3.TimestampedValue)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetInfererNetworkRegretResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetInfererNetworkRegretResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetInfererNetworkRegretResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetInfererNetworkRegretResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetInfererNetworkRegretResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetInfererNetworkRegretResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetInfererNetworkRegretResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetInfererNetworkRegretResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetInfererNetworkRegretResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Regret != nil {
			l = options.Size(x.Regret)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetInfererNetworkRegretResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Regret != nil {
			encoded, err := options.Marshal(x.Regret)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetInfererNetworkRegretResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetInfererNetworkRegretResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetInfererNetworkRegretResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Regret", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Regret == nil {
					x.Regret = &v3.TimestampedValue{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Regret); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetForecasterNetworkRegretRequest          protoreflect.MessageDescriptor
	fd_GetForecasterNetworkRegretRequest_topic_id protoreflect.FieldDescriptor
	fd_GetForecasterNetworkRegretRequest_worker   protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetForecasterNetworkRegretRequest = File_emissions_v5_query_proto.Messages().ByName("GetForecasterNetworkRegretRequest")
	fd_GetForecasterNetworkRegretRequest_topic_id = md_GetForecasterNetworkRegretRequest.Fields().ByName("topic_id")
	fd_GetForecasterNetworkRegretRequest_worker = md_GetForecasterNetworkRegretRequest.Fields().ByName("worker")
}

var _ protoreflect.Message = (*fastReflection_GetForecasterNetworkRegretRequest)(nil)

type fastReflection_GetForecasterNetworkRegretRequest GetForecasterNetworkRegretRequest

func (x *GetForecasterNetworkRegretRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetForecasterNetworkRegretRequest)(x)
}

func (x *GetForecasterNetworkRegretRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetForecasterNetworkRegretRequest_messageType fastReflection_GetForecasterNetworkRegretRequest_messageType
var _ protoreflect.MessageType = fastReflection_GetForecasterNetworkRegretRequest_messageType{}

type fastReflection_GetForecasterNetworkRegretRequest_messageType struct{}

func (x fastReflection_GetForecasterNetworkRegretRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetForecasterNetworkRegretRequest)(nil)
}
func (x fastReflection_GetForecasterNetworkRegretRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_GetForecasterNetworkRegretRequest)
}
func (x fastReflection_GetForecasterNetworkRegretRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetForecasterNetworkRegretRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetForecasterNetworkRegretRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_GetForecasterNetworkRegretRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetForecasterNetworkRegretRequest) Type() protoreflect.MessageType {
	return _fastReflection_GetForecasterNetworkRegretRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetForecasterNetworkRegretRequest) New() protoreflect.Message {
	return new(fastReflection_GetForecasterNetworkRegretRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetForecasterNetworkRegretRequest) Interface() protoreflect.ProtoMessage {
	return (*GetForecasterNetworkRegretRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetForecasterNetworkRegretRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_GetForecasterNetworkRegretRequest_topic_id, value) {
			return
		}
	}
	if x.Worker != "" {
		value := protoreflect.ValueOfString(x.Worker)
		if !f(fd_GetForecasterNetworkRegretRequest_worker, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetForecasterNetworkRegretRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetForecasterNetworkRegretRequest.topic_id":
		return x.TopicId != uint64(0)
	case "emissions.v5.GetForecasterNetworkRegretRequest.worker":
		return x.Worker != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetForecasterNetworkRegretRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetForecasterNetworkRegretRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetForecasterNetworkRegretRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetForecasterNetworkRegretRequest.topic_id":
		x.TopicId = uint64(0)
	case "emissions.v5.GetForecasterNetworkRegretRequest.worker":
		x.Worker = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetForecasterNetworkRegretRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetForecasterNetworkRegretRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetForecasterNetworkRegretRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetForecasterNetworkRegretRequest.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	case "emissions.v5.GetForecasterNetworkRegretRequest.worker":
		value := x.Worker
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetForecasterNetworkRegretRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetForecasterNetworkRegretRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetForecasterNetworkRegretRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetForecasterNetworkRegretRequest.topic_id":
		x.TopicId = value.Uint()
	case "emissions.v5.GetForecasterNetworkRegretRequest.worker":
		x.Worker = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetForecasterNetworkRegretRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetForecasterNetworkRegretRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetForecasterNetworkRegretRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetForecasterNetworkRegretRequest.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.GetForecasterNetworkRegretRequest is not mutable"))
	case "emissions.v5.GetForecasterNetworkRegretRequest.worker":
		panic(fmt.Errorf("field worker of message emissions.v5.GetForecasterNetworkRegretRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetForecasterNetworkRegretRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetForecasterNetworkRegretRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetForecasterNetworkRegretRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetForecasterNetworkRegretRequest.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "emissions.v5.GetForecasterNetworkRegretRequest.worker":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetForecasterNetworkRegretRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetForecasterNetworkRegretRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetForecasterNetworkRegretRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetForecasterNetworkRegretRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetForecasterNetworkRegretRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetForecasterNetworkRegretRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetForecasterNetworkRegretRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetForecasterNetworkRegretRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetForecasterNetworkRegretRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		l = len(x.Worker)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetForecasterNetworkRegretRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Worker) > 0 {
			i -= len(x.Worker)
			copy(dAtA[i:], x.Worker)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Worker)))
			i--
			dAtA[i] = 0x12
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetForecasterNetworkRegretRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetForecasterNetworkRegretRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetForecasterNetworkRegretRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Worker", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Worker = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetForecasterNetworkRegretResponse        protoreflect.MessageDescriptor
	fd_GetForecasterNetworkRegretResponse_regret protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetForecasterNetworkRegretResponse = File_emissions_v5_query_proto.Messages().ByName("GetForecasterNetworkRegretResponse")
	fd_GetForecasterNetworkRegretResponse_regret = md_GetForecasterNetworkRegretResponse.Fields().ByName("regret")
}

var _ protoreflect.Message = (*fastReflection_GetForecasterNetworkRegretResponse)(nil)

type fastReflection_GetForecasterNetworkRegretResponse GetForecasterNetworkRegretResponse

func (x *GetForecasterNetworkRegretResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetForecasterNetworkRegretResponse)(x)
}

func (x *GetForecasterNetworkRegretResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetForecasterNetworkRegretResponse_messageType fastReflection_GetForecasterNetworkRegretResponse_messageType
var _ protoreflect.MessageType = fastReflection_GetForecasterNetworkRegretResponse_messageType{}

type fastReflection_GetForecasterNetworkRegretResponse_messageType struct{}

func (x fastReflection_GetForecasterNetworkRegretResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetForecasterNetworkRegretResponse)(nil)
}
func (x fastReflection_GetForecasterNetworkRegretResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_GetForecasterNetworkRegretResponse)
}
func (x fastReflection_GetForecasterNetworkRegretResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetForecasterNetworkRegretResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetForecasterNetworkRegretResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_GetForecasterNetworkRegretResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetForecasterNetworkRegretResponse) Type() protoreflect.MessageType {
	return _fastReflection_GetForecasterNetworkRegretResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetForecasterNetworkRegretResponse) New() protoreflect.Message {
	return new(fastReflection_GetForecasterNetworkRegretResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetForecasterNetworkRegretResponse) Interface() protoreflect.ProtoMessage {
	return (*GetForecasterNetworkRegretResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetForecasterNetworkRegretResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Regret != nil {
		value := protoreflect.ValueOfMessage(x.Regret.ProtoReflect())
		if !f(fd_GetForecasterNetworkRegretResponse_regret, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetForecasterNetworkRegretResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetForecasterNetworkRegretResponse.regret":
		return x.Regret != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetForecasterNetworkRegretResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetForecasterNetworkRegretResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetForecasterNetworkRegretResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetForecasterNetworkRegretResponse.regret":
		x.Regret = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetForecasterNetworkRegretResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetForecasterNetworkRegretResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetForecasterNetworkRegretResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetForecasterNetworkRegretResponse.regret":
		value := x.Regret
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetForecasterNetworkRegretResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetForecasterNetworkRegretResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetForecasterNetworkRegretResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetForecasterNetworkRegretResponse.regret":
		x.Regret = value.Message().Interface().(*v3.TimestampedValue)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetForecasterNetworkRegretResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetForecasterNetworkRegretResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetForecasterNetworkRegretResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetForecasterNetworkRegretResponse.regret":
		if x.Regret == nil {
			x.Regret = new(v3.TimestampedValue)
		}
		return protoreflect.ValueOfMessage(x.Regret.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetForecasterNetworkRegretResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetForecasterNetworkRegretResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetForecasterNetworkRegretResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetForecasterNetworkRegretResponse.regret":
		m := new(v3.TimestampedValue)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetForecasterNetworkRegretResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetForecasterNetworkRegretResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetForecasterNetworkRegretResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetForecasterNetworkRegretResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetForecasterNetworkRegretResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetForecasterNetworkRegretResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetForecasterNetworkRegretResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetForecasterNetworkRegretResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetForecasterNetworkRegretResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Regret != nil {
			l = options.Size(x.Regret)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetForecasterNetworkRegretResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Regret != nil {
			encoded, err := options.Marshal(x.Regret)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetForecasterNetworkRegretResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetForecasterNetworkRegretResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetForecasterNetworkRegretResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Regret", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Regret == nil {
					x.Regret = &v3.TimestampedValue{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Regret); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetOneInForecasterNetworkRegretRequest            protoreflect.MessageDescriptor
	fd_GetOneInForecasterNetworkRegretRequest_topic_id   protoreflect.FieldDescriptor
	fd_GetOneInForecasterNetworkRegretRequest_forecaster protoreflect.FieldDescriptor
	fd_GetOneInForecasterNetworkRegretRequest_inferer    protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetOneInForecasterNetworkRegretRequest = File_emissions_v5_query_proto.Messages().ByName("GetOneInForecasterNetworkRegretRequest")
	fd_GetOneInForecasterNetworkRegretRequest_topic_id = md_GetOneInForecasterNetworkRegretRequest.Fields().ByName("topic_id")
	fd_GetOneInForecasterNetworkRegretRequest_forecaster = md_GetOneInForecasterNetworkRegretRequest.Fields().ByName("forecaster")
	fd_GetOneInForecasterNetworkRegretRequest_inferer = md_GetOneInForecasterNetworkRegretRequest.Fields().ByName("inferer")
}

var _ protoreflect.Message = (*fastReflection_GetOneInForecasterNetworkRegretRequest)(nil)

type fastReflection_GetOneInForecasterNetworkRegretRequest GetOneInForecasterNetworkRegretRequest

func (x *GetOneInForecasterNetworkRegretRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetOneInForecasterNetworkRegretRequest)(x)
}

func (x *GetOneInForecasterNetworkRegretRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetOneInForecasterNetworkRegretRequest_messageType fastReflection_GetOneInForecasterNetworkRegretRequest_messageType
var _ protoreflect.MessageType = fastReflection_GetOneInForecasterNetworkRegretRequest_messageType{}

type fastReflection_GetOneInForecasterNetworkRegretRequest_messageType struct{}

func (x fastReflection_GetOneInForecasterNetworkRegretRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetOneInForecasterNetworkRegretRequest)(nil)
}
func (x fastReflection_GetOneInForecasterNetworkRegretRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_GetOneInForecasterNetworkRegretRequest)
}
func (x fastReflection_GetOneInForecasterNetworkRegretRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetOneInForecasterNetworkRegretRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetOneInForecasterNetworkRegretRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_GetOneInForecasterNetworkRegretRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetOneInForecasterNetworkRegretRequest) Type() protoreflect.MessageType {
	return _fastReflection_GetOneInForecasterNetworkRegretRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetOneInForecasterNetworkRegretRequest) New() protoreflect.Message {
	return new(fastReflection_GetOneInForecasterNetworkRegretRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetOneInForecasterNetworkRegretRequest) Interface() protoreflect.ProtoMessage {
	return (*GetOneInForecasterNetworkRegretRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetOneInForecasterNetworkRegretRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_GetOneInForecasterNetworkRegretRequest_topic_id, value) {
			return
		}
	}
	if x.Forecaster != "" {
		value := protoreflect.ValueOfString(x.Forecaster)
		if !f(fd_GetOneInForecasterNetworkRegretRequest_forecaster, value) {
			return
		}
	}
	if x.Inferer != "" {
		value := protoreflect.ValueOfString(x.Inferer)
		if !f(fd_GetOneInForecasterNetworkRegretRequest_inferer, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetOneInForecasterNetworkRegretRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetOneInForecasterNetworkRegretRequest.topic_id":
		return x.TopicId != uint64(0)
	case "emissions.v5.GetOneInForecasterNetworkRegretRequest.forecaster":
		return x.Forecaster != ""
	case "emissions.v5.GetOneInForecasterNetworkRegretRequest.inferer":
		return x.Inferer != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetOneInForecasterNetworkRegretRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetOneInForecasterNetworkRegretRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetOneInForecasterNetworkRegretRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetOneInForecasterNetworkRegretRequest.topic_id":
		x.TopicId = uint64(0)
	case "emissions.v5.GetOneInForecasterNetworkRegretRequest.forecaster":
		x.Forecaster = ""
	case "emissions.v5.GetOneInForecasterNetworkRegretRequest.inferer":
		x.Inferer = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetOneInForecasterNetworkRegretRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetOneInForecasterNetworkRegretRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetOneInForecasterNetworkRegretRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetOneInForecasterNetworkRegretRequest.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	case "emissions.v5.GetOneInForecasterNetworkRegretRequest.forecaster":
		value := x.Forecaster
		return protoreflect.ValueOfString(value)
	case "emissions.v5.GetOneInForecasterNetworkRegretRequest.inferer":
		value := x.Inferer
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetOneInForecasterNetworkRegretRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetOneInForecasterNetworkRegretRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetOneInForecasterNetworkRegretRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetOneInForecasterNetworkRegretRequest.topic_id":
		x.TopicId = value.Uint()
	case "emissions.v5.GetOneInForecasterNetworkRegretRequest.forecaster":
		x.Forecaster = value.Interface().(string)
	case "emissions.v5.GetOneInForecasterNetworkRegretRequest.inferer":
		x.Inferer = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetOneInForecasterNetworkRegretRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetOneInForecasterNetworkRegretRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetOneInForecasterNetworkRegretRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetOneInForecasterNetworkRegretRequest.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.GetOneInForecasterNetworkRegretRequest is not mutable"))
	case "emissions.v5.GetOneInForecasterNetworkRegretRequest.forecaster":
		panic(fmt.Errorf("field forecaster of message emissions.v5.GetOneInForecasterNetworkRegretRequest is not mutable"))
	case "emissions.v5.GetOneInForecasterNetworkRegretRequest.inferer":
		panic(fmt.Errorf("field inferer of message emissions.v5.GetOneInForecasterNetworkRegretRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetOneInForecasterNetworkRegretRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetOneInForecasterNetworkRegretRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetOneInForecasterNetworkRegretRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetOneInForecasterNetworkRegretRequest.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "emissions.v5.GetOneInForecasterNetworkRegretRequest.forecaster":
		return protoreflect.ValueOfString("")
	case "emissions.v5.GetOneInForecasterNetworkRegretRequest.inferer":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetOneInForecasterNetworkRegretRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetOneInForecasterNetworkRegretRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetOneInForecasterNetworkRegretRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetOneInForecasterNetworkRegretRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetOneInForecasterNetworkRegretRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetOneInForecasterNetworkRegretRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetOneInForecasterNetworkRegretRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetOneInForecasterNetworkRegretRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetOneInForecasterNetworkRegretRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		l = len(x.Forecaster)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Inferer)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetOneInForecasterNetworkRegretRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Inferer) > 0 {
			i -= len(x.Inferer)
			copy(dAtA[i:], x.Inferer)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Inferer)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.Forecaster) > 0 {
			i -= len(x.Forecaster)
			copy(dAtA[i:], x.Forecaster)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Forecaster)))
			i--
			dAtA[i] = 0x12
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetOneInForecasterNetworkRegretRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetOneInForecasterNetworkRegretRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetOneInForecasterNetworkRegretRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Forecaster", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Forecaster = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Inferer", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Inferer = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetOneInForecasterNetworkRegretResponse        protoreflect.MessageDescriptor
	fd_GetOneInForecasterNetworkRegretResponse_regret protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetOneInForecasterNetworkRegretResponse = File_emissions_v5_query_proto.Messages().ByName("GetOneInForecasterNetworkRegretResponse")
	fd_GetOneInForecasterNetworkRegretResponse_regret = md_GetOneInForecasterNetworkRegretResponse.Fields().ByName("regret")
}

var _ protoreflect.Message = (*fastReflection_GetOneInForecasterNetworkRegretResponse)(nil)

type fastReflection_GetOneInForecasterNetworkRegretResponse GetOneInForecasterNetworkRegretResponse

func (x *GetOneInForecasterNetworkRegretResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetOneInForecasterNetworkRegretResponse)(x)
}

func (x *GetOneInForecasterNetworkRegretResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetOneInForecasterNetworkRegretResponse_messageType fastReflection_GetOneInForecasterNetworkRegretResponse_messageType
var _ protoreflect.MessageType = fastReflection_GetOneInForecasterNetworkRegretResponse_messageType{}

type fastReflection_GetOneInForecasterNetworkRegretResponse_messageType struct{}

func (x fastReflection_GetOneInForecasterNetworkRegretResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetOneInForecasterNetworkRegretResponse)(nil)
}
func (x fastReflection_GetOneInForecasterNetworkRegretResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_GetOneInForecasterNetworkRegretResponse)
}
func (x fastReflection_GetOneInForecasterNetworkRegretResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetOneInForecasterNetworkRegretResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetOneInForecasterNetworkRegretResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_GetOneInForecasterNetworkRegretResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetOneInForecasterNetworkRegretResponse) Type() protoreflect.MessageType {
	return _fastReflection_GetOneInForecasterNetworkRegretResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetOneInForecasterNetworkRegretResponse) New() protoreflect.Message {
	return new(fastReflection_GetOneInForecasterNetworkRegretResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetOneInForecasterNetworkRegretResponse) Interface() protoreflect.ProtoMessage {
	return (*GetOneInForecasterNetworkRegretResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetOneInForecasterNetworkRegretResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Regret != nil {
		value := protoreflect.ValueOfMessage(x.Regret.ProtoReflect())
		if !f(fd_GetOneInForecasterNetworkRegretResponse_regret, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetOneInForecasterNetworkRegretResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetOneInForecasterNetworkRegretResponse.regret":
		return x.Regret != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetOneInForecasterNetworkRegretResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetOneInForecasterNetworkRegretResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetOneInForecasterNetworkRegretResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetOneInForecasterNetworkRegretResponse.regret":
		x.Regret = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetOneInForecasterNetworkRegretResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetOneInForecasterNetworkRegretResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetOneInForecasterNetworkRegretResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetOneInForecasterNetworkRegretResponse.regret":
		value := x.Regret
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetOneInForecasterNetworkRegretResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetOneInForecasterNetworkRegretResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetOneInForecasterNetworkRegretResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetOneInForecasterNetworkRegretResponse.regret":
		x.Regret = value.Message().Interface().(*v3.TimestampedValue)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetOneInForecasterNetworkRegretResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetOneInForecasterNetworkRegretResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetOneInForecasterNetworkRegretResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetOneInForecasterNetworkRegretResponse.regret":
		if x.Regret == nil {
			x.Regret = new(v3.TimestampedValue)
		}
		return protoreflect.ValueOfMessage(x.Regret.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetOneInForecasterNetworkRegretResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetOneInForecasterNetworkRegretResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetOneInForecasterNetworkRegretResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetOneInForecasterNetworkRegretResponse.regret":
		m := new(v3.TimestampedValue)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetOneInForecasterNetworkRegretResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetOneInForecasterNetworkRegretResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetOneInForecasterNetworkRegretResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetOneInForecasterNetworkRegretResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetOneInForecasterNetworkRegretResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetOneInForecasterNetworkRegretResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetOneInForecasterNetworkRegretResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetOneInForecasterNetworkRegretResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetOneInForecasterNetworkRegretResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Regret != nil {
			l = options.Size(x.Regret)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetOneInForecasterNetworkRegretResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Regret != nil {
			encoded, err := options.Marshal(x.Regret)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetOneInForecasterNetworkRegretResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetOneInForecasterNetworkRegretResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetOneInForecasterNetworkRegretResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Regret", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Regret == nil {
					x.Regret = &v3.TimestampedValue{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Regret); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_IsReputerNonceUnfulfilledRequest              protoreflect.MessageDescriptor
	fd_IsReputerNonceUnfulfilledRequest_topic_id     protoreflect.FieldDescriptor
	fd_IsReputerNonceUnfulfilledRequest_block_height protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_IsReputerNonceUnfulfilledRequest = File_emissions_v5_query_proto.Messages().ByName("IsReputerNonceUnfulfilledRequest")
	fd_IsReputerNonceUnfulfilledRequest_topic_id = md_IsReputerNonceUnfulfilledRequest.Fields().ByName("topic_id")
	fd_IsReputerNonceUnfulfilledRequest_block_height = md_IsReputerNonceUnfulfilledRequest.Fields().ByName("block_height")
}

var _ protoreflect.Message = (*fastReflection_IsReputerNonceUnfulfilledRequest)(nil)

type fastReflection_IsReputerNonceUnfulfilledRequest IsReputerNonceUnfulfilledRequest

func (x *IsReputerNonceUnfulfilledRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_IsReputerNonceUnfulfilledRequest)(x)
}

func (x *IsReputerNonceUnfulfilledRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_IsReputerNonceUnfulfilledRequest_messageType fastReflection_IsReputerNonceUnfulfilledRequest_messageType
var _ protoreflect.MessageType = fastReflection_IsReputerNonceUnfulfilledRequest_messageType{}

type fastReflection_IsReputerNonceUnfulfilledRequest_messageType struct{}

func (x fastReflection_IsReputerNonceUnfulfilledRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_IsReputerNonceUnfulfilledRequest)(nil)
}
func (x fastReflection_IsReputerNonceUnfulfilledRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_IsReputerNonceUnfulfilledRequest)
}
func (x fastReflection_IsReputerNonceUnfulfilledRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_IsReputerNonceUnfulfilledRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_IsReputerNonceUnfulfilledRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_IsReputerNonceUnfulfilledRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_IsReputerNonceUnfulfilledRequest) Type() protoreflect.MessageType {
	return _fastReflection_IsReputerNonceUnfulfilledRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_IsReputerNonceUnfulfilledRequest) New() protoreflect.Message {
	return new(fastReflection_IsReputerNonceUnfulfilledRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_IsReputerNonceUnfulfilledRequest) Interface() protoreflect.ProtoMessage {
	return (*IsReputerNonceUnfulfilledRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_IsReputerNonceUnfulfilledRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_IsReputerNonceUnfulfilledRequest_topic_id, value) {
			return
		}
	}
	if x.BlockHeight != int64(0) {
		value := protoreflect.ValueOfInt64(x.BlockHeight)
		if !f(fd_IsReputerNonceUnfulfilledRequest_block_height, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_IsReputerNonceUnfulfilledRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.IsReputerNonceUnfulfilledRequest.topic_id":
		return x.TopicId != uint64(0)
	case "emissions.v5.IsReputerNonceUnfulfilledRequest.block_height":
		return x.BlockHeight != int64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.IsReputerNonceUnfulfilledRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.IsReputerNonceUnfulfilledRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_IsReputerNonceUnfulfilledRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.IsReputerNonceUnfulfilledRequest.topic_id":
		x.TopicId = uint64(0)
	case "emissions.v5.IsReputerNonceUnfulfilledRequest.block_height":
		x.BlockHeight = int64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.IsReputerNonceUnfulfilledRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.IsReputerNonceUnfulfilledRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_IsReputerNonceUnfulfilledRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.IsReputerNonceUnfulfilledRequest.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	case "emissions.v5.IsReputerNonceUnfulfilledRequest.block_height":
		value := x.BlockHeight
		return protoreflect.ValueOfInt64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.IsReputerNonceUnfulfilledRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.IsReputerNonceUnfulfilledRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_IsReputerNonceUnfulfilledRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.IsReputerNonceUnfulfilledRequest.topic_id":
		x.TopicId = value.Uint()
	case "emissions.v5.IsReputerNonceUnfulfilledRequest.block_height":
		x.BlockHeight = value.Int()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.IsReputerNonceUnfulfilledRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.IsReputerNonceUnfulfilledRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_IsReputerNonceUnfulfilledRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.IsReputerNonceUnfulfilledRequest.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.IsReputerNonceUnfulfilledRequest is not mutable"))
	case "emissions.v5.IsReputerNonceUnfulfilledRequest.block_height":
		panic(fmt.Errorf("field block_height of message emissions.v5.IsReputerNonceUnfulfilledRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.IsReputerNonceUnfulfilledRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.IsReputerNonceUnfulfilledRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_IsReputerNonceUnfulfilledRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.IsReputerNonceUnfulfilledRequest.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "emissions.v5.IsReputerNonceUnfulfilledRequest.block_height":
		return protoreflect.ValueOfInt64(int64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.IsReputerNonceUnfulfilledRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.IsReputerNonceUnfulfilledRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_IsReputerNonceUnfulfilledRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.IsReputerNonceUnfulfilledRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_IsReputerNonceUnfulfilledRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_IsReputerNonceUnfulfilledRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_IsReputerNonceUnfulfilledRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_IsReputerNonceUnfulfilledRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*IsReputerNonceUnfulfilledRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		if x.BlockHeight != 0 {
			n += 1 + runtime.Sov(uint64(x.BlockHeight))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*IsReputerNonceUnfulfilledRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.BlockHeight != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.BlockHeight))
			i--
			dAtA[i] = 0x10
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*IsReputerNonceUnfulfilledRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: IsReputerNonceUnfulfilledRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: IsReputerNonceUnfulfilledRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BlockHeight", wireType)
				}
				x.BlockHeight = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.BlockHeight |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_IsReputerNonceUnfulfilledResponse                              protoreflect.MessageDescriptor
	fd_IsReputerNonceUnfulfilledResponse_is_reputer_nonce_unfulfilled protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_IsReputerNonceUnfulfilledResponse = File_emissions_v5_query_proto.Messages().ByName("IsReputerNonceUnfulfilledResponse")
	fd_IsReputerNonceUnfulfilledResponse_is_reputer_nonce_unfulfilled = md_IsReputerNonceUnfulfilledResponse.Fields().ByName("is_reputer_nonce_unfulfilled")
}

var _ protoreflect.Message = (*fastReflection_IsReputerNonceUnfulfilledResponse)(nil)

type fastReflection_IsReputerNonceUnfulfilledResponse IsReputerNonceUnfulfilledResponse

func (x *IsReputerNonceUnfulfilledResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_IsReputerNonceUnfulfilledResponse)(x)
}

func (x *IsReputerNonceUnfulfilledResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_IsReputerNonceUnfulfilledResponse_messageType fastReflection_IsReputerNonceUnfulfilledResponse_messageType
var _ protoreflect.MessageType = fastReflection_IsReputerNonceUnfulfilledResponse_messageType{}

type fastReflection_IsReputerNonceUnfulfilledResponse_messageType struct{}

func (x fastReflection_IsReputerNonceUnfulfilledResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_IsReputerNonceUnfulfilledResponse)(nil)
}
func (x fastReflection_IsReputerNonceUnfulfilledResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_IsReputerNonceUnfulfilledResponse)
}
func (x fastReflection_IsReputerNonceUnfulfilledResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_IsReputerNonceUnfulfilledResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_IsReputerNonceUnfulfilledResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_IsReputerNonceUnfulfilledResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_IsReputerNonceUnfulfilledResponse) Type() protoreflect.MessageType {
	return _fastReflection_IsReputerNonceUnfulfilledResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_IsReputerNonceUnfulfilledResponse) New() protoreflect.Message {
	return new(fastReflection_IsReputerNonceUnfulfilledResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_IsReputerNonceUnfulfilledResponse) Interface() protoreflect.ProtoMessage {
	return (*IsReputerNonceUnfulfilledResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_IsReputerNonceUnfulfilledResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.IsReputerNonceUnfulfilled != false {
		value := protoreflect.ValueOfBool(x.IsReputerNonceUnfulfilled)
		if !f(fd_IsReputerNonceUnfulfilledResponse_is_reputer_nonce_unfulfilled, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_IsReputerNonceUnfulfilledResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.IsReputerNonceUnfulfilledResponse.is_reputer_nonce_unfulfilled":
		return x.IsReputerNonceUnfulfilled != false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.IsReputerNonceUnfulfilledResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.IsReputerNonceUnfulfilledResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_IsReputerNonceUnfulfilledResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.IsReputerNonceUnfulfilledResponse.is_reputer_nonce_unfulfilled":
		x.IsReputerNonceUnfulfilled = false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.IsReputerNonceUnfulfilledResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.IsReputerNonceUnfulfilledResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_IsReputerNonceUnfulfilledResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.IsReputerNonceUnfulfilledResponse.is_reputer_nonce_unfulfilled":
		value := x.IsReputerNonceUnfulfilled
		return protoreflect.ValueOfBool(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.IsReputerNonceUnfulfilledResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.IsReputerNonceUnfulfilledResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_IsReputerNonceUnfulfilledResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.IsReputerNonceUnfulfilledResponse.is_reputer_nonce_unfulfilled":
		x.IsReputerNonceUnfulfilled = value.Bool()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.IsReputerNonceUnfulfilledResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.IsReputerNonceUnfulfilledResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_IsReputerNonceUnfulfilledResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.IsReputerNonceUnfulfilledResponse.is_reputer_nonce_unfulfilled":
		panic(fmt.Errorf("field is_reputer_nonce_unfulfilled of message emissions.v5.IsReputerNonceUnfulfilledResponse is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.IsReputerNonceUnfulfilledResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.IsReputerNonceUnfulfilledResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_IsReputerNonceUnfulfilledResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.IsReputerNonceUnfulfilledResponse.is_reputer_nonce_unfulfilled":
		return protoreflect.ValueOfBool(false)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.IsReputerNonceUnfulfilledResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.IsReputerNonceUnfulfilledResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_IsReputerNonceUnfulfilledResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.IsReputerNonceUnfulfilledResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_IsReputerNonceUnfulfilledResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_IsReputerNonceUnfulfilledResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_IsReputerNonceUnfulfilledResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_IsReputerNonceUnfulfilledResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*IsReputerNonceUnfulfilledResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.IsReputerNonceUnfulfilled {
			n += 2
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*IsReputerNonceUnfulfilledResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.IsReputerNonceUnfulfilled {
			i--
			if x.IsReputerNonceUnfulfilled {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*IsReputerNonceUnfulfilledResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: IsReputerNonceUnfulfilledResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: IsReputerNonceUnfulfilledResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field IsReputerNonceUnfulfilled", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.IsReputerNonceUnfulfilled = bool(v != 0)
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetNetworkInferencesAtBlockResponse                    protoreflect.MessageDescriptor
	fd_GetNetworkInferencesAtBlockResponse_network_inferences protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetNetworkInferencesAtBlockResponse = File_emissions_v5_query_proto.Messages().ByName("GetNetworkInferencesAtBlockResponse")
	fd_GetNetworkInferencesAtBlockResponse_network_inferences = md_GetNetworkInferencesAtBlockResponse.Fields().ByName("network_inferences")
}

var _ protoreflect.Message = (*fastReflection_GetNetworkInferencesAtBlockResponse)(nil)

type fastReflection_GetNetworkInferencesAtBlockResponse GetNetworkInferencesAtBlockResponse

func (x *GetNetworkInferencesAtBlockResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetNetworkInferencesAtBlockResponse)(x)
}

func (x *GetNetworkInferencesAtBlockResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetNetworkInferencesAtBlockResponse_messageType fastReflection_GetNetworkInferencesAtBlockResponse_messageType
var _ protoreflect.MessageType = fastReflection_GetNetworkInferencesAtBlockResponse_messageType{}

type fastReflection_GetNetworkInferencesAtBlockResponse_messageType struct{}

func (x fastReflection_GetNetworkInferencesAtBlockResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetNetworkInferencesAtBlockResponse)(nil)
}
func (x fastReflection_GetNetworkInferencesAtBlockResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_GetNetworkInferencesAtBlockResponse)
}
func (x fastReflection_GetNetworkInferencesAtBlockResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetNetworkInferencesAtBlockResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetNetworkInferencesAtBlockResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_GetNetworkInferencesAtBlockResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetNetworkInferencesAtBlockResponse) Type() protoreflect.MessageType {
	return _fastReflection_GetNetworkInferencesAtBlockResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetNetworkInferencesAtBlockResponse) New() protoreflect.Message {
	return new(fastReflection_GetNetworkInferencesAtBlockResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetNetworkInferencesAtBlockResponse) Interface() protoreflect.ProtoMessage {
	return (*GetNetworkInferencesAtBlockResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetNetworkInferencesAtBlockResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.NetworkInferences != nil {
		value := protoreflect.ValueOfMessage(x.NetworkInferences.ProtoReflect())
		if !f(fd_GetNetworkInferencesAtBlockResponse_network_inferences, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetNetworkInferencesAtBlockResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetNetworkInferencesAtBlockResponse.network_inferences":
		return x.NetworkInferences != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetNetworkInferencesAtBlockResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetNetworkInferencesAtBlockResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetNetworkInferencesAtBlockResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetNetworkInferencesAtBlockResponse.network_inferences":
		x.NetworkInferences = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetNetworkInferencesAtBlockResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetNetworkInferencesAtBlockResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetNetworkInferencesAtBlockResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetNetworkInferencesAtBlockResponse.network_inferences":
		value := x.NetworkInferences
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetNetworkInferencesAtBlockResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetNetworkInferencesAtBlockResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetNetworkInferencesAtBlockResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetNetworkInferencesAtBlockResponse.network_inferences":
		x.NetworkInferences = value.Message().Interface().(*v3.ValueBundle)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetNetworkInferencesAtBlockResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetNetworkInferencesAtBlockResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetNetworkInferencesAtBlockResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetNetworkInferencesAtBlockResponse.network_inferences":
		if x.NetworkInferences == nil {
			x.NetworkInferences = new(v3.ValueBundle)
		}
		return protoreflect.ValueOfMessage(x.NetworkInferences.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetNetworkInferencesAtBlockResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetNetworkInferencesAtBlockResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetNetworkInferencesAtBlockResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetNetworkInferencesAtBlockResponse.network_inferences":
		m := new(v3.ValueBundle)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetNetworkInferencesAtBlockResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetNetworkInferencesAtBlockResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetNetworkInferencesAtBlockResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetNetworkInferencesAtBlockResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetNetworkInferencesAtBlockResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetNetworkInferencesAtBlockResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetNetworkInferencesAtBlockResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetNetworkInferencesAtBlockResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetNetworkInferencesAtBlockResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.NetworkInferences != nil {
			l = options.Size(x.NetworkInferences)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetNetworkInferencesAtBlockResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.NetworkInferences != nil {
			encoded, err := options.Marshal(x.NetworkInferences)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetNetworkInferencesAtBlockResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetNetworkInferencesAtBlockResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetNetworkInferencesAtBlockResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field NetworkInferences", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.NetworkInferences == nil {
					x.NetworkInferences = &v3.ValueBundle{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.NetworkInferences); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_GetLatestNetworkInferencesResponse_2_list)(nil)

type _GetLatestNetworkInferencesResponse_2_list struct {
	list *[]*v3.RegretInformedWeight
}

func (x *_GetLatestNetworkInferencesResponse_2_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GetLatestNetworkInferencesResponse_2_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GetLatestNetworkInferencesResponse_2_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*v3.RegretInformedWeight)
	(*x.list)[i] = concreteValue
}

func (x *_GetLatestNetworkInferencesResponse_2_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*v3.RegretInformedWeight)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GetLatestNetworkInferencesResponse_2_list) AppendMutable() protoreflect.Value {
	v := new(v3.RegretInformedWeight)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GetLatestNetworkInferencesResponse_2_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GetLatestNetworkInferencesResponse_2_list) NewElement() protoreflect.Value {
	v := new(v3.RegretInformedWeight)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GetLatestNetworkInferencesResponse_2_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GetLatestNetworkInferencesResponse_3_list)(nil)

type _GetLatestNetworkInferencesResponse_3_list struct {
	list *[]*v3.RegretInformedWeight
}

func (x *_GetLatestNetworkInferencesResponse_3_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GetLatestNetworkInferencesResponse_3_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GetLatestNetworkInferencesResponse_3_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*v3.RegretInformedWeight)
	(*x.list)[i] = concreteValue
}

func (x *_GetLatestNetworkInferencesResponse_3_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*v3.RegretInformedWeight)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GetLatestNetworkInferencesResponse_3_list) AppendMutable() protoreflect.Value {
	v := new(v3.RegretInformedWeight)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GetLatestNetworkInferencesResponse_3_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GetLatestNetworkInferencesResponse_3_list) NewElement() protoreflect.Value {
	v := new(v3.RegretInformedWeight)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GetLatestNetworkInferencesResponse_3_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GetLatestNetworkInferencesResponse_7_list)(nil)

type _GetLatestNetworkInferencesResponse_7_list struct {
	list *[]string
}

func (x *_GetLatestNetworkInferencesResponse_7_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GetLatestNetworkInferencesResponse_7_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfString((*x.list)[i])
}

func (x *_GetLatestNetworkInferencesResponse_7_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_GetLatestNetworkInferencesResponse_7_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_GetLatestNetworkInferencesResponse_7_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message GetLatestNetworkInferencesResponse at list field ConfidenceIntervalRawPercentiles as it is not of Message kind"))
}

func (x *_GetLatestNetworkInferencesResponse_7_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_GetLatestNetworkInferencesResponse_7_list) NewElement() protoreflect.Value {
	v := ""
	return protoreflect.ValueOfString(v)
}

func (x *_GetLatestNetworkInferencesResponse_7_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GetLatestNetworkInferencesResponse_8_list)(nil)

type _GetLatestNetworkInferencesResponse_8_list struct {
	list *[]string
}

func (x *_GetLatestNetworkInferencesResponse_8_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GetLatestNetworkInferencesResponse_8_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfString((*x.list)[i])
}

func (x *_GetLatestNetworkInferencesResponse_8_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_GetLatestNetworkInferencesResponse_8_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_GetLatestNetworkInferencesResponse_8_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message GetLatestNetworkInferencesResponse at list field ConfidenceIntervalValues as it is not of Message kind"))
}

func (x *_GetLatestNetworkInferencesResponse_8_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_GetLatestNetworkInferencesResponse_8_list) NewElement() protoreflect.Value {
	v := ""
	return protoreflect.ValueOfString(v)
}

func (x *_GetLatestNetworkInferencesResponse_8_list) IsValid() bool {
	return x.list != nil
}

var (
	md_GetLatestNetworkInferencesResponse                                     protoreflect.MessageDescriptor
	fd_GetLatestNetworkInferencesResponse_network_inferences                  protoreflect.FieldDescriptor
	fd_GetLatestNetworkInferencesResponse_inferer_weights                     protoreflect.FieldDescriptor
	fd_GetLatestNetworkInferencesResponse_forecaster_weights                  protoreflect.FieldDescriptor
	fd_GetLatestNetworkInferencesResponse_inference_block_height              protoreflect.FieldDescriptor
	fd_GetLatestNetworkInferencesResponse_loss_block_height                   protoreflect.FieldDescriptor
	fd_GetLatestNetworkInferencesResponse_confidence_interval_raw_percentiles protoreflect.FieldDescriptor
	fd_GetLatestNetworkInferencesResponse_confidence_interval_values          protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetLatestNetworkInferencesResponse = File_emissions_v5_query_proto.Messages().ByName("GetLatestNetworkInferencesResponse")
	fd_GetLatestNetworkInferencesResponse_network_inferences = md_GetLatestNetworkInferencesResponse.Fields().ByName("network_inferences")
	fd_GetLatestNetworkInferencesResponse_inferer_weights = md_GetLatestNetworkInferencesResponse.Fields().ByName("inferer_weights")
	fd_GetLatestNetworkInferencesResponse_forecaster_weights = md_GetLatestNetworkInferencesResponse.Fields().ByName("forecaster_weights")
	fd_GetLatestNetworkInferencesResponse_inference_block_height = md_GetLatestNetworkInferencesResponse.Fields().ByName("inference_block_height")
	fd_GetLatestNetworkInferencesResponse_loss_block_height = md_GetLatestNetworkInferencesResponse.Fields().ByName("loss_block_height")
	fd_GetLatestNetworkInferencesResponse_confidence_interval_raw_percentiles = md_GetLatestNetworkInferencesResponse.Fields().ByName("confidence_interval_raw_percentiles")
	fd_GetLatestNetworkInferencesResponse_confidence_interval_values = md_GetLatestNetworkInferencesResponse.Fields().ByName("confidence_interval_values")
}

var _ protoreflect.Message = (*fastReflection_GetLatestNetworkInferencesResponse)(nil)

type fastReflection_GetLatestNetworkInferencesResponse GetLatestNetworkInferencesResponse

func (x *GetLatestNetworkInferencesResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetLatestNetworkInferencesResponse)(x)
}

func (x *GetLatestNetworkInferencesResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetLatestNetworkInferencesResponse_messageType fastReflection_GetLatestNetworkInferencesResponse_messageType
var _ protoreflect.MessageType = fastReflection_GetLatestNetworkInferencesResponse_messageType{}

type fastReflection_GetLatestNetworkInferencesResponse_messageType struct{}

func (x fastReflection_GetLatestNetworkInferencesResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetLatestNetworkInferencesResponse)(nil)
}
func (x fastReflection_GetLatestNetworkInferencesResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_GetLatestNetworkInferencesResponse)
}
func (x fastReflection_GetLatestNetworkInferencesResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetLatestNetworkInferencesResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetLatestNetworkInferencesResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_GetLatestNetworkInferencesResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetLatestNetworkInferencesResponse) Type() protoreflect.MessageType {
	return _fastReflection_GetLatestNetworkInferencesResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetLatestNetworkInferencesResponse) New() protoreflect.Message {
	return new(fastReflection_GetLatestNetworkInferencesResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetLatestNetworkInferencesResponse) Interface() protoreflect.ProtoMessage {
	return (*GetLatestNetworkInferencesResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetLatestNetworkInferencesResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.NetworkInferences != nil {
		value := protoreflect.ValueOfMessage(x.NetworkInferences.ProtoReflect())
		if !f(fd_GetLatestNetworkInferencesResponse_network_inferences, value) {
			return
		}
	}
	if len(x.InfererWeights) != 0 {
		value := protoreflect.ValueOfList(&_GetLatestNetworkInferencesResponse_2_list{list: &x.InfererWeights})
		if !f(fd_GetLatestNetworkInferencesResponse_inferer_weights, value) {
			return
		}
	}
	if len(x.ForecasterWeights) != 0 {
		value := protoreflect.ValueOfList(&_GetLatestNetworkInferencesResponse_3_list{list: &x.ForecasterWeights})
		if !f(fd_GetLatestNetworkInferencesResponse_forecaster_weights, value) {
			return
		}
	}
	if x.InferenceBlockHeight != int64(0) {
		value := protoreflect.ValueOfInt64(x.InferenceBlockHeight)
		if !f(fd_GetLatestNetworkInferencesResponse_inference_block_height, value) {
			return
		}
	}
	if x.LossBlockHeight != int64(0) {
		value := protoreflect.ValueOfInt64(x.LossBlockHeight)
		if !f(fd_GetLatestNetworkInferencesResponse_loss_block_height, value) {
			return
		}
	}
	if len(x.ConfidenceIntervalRawPercentiles) != 0 {
		value := protoreflect.ValueOfList(&_GetLatestNetworkInferencesResponse_7_list{list: &x.ConfidenceIntervalRawPercentiles})
		if !f(fd_GetLatestNetworkInferencesResponse_confidence_interval_raw_percentiles, value) {
			return
		}
	}
	if len(x.ConfidenceIntervalValues) != 0 {
		value := protoreflect.ValueOfList(&_GetLatestNetworkInferencesResponse_8_list{list: &x.ConfidenceIntervalValues})
		if !f(fd_GetLatestNetworkInferencesResponse_confidence_interval_values, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetLatestNetworkInferencesResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetLatestNetworkInferencesResponse.network_inferences":
		return x.NetworkInferences != nil
	case "emissions.v5.GetLatestNetworkInferencesResponse.inferer_weights":
		return len(x.InfererWeights) != 0
	case "emissions.v5.GetLatestNetworkInferencesResponse.forecaster_weights":
		return len(x.ForecasterWeights) != 0
	case "emissions.v5.GetLatestNetworkInferencesResponse.inference_block_height":
		return x.InferenceBlockHeight != int64(0)
	case "emissions.v5.GetLatestNetworkInferencesResponse.loss_block_height":
		return x.LossBlockHeight != int64(0)
	case "emissions.v5.GetLatestNetworkInferencesResponse.confidence_interval_raw_percentiles":
		return len(x.ConfidenceIntervalRawPercentiles) != 0
	case "emissions.v5.GetLatestNetworkInferencesResponse.confidence_interval_values":
		return len(x.ConfidenceIntervalValues) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetLatestNetworkInferencesResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetLatestNetworkInferencesResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetLatestNetworkInferencesResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetLatestNetworkInferencesResponse.network_inferences":
		x.NetworkInferences = nil
	case "emissions.v5.GetLatestNetworkInferencesResponse.inferer_weights":
		x.InfererWeights = nil
	case "emissions.v5.GetLatestNetworkInferencesResponse.forecaster_weights":
		x.ForecasterWeights = nil
	case "emissions.v5.GetLatestNetworkInferencesResponse.inference_block_height":
		x.InferenceBlockHeight = int64(0)
	case "emissions.v5.GetLatestNetworkInferencesResponse.loss_block_height":
		x.LossBlockHeight = int64(0)
	case "emissions.v5.GetLatestNetworkInferencesResponse.confidence_interval_raw_percentiles":
		x.ConfidenceIntervalRawPercentiles = nil
	case "emissions.v5.GetLatestNetworkInferencesResponse.confidence_interval_values":
		x.ConfidenceIntervalValues = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetLatestNetworkInferencesResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetLatestNetworkInferencesResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetLatestNetworkInferencesResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetLatestNetworkInferencesResponse.network_inferences":
		value := x.NetworkInferences
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "emissions.v5.GetLatestNetworkInferencesResponse.inferer_weights":
		if len(x.InfererWeights) == 0 {
			return protoreflect.ValueOfList(&_GetLatestNetworkInferencesResponse_2_list{})
		}
		listValue := &_GetLatestNetworkInferencesResponse_2_list{list: &x.InfererWeights}
		return protoreflect.ValueOfList(listValue)
	case "emissions.v5.GetLatestNetworkInferencesResponse.forecaster_weights":
		if len(x.ForecasterWeights) == 0 {
			return protoreflect.ValueOfList(&_GetLatestNetworkInferencesResponse_3_list{})
		}
		listValue := &_GetLatestNetworkInferencesResponse_3_list{list: &x.ForecasterWeights}
		return protoreflect.ValueOfList(listValue)
	case "emissions.v5.GetLatestNetworkInferencesResponse.inference_block_height":
		value := x.InferenceBlockHeight
		return protoreflect.ValueOfInt64(value)
	case "emissions.v5.GetLatestNetworkInferencesResponse.loss_block_height":
		value := x.LossBlockHeight
		return protoreflect.ValueOfInt64(value)
	case "emissions.v5.GetLatestNetworkInferencesResponse.confidence_interval_raw_percentiles":
		if len(x.ConfidenceIntervalRawPercentiles) == 0 {
			return protoreflect.ValueOfList(&_GetLatestNetworkInferencesResponse_7_list{})
		}
		listValue := &_GetLatestNetworkInferencesResponse_7_list{list: &x.ConfidenceIntervalRawPercentiles}
		return protoreflect.ValueOfList(listValue)
	case "emissions.v5.GetLatestNetworkInferencesResponse.confidence_interval_values":
		if len(x.ConfidenceIntervalValues) == 0 {
			return protoreflect.ValueOfList(&_GetLatestNetworkInferencesResponse_8_list{})
		}
		listValue := &_GetLatestNetworkInferencesResponse_8_list{list: &x.ConfidenceIntervalValues}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetLatestNetworkInferencesResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetLatestNetworkInferencesResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetLatestNetworkInferencesResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetLatestNetworkInferencesResponse.network_inferences":
		x.NetworkInferences = value.Message().Interface().(*v3.ValueBundle)
	case "emissions.v5.GetLatestNetworkInferencesResponse.inferer_weights":
		lv := value.List()
		clv := lv.(*_GetLatestNetworkInferencesResponse_2_list)
		x.InfererWeights = *clv.list
	case "emissions.v5.GetLatestNetworkInferencesResponse.forecaster_weights":
		lv := value.List()
		clv := lv.(*_GetLatestNetworkInferencesResponse_3_list)
		x.ForecasterWeights = *clv.list
	case "emissions.v5.GetLatestNetworkInferencesResponse.inference_block_height":
		x.InferenceBlockHeight = value.Int()
	case "emissions.v5.GetLatestNetworkInferencesResponse.loss_block_height":
		x.LossBlockHeight = value.Int()
	case "emissions.v5.GetLatestNetworkInferencesResponse.confidence_interval_raw_percentiles":
		lv := value.List()
		clv := lv.(*_GetLatestNetworkInferencesResponse_7_list)
		x.ConfidenceIntervalRawPercentiles = *clv.list
	case "emissions.v5.GetLatestNetworkInferencesResponse.confidence_interval_values":
		lv := value.List()
		clv := lv.(*_GetLatestNetworkInferencesResponse_8_list)
		x.ConfidenceIntervalValues = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetLatestNetworkInferencesResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetLatestNetworkInferencesResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetLatestNetworkInferencesResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetLatestNetworkInferencesResponse.network_inferences":
		if x.NetworkInferences == nil {
			x.NetworkInferences = new(v3.ValueBundle)
		}
		return protoreflect.ValueOfMessage(x.NetworkInferences.ProtoReflect())
	case "emissions.v5.GetLatestNetworkInferencesResponse.inferer_weights":
		if x.InfererWeights == nil {
			x.InfererWeights = []*v3.RegretInformedWeight{}
		}
		value := &_GetLatestNetworkInferencesResponse_2_list{list: &x.InfererWeights}
		return protoreflect.ValueOfList(value)
	case "emissions.v5.GetLatestNetworkInferencesResponse.forecaster_weights":
		if x.ForecasterWeights == nil {
			x.ForecasterWeights = []*v3.RegretInformedWeight{}
		}
		value := &_GetLatestNetworkInferencesResponse_3_list{list: &x.ForecasterWeights}
		return protoreflect.ValueOfList(value)
	case "emissions.v5.GetLatestNetworkInferencesResponse.confidence_interval_raw_percentiles":
		if x.ConfidenceIntervalRawPercentiles == nil {
			x.ConfidenceIntervalRawPercentiles = []string{}
		}
		value := &_GetLatestNetworkInferencesResponse_7_list{list: &x.ConfidenceIntervalRawPercentiles}
		return protoreflect.ValueOfList(value)
	case "emissions.v5.GetLatestNetworkInferencesResponse.confidence_interval_values":
		if x.ConfidenceIntervalValues == nil {
			x.ConfidenceIntervalValues = []string{}
		}
		value := &_GetLatestNetworkInferencesResponse_8_list{list: &x.ConfidenceIntervalValues}
		return protoreflect.ValueOfList(value)
	case "emissions.v5.GetLatestNetworkInferencesResponse.inference_block_height":
		panic(fmt.Errorf("field inference_block_height of message emissions.v5.GetLatestNetworkInferencesResponse is not mutable"))
	case "emissions.v5.GetLatestNetworkInferencesResponse.loss_block_height":
		panic(fmt.Errorf("field loss_block_height of message emissions.v5.GetLatestNetworkInferencesResponse is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetLatestNetworkInferencesResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetLatestNetworkInferencesResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetLatestNetworkInferencesResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetLatestNetworkInferencesResponse.network_inferences":
		m := new(v3.ValueBundle)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "emissions.v5.GetLatestNetworkInferencesResponse.inferer_weights":
		list := []*v3.RegretInformedWeight{}
		return protoreflect.ValueOfList(&_GetLatestNetworkInferencesResponse_2_list{list: &list})
	case "emissions.v5.GetLatestNetworkInferencesResponse.forecaster_weights":
		list := []*v3.RegretInformedWeight{}
		return protoreflect.ValueOfList(&_GetLatestNetworkInferencesResponse_3_list{list: &list})
	case "emissions.v5.GetLatestNetworkInferencesResponse.inference_block_height":
		return protoreflect.ValueOfInt64(int64(0))
	case "emissions.v5.GetLatestNetworkInferencesResponse.loss_block_height":
		return protoreflect.ValueOfInt64(int64(0))
	case "emissions.v5.GetLatestNetworkInferencesResponse.confidence_interval_raw_percentiles":
		list := []string{}
		return protoreflect.ValueOfList(&_GetLatestNetworkInferencesResponse_7_list{list: &list})
	case "emissions.v5.GetLatestNetworkInferencesResponse.confidence_interval_values":
		list := []string{}
		return protoreflect.ValueOfList(&_GetLatestNetworkInferencesResponse_8_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetLatestNetworkInferencesResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetLatestNetworkInferencesResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetLatestNetworkInferencesResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetLatestNetworkInferencesResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetLatestNetworkInferencesResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetLatestNetworkInferencesResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetLatestNetworkInferencesResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetLatestNetworkInferencesResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetLatestNetworkInferencesResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.NetworkInferences != nil {
			l = options.Size(x.NetworkInferences)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.InfererWeights) > 0 {
			for _, e := range x.InfererWeights {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.ForecasterWeights) > 0 {
			for _, e := range x.ForecasterWeights {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.InferenceBlockHeight != 0 {
			n += 1 + runtime.Sov(uint64(x.InferenceBlockHeight))
		}
		if x.LossBlockHeight != 0 {
			n += 1 + runtime.Sov(uint64(x.LossBlockHeight))
		}
		if len(x.ConfidenceIntervalRawPercentiles) > 0 {
			for _, s := range x.ConfidenceIntervalRawPercentiles {
				l = len(s)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.ConfidenceIntervalValues) > 0 {
			for _, s := range x.ConfidenceIntervalValues {
				l = len(s)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetLatestNetworkInferencesResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.ConfidenceIntervalValues) > 0 {
			for iNdEx := len(x.ConfidenceIntervalValues) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.ConfidenceIntervalValues[iNdEx])
				copy(dAtA[i:], x.ConfidenceIntervalValues[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ConfidenceIntervalValues[iNdEx])))
				i--
				dAtA[i] = 0x42
			}
		}
		if len(x.ConfidenceIntervalRawPercentiles) > 0 {
			for iNdEx := len(x.ConfidenceIntervalRawPercentiles) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.ConfidenceIntervalRawPercentiles[iNdEx])
				copy(dAtA[i:], x.ConfidenceIntervalRawPercentiles[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ConfidenceIntervalRawPercentiles[iNdEx])))
				i--
				dAtA[i] = 0x3a
			}
		}
		if x.LossBlockHeight != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.LossBlockHeight))
			i--
			dAtA[i] = 0x30
		}
		if x.InferenceBlockHeight != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.InferenceBlockHeight))
			i--
			dAtA[i] = 0x28
		}
		if len(x.ForecasterWeights) > 0 {
			for iNdEx := len(x.ForecasterWeights) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.ForecasterWeights[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x1a
			}
		}
		if len(x.InfererWeights) > 0 {
			for iNdEx := len(x.InfererWeights) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.InfererWeights[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x12
			}
		}
		if x.NetworkInferences != nil {
			encoded, err := options.Marshal(x.NetworkInferences)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetLatestNetworkInferencesResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetLatestNetworkInferencesResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetLatestNetworkInferencesResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field NetworkInferences", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.NetworkInferences == nil {
					x.NetworkInferences = &v3.ValueBundle{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.NetworkInferences); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field InfererWeights", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.InfererWeights = append(x.InfererWeights, &v3.RegretInformedWeight{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.InfererWeights[len(x.InfererWeights)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ForecasterWeights", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ForecasterWeights = append(x.ForecasterWeights, &v3.RegretInformedWeight{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.ForecasterWeights[len(x.ForecasterWeights)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 5:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field InferenceBlockHeight", wireType)
				}
				x.InferenceBlockHeight = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.InferenceBlockHeight |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 6:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field LossBlockHeight", wireType)
				}
				x.LossBlockHeight = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.LossBlockHeight |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 7:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ConfidenceIntervalRawPercentiles", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ConfidenceIntervalRawPercentiles = append(x.ConfidenceIntervalRawPercentiles, string(dAtA[iNdEx:postIndex]))
				iNdEx = postIndex
			case 8:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ConfidenceIntervalValues", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ConfidenceIntervalValues = append(x.ConfidenceIntervalValues, string(dAtA[iNdEx:postIndex]))
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_GetLatestAvailableNetworkInferencesResponse_2_list)(nil)

type _GetLatestAvailableNetworkInferencesResponse_2_list struct {
	list *[]*v3.RegretInformedWeight
}

func (x *_GetLatestAvailableNetworkInferencesResponse_2_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GetLatestAvailableNetworkInferencesResponse_2_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GetLatestAvailableNetworkInferencesResponse_2_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*v3.RegretInformedWeight)
	(*x.list)[i] = concreteValue
}

func (x *_GetLatestAvailableNetworkInferencesResponse_2_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*v3.RegretInformedWeight)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GetLatestAvailableNetworkInferencesResponse_2_list) AppendMutable() protoreflect.Value {
	v := new(v3.RegretInformedWeight)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GetLatestAvailableNetworkInferencesResponse_2_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GetLatestAvailableNetworkInferencesResponse_2_list) NewElement() protoreflect.Value {
	v := new(v3.RegretInformedWeight)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GetLatestAvailableNetworkInferencesResponse_2_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GetLatestAvailableNetworkInferencesResponse_3_list)(nil)

type _GetLatestAvailableNetworkInferencesResponse_3_list struct {
	list *[]*v3.RegretInformedWeight
}

func (x *_GetLatestAvailableNetworkInferencesResponse_3_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GetLatestAvailableNetworkInferencesResponse_3_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GetLatestAvailableNetworkInferencesResponse_3_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*v3.RegretInformedWeight)
	(*x.list)[i] = concreteValue
}

func (x *_GetLatestAvailableNetworkInferencesResponse_3_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*v3.RegretInformedWeight)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GetLatestAvailableNetworkInferencesResponse_3_list) AppendMutable() protoreflect.Value {
	v := new(v3.RegretInformedWeight)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GetLatestAvailableNetworkInferencesResponse_3_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GetLatestAvailableNetworkInferencesResponse_3_list) NewElement() protoreflect.Value {
	v := new(v3.RegretInformedWeight)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GetLatestAvailableNetworkInferencesResponse_3_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GetLatestAvailableNetworkInferencesResponse_7_list)(nil)

type _GetLatestAvailableNetworkInferencesResponse_7_list struct {
	list *[]string
}

func (x *_GetLatestAvailableNetworkInferencesResponse_7_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GetLatestAvailableNetworkInferencesResponse_7_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfString((*x.list)[i])
}

func (x *_GetLatestAvailableNetworkInferencesResponse_7_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_GetLatestAvailableNetworkInferencesResponse_7_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_GetLatestAvailableNetworkInferencesResponse_7_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message GetLatestAvailableNetworkInferencesResponse at list field ConfidenceIntervalRawPercentiles as it is not of Message kind"))
}

func (x *_GetLatestAvailableNetworkInferencesResponse_7_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_GetLatestAvailableNetworkInferencesResponse_7_list) NewElement() protoreflect.Value {
	v := ""
	return protoreflect.ValueOfString(v)
}

func (x *_GetLatestAvailableNetworkInferencesResponse_7_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GetLatestAvailableNetworkInferencesResponse_8_list)(nil)

type _GetLatestAvailableNetworkInferencesResponse_8_list struct {
	list *[]string
}

func (x *_GetLatestAvailableNetworkInferencesResponse_8_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GetLatestAvailableNetworkInferencesResponse_8_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfString((*x.list)[i])
}

func (x *_GetLatestAvailableNetworkInferencesResponse_8_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_GetLatestAvailableNetworkInferencesResponse_8_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_GetLatestAvailableNetworkInferencesResponse_8_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message GetLatestAvailableNetworkInferencesResponse at list field ConfidenceIntervalValues as it is not of Message kind"))
}

func (x *_GetLatestAvailableNetworkInferencesResponse_8_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_GetLatestAvailableNetworkInferencesResponse_8_list) NewElement() protoreflect.Value {
	v := ""
	return protoreflect.ValueOfString(v)
}

func (x *_GetLatestAvailableNetworkInferencesResponse_8_list) IsValid() bool {
	return x.list != nil
}

var (
	md_GetLatestAvailableNetworkInferencesResponse                                     protoreflect.MessageDescriptor
	fd_GetLatestAvailableNetworkInferencesResponse_network_inferences                  protoreflect.FieldDescriptor
	fd_GetLatestAvailableNetworkInferencesResponse_inferer_weights                     protoreflect.FieldDescriptor
	fd_GetLatestAvailableNetworkInferencesResponse_forecaster_weights                  protoreflect.FieldDescriptor
	fd_GetLatestAvailableNetworkInferencesResponse_inference_block_height              protoreflect.FieldDescriptor
	fd_GetLatestAvailableNetworkInferencesResponse_loss_block_height                   protoreflect.FieldDescriptor
	fd_GetLatestAvailableNetworkInferencesResponse_confidence_interval_raw_percentiles protoreflect.FieldDescriptor
	fd_GetLatestAvailableNetworkInferencesResponse_confidence_interval_values          protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetLatestAvailableNetworkInferencesResponse = File_emissions_v5_query_proto.Messages().ByName("GetLatestAvailableNetworkInferencesResponse")
	fd_GetLatestAvailableNetworkInferencesResponse_network_inferences = md_GetLatestAvailableNetworkInferencesResponse.Fields().ByName("network_inferences")
	fd_GetLatestAvailableNetworkInferencesResponse_inferer_weights = md_GetLatestAvailableNetworkInferencesResponse.Fields().ByName("inferer_weights")
	fd_GetLatestAvailableNetworkInferencesResponse_forecaster_weights = md_GetLatestAvailableNetworkInferencesResponse.Fields().ByName("forecaster_weights")
	fd_GetLatestAvailableNetworkInferencesResponse_inference_block_height = md_GetLatestAvailableNetworkInferencesResponse.Fields().ByName("inference_block_height")
	fd_GetLatestAvailableNetworkInferencesResponse_loss_block_height = md_GetLatestAvailableNetworkInferencesResponse.Fields().ByName("loss_block_height")
	fd_GetLatestAvailableNetworkInferencesResponse_confidence_interval_raw_percentiles = md_GetLatestAvailableNetworkInferencesResponse.Fields().ByName("confidence_interval_raw_percentiles")
	fd_GetLatestAvailableNetworkInferencesResponse_confidence_interval_values = md_GetLatestAvailableNetworkInferencesResponse.Fields().ByName("confidence_interval_values")
}

var _ protoreflect.Message = (*fastReflection_GetLatestAvailableNetworkInferencesResponse)(nil)

type fastReflection_GetLatestAvailableNetworkInferencesResponse GetLatestAvailableNetworkInferencesResponse

func (x *GetLatestAvailableNetworkInferencesResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetLatestAvailableNetworkInferencesResponse)(x)
}

func (x *GetLatestAvailableNetworkInferencesResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetLatestAvailableNetworkInferencesResponse_messageType fastReflection_GetLatestAvailableNetworkInferencesResponse_messageType
var _ protoreflect.MessageType = fastReflection_GetLatestAvailableNetworkInferencesResponse_messageType{}

type fastReflection_GetLatestAvailableNetworkInferencesResponse_messageType struct{}

func (x fastReflection_GetLatestAvailableNetworkInferencesResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetLatestAvailableNetworkInferencesResponse)(nil)
}
func (x fastReflection_GetLatestAvailableNetworkInferencesResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_GetLatestAvailableNetworkInferencesResponse)
}
func (x fastReflection_GetLatestAvailableNetworkInferencesResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetLatestAvailableNetworkInferencesResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetLatestAvailableNetworkInferencesResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_GetLatestAvailableNetworkInferencesResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetLatestAvailableNetworkInferencesResponse) Type() protoreflect.MessageType {
	return _fastReflection_GetLatestAvailableNetworkInferencesResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetLatestAvailableNetworkInferencesResponse) New() protoreflect.Message {
	return new(fastReflection_GetLatestAvailableNetworkInferencesResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetLatestAvailableNetworkInferencesResponse) Interface() protoreflect.ProtoMessage {
	return (*GetLatestAvailableNetworkInferencesResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetLatestAvailableNetworkInferencesResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.NetworkInferences != nil {
		value := protoreflect.ValueOfMessage(x.NetworkInferences.ProtoReflect())
		if !f(fd_GetLatestAvailableNetworkInferencesResponse_network_inferences, value) {
			return
		}
	}
	if len(x.InfererWeights) != 0 {
		value := protoreflect.ValueOfList(&_GetLatestAvailableNetworkInferencesResponse_2_list{list: &x.InfererWeights})
		if !f(fd_GetLatestAvailableNetworkInferencesResponse_inferer_weights, value) {
			return
		}
	}
	if len(x.ForecasterWeights) != 0 {
		value := protoreflect.ValueOfList(&_GetLatestAvailableNetworkInferencesResponse_3_list{list: &x.ForecasterWeights})
		if !f(fd_GetLatestAvailableNetworkInferencesResponse_forecaster_weights, value) {
			return
		}
	}
	if x.InferenceBlockHeight != int64(0) {
		value := protoreflect.ValueOfInt64(x.InferenceBlockHeight)
		if !f(fd_GetLatestAvailableNetworkInferencesResponse_inference_block_height, value) {
			return
		}
	}
	if x.LossBlockHeight != int64(0) {
		value := protoreflect.ValueOfInt64(x.LossBlockHeight)
		if !f(fd_GetLatestAvailableNetworkInferencesResponse_loss_block_height, value) {
			return
		}
	}
	if len(x.ConfidenceIntervalRawPercentiles) != 0 {
		value := protoreflect.ValueOfList(&_GetLatestAvailableNetworkInferencesResponse_7_list{list: &x.ConfidenceIntervalRawPercentiles})
		if !f(fd_GetLatestAvailableNetworkInferencesResponse_confidence_interval_raw_percentiles, value) {
			return
		}
	}
	if len(x.ConfidenceIntervalValues) != 0 {
		value := protoreflect.ValueOfList(&_GetLatestAvailableNetworkInferencesResponse_8_list{list: &x.ConfidenceIntervalValues})
		if !f(fd_GetLatestAvailableNetworkInferencesResponse_confidence_interval_values, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetLatestAvailableNetworkInferencesResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetLatestAvailableNetworkInferencesResponse.network_inferences":
		return x.NetworkInferences != nil
	case "emissions.v5.GetLatestAvailableNetworkInferencesResponse.inferer_weights":
		return len(x.InfererWeights) != 0
	case "emissions.v5.GetLatestAvailableNetworkInferencesResponse.forecaster_weights":
		return len(x.ForecasterWeights) != 0
	case "emissions.v5.GetLatestAvailableNetworkInferencesResponse.inference_block_height":
		return x.InferenceBlockHeight != int64(0)
	case "emissions.v5.GetLatestAvailableNetworkInferencesResponse.loss_block_height":
		return x.LossBlockHeight != int64(0)
	case "emissions.v5.GetLatestAvailableNetworkInferencesResponse.confidence_interval_raw_percentiles":
		return len(x.ConfidenceIntervalRawPercentiles) != 0
	case "emissions.v5.GetLatestAvailableNetworkInferencesResponse.confidence_interval_values":
		return len(x.ConfidenceIntervalValues) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetLatestAvailableNetworkInferencesResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetLatestAvailableNetworkInferencesResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetLatestAvailableNetworkInferencesResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetLatestAvailableNetworkInferencesResponse.network_inferences":
		x.NetworkInferences = nil
	case "emissions.v5.GetLatestAvailableNetworkInferencesResponse.inferer_weights":
		x.InfererWeights = nil
	case "emissions.v5.GetLatestAvailableNetworkInferencesResponse.forecaster_weights":
		x.ForecasterWeights = nil
	case "emissions.v5.GetLatestAvailableNetworkInferencesResponse.inference_block_height":
		x.InferenceBlockHeight = int64(0)
	case "emissions.v5.GetLatestAvailableNetworkInferencesResponse.loss_block_height":
		x.LossBlockHeight = int64(0)
	case "emissions.v5.GetLatestAvailableNetworkInferencesResponse.confidence_interval_raw_percentiles":
		x.ConfidenceIntervalRawPercentiles = nil
	case "emissions.v5.GetLatestAvailableNetworkInferencesResponse.confidence_interval_values":
		x.ConfidenceIntervalValues = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetLatestAvailableNetworkInferencesResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetLatestAvailableNetworkInferencesResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetLatestAvailableNetworkInferencesResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetLatestAvailableNetworkInferencesResponse.network_inferences":
		value := x.NetworkInferences
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "emissions.v5.GetLatestAvailableNetworkInferencesResponse.inferer_weights":
		if len(x.InfererWeights) == 0 {
			return protoreflect.ValueOfList(&_GetLatestAvailableNetworkInferencesResponse_2_list{})
		}
		listValue := &_GetLatestAvailableNetworkInferencesResponse_2_list{list: &x.InfererWeights}
		return protoreflect.ValueOfList(listValue)
	case "emissions.v5.GetLatestAvailableNetworkInferencesResponse.forecaster_weights":
		if len(x.ForecasterWeights) == 0 {
			return protoreflect.ValueOfList(&_GetLatestAvailableNetworkInferencesResponse_3_list{})
		}
		listValue := &_GetLatestAvailableNetworkInferencesResponse_3_list{list: &x.ForecasterWeights}
		return protoreflect.ValueOfList(listValue)
	case "emissions.v5.GetLatestAvailableNetworkInferencesResponse.inference_block_height":
		value := x.InferenceBlockHeight
		return protoreflect.ValueOfInt64(value)
	case "emissions.v5.GetLatestAvailableNetworkInferencesResponse.loss_block_height":
		value := x.LossBlockHeight
		return protoreflect.ValueOfInt64(value)
	case "emissions.v5.GetLatestAvailableNetworkInferencesResponse.confidence_interval_raw_percentiles":
		if len(x.ConfidenceIntervalRawPercentiles) == 0 {
			return protoreflect.ValueOfList(&_GetLatestAvailableNetworkInferencesResponse_7_list{})
		}
		listValue := &_GetLatestAvailableNetworkInferencesResponse_7_list{list: &x.ConfidenceIntervalRawPercentiles}
		return protoreflect.ValueOfList(listValue)
	case "emissions.v5.GetLatestAvailableNetworkInferencesResponse.confidence_interval_values":
		if len(x.ConfidenceIntervalValues) == 0 {
			return protoreflect.ValueOfList(&_GetLatestAvailableNetworkInferencesResponse_8_list{})
		}
		listValue := &_GetLatestAvailableNetworkInferencesResponse_8_list{list: &x.ConfidenceIntervalValues}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetLatestAvailableNetworkInferencesResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetLatestAvailableNetworkInferencesResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetLatestAvailableNetworkInferencesResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetLatestAvailableNetworkInferencesResponse.network_inferences":
		x.NetworkInferences = value.Message().Interface().(*v3.ValueBundle)
	case "emissions.v5.GetLatestAvailableNetworkInferencesResponse.inferer_weights":
		lv := value.List()
		clv := lv.(*_GetLatestAvailableNetworkInferencesResponse_2_list)
		x.InfererWeights = *clv.list
	case "emissions.v5.GetLatestAvailableNetworkInferencesResponse.forecaster_weights":
		lv := value.List()
		clv := lv.(*_GetLatestAvailableNetworkInferencesResponse_3_list)
		x.ForecasterWeights = *clv.list
	case "emissions.v5.GetLatestAvailableNetworkInferencesResponse.inference_block_height":
		x.InferenceBlockHeight = value.Int()
	case "emissions.v5.GetLatestAvailableNetworkInferencesResponse.loss_block_height":
		x.LossBlockHeight = value.Int()
	case "emissions.v5.GetLatestAvailableNetworkInferencesResponse.confidence_interval_raw_percentiles":
		lv := value.List()
		clv := lv.(*_GetLatestAvailableNetworkInferencesResponse_7_list)
		x.ConfidenceIntervalRawPercentiles = *clv.list
	case "emissions.v5.GetLatestAvailableNetworkInferencesResponse.confidence_interval_values":
		lv := value.List()
		clv := lv.(*_GetLatestAvailableNetworkInferencesResponse_8_list)
		x.ConfidenceIntervalValues = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetLatestAvailableNetworkInferencesResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetLatestAvailableNetworkInferencesResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetLatestAvailableNetworkInferencesResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetLatestAvailableNetworkInferencesResponse.network_inferences":
		if x.NetworkInferences == nil {
			x.NetworkInferences = new(v3.ValueBundle)
		}
		return protoreflect.ValueOfMessage(x.NetworkInferences.ProtoReflect())
	case "emissions.v5.GetLatestAvailableNetworkInferencesResponse.inferer_weights":
		if x.InfererWeights == nil {
			x.InfererWeights = []*v3.RegretInformedWeight{}
		}
		value := &_GetLatestAvailableNetworkInferencesResponse_2_list{list: &x.InfererWeights}
		return protoreflect.ValueOfList(value)
	case "emissions.v5.GetLatestAvailableNetworkInferencesResponse.forecaster_weights":
		if x.ForecasterWeights == nil {
			x.ForecasterWeights = []*v3.RegretInformedWeight{}
		}
		value := &_GetLatestAvailableNetworkInferencesResponse_3_list{list: &x.ForecasterWeights}
		return protoreflect.ValueOfList(value)
	case "emissions.v5.GetLatestAvailableNetworkInferencesResponse.confidence_interval_raw_percentiles":
		if x.ConfidenceIntervalRawPercentiles == nil {
			x.ConfidenceIntervalRawPercentiles = []string{}
		}
		value := &_GetLatestAvailableNetworkInferencesResponse_7_list{list: &x.ConfidenceIntervalRawPercentiles}
		return protoreflect.ValueOfList(value)
	case "emissions.v5.GetLatestAvailableNetworkInferencesResponse.confidence_interval_values":
		if x.ConfidenceIntervalValues == nil {
			x.ConfidenceIntervalValues = []string{}
		}
		value := &_GetLatestAvailableNetworkInferencesResponse_8_list{list: &x.ConfidenceIntervalValues}
		return protoreflect.ValueOfList(value)
	case "emissions.v5.GetLatestAvailableNetworkInferencesResponse.inference_block_height":
		panic(fmt.Errorf("field inference_block_height of message emissions.v5.GetLatestAvailableNetworkInferencesResponse is not mutable"))
	case "emissions.v5.GetLatestAvailableNetworkInferencesResponse.loss_block_height":
		panic(fmt.Errorf("field loss_block_height of message emissions.v5.GetLatestAvailableNetworkInferencesResponse is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetLatestAvailableNetworkInferencesResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetLatestAvailableNetworkInferencesResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetLatestAvailableNetworkInferencesResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetLatestAvailableNetworkInferencesResponse.network_inferences":
		m := new(v3.ValueBundle)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "emissions.v5.GetLatestAvailableNetworkInferencesResponse.inferer_weights":
		list := []*v3.RegretInformedWeight{}
		return protoreflect.ValueOfList(&_GetLatestAvailableNetworkInferencesResponse_2_list{list: &list})
	case "emissions.v5.GetLatestAvailableNetworkInferencesResponse.forecaster_weights":
		list := []*v3.RegretInformedWeight{}
		return protoreflect.ValueOfList(&_GetLatestAvailableNetworkInferencesResponse_3_list{list: &list})
	case "emissions.v5.GetLatestAvailableNetworkInferencesResponse.inference_block_height":
		return protoreflect.ValueOfInt64(int64(0))
	case "emissions.v5.GetLatestAvailableNetworkInferencesResponse.loss_block_height":
		return protoreflect.ValueOfInt64(int64(0))
	case "emissions.v5.GetLatestAvailableNetworkInferencesResponse.confidence_interval_raw_percentiles":
		list := []string{}
		return protoreflect.ValueOfList(&_GetLatestAvailableNetworkInferencesResponse_7_list{list: &list})
	case "emissions.v5.GetLatestAvailableNetworkInferencesResponse.confidence_interval_values":
		list := []string{}
		return protoreflect.ValueOfList(&_GetLatestAvailableNetworkInferencesResponse_8_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetLatestAvailableNetworkInferencesResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetLatestAvailableNetworkInferencesResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetLatestAvailableNetworkInferencesResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetLatestAvailableNetworkInferencesResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetLatestAvailableNetworkInferencesResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetLatestAvailableNetworkInferencesResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetLatestAvailableNetworkInferencesResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetLatestAvailableNetworkInferencesResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetLatestAvailableNetworkInferencesResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.NetworkInferences != nil {
			l = options.Size(x.NetworkInferences)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.InfererWeights) > 0 {
			for _, e := range x.InfererWeights {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.ForecasterWeights) > 0 {
			for _, e := range x.ForecasterWeights {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.InferenceBlockHeight != 0 {
			n += 1 + runtime.Sov(uint64(x.InferenceBlockHeight))
		}
		if x.LossBlockHeight != 0 {
			n += 1 + runtime.Sov(uint64(x.LossBlockHeight))
		}
		if len(x.ConfidenceIntervalRawPercentiles) > 0 {
			for _, s := range x.ConfidenceIntervalRawPercentiles {
				l = len(s)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.ConfidenceIntervalValues) > 0 {
			for _, s := range x.ConfidenceIntervalValues {
				l = len(s)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetLatestAvailableNetworkInferencesResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.ConfidenceIntervalValues) > 0 {
			for iNdEx := len(x.ConfidenceIntervalValues) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.ConfidenceIntervalValues[iNdEx])
				copy(dAtA[i:], x.ConfidenceIntervalValues[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ConfidenceIntervalValues[iNdEx])))
				i--
				dAtA[i] = 0x42
			}
		}
		if len(x.ConfidenceIntervalRawPercentiles) > 0 {
			for iNdEx := len(x.ConfidenceIntervalRawPercentiles) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.ConfidenceIntervalRawPercentiles[iNdEx])
				copy(dAtA[i:], x.ConfidenceIntervalRawPercentiles[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ConfidenceIntervalRawPercentiles[iNdEx])))
				i--
				dAtA[i] = 0x3a
			}
		}
		if x.LossBlockHeight != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.LossBlockHeight))
			i--
			dAtA[i] = 0x30
		}
		if x.InferenceBlockHeight != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.InferenceBlockHeight))
			i--
			dAtA[i] = 0x28
		}
		if len(x.ForecasterWeights) > 0 {
			for iNdEx := len(x.ForecasterWeights) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.ForecasterWeights[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x1a
			}
		}
		if len(x.InfererWeights) > 0 {
			for iNdEx := len(x.InfererWeights) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.InfererWeights[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x12
			}
		}
		if x.NetworkInferences != nil {
			encoded, err := options.Marshal(x.NetworkInferences)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetLatestAvailableNetworkInferencesResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetLatestAvailableNetworkInferencesResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetLatestAvailableNetworkInferencesResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field NetworkInferences", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.NetworkInferences == nil {
					x.NetworkInferences = &v3.ValueBundle{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.NetworkInferences); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field InfererWeights", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.InfererWeights = append(x.InfererWeights, &v3.RegretInformedWeight{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.InfererWeights[len(x.InfererWeights)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ForecasterWeights", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ForecasterWeights = append(x.ForecasterWeights, &v3.RegretInformedWeight{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.ForecasterWeights[len(x.ForecasterWeights)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 5:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field InferenceBlockHeight", wireType)
				}
				x.InferenceBlockHeight = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.InferenceBlockHeight |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 6:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field LossBlockHeight", wireType)
				}
				x.LossBlockHeight = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.LossBlockHeight |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 7:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ConfidenceIntervalRawPercentiles", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ConfidenceIntervalRawPercentiles = append(x.ConfidenceIntervalRawPercentiles, string(dAtA[iNdEx:postIndex]))
				iNdEx = postIndex
			case 8:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ConfidenceIntervalValues", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ConfidenceIntervalValues = append(x.ConfidenceIntervalValues, string(dAtA[iNdEx:postIndex]))
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_IsWorkerRegisteredInTopicIdRequest          protoreflect.MessageDescriptor
	fd_IsWorkerRegisteredInTopicIdRequest_topic_id protoreflect.FieldDescriptor
	fd_IsWorkerRegisteredInTopicIdRequest_address  protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_IsWorkerRegisteredInTopicIdRequest = File_emissions_v5_query_proto.Messages().ByName("IsWorkerRegisteredInTopicIdRequest")
	fd_IsWorkerRegisteredInTopicIdRequest_topic_id = md_IsWorkerRegisteredInTopicIdRequest.Fields().ByName("topic_id")
	fd_IsWorkerRegisteredInTopicIdRequest_address = md_IsWorkerRegisteredInTopicIdRequest.Fields().ByName("address")
}

var _ protoreflect.Message = (*fastReflection_IsWorkerRegisteredInTopicIdRequest)(nil)

type fastReflection_IsWorkerRegisteredInTopicIdRequest IsWorkerRegisteredInTopicIdRequest

func (x *IsWorkerRegisteredInTopicIdRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_IsWorkerRegisteredInTopicIdRequest)(x)
}

func (x *IsWorkerRegisteredInTopicIdRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_IsWorkerRegisteredInTopicIdRequest_messageType fastReflection_IsWorkerRegisteredInTopicIdRequest_messageType
var _ protoreflect.MessageType = fastReflection_IsWorkerRegisteredInTopicIdRequest_messageType{}

type fastReflection_IsWorkerRegisteredInTopicIdRequest_messageType struct{}

func (x fastReflection_IsWorkerRegisteredInTopicIdRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_IsWorkerRegisteredInTopicIdRequest)(nil)
}
func (x fastReflection_IsWorkerRegisteredInTopicIdRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_IsWorkerRegisteredInTopicIdRequest)
}
func (x fastReflection_IsWorkerRegisteredInTopicIdRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_IsWorkerRegisteredInTopicIdRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_IsWorkerRegisteredInTopicIdRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_IsWorkerRegisteredInTopicIdRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_IsWorkerRegisteredInTopicIdRequest) Type() protoreflect.MessageType {
	return _fastReflection_IsWorkerRegisteredInTopicIdRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_IsWorkerRegisteredInTopicIdRequest) New() protoreflect.Message {
	return new(fastReflection_IsWorkerRegisteredInTopicIdRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_IsWorkerRegisteredInTopicIdRequest) Interface() protoreflect.ProtoMessage {
	return (*IsWorkerRegisteredInTopicIdRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_IsWorkerRegisteredInTopicIdRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_IsWorkerRegisteredInTopicIdRequest_topic_id, value) {
			return
		}
	}
	if x.Address != "" {
		value := protoreflect.ValueOfString(x.Address)
		if !f(fd_IsWorkerRegisteredInTopicIdRequest_address, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_IsWorkerRegisteredInTopicIdRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.IsWorkerRegisteredInTopicIdRequest.topic_id":
		return x.TopicId != uint64(0)
	case "emissions.v5.IsWorkerRegisteredInTopicIdRequest.address":
		return x.Address != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.IsWorkerRegisteredInTopicIdRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.IsWorkerRegisteredInTopicIdRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_IsWorkerRegisteredInTopicIdRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.IsWorkerRegisteredInTopicIdRequest.topic_id":
		x.TopicId = uint64(0)
	case "emissions.v5.IsWorkerRegisteredInTopicIdRequest.address":
		x.Address = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.IsWorkerRegisteredInTopicIdRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.IsWorkerRegisteredInTopicIdRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_IsWorkerRegisteredInTopicIdRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.IsWorkerRegisteredInTopicIdRequest.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	case "emissions.v5.IsWorkerRegisteredInTopicIdRequest.address":
		value := x.Address
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.IsWorkerRegisteredInTopicIdRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.IsWorkerRegisteredInTopicIdRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_IsWorkerRegisteredInTopicIdRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.IsWorkerRegisteredInTopicIdRequest.topic_id":
		x.TopicId = value.Uint()
	case "emissions.v5.IsWorkerRegisteredInTopicIdRequest.address":
		x.Address = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.IsWorkerRegisteredInTopicIdRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.IsWorkerRegisteredInTopicIdRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_IsWorkerRegisteredInTopicIdRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.IsWorkerRegisteredInTopicIdRequest.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.IsWorkerRegisteredInTopicIdRequest is not mutable"))
	case "emissions.v5.IsWorkerRegisteredInTopicIdRequest.address":
		panic(fmt.Errorf("field address of message emissions.v5.IsWorkerRegisteredInTopicIdRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.IsWorkerRegisteredInTopicIdRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.IsWorkerRegisteredInTopicIdRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_IsWorkerRegisteredInTopicIdRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.IsWorkerRegisteredInTopicIdRequest.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "emissions.v5.IsWorkerRegisteredInTopicIdRequest.address":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.IsWorkerRegisteredInTopicIdRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.IsWorkerRegisteredInTopicIdRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_IsWorkerRegisteredInTopicIdRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.IsWorkerRegisteredInTopicIdRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_IsWorkerRegisteredInTopicIdRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_IsWorkerRegisteredInTopicIdRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_IsWorkerRegisteredInTopicIdRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_IsWorkerRegisteredInTopicIdRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*IsWorkerRegisteredInTopicIdRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		l = len(x.Address)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*IsWorkerRegisteredInTopicIdRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Address) > 0 {
			i -= len(x.Address)
			copy(dAtA[i:], x.Address)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Address)))
			i--
			dAtA[i] = 0x12
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*IsWorkerRegisteredInTopicIdRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: IsWorkerRegisteredInTopicIdRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: IsWorkerRegisteredInTopicIdRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Address = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_IsWorkerRegisteredInTopicIdResponse               protoreflect.MessageDescriptor
	fd_IsWorkerRegisteredInTopicIdResponse_is_registered protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_IsWorkerRegisteredInTopicIdResponse = File_emissions_v5_query_proto.Messages().ByName("IsWorkerRegisteredInTopicIdResponse")
	fd_IsWorkerRegisteredInTopicIdResponse_is_registered = md_IsWorkerRegisteredInTopicIdResponse.Fields().ByName("is_registered")
}

var _ protoreflect.Message = (*fastReflection_IsWorkerRegisteredInTopicIdResponse)(nil)

type fastReflection_IsWorkerRegisteredInTopicIdResponse IsWorkerRegisteredInTopicIdResponse

func (x *IsWorkerRegisteredInTopicIdResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_IsWorkerRegisteredInTopicIdResponse)(x)
}

func (x *IsWorkerRegisteredInTopicIdResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_IsWorkerRegisteredInTopicIdResponse_messageType fastReflection_IsWorkerRegisteredInTopicIdResponse_messageType
var _ protoreflect.MessageType = fastReflection_IsWorkerRegisteredInTopicIdResponse_messageType{}

type fastReflection_IsWorkerRegisteredInTopicIdResponse_messageType struct{}

func (x fastReflection_IsWorkerRegisteredInTopicIdResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_IsWorkerRegisteredInTopicIdResponse)(nil)
}
func (x fastReflection_IsWorkerRegisteredInTopicIdResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_IsWorkerRegisteredInTopicIdResponse)
}
func (x fastReflection_IsWorkerRegisteredInTopicIdResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_IsWorkerRegisteredInTopicIdResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_IsWorkerRegisteredInTopicIdResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_IsWorkerRegisteredInTopicIdResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_IsWorkerRegisteredInTopicIdResponse) Type() protoreflect.MessageType {
	return _fastReflection_IsWorkerRegisteredInTopicIdResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_IsWorkerRegisteredInTopicIdResponse) New() protoreflect.Message {
	return new(fastReflection_IsWorkerRegisteredInTopicIdResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_IsWorkerRegisteredInTopicIdResponse) Interface() protoreflect.ProtoMessage {
	return (*IsWorkerRegisteredInTopicIdResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_IsWorkerRegisteredInTopicIdResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.IsRegistered != false {
		value := protoreflect.ValueOfBool(x.IsRegistered)
		if !f(fd_IsWorkerRegisteredInTopicIdResponse_is_registered, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_IsWorkerRegisteredInTopicIdResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.IsWorkerRegisteredInTopicIdResponse.is_registered":
		return x.IsRegistered != false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.IsWorkerRegisteredInTopicIdResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.IsWorkerRegisteredInTopicIdResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_IsWorkerRegisteredInTopicIdResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.IsWorkerRegisteredInTopicIdResponse.is_registered":
		x.IsRegistered = false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.IsWorkerRegisteredInTopicIdResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.IsWorkerRegisteredInTopicIdResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_IsWorkerRegisteredInTopicIdResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.IsWorkerRegisteredInTopicIdResponse.is_registered":
		value := x.IsRegistered
		return protoreflect.ValueOfBool(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.IsWorkerRegisteredInTopicIdResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.IsWorkerRegisteredInTopicIdResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_IsWorkerRegisteredInTopicIdResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.IsWorkerRegisteredInTopicIdResponse.is_registered":
		x.IsRegistered = value.Bool()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.IsWorkerRegisteredInTopicIdResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.IsWorkerRegisteredInTopicIdResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_IsWorkerRegisteredInTopicIdResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.IsWorkerRegisteredInTopicIdResponse.is_registered":
		panic(fmt.Errorf("field is_registered of message emissions.v5.IsWorkerRegisteredInTopicIdResponse is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.IsWorkerRegisteredInTopicIdResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.IsWorkerRegisteredInTopicIdResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_IsWorkerRegisteredInTopicIdResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.IsWorkerRegisteredInTopicIdResponse.is_registered":
		return protoreflect.ValueOfBool(false)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.IsWorkerRegisteredInTopicIdResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.IsWorkerRegisteredInTopicIdResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_IsWorkerRegisteredInTopicIdResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.IsWorkerRegisteredInTopicIdResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_IsWorkerRegisteredInTopicIdResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_IsWorkerRegisteredInTopicIdResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_IsWorkerRegisteredInTopicIdResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_IsWorkerRegisteredInTopicIdResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*IsWorkerRegisteredInTopicIdResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.IsRegistered {
			n += 2
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*IsWorkerRegisteredInTopicIdResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.IsRegistered {
			i--
			if x.IsRegistered {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*IsWorkerRegisteredInTopicIdResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: IsWorkerRegisteredInTopicIdResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: IsWorkerRegisteredInTopicIdResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field IsRegistered", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.IsRegistered = bool(v != 0)
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_IsReputerRegisteredInTopicIdRequest          protoreflect.MessageDescriptor
	fd_IsReputerRegisteredInTopicIdRequest_topic_id protoreflect.FieldDescriptor
	fd_IsReputerRegisteredInTopicIdRequest_address  protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_IsReputerRegisteredInTopicIdRequest = File_emissions_v5_query_proto.Messages().ByName("IsReputerRegisteredInTopicIdRequest")
	fd_IsReputerRegisteredInTopicIdRequest_topic_id = md_IsReputerRegisteredInTopicIdRequest.Fields().ByName("topic_id")
	fd_IsReputerRegisteredInTopicIdRequest_address = md_IsReputerRegisteredInTopicIdRequest.Fields().ByName("address")
}

var _ protoreflect.Message = (*fastReflection_IsReputerRegisteredInTopicIdRequest)(nil)

type fastReflection_IsReputerRegisteredInTopicIdRequest IsReputerRegisteredInTopicIdRequest

func (x *IsReputerRegisteredInTopicIdRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_IsReputerRegisteredInTopicIdRequest)(x)
}

func (x *IsReputerRegisteredInTopicIdRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_IsReputerRegisteredInTopicIdRequest_messageType fastReflection_IsReputerRegisteredInTopicIdRequest_messageType
var _ protoreflect.MessageType = fastReflection_IsReputerRegisteredInTopicIdRequest_messageType{}

type fastReflection_IsReputerRegisteredInTopicIdRequest_messageType struct{}

func (x fastReflection_IsReputerRegisteredInTopicIdRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_IsReputerRegisteredInTopicIdRequest)(nil)
}
func (x fastReflection_IsReputerRegisteredInTopicIdRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_IsReputerRegisteredInTopicIdRequest)
}
func (x fastReflection_IsReputerRegisteredInTopicIdRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_IsReputerRegisteredInTopicIdRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_IsReputerRegisteredInTopicIdRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_IsReputerRegisteredInTopicIdRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_IsReputerRegisteredInTopicIdRequest) Type() protoreflect.MessageType {
	return _fastReflection_IsReputerRegisteredInTopicIdRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_IsReputerRegisteredInTopicIdRequest) New() protoreflect.Message {
	return new(fastReflection_IsReputerRegisteredInTopicIdRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_IsReputerRegisteredInTopicIdRequest) Interface() protoreflect.ProtoMessage {
	return (*IsReputerRegisteredInTopicIdRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_IsReputerRegisteredInTopicIdRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_IsReputerRegisteredInTopicIdRequest_topic_id, value) {
			return
		}
	}
	if x.Address != "" {
		value := protoreflect.ValueOfString(x.Address)
		if !f(fd_IsReputerRegisteredInTopicIdRequest_address, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_IsReputerRegisteredInTopicIdRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.IsReputerRegisteredInTopicIdRequest.topic_id":
		return x.TopicId != uint64(0)
	case "emissions.v5.IsReputerRegisteredInTopicIdRequest.address":
		return x.Address != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.IsReputerRegisteredInTopicIdRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.IsReputerRegisteredInTopicIdRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_IsReputerRegisteredInTopicIdRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.IsReputerRegisteredInTopicIdRequest.topic_id":
		x.TopicId = uint64(0)
	case "emissions.v5.IsReputerRegisteredInTopicIdRequest.address":
		x.Address = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.IsReputerRegisteredInTopicIdRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.IsReputerRegisteredInTopicIdRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_IsReputerRegisteredInTopicIdRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.IsReputerRegisteredInTopicIdRequest.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	case "emissions.v5.IsReputerRegisteredInTopicIdRequest.address":
		value := x.Address
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.IsReputerRegisteredInTopicIdRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.IsReputerRegisteredInTopicIdRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_IsReputerRegisteredInTopicIdRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.IsReputerRegisteredInTopicIdRequest.topic_id":
		x.TopicId = value.Uint()
	case "emissions.v5.IsReputerRegisteredInTopicIdRequest.address":
		x.Address = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.IsReputerRegisteredInTopicIdRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.IsReputerRegisteredInTopicIdRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_IsReputerRegisteredInTopicIdRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.IsReputerRegisteredInTopicIdRequest.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.IsReputerRegisteredInTopicIdRequest is not mutable"))
	case "emissions.v5.IsReputerRegisteredInTopicIdRequest.address":
		panic(fmt.Errorf("field address of message emissions.v5.IsReputerRegisteredInTopicIdRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.IsReputerRegisteredInTopicIdRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.IsReputerRegisteredInTopicIdRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_IsReputerRegisteredInTopicIdRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.IsReputerRegisteredInTopicIdRequest.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "emissions.v5.IsReputerRegisteredInTopicIdRequest.address":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.IsReputerRegisteredInTopicIdRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.IsReputerRegisteredInTopicIdRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_IsReputerRegisteredInTopicIdRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.IsReputerRegisteredInTopicIdRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_IsReputerRegisteredInTopicIdRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_IsReputerRegisteredInTopicIdRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_IsReputerRegisteredInTopicIdRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_IsReputerRegisteredInTopicIdRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*IsReputerRegisteredInTopicIdRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		l = len(x.Address)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*IsReputerRegisteredInTopicIdRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Address) > 0 {
			i -= len(x.Address)
			copy(dAtA[i:], x.Address)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Address)))
			i--
			dAtA[i] = 0x12
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*IsReputerRegisteredInTopicIdRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: IsReputerRegisteredInTopicIdRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: IsReputerRegisteredInTopicIdRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Address = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_IsReputerRegisteredInTopicIdResponse               protoreflect.MessageDescriptor
	fd_IsReputerRegisteredInTopicIdResponse_is_registered protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_IsReputerRegisteredInTopicIdResponse = File_emissions_v5_query_proto.Messages().ByName("IsReputerRegisteredInTopicIdResponse")
	fd_IsReputerRegisteredInTopicIdResponse_is_registered = md_IsReputerRegisteredInTopicIdResponse.Fields().ByName("is_registered")
}

var _ protoreflect.Message = (*fastReflection_IsReputerRegisteredInTopicIdResponse)(nil)

type fastReflection_IsReputerRegisteredInTopicIdResponse IsReputerRegisteredInTopicIdResponse

func (x *IsReputerRegisteredInTopicIdResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_IsReputerRegisteredInTopicIdResponse)(x)
}

func (x *IsReputerRegisteredInTopicIdResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_IsReputerRegisteredInTopicIdResponse_messageType fastReflection_IsReputerRegisteredInTopicIdResponse_messageType
var _ protoreflect.MessageType = fastReflection_IsReputerRegisteredInTopicIdResponse_messageType{}

type fastReflection_IsReputerRegisteredInTopicIdResponse_messageType struct{}

func (x fastReflection_IsReputerRegisteredInTopicIdResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_IsReputerRegisteredInTopicIdResponse)(nil)
}
func (x fastReflection_IsReputerRegisteredInTopicIdResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_IsReputerRegisteredInTopicIdResponse)
}
func (x fastReflection_IsReputerRegisteredInTopicIdResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_IsReputerRegisteredInTopicIdResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_IsReputerRegisteredInTopicIdResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_IsReputerRegisteredInTopicIdResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_IsReputerRegisteredInTopicIdResponse) Type() protoreflect.MessageType {
	return _fastReflection_IsReputerRegisteredInTopicIdResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_IsReputerRegisteredInTopicIdResponse) New() protoreflect.Message {
	return new(fastReflection_IsReputerRegisteredInTopicIdResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_IsReputerRegisteredInTopicIdResponse) Interface() protoreflect.ProtoMessage {
	return (*IsReputerRegisteredInTopicIdResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_IsReputerRegisteredInTopicIdResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.IsRegistered != false {
		value := protoreflect.ValueOfBool(x.IsRegistered)
		if !f(fd_IsReputerRegisteredInTopicIdResponse_is_registered, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_IsReputerRegisteredInTopicIdResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.IsReputerRegisteredInTopicIdResponse.is_registered":
		return x.IsRegistered != false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.IsReputerRegisteredInTopicIdResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.IsReputerRegisteredInTopicIdResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_IsReputerRegisteredInTopicIdResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.IsReputerRegisteredInTopicIdResponse.is_registered":
		x.IsRegistered = false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.IsReputerRegisteredInTopicIdResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.IsReputerRegisteredInTopicIdResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_IsReputerRegisteredInTopicIdResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.IsReputerRegisteredInTopicIdResponse.is_registered":
		value := x.IsRegistered
		return protoreflect.ValueOfBool(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.IsReputerRegisteredInTopicIdResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.IsReputerRegisteredInTopicIdResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_IsReputerRegisteredInTopicIdResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.IsReputerRegisteredInTopicIdResponse.is_registered":
		x.IsRegistered = value.Bool()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.IsReputerRegisteredInTopicIdResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.IsReputerRegisteredInTopicIdResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_IsReputerRegisteredInTopicIdResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.IsReputerRegisteredInTopicIdResponse.is_registered":
		panic(fmt.Errorf("field is_registered of message emissions.v5.IsReputerRegisteredInTopicIdResponse is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.IsReputerRegisteredInTopicIdResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.IsReputerRegisteredInTopicIdResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_IsReputerRegisteredInTopicIdResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.IsReputerRegisteredInTopicIdResponse.is_registered":
		return protoreflect.ValueOfBool(false)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.IsReputerRegisteredInTopicIdResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.IsReputerRegisteredInTopicIdResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_IsReputerRegisteredInTopicIdResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.IsReputerRegisteredInTopicIdResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_IsReputerRegisteredInTopicIdResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_IsReputerRegisteredInTopicIdResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_IsReputerRegisteredInTopicIdResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_IsReputerRegisteredInTopicIdResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*IsReputerRegisteredInTopicIdResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.IsRegistered {
			n += 2
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*IsReputerRegisteredInTopicIdResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.IsRegistered {
			i--
			if x.IsRegistered {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*IsReputerRegisteredInTopicIdResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: IsReputerRegisteredInTopicIdResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: IsReputerRegisteredInTopicIdResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field IsRegistered", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.IsRegistered = bool(v != 0)
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_IsWhitelistAdminRequest         protoreflect.MessageDescriptor
	fd_IsWhitelistAdminRequest_address protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_IsWhitelistAdminRequest = File_emissions_v5_query_proto.Messages().ByName("IsWhitelistAdminRequest")
	fd_IsWhitelistAdminRequest_address = md_IsWhitelistAdminRequest.Fields().ByName("address")
}

var _ protoreflect.Message = (*fastReflection_IsWhitelistAdminRequest)(nil)

type fastReflection_IsWhitelistAdminRequest IsWhitelistAdminRequest

func (x *IsWhitelistAdminRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_IsWhitelistAdminRequest)(x)
}

func (x *IsWhitelistAdminRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_IsWhitelistAdminRequest_messageType fastReflection_IsWhitelistAdminRequest_messageType
var _ protoreflect.MessageType = fastReflection_IsWhitelistAdminRequest_messageType{}

type fastReflection_IsWhitelistAdminRequest_messageType struct{}

func (x fastReflection_IsWhitelistAdminRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_IsWhitelistAdminRequest)(nil)
}
func (x fastReflection_IsWhitelistAdminRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_IsWhitelistAdminRequest)
}
func (x fastReflection_IsWhitelistAdminRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_IsWhitelistAdminRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_IsWhitelistAdminRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_IsWhitelistAdminRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_IsWhitelistAdminRequest) Type() protoreflect.MessageType {
	return _fastReflection_IsWhitelistAdminRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_IsWhitelistAdminRequest) New() protoreflect.Message {
	return new(fastReflection_IsWhitelistAdminRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_IsWhitelistAdminRequest) Interface() protoreflect.ProtoMessage {
	return (*IsWhitelistAdminRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_IsWhitelistAdminRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Address != "" {
		value := protoreflect.ValueOfString(x.Address)
		if !f(fd_IsWhitelistAdminRequest_address, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_IsWhitelistAdminRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.IsWhitelistAdminRequest.address":
		return x.Address != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.IsWhitelistAdminRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.IsWhitelistAdminRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_IsWhitelistAdminRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.IsWhitelistAdminRequest.address":
		x.Address = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.IsWhitelistAdminRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.IsWhitelistAdminRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_IsWhitelistAdminRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.IsWhitelistAdminRequest.address":
		value := x.Address
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.IsWhitelistAdminRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.IsWhitelistAdminRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_IsWhitelistAdminRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.IsWhitelistAdminRequest.address":
		x.Address = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.IsWhitelistAdminRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.IsWhitelistAdminRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_IsWhitelistAdminRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.IsWhitelistAdminRequest.address":
		panic(fmt.Errorf("field address of message emissions.v5.IsWhitelistAdminRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.IsWhitelistAdminRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.IsWhitelistAdminRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_IsWhitelistAdminRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.IsWhitelistAdminRequest.address":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.IsWhitelistAdminRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.IsWhitelistAdminRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_IsWhitelistAdminRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.IsWhitelistAdminRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_IsWhitelistAdminRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_IsWhitelistAdminRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_IsWhitelistAdminRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_IsWhitelistAdminRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*IsWhitelistAdminRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Address)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*IsWhitelistAdminRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Address) > 0 {
			i -= len(x.Address)
			copy(dAtA[i:], x.Address)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Address)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*IsWhitelistAdminRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: IsWhitelistAdminRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: IsWhitelistAdminRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Address = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_IsWhitelistAdminResponse          protoreflect.MessageDescriptor
	fd_IsWhitelistAdminResponse_is_admin protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_IsWhitelistAdminResponse = File_emissions_v5_query_proto.Messages().ByName("IsWhitelistAdminResponse")
	fd_IsWhitelistAdminResponse_is_admin = md_IsWhitelistAdminResponse.Fields().ByName("is_admin")
}

var _ protoreflect.Message = (*fastReflection_IsWhitelistAdminResponse)(nil)

type fastReflection_IsWhitelistAdminResponse IsWhitelistAdminResponse

func (x *IsWhitelistAdminResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_IsWhitelistAdminResponse)(x)
}

func (x *IsWhitelistAdminResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_IsWhitelistAdminResponse_messageType fastReflection_IsWhitelistAdminResponse_messageType
var _ protoreflect.MessageType = fastReflection_IsWhitelistAdminResponse_messageType{}

type fastReflection_IsWhitelistAdminResponse_messageType struct{}

func (x fastReflection_IsWhitelistAdminResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_IsWhitelistAdminResponse)(nil)
}
func (x fastReflection_IsWhitelistAdminResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_IsWhitelistAdminResponse)
}
func (x fastReflection_IsWhitelistAdminResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_IsWhitelistAdminResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_IsWhitelistAdminResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_IsWhitelistAdminResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_IsWhitelistAdminResponse) Type() protoreflect.MessageType {
	return _fastReflection_IsWhitelistAdminResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_IsWhitelistAdminResponse) New() protoreflect.Message {
	return new(fastReflection_IsWhitelistAdminResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_IsWhitelistAdminResponse) Interface() protoreflect.ProtoMessage {
	return (*IsWhitelistAdminResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_IsWhitelistAdminResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.IsAdmin != false {
		value := protoreflect.ValueOfBool(x.IsAdmin)
		if !f(fd_IsWhitelistAdminResponse_is_admin, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_IsWhitelistAdminResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.IsWhitelistAdminResponse.is_admin":
		return x.IsAdmin != false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.IsWhitelistAdminResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.IsWhitelistAdminResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_IsWhitelistAdminResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.IsWhitelistAdminResponse.is_admin":
		x.IsAdmin = false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.IsWhitelistAdminResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.IsWhitelistAdminResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_IsWhitelistAdminResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.IsWhitelistAdminResponse.is_admin":
		value := x.IsAdmin
		return protoreflect.ValueOfBool(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.IsWhitelistAdminResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.IsWhitelistAdminResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_IsWhitelistAdminResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.IsWhitelistAdminResponse.is_admin":
		x.IsAdmin = value.Bool()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.IsWhitelistAdminResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.IsWhitelistAdminResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_IsWhitelistAdminResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.IsWhitelistAdminResponse.is_admin":
		panic(fmt.Errorf("field is_admin of message emissions.v5.IsWhitelistAdminResponse is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.IsWhitelistAdminResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.IsWhitelistAdminResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_IsWhitelistAdminResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.IsWhitelistAdminResponse.is_admin":
		return protoreflect.ValueOfBool(false)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.IsWhitelistAdminResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.IsWhitelistAdminResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_IsWhitelistAdminResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.IsWhitelistAdminResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_IsWhitelistAdminResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_IsWhitelistAdminResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_IsWhitelistAdminResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_IsWhitelistAdminResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*IsWhitelistAdminResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.IsAdmin {
			n += 2
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*IsWhitelistAdminResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.IsAdmin {
			i--
			if x.IsAdmin {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*IsWhitelistAdminResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: IsWhitelistAdminResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: IsWhitelistAdminResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field IsAdmin", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.IsAdmin = bool(v != 0)
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetStakeRemovalsUpUntilBlockRequest              protoreflect.MessageDescriptor
	fd_GetStakeRemovalsUpUntilBlockRequest_block_height protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetStakeRemovalsUpUntilBlockRequest = File_emissions_v5_query_proto.Messages().ByName("GetStakeRemovalsUpUntilBlockRequest")
	fd_GetStakeRemovalsUpUntilBlockRequest_block_height = md_GetStakeRemovalsUpUntilBlockRequest.Fields().ByName("block_height")
}

var _ protoreflect.Message = (*fastReflection_GetStakeRemovalsUpUntilBlockRequest)(nil)

type fastReflection_GetStakeRemovalsUpUntilBlockRequest GetStakeRemovalsUpUntilBlockRequest

func (x *GetStakeRemovalsUpUntilBlockRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetStakeRemovalsUpUntilBlockRequest)(x)
}

func (x *GetStakeRemovalsUpUntilBlockRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetStakeRemovalsUpUntilBlockRequest_messageType fastReflection_GetStakeRemovalsUpUntilBlockRequest_messageType
var _ protoreflect.MessageType = fastReflection_GetStakeRemovalsUpUntilBlockRequest_messageType{}

type fastReflection_GetStakeRemovalsUpUntilBlockRequest_messageType struct{}

func (x fastReflection_GetStakeRemovalsUpUntilBlockRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetStakeRemovalsUpUntilBlockRequest)(nil)
}
func (x fastReflection_GetStakeRemovalsUpUntilBlockRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_GetStakeRemovalsUpUntilBlockRequest)
}
func (x fastReflection_GetStakeRemovalsUpUntilBlockRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetStakeRemovalsUpUntilBlockRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetStakeRemovalsUpUntilBlockRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_GetStakeRemovalsUpUntilBlockRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetStakeRemovalsUpUntilBlockRequest) Type() protoreflect.MessageType {
	return _fastReflection_GetStakeRemovalsUpUntilBlockRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetStakeRemovalsUpUntilBlockRequest) New() protoreflect.Message {
	return new(fastReflection_GetStakeRemovalsUpUntilBlockRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetStakeRemovalsUpUntilBlockRequest) Interface() protoreflect.ProtoMessage {
	return (*GetStakeRemovalsUpUntilBlockRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetStakeRemovalsUpUntilBlockRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.BlockHeight != int64(0) {
		value := protoreflect.ValueOfInt64(x.BlockHeight)
		if !f(fd_GetStakeRemovalsUpUntilBlockRequest_block_height, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetStakeRemovalsUpUntilBlockRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetStakeRemovalsUpUntilBlockRequest.block_height":
		return x.BlockHeight != int64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetStakeRemovalsUpUntilBlockRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetStakeRemovalsUpUntilBlockRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetStakeRemovalsUpUntilBlockRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetStakeRemovalsUpUntilBlockRequest.block_height":
		x.BlockHeight = int64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetStakeRemovalsUpUntilBlockRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetStakeRemovalsUpUntilBlockRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetStakeRemovalsUpUntilBlockRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetStakeRemovalsUpUntilBlockRequest.block_height":
		value := x.BlockHeight
		return protoreflect.ValueOfInt64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetStakeRemovalsUpUntilBlockRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetStakeRemovalsUpUntilBlockRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetStakeRemovalsUpUntilBlockRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetStakeRemovalsUpUntilBlockRequest.block_height":
		x.BlockHeight = value.Int()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetStakeRemovalsUpUntilBlockRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetStakeRemovalsUpUntilBlockRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetStakeRemovalsUpUntilBlockRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetStakeRemovalsUpUntilBlockRequest.block_height":
		panic(fmt.Errorf("field block_height of message emissions.v5.GetStakeRemovalsUpUntilBlockRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetStakeRemovalsUpUntilBlockRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetStakeRemovalsUpUntilBlockRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetStakeRemovalsUpUntilBlockRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetStakeRemovalsUpUntilBlockRequest.block_height":
		return protoreflect.ValueOfInt64(int64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetStakeRemovalsUpUntilBlockRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetStakeRemovalsUpUntilBlockRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetStakeRemovalsUpUntilBlockRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetStakeRemovalsUpUntilBlockRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetStakeRemovalsUpUntilBlockRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetStakeRemovalsUpUntilBlockRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetStakeRemovalsUpUntilBlockRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetStakeRemovalsUpUntilBlockRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetStakeRemovalsUpUntilBlockRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.BlockHeight != 0 {
			n += 1 + runtime.Sov(uint64(x.BlockHeight))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetStakeRemovalsUpUntilBlockRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.BlockHeight != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.BlockHeight))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetStakeRemovalsUpUntilBlockRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetStakeRemovalsUpUntilBlockRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetStakeRemovalsUpUntilBlockRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BlockHeight", wireType)
				}
				x.BlockHeight = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.BlockHeight |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_GetStakeRemovalsUpUntilBlockResponse_1_list)(nil)

type _GetStakeRemovalsUpUntilBlockResponse_1_list struct {
	list *[]*v3.StakeRemovalInfo
}

func (x *_GetStakeRemovalsUpUntilBlockResponse_1_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GetStakeRemovalsUpUntilBlockResponse_1_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GetStakeRemovalsUpUntilBlockResponse_1_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*v3.StakeRemovalInfo)
	(*x.list)[i] = concreteValue
}

func (x *_GetStakeRemovalsUpUntilBlockResponse_1_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*v3.StakeRemovalInfo)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GetStakeRemovalsUpUntilBlockResponse_1_list) AppendMutable() protoreflect.Value {
	v := new(v3.StakeRemovalInfo)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GetStakeRemovalsUpUntilBlockResponse_1_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GetStakeRemovalsUpUntilBlockResponse_1_list) NewElement() protoreflect.Value {
	v := new(v3.StakeRemovalInfo)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GetStakeRemovalsUpUntilBlockResponse_1_list) IsValid() bool {
	return x.list != nil
}

var (
	md_GetStakeRemovalsUpUntilBlockResponse          protoreflect.MessageDescriptor
	fd_GetStakeRemovalsUpUntilBlockResponse_removals protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetStakeRemovalsUpUntilBlockResponse = File_emissions_v5_query_proto.Messages().ByName("GetStakeRemovalsUpUntilBlockResponse")
	fd_GetStakeRemovalsUpUntilBlockResponse_removals = md_GetStakeRemovalsUpUntilBlockResponse.Fields().ByName("removals")
}

var _ protoreflect.Message = (*fastReflection_GetStakeRemovalsUpUntilBlockResponse)(nil)

type fastReflection_GetStakeRemovalsUpUntilBlockResponse GetStakeRemovalsUpUntilBlockResponse

func (x *GetStakeRemovalsUpUntilBlockResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetStakeRemovalsUpUntilBlockResponse)(x)
}

func (x *GetStakeRemovalsUpUntilBlockResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetStakeRemovalsUpUntilBlockResponse_messageType fastReflection_GetStakeRemovalsUpUntilBlockResponse_messageType
var _ protoreflect.MessageType = fastReflection_GetStakeRemovalsUpUntilBlockResponse_messageType{}

type fastReflection_GetStakeRemovalsUpUntilBlockResponse_messageType struct{}

func (x fastReflection_GetStakeRemovalsUpUntilBlockResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetStakeRemovalsUpUntilBlockResponse)(nil)
}
func (x fastReflection_GetStakeRemovalsUpUntilBlockResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_GetStakeRemovalsUpUntilBlockResponse)
}
func (x fastReflection_GetStakeRemovalsUpUntilBlockResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetStakeRemovalsUpUntilBlockResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetStakeRemovalsUpUntilBlockResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_GetStakeRemovalsUpUntilBlockResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetStakeRemovalsUpUntilBlockResponse) Type() protoreflect.MessageType {
	return _fastReflection_GetStakeRemovalsUpUntilBlockResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetStakeRemovalsUpUntilBlockResponse) New() protoreflect.Message {
	return new(fastReflection_GetStakeRemovalsUpUntilBlockResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetStakeRemovalsUpUntilBlockResponse) Interface() protoreflect.ProtoMessage {
	return (*GetStakeRemovalsUpUntilBlockResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetStakeRemovalsUpUntilBlockResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.Removals) != 0 {
		value := protoreflect.ValueOfList(&_GetStakeRemovalsUpUntilBlockResponse_1_list{list: &x.Removals})
		if !f(fd_GetStakeRemovalsUpUntilBlockResponse_removals, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetStakeRemovalsUpUntilBlockResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetStakeRemovalsUpUntilBlockResponse.removals":
		return len(x.Removals) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetStakeRemovalsUpUntilBlockResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetStakeRemovalsUpUntilBlockResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetStakeRemovalsUpUntilBlockResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetStakeRemovalsUpUntilBlockResponse.removals":
		x.Removals = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetStakeRemovalsUpUntilBlockResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetStakeRemovalsUpUntilBlockResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetStakeRemovalsUpUntilBlockResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetStakeRemovalsUpUntilBlockResponse.removals":
		if len(x.Removals) == 0 {
			return protoreflect.ValueOfList(&_GetStakeRemovalsUpUntilBlockResponse_1_list{})
		}
		listValue := &_GetStakeRemovalsUpUntilBlockResponse_1_list{list: &x.Removals}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetStakeRemovalsUpUntilBlockResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetStakeRemovalsUpUntilBlockResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetStakeRemovalsUpUntilBlockResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetStakeRemovalsUpUntilBlockResponse.removals":
		lv := value.List()
		clv := lv.(*_GetStakeRemovalsUpUntilBlockResponse_1_list)
		x.Removals = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetStakeRemovalsUpUntilBlockResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetStakeRemovalsUpUntilBlockResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetStakeRemovalsUpUntilBlockResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetStakeRemovalsUpUntilBlockResponse.removals":
		if x.Removals == nil {
			x.Removals = []*v3.StakeRemovalInfo{}
		}
		value := &_GetStakeRemovalsUpUntilBlockResponse_1_list{list: &x.Removals}
		return protoreflect.ValueOfList(value)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetStakeRemovalsUpUntilBlockResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetStakeRemovalsUpUntilBlockResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetStakeRemovalsUpUntilBlockResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetStakeRemovalsUpUntilBlockResponse.removals":
		list := []*v3.StakeRemovalInfo{}
		return protoreflect.ValueOfList(&_GetStakeRemovalsUpUntilBlockResponse_1_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetStakeRemovalsUpUntilBlockResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetStakeRemovalsUpUntilBlockResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetStakeRemovalsUpUntilBlockResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetStakeRemovalsUpUntilBlockResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetStakeRemovalsUpUntilBlockResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetStakeRemovalsUpUntilBlockResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetStakeRemovalsUpUntilBlockResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetStakeRemovalsUpUntilBlockResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetStakeRemovalsUpUntilBlockResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if len(x.Removals) > 0 {
			for _, e := range x.Removals {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetStakeRemovalsUpUntilBlockResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Removals) > 0 {
			for iNdEx := len(x.Removals) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.Removals[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0xa
			}
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetStakeRemovalsUpUntilBlockResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetStakeRemovalsUpUntilBlockResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetStakeRemovalsUpUntilBlockResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Removals", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Removals = append(x.Removals, &v3.StakeRemovalInfo{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Removals[len(x.Removals)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetDelegateStakeRemovalsUpUntilBlockRequest              protoreflect.MessageDescriptor
	fd_GetDelegateStakeRemovalsUpUntilBlockRequest_block_height protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetDelegateStakeRemovalsUpUntilBlockRequest = File_emissions_v5_query_proto.Messages().ByName("GetDelegateStakeRemovalsUpUntilBlockRequest")
	fd_GetDelegateStakeRemovalsUpUntilBlockRequest_block_height = md_GetDelegateStakeRemovalsUpUntilBlockRequest.Fields().ByName("block_height")
}

var _ protoreflect.Message = (*fastReflection_GetDelegateStakeRemovalsUpUntilBlockRequest)(nil)

type fastReflection_GetDelegateStakeRemovalsUpUntilBlockRequest GetDelegateStakeRemovalsUpUntilBlockRequest

func (x *GetDelegateStakeRemovalsUpUntilBlockRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetDelegateStakeRemovalsUpUntilBlockRequest)(x)
}

func (x *GetDelegateStakeRemovalsUpUntilBlockRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetDelegateStakeRemovalsUpUntilBlockRequest_messageType fastReflection_GetDelegateStakeRemovalsUpUntilBlockRequest_messageType
var _ protoreflect.MessageType = fastReflection_GetDelegateStakeRemovalsUpUntilBlockRequest_messageType{}

type fastReflection_GetDelegateStakeRemovalsUpUntilBlockRequest_messageType struct{}

func (x fastReflection_GetDelegateStakeRemovalsUpUntilBlockRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetDelegateStakeRemovalsUpUntilBlockRequest)(nil)
}
func (x fastReflection_GetDelegateStakeRemovalsUpUntilBlockRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_GetDelegateStakeRemovalsUpUntilBlockRequest)
}
func (x fastReflection_GetDelegateStakeRemovalsUpUntilBlockRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetDelegateStakeRemovalsUpUntilBlockRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetDelegateStakeRemovalsUpUntilBlockRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_GetDelegateStakeRemovalsUpUntilBlockRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetDelegateStakeRemovalsUpUntilBlockRequest) Type() protoreflect.MessageType {
	return _fastReflection_GetDelegateStakeRemovalsUpUntilBlockRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetDelegateStakeRemovalsUpUntilBlockRequest) New() protoreflect.Message {
	return new(fastReflection_GetDelegateStakeRemovalsUpUntilBlockRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetDelegateStakeRemovalsUpUntilBlockRequest) Interface() protoreflect.ProtoMessage {
	return (*GetDelegateStakeRemovalsUpUntilBlockRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetDelegateStakeRemovalsUpUntilBlockRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.BlockHeight != int64(0) {
		value := protoreflect.ValueOfInt64(x.BlockHeight)
		if !f(fd_GetDelegateStakeRemovalsUpUntilBlockRequest_block_height, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetDelegateStakeRemovalsUpUntilBlockRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetDelegateStakeRemovalsUpUntilBlockRequest.block_height":
		return x.BlockHeight != int64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetDelegateStakeRemovalsUpUntilBlockRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetDelegateStakeRemovalsUpUntilBlockRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetDelegateStakeRemovalsUpUntilBlockRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetDelegateStakeRemovalsUpUntilBlockRequest.block_height":
		x.BlockHeight = int64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetDelegateStakeRemovalsUpUntilBlockRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetDelegateStakeRemovalsUpUntilBlockRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetDelegateStakeRemovalsUpUntilBlockRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetDelegateStakeRemovalsUpUntilBlockRequest.block_height":
		value := x.BlockHeight
		return protoreflect.ValueOfInt64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetDelegateStakeRemovalsUpUntilBlockRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetDelegateStakeRemovalsUpUntilBlockRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetDelegateStakeRemovalsUpUntilBlockRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetDelegateStakeRemovalsUpUntilBlockRequest.block_height":
		x.BlockHeight = value.Int()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetDelegateStakeRemovalsUpUntilBlockRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetDelegateStakeRemovalsUpUntilBlockRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetDelegateStakeRemovalsUpUntilBlockRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetDelegateStakeRemovalsUpUntilBlockRequest.block_height":
		panic(fmt.Errorf("field block_height of message emissions.v5.GetDelegateStakeRemovalsUpUntilBlockRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetDelegateStakeRemovalsUpUntilBlockRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetDelegateStakeRemovalsUpUntilBlockRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetDelegateStakeRemovalsUpUntilBlockRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetDelegateStakeRemovalsUpUntilBlockRequest.block_height":
		return protoreflect.ValueOfInt64(int64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetDelegateStakeRemovalsUpUntilBlockRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetDelegateStakeRemovalsUpUntilBlockRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetDelegateStakeRemovalsUpUntilBlockRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetDelegateStakeRemovalsUpUntilBlockRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetDelegateStakeRemovalsUpUntilBlockRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetDelegateStakeRemovalsUpUntilBlockRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetDelegateStakeRemovalsUpUntilBlockRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetDelegateStakeRemovalsUpUntilBlockRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetDelegateStakeRemovalsUpUntilBlockRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.BlockHeight != 0 {
			n += 1 + runtime.Sov(uint64(x.BlockHeight))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetDelegateStakeRemovalsUpUntilBlockRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.BlockHeight != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.BlockHeight))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetDelegateStakeRemovalsUpUntilBlockRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetDelegateStakeRemovalsUpUntilBlockRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetDelegateStakeRemovalsUpUntilBlockRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BlockHeight", wireType)
				}
				x.BlockHeight = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.BlockHeight |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_GetDelegateStakeRemovalsUpUntilBlockResponse_1_list)(nil)

type _GetDelegateStakeRemovalsUpUntilBlockResponse_1_list struct {
	list *[]*v3.DelegateStakeRemovalInfo
}

func (x *_GetDelegateStakeRemovalsUpUntilBlockResponse_1_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GetDelegateStakeRemovalsUpUntilBlockResponse_1_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GetDelegateStakeRemovalsUpUntilBlockResponse_1_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*v3.DelegateStakeRemovalInfo)
	(*x.list)[i] = concreteValue
}

func (x *_GetDelegateStakeRemovalsUpUntilBlockResponse_1_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*v3.DelegateStakeRemovalInfo)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GetDelegateStakeRemovalsUpUntilBlockResponse_1_list) AppendMutable() protoreflect.Value {
	v := new(v3.DelegateStakeRemovalInfo)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GetDelegateStakeRemovalsUpUntilBlockResponse_1_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GetDelegateStakeRemovalsUpUntilBlockResponse_1_list) NewElement() protoreflect.Value {
	v := new(v3.DelegateStakeRemovalInfo)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GetDelegateStakeRemovalsUpUntilBlockResponse_1_list) IsValid() bool {
	return x.list != nil
}

var (
	md_GetDelegateStakeRemovalsUpUntilBlockResponse          protoreflect.MessageDescriptor
	fd_GetDelegateStakeRemovalsUpUntilBlockResponse_removals protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetDelegateStakeRemovalsUpUntilBlockResponse = File_emissions_v5_query_proto.Messages().ByName("GetDelegateStakeRemovalsUpUntilBlockResponse")
	fd_GetDelegateStakeRemovalsUpUntilBlockResponse_removals = md_GetDelegateStakeRemovalsUpUntilBlockResponse.Fields().ByName("removals")
}

var _ protoreflect.Message = (*fastReflection_GetDelegateStakeRemovalsUpUntilBlockResponse)(nil)

type fastReflection_GetDelegateStakeRemovalsUpUntilBlockResponse GetDelegateStakeRemovalsUpUntilBlockResponse

func (x *GetDelegateStakeRemovalsUpUntilBlockResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetDelegateStakeRemovalsUpUntilBlockResponse)(x)
}

func (x *GetDelegateStakeRemovalsUpUntilBlockResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetDelegateStakeRemovalsUpUntilBlockResponse_messageType fastReflection_GetDelegateStakeRemovalsUpUntilBlockResponse_messageType
var _ protoreflect.MessageType = fastReflection_GetDelegateStakeRemovalsUpUntilBlockResponse_messageType{}

type fastReflection_GetDelegateStakeRemovalsUpUntilBlockResponse_messageType struct{}

func (x fastReflection_GetDelegateStakeRemovalsUpUntilBlockResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetDelegateStakeRemovalsUpUntilBlockResponse)(nil)
}
func (x fastReflection_GetDelegateStakeRemovalsUpUntilBlockResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_GetDelegateStakeRemovalsUpUntilBlockResponse)
}
func (x fastReflection_GetDelegateStakeRemovalsUpUntilBlockResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetDelegateStakeRemovalsUpUntilBlockResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetDelegateStakeRemovalsUpUntilBlockResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_GetDelegateStakeRemovalsUpUntilBlockResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetDelegateStakeRemovalsUpUntilBlockResponse) Type() protoreflect.MessageType {
	return _fastReflection_GetDelegateStakeRemovalsUpUntilBlockResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetDelegateStakeRemovalsUpUntilBlockResponse) New() protoreflect.Message {
	return new(fastReflection_GetDelegateStakeRemovalsUpUntilBlockResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetDelegateStakeRemovalsUpUntilBlockResponse) Interface() protoreflect.ProtoMessage {
	return (*GetDelegateStakeRemovalsUpUntilBlockResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetDelegateStakeRemovalsUpUntilBlockResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.Removals) != 0 {
		value := protoreflect.ValueOfList(&_GetDelegateStakeRemovalsUpUntilBlockResponse_1_list{list: &x.Removals})
		if !f(fd_GetDelegateStakeRemovalsUpUntilBlockResponse_removals, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetDelegateStakeRemovalsUpUntilBlockResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetDelegateStakeRemovalsUpUntilBlockResponse.removals":
		return len(x.Removals) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetDelegateStakeRemovalsUpUntilBlockResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetDelegateStakeRemovalsUpUntilBlockResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetDelegateStakeRemovalsUpUntilBlockResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetDelegateStakeRemovalsUpUntilBlockResponse.removals":
		x.Removals = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetDelegateStakeRemovalsUpUntilBlockResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetDelegateStakeRemovalsUpUntilBlockResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetDelegateStakeRemovalsUpUntilBlockResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetDelegateStakeRemovalsUpUntilBlockResponse.removals":
		if len(x.Removals) == 0 {
			return protoreflect.ValueOfList(&_GetDelegateStakeRemovalsUpUntilBlockResponse_1_list{})
		}
		listValue := &_GetDelegateStakeRemovalsUpUntilBlockResponse_1_list{list: &x.Removals}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetDelegateStakeRemovalsUpUntilBlockResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetDelegateStakeRemovalsUpUntilBlockResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetDelegateStakeRemovalsUpUntilBlockResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetDelegateStakeRemovalsUpUntilBlockResponse.removals":
		lv := value.List()
		clv := lv.(*_GetDelegateStakeRemovalsUpUntilBlockResponse_1_list)
		x.Removals = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetDelegateStakeRemovalsUpUntilBlockResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetDelegateStakeRemovalsUpUntilBlockResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetDelegateStakeRemovalsUpUntilBlockResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetDelegateStakeRemovalsUpUntilBlockResponse.removals":
		if x.Removals == nil {
			x.Removals = []*v3.DelegateStakeRemovalInfo{}
		}
		value := &_GetDelegateStakeRemovalsUpUntilBlockResponse_1_list{list: &x.Removals}
		return protoreflect.ValueOfList(value)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetDelegateStakeRemovalsUpUntilBlockResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetDelegateStakeRemovalsUpUntilBlockResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetDelegateStakeRemovalsUpUntilBlockResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetDelegateStakeRemovalsUpUntilBlockResponse.removals":
		list := []*v3.DelegateStakeRemovalInfo{}
		return protoreflect.ValueOfList(&_GetDelegateStakeRemovalsUpUntilBlockResponse_1_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetDelegateStakeRemovalsUpUntilBlockResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetDelegateStakeRemovalsUpUntilBlockResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetDelegateStakeRemovalsUpUntilBlockResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetDelegateStakeRemovalsUpUntilBlockResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetDelegateStakeRemovalsUpUntilBlockResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetDelegateStakeRemovalsUpUntilBlockResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetDelegateStakeRemovalsUpUntilBlockResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetDelegateStakeRemovalsUpUntilBlockResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetDelegateStakeRemovalsUpUntilBlockResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if len(x.Removals) > 0 {
			for _, e := range x.Removals {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetDelegateStakeRemovalsUpUntilBlockResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Removals) > 0 {
			for iNdEx := len(x.Removals) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.Removals[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0xa
			}
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetDelegateStakeRemovalsUpUntilBlockResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetDelegateStakeRemovalsUpUntilBlockResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetDelegateStakeRemovalsUpUntilBlockResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Removals", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Removals = append(x.Removals, &v3.DelegateStakeRemovalInfo{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Removals[len(x.Removals)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetStakeRemovalInfoRequest          protoreflect.MessageDescriptor
	fd_GetStakeRemovalInfoRequest_topic_id protoreflect.FieldDescriptor
	fd_GetStakeRemovalInfoRequest_reputer  protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetStakeRemovalInfoRequest = File_emissions_v5_query_proto.Messages().ByName("GetStakeRemovalInfoRequest")
	fd_GetStakeRemovalInfoRequest_topic_id = md_GetStakeRemovalInfoRequest.Fields().ByName("topic_id")
	fd_GetStakeRemovalInfoRequest_reputer = md_GetStakeRemovalInfoRequest.Fields().ByName("reputer")
}

var _ protoreflect.Message = (*fastReflection_GetStakeRemovalInfoRequest)(nil)

type fastReflection_GetStakeRemovalInfoRequest GetStakeRemovalInfoRequest

func (x *GetStakeRemovalInfoRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetStakeRemovalInfoRequest)(x)
}

func (x *GetStakeRemovalInfoRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetStakeRemovalInfoRequest_messageType fastReflection_GetStakeRemovalInfoRequest_messageType
var _ protoreflect.MessageType = fastReflection_GetStakeRemovalInfoRequest_messageType{}

type fastReflection_GetStakeRemovalInfoRequest_messageType struct{}

func (x fastReflection_GetStakeRemovalInfoRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetStakeRemovalInfoRequest)(nil)
}
func (x fastReflection_GetStakeRemovalInfoRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_GetStakeRemovalInfoRequest)
}
func (x fastReflection_GetStakeRemovalInfoRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetStakeRemovalInfoRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetStakeRemovalInfoRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_GetStakeRemovalInfoRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetStakeRemovalInfoRequest) Type() protoreflect.MessageType {
	return _fastReflection_GetStakeRemovalInfoRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetStakeRemovalInfoRequest) New() protoreflect.Message {
	return new(fastReflection_GetStakeRemovalInfoRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetStakeRemovalInfoRequest) Interface() protoreflect.ProtoMessage {
	return (*GetStakeRemovalInfoRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetStakeRemovalInfoRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_GetStakeRemovalInfoRequest_topic_id, value) {
			return
		}
	}
	if x.Reputer != "" {
		value := protoreflect.ValueOfString(x.Reputer)
		if !f(fd_GetStakeRemovalInfoRequest_reputer, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetStakeRemovalInfoRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetStakeRemovalInfoRequest.topic_id":
		return x.TopicId != uint64(0)
	case "emissions.v5.GetStakeRemovalInfoRequest.reputer":
		return x.Reputer != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetStakeRemovalInfoRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetStakeRemovalInfoRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetStakeRemovalInfoRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetStakeRemovalInfoRequest.topic_id":
		x.TopicId = uint64(0)
	case "emissions.v5.GetStakeRemovalInfoRequest.reputer":
		x.Reputer = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetStakeRemovalInfoRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetStakeRemovalInfoRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetStakeRemovalInfoRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetStakeRemovalInfoRequest.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	case "emissions.v5.GetStakeRemovalInfoRequest.reputer":
		value := x.Reputer
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetStakeRemovalInfoRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetStakeRemovalInfoRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetStakeRemovalInfoRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetStakeRemovalInfoRequest.topic_id":
		x.TopicId = value.Uint()
	case "emissions.v5.GetStakeRemovalInfoRequest.reputer":
		x.Reputer = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetStakeRemovalInfoRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetStakeRemovalInfoRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetStakeRemovalInfoRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetStakeRemovalInfoRequest.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.GetStakeRemovalInfoRequest is not mutable"))
	case "emissions.v5.GetStakeRemovalInfoRequest.reputer":
		panic(fmt.Errorf("field reputer of message emissions.v5.GetStakeRemovalInfoRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetStakeRemovalInfoRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetStakeRemovalInfoRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetStakeRemovalInfoRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetStakeRemovalInfoRequest.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "emissions.v5.GetStakeRemovalInfoRequest.reputer":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetStakeRemovalInfoRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetStakeRemovalInfoRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetStakeRemovalInfoRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetStakeRemovalInfoRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetStakeRemovalInfoRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetStakeRemovalInfoRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetStakeRemovalInfoRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetStakeRemovalInfoRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetStakeRemovalInfoRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		l = len(x.Reputer)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetStakeRemovalInfoRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Reputer) > 0 {
			i -= len(x.Reputer)
			copy(dAtA[i:], x.Reputer)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Reputer)))
			i--
			dAtA[i] = 0x12
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetStakeRemovalInfoRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetStakeRemovalInfoRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetStakeRemovalInfoRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Reputer", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Reputer = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetStakeRemovalInfoResponse         protoreflect.MessageDescriptor
	fd_GetStakeRemovalInfoResponse_removal protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetStakeRemovalInfoResponse = File_emissions_v5_query_proto.Messages().ByName("GetStakeRemovalInfoResponse")
	fd_GetStakeRemovalInfoResponse_removal = md_GetStakeRemovalInfoResponse.Fields().ByName("removal")
}

var _ protoreflect.Message = (*fastReflection_GetStakeRemovalInfoResponse)(nil)

type fastReflection_GetStakeRemovalInfoResponse GetStakeRemovalInfoResponse

func (x *GetStakeRemovalInfoResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetStakeRemovalInfoResponse)(x)
}

func (x *GetStakeRemovalInfoResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetStakeRemovalInfoResponse_messageType fastReflection_GetStakeRemovalInfoResponse_messageType
var _ protoreflect.MessageType = fastReflection_GetStakeRemovalInfoResponse_messageType{}

type fastReflection_GetStakeRemovalInfoResponse_messageType struct{}

func (x fastReflection_GetStakeRemovalInfoResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetStakeRemovalInfoResponse)(nil)
}
func (x fastReflection_GetStakeRemovalInfoResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_GetStakeRemovalInfoResponse)
}
func (x fastReflection_GetStakeRemovalInfoResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetStakeRemovalInfoResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetStakeRemovalInfoResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_GetStakeRemovalInfoResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetStakeRemovalInfoResponse) Type() protoreflect.MessageType {
	return _fastReflection_GetStakeRemovalInfoResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetStakeRemovalInfoResponse) New() protoreflect.Message {
	return new(fastReflection_GetStakeRemovalInfoResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetStakeRemovalInfoResponse) Interface() protoreflect.ProtoMessage {
	return (*GetStakeRemovalInfoResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetStakeRemovalInfoResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Removal != nil {
		value := protoreflect.ValueOfMessage(x.Removal.ProtoReflect())
		if !f(fd_GetStakeRemovalInfoResponse_removal, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetStakeRemovalInfoResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetStakeRemovalInfoResponse.removal":
		return x.Removal != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetStakeRemovalInfoResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetStakeRemovalInfoResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetStakeRemovalInfoResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetStakeRemovalInfoResponse.removal":
		x.Removal = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetStakeRemovalInfoResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetStakeRemovalInfoResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetStakeRemovalInfoResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetStakeRemovalInfoResponse.removal":
		value := x.Removal
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetStakeRemovalInfoResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetStakeRemovalInfoResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetStakeRemovalInfoResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetStakeRemovalInfoResponse.removal":
		x.Removal = value.Message().Interface().(*v3.StakeRemovalInfo)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetStakeRemovalInfoResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetStakeRemovalInfoResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetStakeRemovalInfoResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetStakeRemovalInfoResponse.removal":
		if x.Removal == nil {
			x.Removal = new(v3.StakeRemovalInfo)
		}
		return protoreflect.ValueOfMessage(x.Removal.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetStakeRemovalInfoResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetStakeRemovalInfoResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetStakeRemovalInfoResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetStakeRemovalInfoResponse.removal":
		m := new(v3.StakeRemovalInfo)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetStakeRemovalInfoResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetStakeRemovalInfoResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetStakeRemovalInfoResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetStakeRemovalInfoResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetStakeRemovalInfoResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetStakeRemovalInfoResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetStakeRemovalInfoResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetStakeRemovalInfoResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetStakeRemovalInfoResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Removal != nil {
			l = options.Size(x.Removal)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetStakeRemovalInfoResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Removal != nil {
			encoded, err := options.Marshal(x.Removal)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetStakeRemovalInfoResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetStakeRemovalInfoResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetStakeRemovalInfoResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Removal", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Removal == nil {
					x.Removal = &v3.StakeRemovalInfo{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Removal); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetDelegateStakeRemovalInfoRequest           protoreflect.MessageDescriptor
	fd_GetDelegateStakeRemovalInfoRequest_topic_id  protoreflect.FieldDescriptor
	fd_GetDelegateStakeRemovalInfoRequest_delegator protoreflect.FieldDescriptor
	fd_GetDelegateStakeRemovalInfoRequest_reputer   protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetDelegateStakeRemovalInfoRequest = File_emissions_v5_query_proto.Messages().ByName("GetDelegateStakeRemovalInfoRequest")
	fd_GetDelegateStakeRemovalInfoRequest_topic_id = md_GetDelegateStakeRemovalInfoRequest.Fields().ByName("topic_id")
	fd_GetDelegateStakeRemovalInfoRequest_delegator = md_GetDelegateStakeRemovalInfoRequest.Fields().ByName("delegator")
	fd_GetDelegateStakeRemovalInfoRequest_reputer = md_GetDelegateStakeRemovalInfoRequest.Fields().ByName("reputer")
}

var _ protoreflect.Message = (*fastReflection_GetDelegateStakeRemovalInfoRequest)(nil)

type fastReflection_GetDelegateStakeRemovalInfoRequest GetDelegateStakeRemovalInfoRequest

func (x *GetDelegateStakeRemovalInfoRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetDelegateStakeRemovalInfoRequest)(x)
}

func (x *GetDelegateStakeRemovalInfoRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetDelegateStakeRemovalInfoRequest_messageType fastReflection_GetDelegateStakeRemovalInfoRequest_messageType
var _ protoreflect.MessageType = fastReflection_GetDelegateStakeRemovalInfoRequest_messageType{}

type fastReflection_GetDelegateStakeRemovalInfoRequest_messageType struct{}

func (x fastReflection_GetDelegateStakeRemovalInfoRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetDelegateStakeRemovalInfoRequest)(nil)
}
func (x fastReflection_GetDelegateStakeRemovalInfoRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_GetDelegateStakeRemovalInfoRequest)
}
func (x fastReflection_GetDelegateStakeRemovalInfoRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetDelegateStakeRemovalInfoRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetDelegateStakeRemovalInfoRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_GetDelegateStakeRemovalInfoRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetDelegateStakeRemovalInfoRequest) Type() protoreflect.MessageType {
	return _fastReflection_GetDelegateStakeRemovalInfoRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetDelegateStakeRemovalInfoRequest) New() protoreflect.Message {
	return new(fastReflection_GetDelegateStakeRemovalInfoRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetDelegateStakeRemovalInfoRequest) Interface() protoreflect.ProtoMessage {
	return (*GetDelegateStakeRemovalInfoRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetDelegateStakeRemovalInfoRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_GetDelegateStakeRemovalInfoRequest_topic_id, value) {
			return
		}
	}
	if x.Delegator != "" {
		value := protoreflect.ValueOfString(x.Delegator)
		if !f(fd_GetDelegateStakeRemovalInfoRequest_delegator, value) {
			return
		}
	}
	if x.Reputer != "" {
		value := protoreflect.ValueOfString(x.Reputer)
		if !f(fd_GetDelegateStakeRemovalInfoRequest_reputer, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetDelegateStakeRemovalInfoRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetDelegateStakeRemovalInfoRequest.topic_id":
		return x.TopicId != uint64(0)
	case "emissions.v5.GetDelegateStakeRemovalInfoRequest.delegator":
		return x.Delegator != ""
	case "emissions.v5.GetDelegateStakeRemovalInfoRequest.reputer":
		return x.Reputer != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetDelegateStakeRemovalInfoRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetDelegateStakeRemovalInfoRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetDelegateStakeRemovalInfoRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetDelegateStakeRemovalInfoRequest.topic_id":
		x.TopicId = uint64(0)
	case "emissions.v5.GetDelegateStakeRemovalInfoRequest.delegator":
		x.Delegator = ""
	case "emissions.v5.GetDelegateStakeRemovalInfoRequest.reputer":
		x.Reputer = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetDelegateStakeRemovalInfoRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetDelegateStakeRemovalInfoRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetDelegateStakeRemovalInfoRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetDelegateStakeRemovalInfoRequest.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	case "emissions.v5.GetDelegateStakeRemovalInfoRequest.delegator":
		value := x.Delegator
		return protoreflect.ValueOfString(value)
	case "emissions.v5.GetDelegateStakeRemovalInfoRequest.reputer":
		value := x.Reputer
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetDelegateStakeRemovalInfoRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetDelegateStakeRemovalInfoRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetDelegateStakeRemovalInfoRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetDelegateStakeRemovalInfoRequest.topic_id":
		x.TopicId = value.Uint()
	case "emissions.v5.GetDelegateStakeRemovalInfoRequest.delegator":
		x.Delegator = value.Interface().(string)
	case "emissions.v5.GetDelegateStakeRemovalInfoRequest.reputer":
		x.Reputer = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetDelegateStakeRemovalInfoRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetDelegateStakeRemovalInfoRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetDelegateStakeRemovalInfoRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetDelegateStakeRemovalInfoRequest.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.GetDelegateStakeRemovalInfoRequest is not mutable"))
	case "emissions.v5.GetDelegateStakeRemovalInfoRequest.delegator":
		panic(fmt.Errorf("field delegator of message emissions.v5.GetDelegateStakeRemovalInfoRequest is not mutable"))
	case "emissions.v5.GetDelegateStakeRemovalInfoRequest.reputer":
		panic(fmt.Errorf("field reputer of message emissions.v5.GetDelegateStakeRemovalInfoRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetDelegateStakeRemovalInfoRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetDelegateStakeRemovalInfoRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetDelegateStakeRemovalInfoRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetDelegateStakeRemovalInfoRequest.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "emissions.v5.GetDelegateStakeRemovalInfoRequest.delegator":
		return protoreflect.ValueOfString("")
	case "emissions.v5.GetDelegateStakeRemovalInfoRequest.reputer":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetDelegateStakeRemovalInfoRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetDelegateStakeRemovalInfoRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetDelegateStakeRemovalInfoRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetDelegateStakeRemovalInfoRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetDelegateStakeRemovalInfoRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetDelegateStakeRemovalInfoRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetDelegateStakeRemovalInfoRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetDelegateStakeRemovalInfoRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetDelegateStakeRemovalInfoRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		l = len(x.Delegator)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Reputer)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetDelegateStakeRemovalInfoRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Reputer) > 0 {
			i -= len(x.Reputer)
			copy(dAtA[i:], x.Reputer)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Reputer)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.Delegator) > 0 {
			i -= len(x.Delegator)
			copy(dAtA[i:], x.Delegator)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Delegator)))
			i--
			dAtA[i] = 0x12
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetDelegateStakeRemovalInfoRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetDelegateStakeRemovalInfoRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetDelegateStakeRemovalInfoRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Delegator", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Delegator = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Reputer", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Reputer = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetDelegateStakeRemovalInfoResponse         protoreflect.MessageDescriptor
	fd_GetDelegateStakeRemovalInfoResponse_removal protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetDelegateStakeRemovalInfoResponse = File_emissions_v5_query_proto.Messages().ByName("GetDelegateStakeRemovalInfoResponse")
	fd_GetDelegateStakeRemovalInfoResponse_removal = md_GetDelegateStakeRemovalInfoResponse.Fields().ByName("removal")
}

var _ protoreflect.Message = (*fastReflection_GetDelegateStakeRemovalInfoResponse)(nil)

type fastReflection_GetDelegateStakeRemovalInfoResponse GetDelegateStakeRemovalInfoResponse

func (x *GetDelegateStakeRemovalInfoResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetDelegateStakeRemovalInfoResponse)(x)
}

func (x *GetDelegateStakeRemovalInfoResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetDelegateStakeRemovalInfoResponse_messageType fastReflection_GetDelegateStakeRemovalInfoResponse_messageType
var _ protoreflect.MessageType = fastReflection_GetDelegateStakeRemovalInfoResponse_messageType{}

type fastReflection_GetDelegateStakeRemovalInfoResponse_messageType struct{}

func (x fastReflection_GetDelegateStakeRemovalInfoResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetDelegateStakeRemovalInfoResponse)(nil)
}
func (x fastReflection_GetDelegateStakeRemovalInfoResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_GetDelegateStakeRemovalInfoResponse)
}
func (x fastReflection_GetDelegateStakeRemovalInfoResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetDelegateStakeRemovalInfoResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetDelegateStakeRemovalInfoResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_GetDelegateStakeRemovalInfoResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetDelegateStakeRemovalInfoResponse) Type() protoreflect.MessageType {
	return _fastReflection_GetDelegateStakeRemovalInfoResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetDelegateStakeRemovalInfoResponse) New() protoreflect.Message {
	return new(fastReflection_GetDelegateStakeRemovalInfoResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetDelegateStakeRemovalInfoResponse) Interface() protoreflect.ProtoMessage {
	return (*GetDelegateStakeRemovalInfoResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetDelegateStakeRemovalInfoResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Removal != nil {
		value := protoreflect.ValueOfMessage(x.Removal.ProtoReflect())
		if !f(fd_GetDelegateStakeRemovalInfoResponse_removal, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetDelegateStakeRemovalInfoResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetDelegateStakeRemovalInfoResponse.removal":
		return x.Removal != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetDelegateStakeRemovalInfoResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetDelegateStakeRemovalInfoResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetDelegateStakeRemovalInfoResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetDelegateStakeRemovalInfoResponse.removal":
		x.Removal = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetDelegateStakeRemovalInfoResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetDelegateStakeRemovalInfoResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetDelegateStakeRemovalInfoResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetDelegateStakeRemovalInfoResponse.removal":
		value := x.Removal
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetDelegateStakeRemovalInfoResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetDelegateStakeRemovalInfoResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetDelegateStakeRemovalInfoResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetDelegateStakeRemovalInfoResponse.removal":
		x.Removal = value.Message().Interface().(*v3.DelegateStakeRemovalInfo)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetDelegateStakeRemovalInfoResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetDelegateStakeRemovalInfoResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetDelegateStakeRemovalInfoResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetDelegateStakeRemovalInfoResponse.removal":
		if x.Removal == nil {
			x.Removal = new(v3.DelegateStakeRemovalInfo)
		}
		return protoreflect.ValueOfMessage(x.Removal.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetDelegateStakeRemovalInfoResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetDelegateStakeRemovalInfoResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetDelegateStakeRemovalInfoResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetDelegateStakeRemovalInfoResponse.removal":
		m := new(v3.DelegateStakeRemovalInfo)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetDelegateStakeRemovalInfoResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetDelegateStakeRemovalInfoResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetDelegateStakeRemovalInfoResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetDelegateStakeRemovalInfoResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetDelegateStakeRemovalInfoResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetDelegateStakeRemovalInfoResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetDelegateStakeRemovalInfoResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetDelegateStakeRemovalInfoResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetDelegateStakeRemovalInfoResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Removal != nil {
			l = options.Size(x.Removal)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetDelegateStakeRemovalInfoResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Removal != nil {
			encoded, err := options.Marshal(x.Removal)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetDelegateStakeRemovalInfoResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetDelegateStakeRemovalInfoResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetDelegateStakeRemovalInfoResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Removal", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Removal == nil {
					x.Removal = &v3.DelegateStakeRemovalInfo{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Removal); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetTopicLastWorkerCommitInfoRequest          protoreflect.MessageDescriptor
	fd_GetTopicLastWorkerCommitInfoRequest_topic_id protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetTopicLastWorkerCommitInfoRequest = File_emissions_v5_query_proto.Messages().ByName("GetTopicLastWorkerCommitInfoRequest")
	fd_GetTopicLastWorkerCommitInfoRequest_topic_id = md_GetTopicLastWorkerCommitInfoRequest.Fields().ByName("topic_id")
}

var _ protoreflect.Message = (*fastReflection_GetTopicLastWorkerCommitInfoRequest)(nil)

type fastReflection_GetTopicLastWorkerCommitInfoRequest GetTopicLastWorkerCommitInfoRequest

func (x *GetTopicLastWorkerCommitInfoRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetTopicLastWorkerCommitInfoRequest)(x)
}

func (x *GetTopicLastWorkerCommitInfoRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetTopicLastWorkerCommitInfoRequest_messageType fastReflection_GetTopicLastWorkerCommitInfoRequest_messageType
var _ protoreflect.MessageType = fastReflection_GetTopicLastWorkerCommitInfoRequest_messageType{}

type fastReflection_GetTopicLastWorkerCommitInfoRequest_messageType struct{}

func (x fastReflection_GetTopicLastWorkerCommitInfoRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetTopicLastWorkerCommitInfoRequest)(nil)
}
func (x fastReflection_GetTopicLastWorkerCommitInfoRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_GetTopicLastWorkerCommitInfoRequest)
}
func (x fastReflection_GetTopicLastWorkerCommitInfoRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetTopicLastWorkerCommitInfoRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetTopicLastWorkerCommitInfoRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_GetTopicLastWorkerCommitInfoRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetTopicLastWorkerCommitInfoRequest) Type() protoreflect.MessageType {
	return _fastReflection_GetTopicLastWorkerCommitInfoRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetTopicLastWorkerCommitInfoRequest) New() protoreflect.Message {
	return new(fastReflection_GetTopicLastWorkerCommitInfoRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetTopicLastWorkerCommitInfoRequest) Interface() protoreflect.ProtoMessage {
	return (*GetTopicLastWorkerCommitInfoRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetTopicLastWorkerCommitInfoRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_GetTopicLastWorkerCommitInfoRequest_topic_id, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetTopicLastWorkerCommitInfoRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetTopicLastWorkerCommitInfoRequest.topic_id":
		return x.TopicId != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetTopicLastWorkerCommitInfoRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetTopicLastWorkerCommitInfoRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetTopicLastWorkerCommitInfoRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetTopicLastWorkerCommitInfoRequest.topic_id":
		x.TopicId = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetTopicLastWorkerCommitInfoRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetTopicLastWorkerCommitInfoRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetTopicLastWorkerCommitInfoRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetTopicLastWorkerCommitInfoRequest.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetTopicLastWorkerCommitInfoRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetTopicLastWorkerCommitInfoRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetTopicLastWorkerCommitInfoRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetTopicLastWorkerCommitInfoRequest.topic_id":
		x.TopicId = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetTopicLastWorkerCommitInfoRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetTopicLastWorkerCommitInfoRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetTopicLastWorkerCommitInfoRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetTopicLastWorkerCommitInfoRequest.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.GetTopicLastWorkerCommitInfoRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetTopicLastWorkerCommitInfoRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetTopicLastWorkerCommitInfoRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetTopicLastWorkerCommitInfoRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetTopicLastWorkerCommitInfoRequest.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetTopicLastWorkerCommitInfoRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetTopicLastWorkerCommitInfoRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetTopicLastWorkerCommitInfoRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetTopicLastWorkerCommitInfoRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetTopicLastWorkerCommitInfoRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetTopicLastWorkerCommitInfoRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetTopicLastWorkerCommitInfoRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetTopicLastWorkerCommitInfoRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetTopicLastWorkerCommitInfoRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetTopicLastWorkerCommitInfoRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetTopicLastWorkerCommitInfoRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetTopicLastWorkerCommitInfoRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetTopicLastWorkerCommitInfoRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetTopicLastWorkerCommitInfoResponse             protoreflect.MessageDescriptor
	fd_GetTopicLastWorkerCommitInfoResponse_last_commit protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetTopicLastWorkerCommitInfoResponse = File_emissions_v5_query_proto.Messages().ByName("GetTopicLastWorkerCommitInfoResponse")
	fd_GetTopicLastWorkerCommitInfoResponse_last_commit = md_GetTopicLastWorkerCommitInfoResponse.Fields().ByName("last_commit")
}

var _ protoreflect.Message = (*fastReflection_GetTopicLastWorkerCommitInfoResponse)(nil)

type fastReflection_GetTopicLastWorkerCommitInfoResponse GetTopicLastWorkerCommitInfoResponse

func (x *GetTopicLastWorkerCommitInfoResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetTopicLastWorkerCommitInfoResponse)(x)
}

func (x *GetTopicLastWorkerCommitInfoResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetTopicLastWorkerCommitInfoResponse_messageType fastReflection_GetTopicLastWorkerCommitInfoResponse_messageType
var _ protoreflect.MessageType = fastReflection_GetTopicLastWorkerCommitInfoResponse_messageType{}

type fastReflection_GetTopicLastWorkerCommitInfoResponse_messageType struct{}

func (x fastReflection_GetTopicLastWorkerCommitInfoResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetTopicLastWorkerCommitInfoResponse)(nil)
}
func (x fastReflection_GetTopicLastWorkerCommitInfoResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_GetTopicLastWorkerCommitInfoResponse)
}
func (x fastReflection_GetTopicLastWorkerCommitInfoResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetTopicLastWorkerCommitInfoResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetTopicLastWorkerCommitInfoResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_GetTopicLastWorkerCommitInfoResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetTopicLastWorkerCommitInfoResponse) Type() protoreflect.MessageType {
	return _fastReflection_GetTopicLastWorkerCommitInfoResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetTopicLastWorkerCommitInfoResponse) New() protoreflect.Message {
	return new(fastReflection_GetTopicLastWorkerCommitInfoResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetTopicLastWorkerCommitInfoResponse) Interface() protoreflect.ProtoMessage {
	return (*GetTopicLastWorkerCommitInfoResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetTopicLastWorkerCommitInfoResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.LastCommit != nil {
		value := protoreflect.ValueOfMessage(x.LastCommit.ProtoReflect())
		if !f(fd_GetTopicLastWorkerCommitInfoResponse_last_commit, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetTopicLastWorkerCommitInfoResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetTopicLastWorkerCommitInfoResponse.last_commit":
		return x.LastCommit != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetTopicLastWorkerCommitInfoResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetTopicLastWorkerCommitInfoResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetTopicLastWorkerCommitInfoResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetTopicLastWorkerCommitInfoResponse.last_commit":
		x.LastCommit = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetTopicLastWorkerCommitInfoResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetTopicLastWorkerCommitInfoResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetTopicLastWorkerCommitInfoResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetTopicLastWorkerCommitInfoResponse.last_commit":
		value := x.LastCommit
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetTopicLastWorkerCommitInfoResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetTopicLastWorkerCommitInfoResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetTopicLastWorkerCommitInfoResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetTopicLastWorkerCommitInfoResponse.last_commit":
		x.LastCommit = value.Message().Interface().(*v3.TimestampedActorNonce)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetTopicLastWorkerCommitInfoResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetTopicLastWorkerCommitInfoResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetTopicLastWorkerCommitInfoResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetTopicLastWorkerCommitInfoResponse.last_commit":
		if x.LastCommit == nil {
			x.LastCommit = new(v3.TimestampedActorNonce)
		}
		return protoreflect.ValueOfMessage(x.LastCommit.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetTopicLastWorkerCommitInfoResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetTopicLastWorkerCommitInfoResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetTopicLastWorkerCommitInfoResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetTopicLastWorkerCommitInfoResponse.last_commit":
		m := new(v3.TimestampedActorNonce)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetTopicLastWorkerCommitInfoResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetTopicLastWorkerCommitInfoResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetTopicLastWorkerCommitInfoResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetTopicLastWorkerCommitInfoResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetTopicLastWorkerCommitInfoResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetTopicLastWorkerCommitInfoResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetTopicLastWorkerCommitInfoResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetTopicLastWorkerCommitInfoResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetTopicLastWorkerCommitInfoResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.LastCommit != nil {
			l = options.Size(x.LastCommit)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetTopicLastWorkerCommitInfoResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.LastCommit != nil {
			encoded, err := options.Marshal(x.LastCommit)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetTopicLastWorkerCommitInfoResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetTopicLastWorkerCommitInfoResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetTopicLastWorkerCommitInfoResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field LastCommit", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.LastCommit == nil {
					x.LastCommit = &v3.TimestampedActorNonce{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.LastCommit); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetTopicLastReputerCommitInfoRequest          protoreflect.MessageDescriptor
	fd_GetTopicLastReputerCommitInfoRequest_topic_id protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetTopicLastReputerCommitInfoRequest = File_emissions_v5_query_proto.Messages().ByName("GetTopicLastReputerCommitInfoRequest")
	fd_GetTopicLastReputerCommitInfoRequest_topic_id = md_GetTopicLastReputerCommitInfoRequest.Fields().ByName("topic_id")
}

var _ protoreflect.Message = (*fastReflection_GetTopicLastReputerCommitInfoRequest)(nil)

type fastReflection_GetTopicLastReputerCommitInfoRequest GetTopicLastReputerCommitInfoRequest

func (x *GetTopicLastReputerCommitInfoRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetTopicLastReputerCommitInfoRequest)(x)
}

func (x *GetTopicLastReputerCommitInfoRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetTopicLastReputerCommitInfoRequest_messageType fastReflection_GetTopicLastReputerCommitInfoRequest_messageType
var _ protoreflect.MessageType = fastReflection_GetTopicLastReputerCommitInfoRequest_messageType{}

type fastReflection_GetTopicLastReputerCommitInfoRequest_messageType struct{}

func (x fastReflection_GetTopicLastReputerCommitInfoRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetTopicLastReputerCommitInfoRequest)(nil)
}
func (x fastReflection_GetTopicLastReputerCommitInfoRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_GetTopicLastReputerCommitInfoRequest)
}
func (x fastReflection_GetTopicLastReputerCommitInfoRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetTopicLastReputerCommitInfoRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetTopicLastReputerCommitInfoRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_GetTopicLastReputerCommitInfoRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetTopicLastReputerCommitInfoRequest) Type() protoreflect.MessageType {
	return _fastReflection_GetTopicLastReputerCommitInfoRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetTopicLastReputerCommitInfoRequest) New() protoreflect.Message {
	return new(fastReflection_GetTopicLastReputerCommitInfoRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetTopicLastReputerCommitInfoRequest) Interface() protoreflect.ProtoMessage {
	return (*GetTopicLastReputerCommitInfoRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetTopicLastReputerCommitInfoRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_GetTopicLastReputerCommitInfoRequest_topic_id, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetTopicLastReputerCommitInfoRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetTopicLastReputerCommitInfoRequest.topic_id":
		return x.TopicId != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetTopicLastReputerCommitInfoRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetTopicLastReputerCommitInfoRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetTopicLastReputerCommitInfoRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetTopicLastReputerCommitInfoRequest.topic_id":
		x.TopicId = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetTopicLastReputerCommitInfoRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetTopicLastReputerCommitInfoRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetTopicLastReputerCommitInfoRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetTopicLastReputerCommitInfoRequest.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetTopicLastReputerCommitInfoRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetTopicLastReputerCommitInfoRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetTopicLastReputerCommitInfoRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetTopicLastReputerCommitInfoRequest.topic_id":
		x.TopicId = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetTopicLastReputerCommitInfoRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetTopicLastReputerCommitInfoRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetTopicLastReputerCommitInfoRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetTopicLastReputerCommitInfoRequest.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.GetTopicLastReputerCommitInfoRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetTopicLastReputerCommitInfoRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetTopicLastReputerCommitInfoRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetTopicLastReputerCommitInfoRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetTopicLastReputerCommitInfoRequest.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetTopicLastReputerCommitInfoRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetTopicLastReputerCommitInfoRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetTopicLastReputerCommitInfoRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetTopicLastReputerCommitInfoRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetTopicLastReputerCommitInfoRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetTopicLastReputerCommitInfoRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetTopicLastReputerCommitInfoRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetTopicLastReputerCommitInfoRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetTopicLastReputerCommitInfoRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetTopicLastReputerCommitInfoRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetTopicLastReputerCommitInfoRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetTopicLastReputerCommitInfoRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetTopicLastReputerCommitInfoRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetTopicLastReputerCommitInfoResponse             protoreflect.MessageDescriptor
	fd_GetTopicLastReputerCommitInfoResponse_last_commit protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetTopicLastReputerCommitInfoResponse = File_emissions_v5_query_proto.Messages().ByName("GetTopicLastReputerCommitInfoResponse")
	fd_GetTopicLastReputerCommitInfoResponse_last_commit = md_GetTopicLastReputerCommitInfoResponse.Fields().ByName("last_commit")
}

var _ protoreflect.Message = (*fastReflection_GetTopicLastReputerCommitInfoResponse)(nil)

type fastReflection_GetTopicLastReputerCommitInfoResponse GetTopicLastReputerCommitInfoResponse

func (x *GetTopicLastReputerCommitInfoResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetTopicLastReputerCommitInfoResponse)(x)
}

func (x *GetTopicLastReputerCommitInfoResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetTopicLastReputerCommitInfoResponse_messageType fastReflection_GetTopicLastReputerCommitInfoResponse_messageType
var _ protoreflect.MessageType = fastReflection_GetTopicLastReputerCommitInfoResponse_messageType{}

type fastReflection_GetTopicLastReputerCommitInfoResponse_messageType struct{}

func (x fastReflection_GetTopicLastReputerCommitInfoResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetTopicLastReputerCommitInfoResponse)(nil)
}
func (x fastReflection_GetTopicLastReputerCommitInfoResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_GetTopicLastReputerCommitInfoResponse)
}
func (x fastReflection_GetTopicLastReputerCommitInfoResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetTopicLastReputerCommitInfoResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetTopicLastReputerCommitInfoResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_GetTopicLastReputerCommitInfoResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetTopicLastReputerCommitInfoResponse) Type() protoreflect.MessageType {
	return _fastReflection_GetTopicLastReputerCommitInfoResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetTopicLastReputerCommitInfoResponse) New() protoreflect.Message {
	return new(fastReflection_GetTopicLastReputerCommitInfoResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetTopicLastReputerCommitInfoResponse) Interface() protoreflect.ProtoMessage {
	return (*GetTopicLastReputerCommitInfoResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetTopicLastReputerCommitInfoResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.LastCommit != nil {
		value := protoreflect.ValueOfMessage(x.LastCommit.ProtoReflect())
		if !f(fd_GetTopicLastReputerCommitInfoResponse_last_commit, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetTopicLastReputerCommitInfoResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetTopicLastReputerCommitInfoResponse.last_commit":
		return x.LastCommit != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetTopicLastReputerCommitInfoResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetTopicLastReputerCommitInfoResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetTopicLastReputerCommitInfoResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetTopicLastReputerCommitInfoResponse.last_commit":
		x.LastCommit = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetTopicLastReputerCommitInfoResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetTopicLastReputerCommitInfoResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetTopicLastReputerCommitInfoResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetTopicLastReputerCommitInfoResponse.last_commit":
		value := x.LastCommit
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetTopicLastReputerCommitInfoResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetTopicLastReputerCommitInfoResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetTopicLastReputerCommitInfoResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetTopicLastReputerCommitInfoResponse.last_commit":
		x.LastCommit = value.Message().Interface().(*v3.TimestampedActorNonce)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetTopicLastReputerCommitInfoResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetTopicLastReputerCommitInfoResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetTopicLastReputerCommitInfoResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetTopicLastReputerCommitInfoResponse.last_commit":
		if x.LastCommit == nil {
			x.LastCommit = new(v3.TimestampedActorNonce)
		}
		return protoreflect.ValueOfMessage(x.LastCommit.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetTopicLastReputerCommitInfoResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetTopicLastReputerCommitInfoResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetTopicLastReputerCommitInfoResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetTopicLastReputerCommitInfoResponse.last_commit":
		m := new(v3.TimestampedActorNonce)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetTopicLastReputerCommitInfoResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetTopicLastReputerCommitInfoResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetTopicLastReputerCommitInfoResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetTopicLastReputerCommitInfoResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetTopicLastReputerCommitInfoResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetTopicLastReputerCommitInfoResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetTopicLastReputerCommitInfoResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetTopicLastReputerCommitInfoResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetTopicLastReputerCommitInfoResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.LastCommit != nil {
			l = options.Size(x.LastCommit)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetTopicLastReputerCommitInfoResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.LastCommit != nil {
			encoded, err := options.Marshal(x.LastCommit)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetTopicLastReputerCommitInfoResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetTopicLastReputerCommitInfoResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetTopicLastReputerCommitInfoResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field LastCommit", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.LastCommit == nil {
					x.LastCommit = &v3.TimestampedActorNonce{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.LastCommit); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetTopicRewardNonceRequest          protoreflect.MessageDescriptor
	fd_GetTopicRewardNonceRequest_topic_id protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetTopicRewardNonceRequest = File_emissions_v5_query_proto.Messages().ByName("GetTopicRewardNonceRequest")
	fd_GetTopicRewardNonceRequest_topic_id = md_GetTopicRewardNonceRequest.Fields().ByName("topic_id")
}

var _ protoreflect.Message = (*fastReflection_GetTopicRewardNonceRequest)(nil)

type fastReflection_GetTopicRewardNonceRequest GetTopicRewardNonceRequest

func (x *GetTopicRewardNonceRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetTopicRewardNonceRequest)(x)
}

func (x *GetTopicRewardNonceRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetTopicRewardNonceRequest_messageType fastReflection_GetTopicRewardNonceRequest_messageType
var _ protoreflect.MessageType = fastReflection_GetTopicRewardNonceRequest_messageType{}

type fastReflection_GetTopicRewardNonceRequest_messageType struct{}

func (x fastReflection_GetTopicRewardNonceRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetTopicRewardNonceRequest)(nil)
}
func (x fastReflection_GetTopicRewardNonceRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_GetTopicRewardNonceRequest)
}
func (x fastReflection_GetTopicRewardNonceRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetTopicRewardNonceRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetTopicRewardNonceRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_GetTopicRewardNonceRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetTopicRewardNonceRequest) Type() protoreflect.MessageType {
	return _fastReflection_GetTopicRewardNonceRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetTopicRewardNonceRequest) New() protoreflect.Message {
	return new(fastReflection_GetTopicRewardNonceRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetTopicRewardNonceRequest) Interface() protoreflect.ProtoMessage {
	return (*GetTopicRewardNonceRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetTopicRewardNonceRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_GetTopicRewardNonceRequest_topic_id, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetTopicRewardNonceRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetTopicRewardNonceRequest.topic_id":
		return x.TopicId != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetTopicRewardNonceRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetTopicRewardNonceRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetTopicRewardNonceRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetTopicRewardNonceRequest.topic_id":
		x.TopicId = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetTopicRewardNonceRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetTopicRewardNonceRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetTopicRewardNonceRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetTopicRewardNonceRequest.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetTopicRewardNonceRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetTopicRewardNonceRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetTopicRewardNonceRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetTopicRewardNonceRequest.topic_id":
		x.TopicId = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetTopicRewardNonceRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetTopicRewardNonceRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetTopicRewardNonceRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetTopicRewardNonceRequest.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.GetTopicRewardNonceRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetTopicRewardNonceRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetTopicRewardNonceRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetTopicRewardNonceRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetTopicRewardNonceRequest.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetTopicRewardNonceRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetTopicRewardNonceRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetTopicRewardNonceRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetTopicRewardNonceRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetTopicRewardNonceRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetTopicRewardNonceRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetTopicRewardNonceRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetTopicRewardNonceRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetTopicRewardNonceRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetTopicRewardNonceRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetTopicRewardNonceRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetTopicRewardNonceRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetTopicRewardNonceRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetTopicRewardNonceResponse       protoreflect.MessageDescriptor
	fd_GetTopicRewardNonceResponse_nonce protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetTopicRewardNonceResponse = File_emissions_v5_query_proto.Messages().ByName("GetTopicRewardNonceResponse")
	fd_GetTopicRewardNonceResponse_nonce = md_GetTopicRewardNonceResponse.Fields().ByName("nonce")
}

var _ protoreflect.Message = (*fastReflection_GetTopicRewardNonceResponse)(nil)

type fastReflection_GetTopicRewardNonceResponse GetTopicRewardNonceResponse

func (x *GetTopicRewardNonceResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetTopicRewardNonceResponse)(x)
}

func (x *GetTopicRewardNonceResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetTopicRewardNonceResponse_messageType fastReflection_GetTopicRewardNonceResponse_messageType
var _ protoreflect.MessageType = fastReflection_GetTopicRewardNonceResponse_messageType{}

type fastReflection_GetTopicRewardNonceResponse_messageType struct{}

func (x fastReflection_GetTopicRewardNonceResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetTopicRewardNonceResponse)(nil)
}
func (x fastReflection_GetTopicRewardNonceResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_GetTopicRewardNonceResponse)
}
func (x fastReflection_GetTopicRewardNonceResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetTopicRewardNonceResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetTopicRewardNonceResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_GetTopicRewardNonceResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetTopicRewardNonceResponse) Type() protoreflect.MessageType {
	return _fastReflection_GetTopicRewardNonceResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetTopicRewardNonceResponse) New() protoreflect.Message {
	return new(fastReflection_GetTopicRewardNonceResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetTopicRewardNonceResponse) Interface() protoreflect.ProtoMessage {
	return (*GetTopicRewardNonceResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetTopicRewardNonceResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Nonce != int64(0) {
		value := protoreflect.ValueOfInt64(x.Nonce)
		if !f(fd_GetTopicRewardNonceResponse_nonce, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetTopicRewardNonceResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetTopicRewardNonceResponse.nonce":
		return x.Nonce != int64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetTopicRewardNonceResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetTopicRewardNonceResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetTopicRewardNonceResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetTopicRewardNonceResponse.nonce":
		x.Nonce = int64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetTopicRewardNonceResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetTopicRewardNonceResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetTopicRewardNonceResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetTopicRewardNonceResponse.nonce":
		value := x.Nonce
		return protoreflect.ValueOfInt64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetTopicRewardNonceResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetTopicRewardNonceResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetTopicRewardNonceResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetTopicRewardNonceResponse.nonce":
		x.Nonce = value.Int()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetTopicRewardNonceResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetTopicRewardNonceResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetTopicRewardNonceResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetTopicRewardNonceResponse.nonce":
		panic(fmt.Errorf("field nonce of message emissions.v5.GetTopicRewardNonceResponse is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetTopicRewardNonceResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetTopicRewardNonceResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetTopicRewardNonceResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetTopicRewardNonceResponse.nonce":
		return protoreflect.ValueOfInt64(int64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetTopicRewardNonceResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetTopicRewardNonceResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetTopicRewardNonceResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetTopicRewardNonceResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetTopicRewardNonceResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetTopicRewardNonceResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetTopicRewardNonceResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetTopicRewardNonceResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetTopicRewardNonceResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Nonce != 0 {
			n += 1 + runtime.Sov(uint64(x.Nonce))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetTopicRewardNonceResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Nonce != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Nonce))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetTopicRewardNonceResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetTopicRewardNonceResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetTopicRewardNonceResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Nonce", wireType)
				}
				x.Nonce = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Nonce |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetReputerLossBundlesAtBlockRequest              protoreflect.MessageDescriptor
	fd_GetReputerLossBundlesAtBlockRequest_topic_id     protoreflect.FieldDescriptor
	fd_GetReputerLossBundlesAtBlockRequest_block_height protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetReputerLossBundlesAtBlockRequest = File_emissions_v5_query_proto.Messages().ByName("GetReputerLossBundlesAtBlockRequest")
	fd_GetReputerLossBundlesAtBlockRequest_topic_id = md_GetReputerLossBundlesAtBlockRequest.Fields().ByName("topic_id")
	fd_GetReputerLossBundlesAtBlockRequest_block_height = md_GetReputerLossBundlesAtBlockRequest.Fields().ByName("block_height")
}

var _ protoreflect.Message = (*fastReflection_GetReputerLossBundlesAtBlockRequest)(nil)

type fastReflection_GetReputerLossBundlesAtBlockRequest GetReputerLossBundlesAtBlockRequest

func (x *GetReputerLossBundlesAtBlockRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetReputerLossBundlesAtBlockRequest)(x)
}

func (x *GetReputerLossBundlesAtBlockRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetReputerLossBundlesAtBlockRequest_messageType fastReflection_GetReputerLossBundlesAtBlockRequest_messageType
var _ protoreflect.MessageType = fastReflection_GetReputerLossBundlesAtBlockRequest_messageType{}

type fastReflection_GetReputerLossBundlesAtBlockRequest_messageType struct{}

func (x fastReflection_GetReputerLossBundlesAtBlockRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetReputerLossBundlesAtBlockRequest)(nil)
}
func (x fastReflection_GetReputerLossBundlesAtBlockRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_GetReputerLossBundlesAtBlockRequest)
}
func (x fastReflection_GetReputerLossBundlesAtBlockRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetReputerLossBundlesAtBlockRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetReputerLossBundlesAtBlockRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_GetReputerLossBundlesAtBlockRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetReputerLossBundlesAtBlockRequest) Type() protoreflect.MessageType {
	return _fastReflection_GetReputerLossBundlesAtBlockRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetReputerLossBundlesAtBlockRequest) New() protoreflect.Message {
	return new(fastReflection_GetReputerLossBundlesAtBlockRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetReputerLossBundlesAtBlockRequest) Interface() protoreflect.ProtoMessage {
	return (*GetReputerLossBundlesAtBlockRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetReputerLossBundlesAtBlockRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_GetReputerLossBundlesAtBlockRequest_topic_id, value) {
			return
		}
	}
	if x.BlockHeight != int64(0) {
		value := protoreflect.ValueOfInt64(x.BlockHeight)
		if !f(fd_GetReputerLossBundlesAtBlockRequest_block_height, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetReputerLossBundlesAtBlockRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetReputerLossBundlesAtBlockRequest.topic_id":
		return x.TopicId != uint64(0)
	case "emissions.v5.GetReputerLossBundlesAtBlockRequest.block_height":
		return x.BlockHeight != int64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetReputerLossBundlesAtBlockRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetReputerLossBundlesAtBlockRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetReputerLossBundlesAtBlockRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetReputerLossBundlesAtBlockRequest.topic_id":
		x.TopicId = uint64(0)
	case "emissions.v5.GetReputerLossBundlesAtBlockRequest.block_height":
		x.BlockHeight = int64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetReputerLossBundlesAtBlockRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetReputerLossBundlesAtBlockRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetReputerLossBundlesAtBlockRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetReputerLossBundlesAtBlockRequest.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	case "emissions.v5.GetReputerLossBundlesAtBlockRequest.block_height":
		value := x.BlockHeight
		return protoreflect.ValueOfInt64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetReputerLossBundlesAtBlockRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetReputerLossBundlesAtBlockRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetReputerLossBundlesAtBlockRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetReputerLossBundlesAtBlockRequest.topic_id":
		x.TopicId = value.Uint()
	case "emissions.v5.GetReputerLossBundlesAtBlockRequest.block_height":
		x.BlockHeight = value.Int()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetReputerLossBundlesAtBlockRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetReputerLossBundlesAtBlockRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetReputerLossBundlesAtBlockRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetReputerLossBundlesAtBlockRequest.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.GetReputerLossBundlesAtBlockRequest is not mutable"))
	case "emissions.v5.GetReputerLossBundlesAtBlockRequest.block_height":
		panic(fmt.Errorf("field block_height of message emissions.v5.GetReputerLossBundlesAtBlockRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetReputerLossBundlesAtBlockRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetReputerLossBundlesAtBlockRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetReputerLossBundlesAtBlockRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetReputerLossBundlesAtBlockRequest.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "emissions.v5.GetReputerLossBundlesAtBlockRequest.block_height":
		return protoreflect.ValueOfInt64(int64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetReputerLossBundlesAtBlockRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetReputerLossBundlesAtBlockRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetReputerLossBundlesAtBlockRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetReputerLossBundlesAtBlockRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetReputerLossBundlesAtBlockRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetReputerLossBundlesAtBlockRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetReputerLossBundlesAtBlockRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetReputerLossBundlesAtBlockRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetReputerLossBundlesAtBlockRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		if x.BlockHeight != 0 {
			n += 1 + runtime.Sov(uint64(x.BlockHeight))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetReputerLossBundlesAtBlockRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.BlockHeight != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.BlockHeight))
			i--
			dAtA[i] = 0x10
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetReputerLossBundlesAtBlockRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetReputerLossBundlesAtBlockRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetReputerLossBundlesAtBlockRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BlockHeight", wireType)
				}
				x.BlockHeight = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.BlockHeight |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetReputerLossBundlesAtBlockResponse              protoreflect.MessageDescriptor
	fd_GetReputerLossBundlesAtBlockResponse_loss_bundles protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetReputerLossBundlesAtBlockResponse = File_emissions_v5_query_proto.Messages().ByName("GetReputerLossBundlesAtBlockResponse")
	fd_GetReputerLossBundlesAtBlockResponse_loss_bundles = md_GetReputerLossBundlesAtBlockResponse.Fields().ByName("loss_bundles")
}

var _ protoreflect.Message = (*fastReflection_GetReputerLossBundlesAtBlockResponse)(nil)

type fastReflection_GetReputerLossBundlesAtBlockResponse GetReputerLossBundlesAtBlockResponse

func (x *GetReputerLossBundlesAtBlockResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetReputerLossBundlesAtBlockResponse)(x)
}

func (x *GetReputerLossBundlesAtBlockResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetReputerLossBundlesAtBlockResponse_messageType fastReflection_GetReputerLossBundlesAtBlockResponse_messageType
var _ protoreflect.MessageType = fastReflection_GetReputerLossBundlesAtBlockResponse_messageType{}

type fastReflection_GetReputerLossBundlesAtBlockResponse_messageType struct{}

func (x fastReflection_GetReputerLossBundlesAtBlockResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetReputerLossBundlesAtBlockResponse)(nil)
}
func (x fastReflection_GetReputerLossBundlesAtBlockResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_GetReputerLossBundlesAtBlockResponse)
}
func (x fastReflection_GetReputerLossBundlesAtBlockResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetReputerLossBundlesAtBlockResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetReputerLossBundlesAtBlockResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_GetReputerLossBundlesAtBlockResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetReputerLossBundlesAtBlockResponse) Type() protoreflect.MessageType {
	return _fastReflection_GetReputerLossBundlesAtBlockResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetReputerLossBundlesAtBlockResponse) New() protoreflect.Message {
	return new(fastReflection_GetReputerLossBundlesAtBlockResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetReputerLossBundlesAtBlockResponse) Interface() protoreflect.ProtoMessage {
	return (*GetReputerLossBundlesAtBlockResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetReputerLossBundlesAtBlockResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.LossBundles != nil {
		value := protoreflect.ValueOfMessage(x.LossBundles.ProtoReflect())
		if !f(fd_GetReputerLossBundlesAtBlockResponse_loss_bundles, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetReputerLossBundlesAtBlockResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetReputerLossBundlesAtBlockResponse.loss_bundles":
		return x.LossBundles != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetReputerLossBundlesAtBlockResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetReputerLossBundlesAtBlockResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetReputerLossBundlesAtBlockResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetReputerLossBundlesAtBlockResponse.loss_bundles":
		x.LossBundles = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetReputerLossBundlesAtBlockResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetReputerLossBundlesAtBlockResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetReputerLossBundlesAtBlockResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetReputerLossBundlesAtBlockResponse.loss_bundles":
		value := x.LossBundles
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetReputerLossBundlesAtBlockResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetReputerLossBundlesAtBlockResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetReputerLossBundlesAtBlockResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetReputerLossBundlesAtBlockResponse.loss_bundles":
		x.LossBundles = value.Message().Interface().(*v3.ReputerValueBundles)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetReputerLossBundlesAtBlockResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetReputerLossBundlesAtBlockResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetReputerLossBundlesAtBlockResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetReputerLossBundlesAtBlockResponse.loss_bundles":
		if x.LossBundles == nil {
			x.LossBundles = new(v3.ReputerValueBundles)
		}
		return protoreflect.ValueOfMessage(x.LossBundles.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetReputerLossBundlesAtBlockResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetReputerLossBundlesAtBlockResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetReputerLossBundlesAtBlockResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetReputerLossBundlesAtBlockResponse.loss_bundles":
		m := new(v3.ReputerValueBundles)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetReputerLossBundlesAtBlockResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetReputerLossBundlesAtBlockResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetReputerLossBundlesAtBlockResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetReputerLossBundlesAtBlockResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetReputerLossBundlesAtBlockResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetReputerLossBundlesAtBlockResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetReputerLossBundlesAtBlockResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetReputerLossBundlesAtBlockResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetReputerLossBundlesAtBlockResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.LossBundles != nil {
			l = options.Size(x.LossBundles)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetReputerLossBundlesAtBlockResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.LossBundles != nil {
			encoded, err := options.Marshal(x.LossBundles)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetReputerLossBundlesAtBlockResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetReputerLossBundlesAtBlockResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetReputerLossBundlesAtBlockResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field LossBundles", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.LossBundles == nil {
					x.LossBundles = &v3.ReputerValueBundles{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.LossBundles); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetStakeReputerAuthorityRequest          protoreflect.MessageDescriptor
	fd_GetStakeReputerAuthorityRequest_topic_id protoreflect.FieldDescriptor
	fd_GetStakeReputerAuthorityRequest_reputer  protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetStakeReputerAuthorityRequest = File_emissions_v5_query_proto.Messages().ByName("GetStakeReputerAuthorityRequest")
	fd_GetStakeReputerAuthorityRequest_topic_id = md_GetStakeReputerAuthorityRequest.Fields().ByName("topic_id")
	fd_GetStakeReputerAuthorityRequest_reputer = md_GetStakeReputerAuthorityRequest.Fields().ByName("reputer")
}

var _ protoreflect.Message = (*fastReflection_GetStakeReputerAuthorityRequest)(nil)

type fastReflection_GetStakeReputerAuthorityRequest GetStakeReputerAuthorityRequest

func (x *GetStakeReputerAuthorityRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetStakeReputerAuthorityRequest)(x)
}

func (x *GetStakeReputerAuthorityRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetStakeReputerAuthorityRequest_messageType fastReflection_GetStakeReputerAuthorityRequest_messageType
var _ protoreflect.MessageType = fastReflection_GetStakeReputerAuthorityRequest_messageType{}

type fastReflection_GetStakeReputerAuthorityRequest_messageType struct{}

func (x fastReflection_GetStakeReputerAuthorityRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetStakeReputerAuthorityRequest)(nil)
}
func (x fastReflection_GetStakeReputerAuthorityRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_GetStakeReputerAuthorityRequest)
}
func (x fastReflection_GetStakeReputerAuthorityRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetStakeReputerAuthorityRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetStakeReputerAuthorityRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_GetStakeReputerAuthorityRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetStakeReputerAuthorityRequest) Type() protoreflect.MessageType {
	return _fastReflection_GetStakeReputerAuthorityRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetStakeReputerAuthorityRequest) New() protoreflect.Message {
	return new(fastReflection_GetStakeReputerAuthorityRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetStakeReputerAuthorityRequest) Interface() protoreflect.ProtoMessage {
	return (*GetStakeReputerAuthorityRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetStakeReputerAuthorityRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_GetStakeReputerAuthorityRequest_topic_id, value) {
			return
		}
	}
	if x.Reputer != "" {
		value := protoreflect.ValueOfString(x.Reputer)
		if !f(fd_GetStakeReputerAuthorityRequest_reputer, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetStakeReputerAuthorityRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetStakeReputerAuthorityRequest.topic_id":
		return x.TopicId != uint64(0)
	case "emissions.v5.GetStakeReputerAuthorityRequest.reputer":
		return x.Reputer != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetStakeReputerAuthorityRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetStakeReputerAuthorityRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetStakeReputerAuthorityRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetStakeReputerAuthorityRequest.topic_id":
		x.TopicId = uint64(0)
	case "emissions.v5.GetStakeReputerAuthorityRequest.reputer":
		x.Reputer = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetStakeReputerAuthorityRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetStakeReputerAuthorityRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetStakeReputerAuthorityRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetStakeReputerAuthorityRequest.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	case "emissions.v5.GetStakeReputerAuthorityRequest.reputer":
		value := x.Reputer
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetStakeReputerAuthorityRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetStakeReputerAuthorityRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetStakeReputerAuthorityRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetStakeReputerAuthorityRequest.topic_id":
		x.TopicId = value.Uint()
	case "emissions.v5.GetStakeReputerAuthorityRequest.reputer":
		x.Reputer = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetStakeReputerAuthorityRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetStakeReputerAuthorityRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetStakeReputerAuthorityRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetStakeReputerAuthorityRequest.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.GetStakeReputerAuthorityRequest is not mutable"))
	case "emissions.v5.GetStakeReputerAuthorityRequest.reputer":
		panic(fmt.Errorf("field reputer of message emissions.v5.GetStakeReputerAuthorityRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetStakeReputerAuthorityRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetStakeReputerAuthorityRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetStakeReputerAuthorityRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetStakeReputerAuthorityRequest.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "emissions.v5.GetStakeReputerAuthorityRequest.reputer":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetStakeReputerAuthorityRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetStakeReputerAuthorityRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetStakeReputerAuthorityRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetStakeReputerAuthorityRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetStakeReputerAuthorityRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetStakeReputerAuthorityRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetStakeReputerAuthorityRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetStakeReputerAuthorityRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetStakeReputerAuthorityRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		l = len(x.Reputer)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetStakeReputerAuthorityRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Reputer) > 0 {
			i -= len(x.Reputer)
			copy(dAtA[i:], x.Reputer)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Reputer)))
			i--
			dAtA[i] = 0x12
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetStakeReputerAuthorityRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetStakeReputerAuthorityRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetStakeReputerAuthorityRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Reputer", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Reputer = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetStakeReputerAuthorityResponse           protoreflect.MessageDescriptor
	fd_GetStakeReputerAuthorityResponse_authority protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetStakeReputerAuthorityResponse = File_emissions_v5_query_proto.Messages().ByName("GetStakeReputerAuthorityResponse")
	fd_GetStakeReputerAuthorityResponse_authority = md_GetStakeReputerAuthorityResponse.Fields().ByName("authority")
}

var _ protoreflect.Message = (*fastReflection_GetStakeReputerAuthorityResponse)(nil)

type fastReflection_GetStakeReputerAuthorityResponse GetStakeReputerAuthorityResponse

func (x *GetStakeReputerAuthorityResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetStakeReputerAuthorityResponse)(x)
}

func (x *GetStakeReputerAuthorityResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetStakeReputerAuthorityResponse_messageType fastReflection_GetStakeReputerAuthorityResponse_messageType
var _ protoreflect.MessageType = fastReflection_GetStakeReputerAuthorityResponse_messageType{}

type fastReflection_GetStakeReputerAuthorityResponse_messageType struct{}

func (x fastReflection_GetStakeReputerAuthorityResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetStakeReputerAuthorityResponse)(nil)
}
func (x fastReflection_GetStakeReputerAuthorityResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_GetStakeReputerAuthorityResponse)
}
func (x fastReflection_GetStakeReputerAuthorityResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetStakeReputerAuthorityResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetStakeReputerAuthorityResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_GetStakeReputerAuthorityResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetStakeReputerAuthorityResponse) Type() protoreflect.MessageType {
	return _fastReflection_GetStakeReputerAuthorityResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetStakeReputerAuthorityResponse) New() protoreflect.Message {
	return new(fastReflection_GetStakeReputerAuthorityResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetStakeReputerAuthorityResponse) Interface() protoreflect.ProtoMessage {
	return (*GetStakeReputerAuthorityResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetStakeReputerAuthorityResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Authority != "" {
		value := protoreflect.ValueOfString(x.Authority)
		if !f(fd_GetStakeReputerAuthorityResponse_authority, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetStakeReputerAuthorityResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetStakeReputerAuthorityResponse.authority":
		return x.Authority != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetStakeReputerAuthorityResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetStakeReputerAuthorityResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetStakeReputerAuthorityResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetStakeReputerAuthorityResponse.authority":
		x.Authority = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetStakeReputerAuthorityResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetStakeReputerAuthorityResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetStakeReputerAuthorityResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetStakeReputerAuthorityResponse.authority":
		value := x.Authority
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetStakeReputerAuthorityResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetStakeReputerAuthorityResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetStakeReputerAuthorityResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetStakeReputerAuthorityResponse.authority":
		x.Authority = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetStakeReputerAuthorityResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetStakeReputerAuthorityResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetStakeReputerAuthorityResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetStakeReputerAuthorityResponse.authority":
		panic(fmt.Errorf("field authority of message emissions.v5.GetStakeReputerAuthorityResponse is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetStakeReputerAuthorityResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetStakeReputerAuthorityResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetStakeReputerAuthorityResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetStakeReputerAuthorityResponse.authority":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetStakeReputerAuthorityResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetStakeReputerAuthorityResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetStakeReputerAuthorityResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetStakeReputerAuthorityResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetStakeReputerAuthorityResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetStakeReputerAuthorityResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetStakeReputerAuthorityResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetStakeReputerAuthorityResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetStakeReputerAuthorityResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Authority)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetStakeReputerAuthorityResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Authority) > 0 {
			i -= len(x.Authority)
			copy(dAtA[i:], x.Authority)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Authority)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetStakeReputerAuthorityResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetStakeReputerAuthorityResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetStakeReputerAuthorityResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Authority", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Authority = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetDelegateStakePlacementRequest           protoreflect.MessageDescriptor
	fd_GetDelegateStakePlacementRequest_topic_id  protoreflect.FieldDescriptor
	fd_GetDelegateStakePlacementRequest_delegator protoreflect.FieldDescriptor
	fd_GetDelegateStakePlacementRequest_target    protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetDelegateStakePlacementRequest = File_emissions_v5_query_proto.Messages().ByName("GetDelegateStakePlacementRequest")
	fd_GetDelegateStakePlacementRequest_topic_id = md_GetDelegateStakePlacementRequest.Fields().ByName("topic_id")
	fd_GetDelegateStakePlacementRequest_delegator = md_GetDelegateStakePlacementRequest.Fields().ByName("delegator")
	fd_GetDelegateStakePlacementRequest_target = md_GetDelegateStakePlacementRequest.Fields().ByName("target")
}

var _ protoreflect.Message = (*fastReflection_GetDelegateStakePlacementRequest)(nil)

type fastReflection_GetDelegateStakePlacementRequest GetDelegateStakePlacementRequest

func (x *GetDelegateStakePlacementRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetDelegateStakePlacementRequest)(x)
}

func (x *GetDelegateStakePlacementRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetDelegateStakePlacementRequest_messageType fastReflection_GetDelegateStakePlacementRequest_messageType
var _ protoreflect.MessageType = fastReflection_GetDelegateStakePlacementRequest_messageType{}

type fastReflection_GetDelegateStakePlacementRequest_messageType struct{}

func (x fastReflection_GetDelegateStakePlacementRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetDelegateStakePlacementRequest)(nil)
}
func (x fastReflection_GetDelegateStakePlacementRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_GetDelegateStakePlacementRequest)
}
func (x fastReflection_GetDelegateStakePlacementRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetDelegateStakePlacementRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetDelegateStakePlacementRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_GetDelegateStakePlacementRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetDelegateStakePlacementRequest) Type() protoreflect.MessageType {
	return _fastReflection_GetDelegateStakePlacementRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetDelegateStakePlacementRequest) New() protoreflect.Message {
	return new(fastReflection_GetDelegateStakePlacementRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetDelegateStakePlacementRequest) Interface() protoreflect.ProtoMessage {
	return (*GetDelegateStakePlacementRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetDelegateStakePlacementRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_GetDelegateStakePlacementRequest_topic_id, value) {
			return
		}
	}
	if x.Delegator != "" {
		value := protoreflect.ValueOfString(x.Delegator)
		if !f(fd_GetDelegateStakePlacementRequest_delegator, value) {
			return
		}
	}
	if x.Target != "" {
		value := protoreflect.ValueOfString(x.Target)
		if !f(fd_GetDelegateStakePlacementRequest_target, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetDelegateStakePlacementRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetDelegateStakePlacementRequest.topic_id":
		return x.TopicId != uint64(0)
	case "emissions.v5.GetDelegateStakePlacementRequest.delegator":
		return x.Delegator != ""
	case "emissions.v5.GetDelegateStakePlacementRequest.target":
		return x.Target != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetDelegateStakePlacementRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetDelegateStakePlacementRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetDelegateStakePlacementRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetDelegateStakePlacementRequest.topic_id":
		x.TopicId = uint64(0)
	case "emissions.v5.GetDelegateStakePlacementRequest.delegator":
		x.Delegator = ""
	case "emissions.v5.GetDelegateStakePlacementRequest.target":
		x.Target = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetDelegateStakePlacementRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetDelegateStakePlacementRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetDelegateStakePlacementRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetDelegateStakePlacementRequest.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	case "emissions.v5.GetDelegateStakePlacementRequest.delegator":
		value := x.Delegator
		return protoreflect.ValueOfString(value)
	case "emissions.v5.GetDelegateStakePlacementRequest.target":
		value := x.Target
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetDelegateStakePlacementRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetDelegateStakePlacementRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetDelegateStakePlacementRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetDelegateStakePlacementRequest.topic_id":
		x.TopicId = value.Uint()
	case "emissions.v5.GetDelegateStakePlacementRequest.delegator":
		x.Delegator = value.Interface().(string)
	case "emissions.v5.GetDelegateStakePlacementRequest.target":
		x.Target = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetDelegateStakePlacementRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetDelegateStakePlacementRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetDelegateStakePlacementRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetDelegateStakePlacementRequest.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.GetDelegateStakePlacementRequest is not mutable"))
	case "emissions.v5.GetDelegateStakePlacementRequest.delegator":
		panic(fmt.Errorf("field delegator of message emissions.v5.GetDelegateStakePlacementRequest is not mutable"))
	case "emissions.v5.GetDelegateStakePlacementRequest.target":
		panic(fmt.Errorf("field target of message emissions.v5.GetDelegateStakePlacementRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetDelegateStakePlacementRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetDelegateStakePlacementRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetDelegateStakePlacementRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetDelegateStakePlacementRequest.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "emissions.v5.GetDelegateStakePlacementRequest.delegator":
		return protoreflect.ValueOfString("")
	case "emissions.v5.GetDelegateStakePlacementRequest.target":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetDelegateStakePlacementRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetDelegateStakePlacementRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetDelegateStakePlacementRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetDelegateStakePlacementRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetDelegateStakePlacementRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetDelegateStakePlacementRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetDelegateStakePlacementRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetDelegateStakePlacementRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetDelegateStakePlacementRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		l = len(x.Delegator)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Target)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetDelegateStakePlacementRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Target) > 0 {
			i -= len(x.Target)
			copy(dAtA[i:], x.Target)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Target)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.Delegator) > 0 {
			i -= len(x.Delegator)
			copy(dAtA[i:], x.Delegator)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Delegator)))
			i--
			dAtA[i] = 0x12
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetDelegateStakePlacementRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetDelegateStakePlacementRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetDelegateStakePlacementRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Delegator", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Delegator = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Target", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Target = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetDelegateStakePlacementResponse                protoreflect.MessageDescriptor
	fd_GetDelegateStakePlacementResponse_delegator_info protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetDelegateStakePlacementResponse = File_emissions_v5_query_proto.Messages().ByName("GetDelegateStakePlacementResponse")
	fd_GetDelegateStakePlacementResponse_delegator_info = md_GetDelegateStakePlacementResponse.Fields().ByName("delegator_info")
}

var _ protoreflect.Message = (*fastReflection_GetDelegateStakePlacementResponse)(nil)

type fastReflection_GetDelegateStakePlacementResponse GetDelegateStakePlacementResponse

func (x *GetDelegateStakePlacementResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetDelegateStakePlacementResponse)(x)
}

func (x *GetDelegateStakePlacementResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetDelegateStakePlacementResponse_messageType fastReflection_GetDelegateStakePlacementResponse_messageType
var _ protoreflect.MessageType = fastReflection_GetDelegateStakePlacementResponse_messageType{}

type fastReflection_GetDelegateStakePlacementResponse_messageType struct{}

func (x fastReflection_GetDelegateStakePlacementResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetDelegateStakePlacementResponse)(nil)
}
func (x fastReflection_GetDelegateStakePlacementResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_GetDelegateStakePlacementResponse)
}
func (x fastReflection_GetDelegateStakePlacementResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetDelegateStakePlacementResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetDelegateStakePlacementResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_GetDelegateStakePlacementResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetDelegateStakePlacementResponse) Type() protoreflect.MessageType {
	return _fastReflection_GetDelegateStakePlacementResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetDelegateStakePlacementResponse) New() protoreflect.Message {
	return new(fastReflection_GetDelegateStakePlacementResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetDelegateStakePlacementResponse) Interface() protoreflect.ProtoMessage {
	return (*GetDelegateStakePlacementResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetDelegateStakePlacementResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.DelegatorInfo != nil {
		value := protoreflect.ValueOfMessage(x.DelegatorInfo.ProtoReflect())
		if !f(fd_GetDelegateStakePlacementResponse_delegator_info, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetDelegateStakePlacementResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetDelegateStakePlacementResponse.delegator_info":
		return x.DelegatorInfo != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetDelegateStakePlacementResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetDelegateStakePlacementResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetDelegateStakePlacementResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetDelegateStakePlacementResponse.delegator_info":
		x.DelegatorInfo = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetDelegateStakePlacementResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetDelegateStakePlacementResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetDelegateStakePlacementResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetDelegateStakePlacementResponse.delegator_info":
		value := x.DelegatorInfo
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetDelegateStakePlacementResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetDelegateStakePlacementResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetDelegateStakePlacementResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetDelegateStakePlacementResponse.delegator_info":
		x.DelegatorInfo = value.Message().Interface().(*v3.DelegatorInfo)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetDelegateStakePlacementResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetDelegateStakePlacementResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetDelegateStakePlacementResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetDelegateStakePlacementResponse.delegator_info":
		if x.DelegatorInfo == nil {
			x.DelegatorInfo = new(v3.DelegatorInfo)
		}
		return protoreflect.ValueOfMessage(x.DelegatorInfo.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetDelegateStakePlacementResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetDelegateStakePlacementResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetDelegateStakePlacementResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetDelegateStakePlacementResponse.delegator_info":
		m := new(v3.DelegatorInfo)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetDelegateStakePlacementResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetDelegateStakePlacementResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetDelegateStakePlacementResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetDelegateStakePlacementResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetDelegateStakePlacementResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetDelegateStakePlacementResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetDelegateStakePlacementResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetDelegateStakePlacementResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetDelegateStakePlacementResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.DelegatorInfo != nil {
			l = options.Size(x.DelegatorInfo)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetDelegateStakePlacementResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.DelegatorInfo != nil {
			encoded, err := options.Marshal(x.DelegatorInfo)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetDelegateStakePlacementResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetDelegateStakePlacementResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetDelegateStakePlacementResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field DelegatorInfo", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.DelegatorInfo == nil {
					x.DelegatorInfo = &v3.DelegatorInfo{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.DelegatorInfo); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetDelegateStakeUponReputerRequest          protoreflect.MessageDescriptor
	fd_GetDelegateStakeUponReputerRequest_topic_id protoreflect.FieldDescriptor
	fd_GetDelegateStakeUponReputerRequest_target   protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetDelegateStakeUponReputerRequest = File_emissions_v5_query_proto.Messages().ByName("GetDelegateStakeUponReputerRequest")
	fd_GetDelegateStakeUponReputerRequest_topic_id = md_GetDelegateStakeUponReputerRequest.Fields().ByName("topic_id")
	fd_GetDelegateStakeUponReputerRequest_target = md_GetDelegateStakeUponReputerRequest.Fields().ByName("target")
}

var _ protoreflect.Message = (*fastReflection_GetDelegateStakeUponReputerRequest)(nil)

type fastReflection_GetDelegateStakeUponReputerRequest GetDelegateStakeUponReputerRequest

func (x *GetDelegateStakeUponReputerRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetDelegateStakeUponReputerRequest)(x)
}

func (x *GetDelegateStakeUponReputerRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetDelegateStakeUponReputerRequest_messageType fastReflection_GetDelegateStakeUponReputerRequest_messageType
var _ protoreflect.MessageType = fastReflection_GetDelegateStakeUponReputerRequest_messageType{}

type fastReflection_GetDelegateStakeUponReputerRequest_messageType struct{}

func (x fastReflection_GetDelegateStakeUponReputerRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetDelegateStakeUponReputerRequest)(nil)
}
func (x fastReflection_GetDelegateStakeUponReputerRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_GetDelegateStakeUponReputerRequest)
}
func (x fastReflection_GetDelegateStakeUponReputerRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetDelegateStakeUponReputerRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetDelegateStakeUponReputerRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_GetDelegateStakeUponReputerRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetDelegateStakeUponReputerRequest) Type() protoreflect.MessageType {
	return _fastReflection_GetDelegateStakeUponReputerRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetDelegateStakeUponReputerRequest) New() protoreflect.Message {
	return new(fastReflection_GetDelegateStakeUponReputerRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetDelegateStakeUponReputerRequest) Interface() protoreflect.ProtoMessage {
	return (*GetDelegateStakeUponReputerRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetDelegateStakeUponReputerRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_GetDelegateStakeUponReputerRequest_topic_id, value) {
			return
		}
	}
	if x.Target != "" {
		value := protoreflect.ValueOfString(x.Target)
		if !f(fd_GetDelegateStakeUponReputerRequest_target, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetDelegateStakeUponReputerRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetDelegateStakeUponReputerRequest.topic_id":
		return x.TopicId != uint64(0)
	case "emissions.v5.GetDelegateStakeUponReputerRequest.target":
		return x.Target != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetDelegateStakeUponReputerRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetDelegateStakeUponReputerRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetDelegateStakeUponReputerRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetDelegateStakeUponReputerRequest.topic_id":
		x.TopicId = uint64(0)
	case "emissions.v5.GetDelegateStakeUponReputerRequest.target":
		x.Target = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetDelegateStakeUponReputerRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetDelegateStakeUponReputerRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetDelegateStakeUponReputerRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetDelegateStakeUponReputerRequest.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	case "emissions.v5.GetDelegateStakeUponReputerRequest.target":
		value := x.Target
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetDelegateStakeUponReputerRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetDelegateStakeUponReputerRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetDelegateStakeUponReputerRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetDelegateStakeUponReputerRequest.topic_id":
		x.TopicId = value.Uint()
	case "emissions.v5.GetDelegateStakeUponReputerRequest.target":
		x.Target = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetDelegateStakeUponReputerRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetDelegateStakeUponReputerRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetDelegateStakeUponReputerRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetDelegateStakeUponReputerRequest.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.GetDelegateStakeUponReputerRequest is not mutable"))
	case "emissions.v5.GetDelegateStakeUponReputerRequest.target":
		panic(fmt.Errorf("field target of message emissions.v5.GetDelegateStakeUponReputerRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetDelegateStakeUponReputerRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetDelegateStakeUponReputerRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetDelegateStakeUponReputerRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetDelegateStakeUponReputerRequest.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "emissions.v5.GetDelegateStakeUponReputerRequest.target":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetDelegateStakeUponReputerRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetDelegateStakeUponReputerRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetDelegateStakeUponReputerRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetDelegateStakeUponReputerRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetDelegateStakeUponReputerRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetDelegateStakeUponReputerRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetDelegateStakeUponReputerRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetDelegateStakeUponReputerRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetDelegateStakeUponReputerRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		l = len(x.Target)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetDelegateStakeUponReputerRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Target) > 0 {
			i -= len(x.Target)
			copy(dAtA[i:], x.Target)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Target)))
			i--
			dAtA[i] = 0x12
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetDelegateStakeUponReputerRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetDelegateStakeUponReputerRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetDelegateStakeUponReputerRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Target", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Target = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetDelegateStakeUponReputerResponse       protoreflect.MessageDescriptor
	fd_GetDelegateStakeUponReputerResponse_stake protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetDelegateStakeUponReputerResponse = File_emissions_v5_query_proto.Messages().ByName("GetDelegateStakeUponReputerResponse")
	fd_GetDelegateStakeUponReputerResponse_stake = md_GetDelegateStakeUponReputerResponse.Fields().ByName("stake")
}

var _ protoreflect.Message = (*fastReflection_GetDelegateStakeUponReputerResponse)(nil)

type fastReflection_GetDelegateStakeUponReputerResponse GetDelegateStakeUponReputerResponse

func (x *GetDelegateStakeUponReputerResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetDelegateStakeUponReputerResponse)(x)
}

func (x *GetDelegateStakeUponReputerResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetDelegateStakeUponReputerResponse_messageType fastReflection_GetDelegateStakeUponReputerResponse_messageType
var _ protoreflect.MessageType = fastReflection_GetDelegateStakeUponReputerResponse_messageType{}

type fastReflection_GetDelegateStakeUponReputerResponse_messageType struct{}

func (x fastReflection_GetDelegateStakeUponReputerResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetDelegateStakeUponReputerResponse)(nil)
}
func (x fastReflection_GetDelegateStakeUponReputerResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_GetDelegateStakeUponReputerResponse)
}
func (x fastReflection_GetDelegateStakeUponReputerResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetDelegateStakeUponReputerResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetDelegateStakeUponReputerResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_GetDelegateStakeUponReputerResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetDelegateStakeUponReputerResponse) Type() protoreflect.MessageType {
	return _fastReflection_GetDelegateStakeUponReputerResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetDelegateStakeUponReputerResponse) New() protoreflect.Message {
	return new(fastReflection_GetDelegateStakeUponReputerResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetDelegateStakeUponReputerResponse) Interface() protoreflect.ProtoMessage {
	return (*GetDelegateStakeUponReputerResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetDelegateStakeUponReputerResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Stake != "" {
		value := protoreflect.ValueOfString(x.Stake)
		if !f(fd_GetDelegateStakeUponReputerResponse_stake, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetDelegateStakeUponReputerResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetDelegateStakeUponReputerResponse.stake":
		return x.Stake != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetDelegateStakeUponReputerResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetDelegateStakeUponReputerResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetDelegateStakeUponReputerResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetDelegateStakeUponReputerResponse.stake":
		x.Stake = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetDelegateStakeUponReputerResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetDelegateStakeUponReputerResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetDelegateStakeUponReputerResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetDelegateStakeUponReputerResponse.stake":
		value := x.Stake
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetDelegateStakeUponReputerResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetDelegateStakeUponReputerResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetDelegateStakeUponReputerResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetDelegateStakeUponReputerResponse.stake":
		x.Stake = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetDelegateStakeUponReputerResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetDelegateStakeUponReputerResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetDelegateStakeUponReputerResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetDelegateStakeUponReputerResponse.stake":
		panic(fmt.Errorf("field stake of message emissions.v5.GetDelegateStakeUponReputerResponse is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetDelegateStakeUponReputerResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetDelegateStakeUponReputerResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetDelegateStakeUponReputerResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetDelegateStakeUponReputerResponse.stake":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetDelegateStakeUponReputerResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetDelegateStakeUponReputerResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetDelegateStakeUponReputerResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetDelegateStakeUponReputerResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetDelegateStakeUponReputerResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetDelegateStakeUponReputerResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetDelegateStakeUponReputerResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetDelegateStakeUponReputerResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetDelegateStakeUponReputerResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Stake)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetDelegateStakeUponReputerResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Stake) > 0 {
			i -= len(x.Stake)
			copy(dAtA[i:], x.Stake)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Stake)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetDelegateStakeUponReputerResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetDelegateStakeUponReputerResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetDelegateStakeUponReputerResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Stake", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Stake = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetDelegateRewardPerShareRequest          protoreflect.MessageDescriptor
	fd_GetDelegateRewardPerShareRequest_topic_id protoreflect.FieldDescriptor
	fd_GetDelegateRewardPerShareRequest_reputer  protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetDelegateRewardPerShareRequest = File_emissions_v5_query_proto.Messages().ByName("GetDelegateRewardPerShareRequest")
	fd_GetDelegateRewardPerShareRequest_topic_id = md_GetDelegateRewardPerShareRequest.Fields().ByName("topic_id")
	fd_GetDelegateRewardPerShareRequest_reputer = md_GetDelegateRewardPerShareRequest.Fields().ByName("reputer")
}

var _ protoreflect.Message = (*fastReflection_GetDelegateRewardPerShareRequest)(nil)

type fastReflection_GetDelegateRewardPerShareRequest GetDelegateRewardPerShareRequest

func (x *GetDelegateRewardPerShareRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetDelegateRewardPerShareRequest)(x)
}

func (x *GetDelegateRewardPerShareRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetDelegateRewardPerShareRequest_messageType fastReflection_GetDelegateRewardPerShareRequest_messageType
var _ protoreflect.MessageType = fastReflection_GetDelegateRewardPerShareRequest_messageType{}

type fastReflection_GetDelegateRewardPerShareRequest_messageType struct{}

func (x fastReflection_GetDelegateRewardPerShareRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetDelegateRewardPerShareRequest)(nil)
}
func (x fastReflection_GetDelegateRewardPerShareRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_GetDelegateRewardPerShareRequest)
}
func (x fastReflection_GetDelegateRewardPerShareRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetDelegateRewardPerShareRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetDelegateRewardPerShareRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_GetDelegateRewardPerShareRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetDelegateRewardPerShareRequest) Type() protoreflect.MessageType {
	return _fastReflection_GetDelegateRewardPerShareRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetDelegateRewardPerShareRequest) New() protoreflect.Message {
	return new(fastReflection_GetDelegateRewardPerShareRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetDelegateRewardPerShareRequest) Interface() protoreflect.ProtoMessage {
	return (*GetDelegateRewardPerShareRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetDelegateRewardPerShareRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_GetDelegateRewardPerShareRequest_topic_id, value) {
			return
		}
	}
	if x.Reputer != "" {
		value := protoreflect.ValueOfString(x.Reputer)
		if !f(fd_GetDelegateRewardPerShareRequest_reputer, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetDelegateRewardPerShareRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetDelegateRewardPerShareRequest.topic_id":
		return x.TopicId != uint64(0)
	case "emissions.v5.GetDelegateRewardPerShareRequest.reputer":
		return x.Reputer != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetDelegateRewardPerShareRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetDelegateRewardPerShareRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetDelegateRewardPerShareRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetDelegateRewardPerShareRequest.topic_id":
		x.TopicId = uint64(0)
	case "emissions.v5.GetDelegateRewardPerShareRequest.reputer":
		x.Reputer = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetDelegateRewardPerShareRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetDelegateRewardPerShareRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetDelegateRewardPerShareRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetDelegateRewardPerShareRequest.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	case "emissions.v5.GetDelegateRewardPerShareRequest.reputer":
		value := x.Reputer
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetDelegateRewardPerShareRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetDelegateRewardPerShareRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetDelegateRewardPerShareRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetDelegateRewardPerShareRequest.topic_id":
		x.TopicId = value.Uint()
	case "emissions.v5.GetDelegateRewardPerShareRequest.reputer":
		x.Reputer = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetDelegateRewardPerShareRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetDelegateRewardPerShareRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetDelegateRewardPerShareRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetDelegateRewardPerShareRequest.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.GetDelegateRewardPerShareRequest is not mutable"))
	case "emissions.v5.GetDelegateRewardPerShareRequest.reputer":
		panic(fmt.Errorf("field reputer of message emissions.v5.GetDelegateRewardPerShareRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetDelegateRewardPerShareRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetDelegateRewardPerShareRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetDelegateRewardPerShareRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetDelegateRewardPerShareRequest.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "emissions.v5.GetDelegateRewardPerShareRequest.reputer":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetDelegateRewardPerShareRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetDelegateRewardPerShareRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetDelegateRewardPerShareRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetDelegateRewardPerShareRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetDelegateRewardPerShareRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetDelegateRewardPerShareRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetDelegateRewardPerShareRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetDelegateRewardPerShareRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetDelegateRewardPerShareRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		l = len(x.Reputer)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetDelegateRewardPerShareRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Reputer) > 0 {
			i -= len(x.Reputer)
			copy(dAtA[i:], x.Reputer)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Reputer)))
			i--
			dAtA[i] = 0x12
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetDelegateRewardPerShareRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetDelegateRewardPerShareRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetDelegateRewardPerShareRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Reputer", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Reputer = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetDelegateRewardPerShareResponse                  protoreflect.MessageDescriptor
	fd_GetDelegateRewardPerShareResponse_reward_per_share protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetDelegateRewardPerShareResponse = File_emissions_v5_query_proto.Messages().ByName("GetDelegateRewardPerShareResponse")
	fd_GetDelegateRewardPerShareResponse_reward_per_share = md_GetDelegateRewardPerShareResponse.Fields().ByName("reward_per_share")
}

var _ protoreflect.Message = (*fastReflection_GetDelegateRewardPerShareResponse)(nil)

type fastReflection_GetDelegateRewardPerShareResponse GetDelegateRewardPerShareResponse

func (x *GetDelegateRewardPerShareResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetDelegateRewardPerShareResponse)(x)
}

func (x *GetDelegateRewardPerShareResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetDelegateRewardPerShareResponse_messageType fastReflection_GetDelegateRewardPerShareResponse_messageType
var _ protoreflect.MessageType = fastReflection_GetDelegateRewardPerShareResponse_messageType{}

type fastReflection_GetDelegateRewardPerShareResponse_messageType struct{}

func (x fastReflection_GetDelegateRewardPerShareResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetDelegateRewardPerShareResponse)(nil)
}
func (x fastReflection_GetDelegateRewardPerShareResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_GetDelegateRewardPerShareResponse)
}
func (x fastReflection_GetDelegateRewardPerShareResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetDelegateRewardPerShareResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetDelegateRewardPerShareResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_GetDelegateRewardPerShareResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetDelegateRewardPerShareResponse) Type() protoreflect.MessageType {
	return _fastReflection_GetDelegateRewardPerShareResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetDelegateRewardPerShareResponse) New() protoreflect.Message {
	return new(fastReflection_GetDelegateRewardPerShareResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetDelegateRewardPerShareResponse) Interface() protoreflect.ProtoMessage {
	return (*GetDelegateRewardPerShareResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetDelegateRewardPerShareResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.RewardPerShare != "" {
		value := protoreflect.ValueOfString(x.RewardPerShare)
		if !f(fd_GetDelegateRewardPerShareResponse_reward_per_share, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetDelegateRewardPerShareResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetDelegateRewardPerShareResponse.reward_per_share":
		return x.RewardPerShare != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetDelegateRewardPerShareResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetDelegateRewardPerShareResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetDelegateRewardPerShareResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetDelegateRewardPerShareResponse.reward_per_share":
		x.RewardPerShare = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetDelegateRewardPerShareResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetDelegateRewardPerShareResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetDelegateRewardPerShareResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetDelegateRewardPerShareResponse.reward_per_share":
		value := x.RewardPerShare
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetDelegateRewardPerShareResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetDelegateRewardPerShareResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetDelegateRewardPerShareResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetDelegateRewardPerShareResponse.reward_per_share":
		x.RewardPerShare = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetDelegateRewardPerShareResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetDelegateRewardPerShareResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetDelegateRewardPerShareResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetDelegateRewardPerShareResponse.reward_per_share":
		panic(fmt.Errorf("field reward_per_share of message emissions.v5.GetDelegateRewardPerShareResponse is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetDelegateRewardPerShareResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetDelegateRewardPerShareResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetDelegateRewardPerShareResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetDelegateRewardPerShareResponse.reward_per_share":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetDelegateRewardPerShareResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetDelegateRewardPerShareResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetDelegateRewardPerShareResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetDelegateRewardPerShareResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetDelegateRewardPerShareResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetDelegateRewardPerShareResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetDelegateRewardPerShareResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetDelegateRewardPerShareResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetDelegateRewardPerShareResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.RewardPerShare)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetDelegateRewardPerShareResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.RewardPerShare) > 0 {
			i -= len(x.RewardPerShare)
			copy(dAtA[i:], x.RewardPerShare)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.RewardPerShare)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetDelegateRewardPerShareResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetDelegateRewardPerShareResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetDelegateRewardPerShareResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RewardPerShare", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.RewardPerShare = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetStakeRemovalForReputerAndTopicIdRequest          protoreflect.MessageDescriptor
	fd_GetStakeRemovalForReputerAndTopicIdRequest_reputer  protoreflect.FieldDescriptor
	fd_GetStakeRemovalForReputerAndTopicIdRequest_topic_id protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetStakeRemovalForReputerAndTopicIdRequest = File_emissions_v5_query_proto.Messages().ByName("GetStakeRemovalForReputerAndTopicIdRequest")
	fd_GetStakeRemovalForReputerAndTopicIdRequest_reputer = md_GetStakeRemovalForReputerAndTopicIdRequest.Fields().ByName("reputer")
	fd_GetStakeRemovalForReputerAndTopicIdRequest_topic_id = md_GetStakeRemovalForReputerAndTopicIdRequest.Fields().ByName("topic_id")
}

var _ protoreflect.Message = (*fastReflection_GetStakeRemovalForReputerAndTopicIdRequest)(nil)

type fastReflection_GetStakeRemovalForReputerAndTopicIdRequest GetStakeRemovalForReputerAndTopicIdRequest

func (x *GetStakeRemovalForReputerAndTopicIdRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetStakeRemovalForReputerAndTopicIdRequest)(x)
}

func (x *GetStakeRemovalForReputerAndTopicIdRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetStakeRemovalForReputerAndTopicIdRequest_messageType fastReflection_GetStakeRemovalForReputerAndTopicIdRequest_messageType
var _ protoreflect.MessageType = fastReflection_GetStakeRemovalForReputerAndTopicIdRequest_messageType{}

type fastReflection_GetStakeRemovalForReputerAndTopicIdRequest_messageType struct{}

func (x fastReflection_GetStakeRemovalForReputerAndTopicIdRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetStakeRemovalForReputerAndTopicIdRequest)(nil)
}
func (x fastReflection_GetStakeRemovalForReputerAndTopicIdRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_GetStakeRemovalForReputerAndTopicIdRequest)
}
func (x fastReflection_GetStakeRemovalForReputerAndTopicIdRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetStakeRemovalForReputerAndTopicIdRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetStakeRemovalForReputerAndTopicIdRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_GetStakeRemovalForReputerAndTopicIdRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetStakeRemovalForReputerAndTopicIdRequest) Type() protoreflect.MessageType {
	return _fastReflection_GetStakeRemovalForReputerAndTopicIdRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetStakeRemovalForReputerAndTopicIdRequest) New() protoreflect.Message {
	return new(fastReflection_GetStakeRemovalForReputerAndTopicIdRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetStakeRemovalForReputerAndTopicIdRequest) Interface() protoreflect.ProtoMessage {
	return (*GetStakeRemovalForReputerAndTopicIdRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetStakeRemovalForReputerAndTopicIdRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Reputer != "" {
		value := protoreflect.ValueOfString(x.Reputer)
		if !f(fd_GetStakeRemovalForReputerAndTopicIdRequest_reputer, value) {
			return
		}
	}
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_GetStakeRemovalForReputerAndTopicIdRequest_topic_id, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetStakeRemovalForReputerAndTopicIdRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetStakeRemovalForReputerAndTopicIdRequest.reputer":
		return x.Reputer != ""
	case "emissions.v5.GetStakeRemovalForReputerAndTopicIdRequest.topic_id":
		return x.TopicId != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetStakeRemovalForReputerAndTopicIdRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetStakeRemovalForReputerAndTopicIdRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetStakeRemovalForReputerAndTopicIdRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetStakeRemovalForReputerAndTopicIdRequest.reputer":
		x.Reputer = ""
	case "emissions.v5.GetStakeRemovalForReputerAndTopicIdRequest.topic_id":
		x.TopicId = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetStakeRemovalForReputerAndTopicIdRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetStakeRemovalForReputerAndTopicIdRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetStakeRemovalForReputerAndTopicIdRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetStakeRemovalForReputerAndTopicIdRequest.reputer":
		value := x.Reputer
		return protoreflect.ValueOfString(value)
	case "emissions.v5.GetStakeRemovalForReputerAndTopicIdRequest.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetStakeRemovalForReputerAndTopicIdRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetStakeRemovalForReputerAndTopicIdRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetStakeRemovalForReputerAndTopicIdRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetStakeRemovalForReputerAndTopicIdRequest.reputer":
		x.Reputer = value.Interface().(string)
	case "emissions.v5.GetStakeRemovalForReputerAndTopicIdRequest.topic_id":
		x.TopicId = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetStakeRemovalForReputerAndTopicIdRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetStakeRemovalForReputerAndTopicIdRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetStakeRemovalForReputerAndTopicIdRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetStakeRemovalForReputerAndTopicIdRequest.reputer":
		panic(fmt.Errorf("field reputer of message emissions.v5.GetStakeRemovalForReputerAndTopicIdRequest is not mutable"))
	case "emissions.v5.GetStakeRemovalForReputerAndTopicIdRequest.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.GetStakeRemovalForReputerAndTopicIdRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetStakeRemovalForReputerAndTopicIdRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetStakeRemovalForReputerAndTopicIdRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetStakeRemovalForReputerAndTopicIdRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetStakeRemovalForReputerAndTopicIdRequest.reputer":
		return protoreflect.ValueOfString("")
	case "emissions.v5.GetStakeRemovalForReputerAndTopicIdRequest.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetStakeRemovalForReputerAndTopicIdRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetStakeRemovalForReputerAndTopicIdRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetStakeRemovalForReputerAndTopicIdRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetStakeRemovalForReputerAndTopicIdRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetStakeRemovalForReputerAndTopicIdRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetStakeRemovalForReputerAndTopicIdRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetStakeRemovalForReputerAndTopicIdRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetStakeRemovalForReputerAndTopicIdRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetStakeRemovalForReputerAndTopicIdRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Reputer)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetStakeRemovalForReputerAndTopicIdRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x10
		}
		if len(x.Reputer) > 0 {
			i -= len(x.Reputer)
			copy(dAtA[i:], x.Reputer)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Reputer)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetStakeRemovalForReputerAndTopicIdRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetStakeRemovalForReputerAndTopicIdRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetStakeRemovalForReputerAndTopicIdRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Reputer", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Reputer = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetStakeRemovalForReputerAndTopicIdResponse                    protoreflect.MessageDescriptor
	fd_GetStakeRemovalForReputerAndTopicIdResponse_stake_removal_info protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetStakeRemovalForReputerAndTopicIdResponse = File_emissions_v5_query_proto.Messages().ByName("GetStakeRemovalForReputerAndTopicIdResponse")
	fd_GetStakeRemovalForReputerAndTopicIdResponse_stake_removal_info = md_GetStakeRemovalForReputerAndTopicIdResponse.Fields().ByName("stake_removal_info")
}

var _ protoreflect.Message = (*fastReflection_GetStakeRemovalForReputerAndTopicIdResponse)(nil)

type fastReflection_GetStakeRemovalForReputerAndTopicIdResponse GetStakeRemovalForReputerAndTopicIdResponse

func (x *GetStakeRemovalForReputerAndTopicIdResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetStakeRemovalForReputerAndTopicIdResponse)(x)
}

func (x *GetStakeRemovalForReputerAndTopicIdResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetStakeRemovalForReputerAndTopicIdResponse_messageType fastReflection_GetStakeRemovalForReputerAndTopicIdResponse_messageType
var _ protoreflect.MessageType = fastReflection_GetStakeRemovalForReputerAndTopicIdResponse_messageType{}

type fastReflection_GetStakeRemovalForReputerAndTopicIdResponse_messageType struct{}

func (x fastReflection_GetStakeRemovalForReputerAndTopicIdResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetStakeRemovalForReputerAndTopicIdResponse)(nil)
}
func (x fastReflection_GetStakeRemovalForReputerAndTopicIdResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_GetStakeRemovalForReputerAndTopicIdResponse)
}
func (x fastReflection_GetStakeRemovalForReputerAndTopicIdResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetStakeRemovalForReputerAndTopicIdResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetStakeRemovalForReputerAndTopicIdResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_GetStakeRemovalForReputerAndTopicIdResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetStakeRemovalForReputerAndTopicIdResponse) Type() protoreflect.MessageType {
	return _fastReflection_GetStakeRemovalForReputerAndTopicIdResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetStakeRemovalForReputerAndTopicIdResponse) New() protoreflect.Message {
	return new(fastReflection_GetStakeRemovalForReputerAndTopicIdResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetStakeRemovalForReputerAndTopicIdResponse) Interface() protoreflect.ProtoMessage {
	return (*GetStakeRemovalForReputerAndTopicIdResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetStakeRemovalForReputerAndTopicIdResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.StakeRemovalInfo != nil {
		value := protoreflect.ValueOfMessage(x.StakeRemovalInfo.ProtoReflect())
		if !f(fd_GetStakeRemovalForReputerAndTopicIdResponse_stake_removal_info, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetStakeRemovalForReputerAndTopicIdResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetStakeRemovalForReputerAndTopicIdResponse.stake_removal_info":
		return x.StakeRemovalInfo != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetStakeRemovalForReputerAndTopicIdResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetStakeRemovalForReputerAndTopicIdResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetStakeRemovalForReputerAndTopicIdResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetStakeRemovalForReputerAndTopicIdResponse.stake_removal_info":
		x.StakeRemovalInfo = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetStakeRemovalForReputerAndTopicIdResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetStakeRemovalForReputerAndTopicIdResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetStakeRemovalForReputerAndTopicIdResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetStakeRemovalForReputerAndTopicIdResponse.stake_removal_info":
		value := x.StakeRemovalInfo
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetStakeRemovalForReputerAndTopicIdResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetStakeRemovalForReputerAndTopicIdResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetStakeRemovalForReputerAndTopicIdResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetStakeRemovalForReputerAndTopicIdResponse.stake_removal_info":
		x.StakeRemovalInfo = value.Message().Interface().(*v3.StakeRemovalInfo)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetStakeRemovalForReputerAndTopicIdResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetStakeRemovalForReputerAndTopicIdResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetStakeRemovalForReputerAndTopicIdResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetStakeRemovalForReputerAndTopicIdResponse.stake_removal_info":
		if x.StakeRemovalInfo == nil {
			x.StakeRemovalInfo = new(v3.StakeRemovalInfo)
		}
		return protoreflect.ValueOfMessage(x.StakeRemovalInfo.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetStakeRemovalForReputerAndTopicIdResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetStakeRemovalForReputerAndTopicIdResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetStakeRemovalForReputerAndTopicIdResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetStakeRemovalForReputerAndTopicIdResponse.stake_removal_info":
		m := new(v3.StakeRemovalInfo)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetStakeRemovalForReputerAndTopicIdResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetStakeRemovalForReputerAndTopicIdResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetStakeRemovalForReputerAndTopicIdResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetStakeRemovalForReputerAndTopicIdResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetStakeRemovalForReputerAndTopicIdResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetStakeRemovalForReputerAndTopicIdResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetStakeRemovalForReputerAndTopicIdResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetStakeRemovalForReputerAndTopicIdResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetStakeRemovalForReputerAndTopicIdResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.StakeRemovalInfo != nil {
			l = options.Size(x.StakeRemovalInfo)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetStakeRemovalForReputerAndTopicIdResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.StakeRemovalInfo != nil {
			encoded, err := options.Marshal(x.StakeRemovalInfo)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetStakeRemovalForReputerAndTopicIdResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetStakeRemovalForReputerAndTopicIdResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetStakeRemovalForReputerAndTopicIdResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field StakeRemovalInfo", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.StakeRemovalInfo == nil {
					x.StakeRemovalInfo = &v3.StakeRemovalInfo{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.StakeRemovalInfo); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetDelegateStakeRemovalRequest              protoreflect.MessageDescriptor
	fd_GetDelegateStakeRemovalRequest_block_height protoreflect.FieldDescriptor
	fd_GetDelegateStakeRemovalRequest_topic_id     protoreflect.FieldDescriptor
	fd_GetDelegateStakeRemovalRequest_delegator    protoreflect.FieldDescriptor
	fd_GetDelegateStakeRemovalRequest_reputer      protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetDelegateStakeRemovalRequest = File_emissions_v5_query_proto.Messages().ByName("GetDelegateStakeRemovalRequest")
	fd_GetDelegateStakeRemovalRequest_block_height = md_GetDelegateStakeRemovalRequest.Fields().ByName("block_height")
	fd_GetDelegateStakeRemovalRequest_topic_id = md_GetDelegateStakeRemovalRequest.Fields().ByName("topic_id")
	fd_GetDelegateStakeRemovalRequest_delegator = md_GetDelegateStakeRemovalRequest.Fields().ByName("delegator")
	fd_GetDelegateStakeRemovalRequest_reputer = md_GetDelegateStakeRemovalRequest.Fields().ByName("reputer")
}

var _ protoreflect.Message = (*fastReflection_GetDelegateStakeRemovalRequest)(nil)

type fastReflection_GetDelegateStakeRemovalRequest GetDelegateStakeRemovalRequest

func (x *GetDelegateStakeRemovalRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetDelegateStakeRemovalRequest)(x)
}

func (x *GetDelegateStakeRemovalRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetDelegateStakeRemovalRequest_messageType fastReflection_GetDelegateStakeRemovalRequest_messageType
var _ protoreflect.MessageType = fastReflection_GetDelegateStakeRemovalRequest_messageType{}

type fastReflection_GetDelegateStakeRemovalRequest_messageType struct{}

func (x fastReflection_GetDelegateStakeRemovalRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetDelegateStakeRemovalRequest)(nil)
}
func (x fastReflection_GetDelegateStakeRemovalRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_GetDelegateStakeRemovalRequest)
}
func (x fastReflection_GetDelegateStakeRemovalRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetDelegateStakeRemovalRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetDelegateStakeRemovalRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_GetDelegateStakeRemovalRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetDelegateStakeRemovalRequest) Type() protoreflect.MessageType {
	return _fastReflection_GetDelegateStakeRemovalRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetDelegateStakeRemovalRequest) New() protoreflect.Message {
	return new(fastReflection_GetDelegateStakeRemovalRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetDelegateStakeRemovalRequest) Interface() protoreflect.ProtoMessage {
	return (*GetDelegateStakeRemovalRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetDelegateStakeRemovalRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.BlockHeight != int64(0) {
		value := protoreflect.ValueOfInt64(x.BlockHeight)
		if !f(fd_GetDelegateStakeRemovalRequest_block_height, value) {
			return
		}
	}
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_GetDelegateStakeRemovalRequest_topic_id, value) {
			return
		}
	}
	if x.Delegator != "" {
		value := protoreflect.ValueOfString(x.Delegator)
		if !f(fd_GetDelegateStakeRemovalRequest_delegator, value) {
			return
		}
	}
	if x.Reputer != "" {
		value := protoreflect.ValueOfString(x.Reputer)
		if !f(fd_GetDelegateStakeRemovalRequest_reputer, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetDelegateStakeRemovalRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetDelegateStakeRemovalRequest.block_height":
		return x.BlockHeight != int64(0)
	case "emissions.v5.GetDelegateStakeRemovalRequest.topic_id":
		return x.TopicId != uint64(0)
	case "emissions.v5.GetDelegateStakeRemovalRequest.delegator":
		return x.Delegator != ""
	case "emissions.v5.GetDelegateStakeRemovalRequest.reputer":
		return x.Reputer != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetDelegateStakeRemovalRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetDelegateStakeRemovalRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetDelegateStakeRemovalRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetDelegateStakeRemovalRequest.block_height":
		x.BlockHeight = int64(0)
	case "emissions.v5.GetDelegateStakeRemovalRequest.topic_id":
		x.TopicId = uint64(0)
	case "emissions.v5.GetDelegateStakeRemovalRequest.delegator":
		x.Delegator = ""
	case "emissions.v5.GetDelegateStakeRemovalRequest.reputer":
		x.Reputer = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetDelegateStakeRemovalRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetDelegateStakeRemovalRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetDelegateStakeRemovalRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetDelegateStakeRemovalRequest.block_height":
		value := x.BlockHeight
		return protoreflect.ValueOfInt64(value)
	case "emissions.v5.GetDelegateStakeRemovalRequest.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	case "emissions.v5.GetDelegateStakeRemovalRequest.delegator":
		value := x.Delegator
		return protoreflect.ValueOfString(value)
	case "emissions.v5.GetDelegateStakeRemovalRequest.reputer":
		value := x.Reputer
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetDelegateStakeRemovalRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetDelegateStakeRemovalRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetDelegateStakeRemovalRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetDelegateStakeRemovalRequest.block_height":
		x.BlockHeight = value.Int()
	case "emissions.v5.GetDelegateStakeRemovalRequest.topic_id":
		x.TopicId = value.Uint()
	case "emissions.v5.GetDelegateStakeRemovalRequest.delegator":
		x.Delegator = value.Interface().(string)
	case "emissions.v5.GetDelegateStakeRemovalRequest.reputer":
		x.Reputer = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetDelegateStakeRemovalRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetDelegateStakeRemovalRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetDelegateStakeRemovalRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetDelegateStakeRemovalRequest.block_height":
		panic(fmt.Errorf("field block_height of message emissions.v5.GetDelegateStakeRemovalRequest is not mutable"))
	case "emissions.v5.GetDelegateStakeRemovalRequest.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.GetDelegateStakeRemovalRequest is not mutable"))
	case "emissions.v5.GetDelegateStakeRemovalRequest.delegator":
		panic(fmt.Errorf("field delegator of message emissions.v5.GetDelegateStakeRemovalRequest is not mutable"))
	case "emissions.v5.GetDelegateStakeRemovalRequest.reputer":
		panic(fmt.Errorf("field reputer of message emissions.v5.GetDelegateStakeRemovalRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetDelegateStakeRemovalRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetDelegateStakeRemovalRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetDelegateStakeRemovalRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetDelegateStakeRemovalRequest.block_height":
		return protoreflect.ValueOfInt64(int64(0))
	case "emissions.v5.GetDelegateStakeRemovalRequest.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "emissions.v5.GetDelegateStakeRemovalRequest.delegator":
		return protoreflect.ValueOfString("")
	case "emissions.v5.GetDelegateStakeRemovalRequest.reputer":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetDelegateStakeRemovalRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetDelegateStakeRemovalRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetDelegateStakeRemovalRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetDelegateStakeRemovalRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetDelegateStakeRemovalRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetDelegateStakeRemovalRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetDelegateStakeRemovalRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetDelegateStakeRemovalRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetDelegateStakeRemovalRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.BlockHeight != 0 {
			n += 1 + runtime.Sov(uint64(x.BlockHeight))
		}
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		l = len(x.Delegator)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Reputer)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetDelegateStakeRemovalRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Reputer) > 0 {
			i -= len(x.Reputer)
			copy(dAtA[i:], x.Reputer)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Reputer)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.Delegator) > 0 {
			i -= len(x.Delegator)
			copy(dAtA[i:], x.Delegator)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Delegator)))
			i--
			dAtA[i] = 0x1a
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x10
		}
		if x.BlockHeight != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.BlockHeight))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetDelegateStakeRemovalRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetDelegateStakeRemovalRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetDelegateStakeRemovalRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BlockHeight", wireType)
				}
				x.BlockHeight = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.BlockHeight |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Delegator", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Delegator = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Reputer", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Reputer = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetDelegateStakeRemovalResponse                    protoreflect.MessageDescriptor
	fd_GetDelegateStakeRemovalResponse_stake_removal_info protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetDelegateStakeRemovalResponse = File_emissions_v5_query_proto.Messages().ByName("GetDelegateStakeRemovalResponse")
	fd_GetDelegateStakeRemovalResponse_stake_removal_info = md_GetDelegateStakeRemovalResponse.Fields().ByName("stake_removal_info")
}

var _ protoreflect.Message = (*fastReflection_GetDelegateStakeRemovalResponse)(nil)

type fastReflection_GetDelegateStakeRemovalResponse GetDelegateStakeRemovalResponse

func (x *GetDelegateStakeRemovalResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetDelegateStakeRemovalResponse)(x)
}

func (x *GetDelegateStakeRemovalResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetDelegateStakeRemovalResponse_messageType fastReflection_GetDelegateStakeRemovalResponse_messageType
var _ protoreflect.MessageType = fastReflection_GetDelegateStakeRemovalResponse_messageType{}

type fastReflection_GetDelegateStakeRemovalResponse_messageType struct{}

func (x fastReflection_GetDelegateStakeRemovalResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetDelegateStakeRemovalResponse)(nil)
}
func (x fastReflection_GetDelegateStakeRemovalResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_GetDelegateStakeRemovalResponse)
}
func (x fastReflection_GetDelegateStakeRemovalResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetDelegateStakeRemovalResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetDelegateStakeRemovalResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_GetDelegateStakeRemovalResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetDelegateStakeRemovalResponse) Type() protoreflect.MessageType {
	return _fastReflection_GetDelegateStakeRemovalResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetDelegateStakeRemovalResponse) New() protoreflect.Message {
	return new(fastReflection_GetDelegateStakeRemovalResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetDelegateStakeRemovalResponse) Interface() protoreflect.ProtoMessage {
	return (*GetDelegateStakeRemovalResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetDelegateStakeRemovalResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.StakeRemovalInfo != nil {
		value := protoreflect.ValueOfMessage(x.StakeRemovalInfo.ProtoReflect())
		if !f(fd_GetDelegateStakeRemovalResponse_stake_removal_info, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetDelegateStakeRemovalResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetDelegateStakeRemovalResponse.stake_removal_info":
		return x.StakeRemovalInfo != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetDelegateStakeRemovalResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetDelegateStakeRemovalResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetDelegateStakeRemovalResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetDelegateStakeRemovalResponse.stake_removal_info":
		x.StakeRemovalInfo = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetDelegateStakeRemovalResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetDelegateStakeRemovalResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetDelegateStakeRemovalResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetDelegateStakeRemovalResponse.stake_removal_info":
		value := x.StakeRemovalInfo
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetDelegateStakeRemovalResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetDelegateStakeRemovalResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetDelegateStakeRemovalResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetDelegateStakeRemovalResponse.stake_removal_info":
		x.StakeRemovalInfo = value.Message().Interface().(*v3.DelegateStakeRemovalInfo)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetDelegateStakeRemovalResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetDelegateStakeRemovalResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetDelegateStakeRemovalResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetDelegateStakeRemovalResponse.stake_removal_info":
		if x.StakeRemovalInfo == nil {
			x.StakeRemovalInfo = new(v3.DelegateStakeRemovalInfo)
		}
		return protoreflect.ValueOfMessage(x.StakeRemovalInfo.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetDelegateStakeRemovalResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetDelegateStakeRemovalResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetDelegateStakeRemovalResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetDelegateStakeRemovalResponse.stake_removal_info":
		m := new(v3.DelegateStakeRemovalInfo)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetDelegateStakeRemovalResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetDelegateStakeRemovalResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetDelegateStakeRemovalResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetDelegateStakeRemovalResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetDelegateStakeRemovalResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetDelegateStakeRemovalResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetDelegateStakeRemovalResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetDelegateStakeRemovalResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetDelegateStakeRemovalResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.StakeRemovalInfo != nil {
			l = options.Size(x.StakeRemovalInfo)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetDelegateStakeRemovalResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.StakeRemovalInfo != nil {
			encoded, err := options.Marshal(x.StakeRemovalInfo)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetDelegateStakeRemovalResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetDelegateStakeRemovalResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetDelegateStakeRemovalResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field StakeRemovalInfo", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.StakeRemovalInfo == nil {
					x.StakeRemovalInfo = &v3.DelegateStakeRemovalInfo{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.StakeRemovalInfo); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetPreviousTopicWeightRequest          protoreflect.MessageDescriptor
	fd_GetPreviousTopicWeightRequest_topic_id protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetPreviousTopicWeightRequest = File_emissions_v5_query_proto.Messages().ByName("GetPreviousTopicWeightRequest")
	fd_GetPreviousTopicWeightRequest_topic_id = md_GetPreviousTopicWeightRequest.Fields().ByName("topic_id")
}

var _ protoreflect.Message = (*fastReflection_GetPreviousTopicWeightRequest)(nil)

type fastReflection_GetPreviousTopicWeightRequest GetPreviousTopicWeightRequest

func (x *GetPreviousTopicWeightRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetPreviousTopicWeightRequest)(x)
}

func (x *GetPreviousTopicWeightRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetPreviousTopicWeightRequest_messageType fastReflection_GetPreviousTopicWeightRequest_messageType
var _ protoreflect.MessageType = fastReflection_GetPreviousTopicWeightRequest_messageType{}

type fastReflection_GetPreviousTopicWeightRequest_messageType struct{}

func (x fastReflection_GetPreviousTopicWeightRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetPreviousTopicWeightRequest)(nil)
}
func (x fastReflection_GetPreviousTopicWeightRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_GetPreviousTopicWeightRequest)
}
func (x fastReflection_GetPreviousTopicWeightRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetPreviousTopicWeightRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetPreviousTopicWeightRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_GetPreviousTopicWeightRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetPreviousTopicWeightRequest) Type() protoreflect.MessageType {
	return _fastReflection_GetPreviousTopicWeightRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetPreviousTopicWeightRequest) New() protoreflect.Message {
	return new(fastReflection_GetPreviousTopicWeightRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetPreviousTopicWeightRequest) Interface() protoreflect.ProtoMessage {
	return (*GetPreviousTopicWeightRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetPreviousTopicWeightRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_GetPreviousTopicWeightRequest_topic_id, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetPreviousTopicWeightRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetPreviousTopicWeightRequest.topic_id":
		return x.TopicId != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetPreviousTopicWeightRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetPreviousTopicWeightRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetPreviousTopicWeightRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetPreviousTopicWeightRequest.topic_id":
		x.TopicId = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetPreviousTopicWeightRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetPreviousTopicWeightRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetPreviousTopicWeightRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetPreviousTopicWeightRequest.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetPreviousTopicWeightRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetPreviousTopicWeightRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetPreviousTopicWeightRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetPreviousTopicWeightRequest.topic_id":
		x.TopicId = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetPreviousTopicWeightRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetPreviousTopicWeightRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetPreviousTopicWeightRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetPreviousTopicWeightRequest.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.GetPreviousTopicWeightRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetPreviousTopicWeightRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetPreviousTopicWeightRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetPreviousTopicWeightRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetPreviousTopicWeightRequest.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetPreviousTopicWeightRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetPreviousTopicWeightRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetPreviousTopicWeightRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetPreviousTopicWeightRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetPreviousTopicWeightRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetPreviousTopicWeightRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetPreviousTopicWeightRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetPreviousTopicWeightRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetPreviousTopicWeightRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetPreviousTopicWeightRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetPreviousTopicWeightRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetPreviousTopicWeightRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetPreviousTopicWeightRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetPreviousTopicWeightResponse           protoreflect.MessageDescriptor
	fd_GetPreviousTopicWeightResponse_weight    protoreflect.FieldDescriptor
	fd_GetPreviousTopicWeightResponse_not_found protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetPreviousTopicWeightResponse = File_emissions_v5_query_proto.Messages().ByName("GetPreviousTopicWeightResponse")
	fd_GetPreviousTopicWeightResponse_weight = md_GetPreviousTopicWeightResponse.Fields().ByName("weight")
	fd_GetPreviousTopicWeightResponse_not_found = md_GetPreviousTopicWeightResponse.Fields().ByName("not_found")
}

var _ protoreflect.Message = (*fastReflection_GetPreviousTopicWeightResponse)(nil)

type fastReflection_GetPreviousTopicWeightResponse GetPreviousTopicWeightResponse

func (x *GetPreviousTopicWeightResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetPreviousTopicWeightResponse)(x)
}

func (x *GetPreviousTopicWeightResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetPreviousTopicWeightResponse_messageType fastReflection_GetPreviousTopicWeightResponse_messageType
var _ protoreflect.MessageType = fastReflection_GetPreviousTopicWeightResponse_messageType{}

type fastReflection_GetPreviousTopicWeightResponse_messageType struct{}

func (x fastReflection_GetPreviousTopicWeightResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetPreviousTopicWeightResponse)(nil)
}
func (x fastReflection_GetPreviousTopicWeightResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_GetPreviousTopicWeightResponse)
}
func (x fastReflection_GetPreviousTopicWeightResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetPreviousTopicWeightResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetPreviousTopicWeightResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_GetPreviousTopicWeightResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetPreviousTopicWeightResponse) Type() protoreflect.MessageType {
	return _fastReflection_GetPreviousTopicWeightResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetPreviousTopicWeightResponse) New() protoreflect.Message {
	return new(fastReflection_GetPreviousTopicWeightResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetPreviousTopicWeightResponse) Interface() protoreflect.ProtoMessage {
	return (*GetPreviousTopicWeightResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetPreviousTopicWeightResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Weight != "" {
		value := protoreflect.ValueOfString(x.Weight)
		if !f(fd_GetPreviousTopicWeightResponse_weight, value) {
			return
		}
	}
	if x.NotFound != false {
		value := protoreflect.ValueOfBool(x.NotFound)
		if !f(fd_GetPreviousTopicWeightResponse_not_found, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetPreviousTopicWeightResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetPreviousTopicWeightResponse.weight":
		return x.Weight != ""
	case "emissions.v5.GetPreviousTopicWeightResponse.not_found":
		return x.NotFound != false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetPreviousTopicWeightResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetPreviousTopicWeightResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetPreviousTopicWeightResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetPreviousTopicWeightResponse.weight":
		x.Weight = ""
	case "emissions.v5.GetPreviousTopicWeightResponse.not_found":
		x.NotFound = false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetPreviousTopicWeightResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetPreviousTopicWeightResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetPreviousTopicWeightResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetPreviousTopicWeightResponse.weight":
		value := x.Weight
		return protoreflect.ValueOfString(value)
	case "emissions.v5.GetPreviousTopicWeightResponse.not_found":
		value := x.NotFound
		return protoreflect.ValueOfBool(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetPreviousTopicWeightResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetPreviousTopicWeightResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetPreviousTopicWeightResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetPreviousTopicWeightResponse.weight":
		x.Weight = value.Interface().(string)
	case "emissions.v5.GetPreviousTopicWeightResponse.not_found":
		x.NotFound = value.Bool()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetPreviousTopicWeightResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetPreviousTopicWeightResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetPreviousTopicWeightResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetPreviousTopicWeightResponse.weight":
		panic(fmt.Errorf("field weight of message emissions.v5.GetPreviousTopicWeightResponse is not mutable"))
	case "emissions.v5.GetPreviousTopicWeightResponse.not_found":
		panic(fmt.Errorf("field not_found of message emissions.v5.GetPreviousTopicWeightResponse is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetPreviousTopicWeightResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetPreviousTopicWeightResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetPreviousTopicWeightResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetPreviousTopicWeightResponse.weight":
		return protoreflect.ValueOfString("")
	case "emissions.v5.GetPreviousTopicWeightResponse.not_found":
		return protoreflect.ValueOfBool(false)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetPreviousTopicWeightResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetPreviousTopicWeightResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetPreviousTopicWeightResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetPreviousTopicWeightResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetPreviousTopicWeightResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetPreviousTopicWeightResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetPreviousTopicWeightResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetPreviousTopicWeightResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetPreviousTopicWeightResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Weight)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.NotFound {
			n += 2
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetPreviousTopicWeightResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.NotFound {
			i--
			if x.NotFound {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x10
		}
		if len(x.Weight) > 0 {
			i -= len(x.Weight)
			copy(dAtA[i:], x.Weight)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Weight)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetPreviousTopicWeightResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetPreviousTopicWeightResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetPreviousTopicWeightResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Weight", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Weight = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field NotFound", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.NotFound = bool(v != 0)
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetTotalSumPreviousTopicWeightsRequest protoreflect.MessageDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetTotalSumPreviousTopicWeightsRequest = File_emissions_v5_query_proto.Messages().ByName("GetTotalSumPreviousTopicWeightsRequest")
}

var _ protoreflect.Message = (*fastReflection_GetTotalSumPreviousTopicWeightsRequest)(nil)

type fastReflection_GetTotalSumPreviousTopicWeightsRequest GetTotalSumPreviousTopicWeightsRequest

func (x *GetTotalSumPreviousTopicWeightsRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetTotalSumPreviousTopicWeightsRequest)(x)
}

func (x *GetTotalSumPreviousTopicWeightsRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetTotalSumPreviousTopicWeightsRequest_messageType fastReflection_GetTotalSumPreviousTopicWeightsRequest_messageType
var _ protoreflect.MessageType = fastReflection_GetTotalSumPreviousTopicWeightsRequest_messageType{}

type fastReflection_GetTotalSumPreviousTopicWeightsRequest_messageType struct{}

func (x fastReflection_GetTotalSumPreviousTopicWeightsRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetTotalSumPreviousTopicWeightsRequest)(nil)
}
func (x fastReflection_GetTotalSumPreviousTopicWeightsRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_GetTotalSumPreviousTopicWeightsRequest)
}
func (x fastReflection_GetTotalSumPreviousTopicWeightsRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetTotalSumPreviousTopicWeightsRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetTotalSumPreviousTopicWeightsRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_GetTotalSumPreviousTopicWeightsRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetTotalSumPreviousTopicWeightsRequest) Type() protoreflect.MessageType {
	return _fastReflection_GetTotalSumPreviousTopicWeightsRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetTotalSumPreviousTopicWeightsRequest) New() protoreflect.Message {
	return new(fastReflection_GetTotalSumPreviousTopicWeightsRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetTotalSumPreviousTopicWeightsRequest) Interface() protoreflect.ProtoMessage {
	return (*GetTotalSumPreviousTopicWeightsRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetTotalSumPreviousTopicWeightsRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetTotalSumPreviousTopicWeightsRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetTotalSumPreviousTopicWeightsRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetTotalSumPreviousTopicWeightsRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetTotalSumPreviousTopicWeightsRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetTotalSumPreviousTopicWeightsRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetTotalSumPreviousTopicWeightsRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetTotalSumPreviousTopicWeightsRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetTotalSumPreviousTopicWeightsRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetTotalSumPreviousTopicWeightsRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetTotalSumPreviousTopicWeightsRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetTotalSumPreviousTopicWeightsRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetTotalSumPreviousTopicWeightsRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetTotalSumPreviousTopicWeightsRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetTotalSumPreviousTopicWeightsRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetTotalSumPreviousTopicWeightsRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetTotalSumPreviousTopicWeightsRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetTotalSumPreviousTopicWeightsRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetTotalSumPreviousTopicWeightsRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetTotalSumPreviousTopicWeightsRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetTotalSumPreviousTopicWeightsRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetTotalSumPreviousTopicWeightsRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetTotalSumPreviousTopicWeightsRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetTotalSumPreviousTopicWeightsRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetTotalSumPreviousTopicWeightsRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetTotalSumPreviousTopicWeightsRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetTotalSumPreviousTopicWeightsRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetTotalSumPreviousTopicWeightsRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetTotalSumPreviousTopicWeightsRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetTotalSumPreviousTopicWeightsRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetTotalSumPreviousTopicWeightsResponse        protoreflect.MessageDescriptor
	fd_GetTotalSumPreviousTopicWeightsResponse_weight protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetTotalSumPreviousTopicWeightsResponse = File_emissions_v5_query_proto.Messages().ByName("GetTotalSumPreviousTopicWeightsResponse")
	fd_GetTotalSumPreviousTopicWeightsResponse_weight = md_GetTotalSumPreviousTopicWeightsResponse.Fields().ByName("weight")
}

var _ protoreflect.Message = (*fastReflection_GetTotalSumPreviousTopicWeightsResponse)(nil)

type fastReflection_GetTotalSumPreviousTopicWeightsResponse GetTotalSumPreviousTopicWeightsResponse

func (x *GetTotalSumPreviousTopicWeightsResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetTotalSumPreviousTopicWeightsResponse)(x)
}

func (x *GetTotalSumPreviousTopicWeightsResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetTotalSumPreviousTopicWeightsResponse_messageType fastReflection_GetTotalSumPreviousTopicWeightsResponse_messageType
var _ protoreflect.MessageType = fastReflection_GetTotalSumPreviousTopicWeightsResponse_messageType{}

type fastReflection_GetTotalSumPreviousTopicWeightsResponse_messageType struct{}

func (x fastReflection_GetTotalSumPreviousTopicWeightsResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetTotalSumPreviousTopicWeightsResponse)(nil)
}
func (x fastReflection_GetTotalSumPreviousTopicWeightsResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_GetTotalSumPreviousTopicWeightsResponse)
}
func (x fastReflection_GetTotalSumPreviousTopicWeightsResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetTotalSumPreviousTopicWeightsResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetTotalSumPreviousTopicWeightsResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_GetTotalSumPreviousTopicWeightsResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetTotalSumPreviousTopicWeightsResponse) Type() protoreflect.MessageType {
	return _fastReflection_GetTotalSumPreviousTopicWeightsResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetTotalSumPreviousTopicWeightsResponse) New() protoreflect.Message {
	return new(fastReflection_GetTotalSumPreviousTopicWeightsResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetTotalSumPreviousTopicWeightsResponse) Interface() protoreflect.ProtoMessage {
	return (*GetTotalSumPreviousTopicWeightsResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetTotalSumPreviousTopicWeightsResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Weight != "" {
		value := protoreflect.ValueOfString(x.Weight)
		if !f(fd_GetTotalSumPreviousTopicWeightsResponse_weight, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetTotalSumPreviousTopicWeightsResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetTotalSumPreviousTopicWeightsResponse.weight":
		return x.Weight != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetTotalSumPreviousTopicWeightsResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetTotalSumPreviousTopicWeightsResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetTotalSumPreviousTopicWeightsResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetTotalSumPreviousTopicWeightsResponse.weight":
		x.Weight = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetTotalSumPreviousTopicWeightsResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetTotalSumPreviousTopicWeightsResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetTotalSumPreviousTopicWeightsResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetTotalSumPreviousTopicWeightsResponse.weight":
		value := x.Weight
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetTotalSumPreviousTopicWeightsResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetTotalSumPreviousTopicWeightsResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetTotalSumPreviousTopicWeightsResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetTotalSumPreviousTopicWeightsResponse.weight":
		x.Weight = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetTotalSumPreviousTopicWeightsResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetTotalSumPreviousTopicWeightsResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetTotalSumPreviousTopicWeightsResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetTotalSumPreviousTopicWeightsResponse.weight":
		panic(fmt.Errorf("field weight of message emissions.v5.GetTotalSumPreviousTopicWeightsResponse is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetTotalSumPreviousTopicWeightsResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetTotalSumPreviousTopicWeightsResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetTotalSumPreviousTopicWeightsResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetTotalSumPreviousTopicWeightsResponse.weight":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetTotalSumPreviousTopicWeightsResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetTotalSumPreviousTopicWeightsResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetTotalSumPreviousTopicWeightsResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetTotalSumPreviousTopicWeightsResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetTotalSumPreviousTopicWeightsResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetTotalSumPreviousTopicWeightsResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetTotalSumPreviousTopicWeightsResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetTotalSumPreviousTopicWeightsResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetTotalSumPreviousTopicWeightsResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Weight)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetTotalSumPreviousTopicWeightsResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Weight) > 0 {
			i -= len(x.Weight)
			copy(dAtA[i:], x.Weight)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Weight)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetTotalSumPreviousTopicWeightsResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetTotalSumPreviousTopicWeightsResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetTotalSumPreviousTopicWeightsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Weight", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Weight = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_TopicExistsRequest          protoreflect.MessageDescriptor
	fd_TopicExistsRequest_topic_id protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_TopicExistsRequest = File_emissions_v5_query_proto.Messages().ByName("TopicExistsRequest")
	fd_TopicExistsRequest_topic_id = md_TopicExistsRequest.Fields().ByName("topic_id")
}

var _ protoreflect.Message = (*fastReflection_TopicExistsRequest)(nil)

type fastReflection_TopicExistsRequest TopicExistsRequest

func (x *TopicExistsRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_TopicExistsRequest)(x)
}

func (x *TopicExistsRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[110]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_TopicExistsRequest_messageType fastReflection_TopicExistsRequest_messageType
var _ protoreflect.MessageType = fastReflection_TopicExistsRequest_messageType{}

type fastReflection_TopicExistsRequest_messageType struct{}

func (x fastReflection_TopicExistsRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_TopicExistsRequest)(nil)
}
func (x fastReflection_TopicExistsRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_TopicExistsRequest)
}
func (x fastReflection_TopicExistsRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_TopicExistsRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_TopicExistsRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_TopicExistsRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_TopicExistsRequest) Type() protoreflect.MessageType {
	return _fastReflection_TopicExistsRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_TopicExistsRequest) New() protoreflect.Message {
	return new(fastReflection_TopicExistsRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_TopicExistsRequest) Interface() protoreflect.ProtoMessage {
	return (*TopicExistsRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_TopicExistsRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_TopicExistsRequest_topic_id, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_TopicExistsRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.TopicExistsRequest.topic_id":
		return x.TopicId != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicExistsRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicExistsRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TopicExistsRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.TopicExistsRequest.topic_id":
		x.TopicId = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicExistsRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicExistsRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_TopicExistsRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.TopicExistsRequest.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicExistsRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicExistsRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TopicExistsRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.TopicExistsRequest.topic_id":
		x.TopicId = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicExistsRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicExistsRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TopicExistsRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.TopicExistsRequest.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.TopicExistsRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicExistsRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicExistsRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_TopicExistsRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.TopicExistsRequest.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicExistsRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicExistsRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_TopicExistsRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.TopicExistsRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_TopicExistsRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TopicExistsRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_TopicExistsRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_TopicExistsRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*TopicExistsRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*TopicExistsRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*TopicExistsRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: TopicExistsRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: TopicExistsRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_TopicExistsResponse        protoreflect.MessageDescriptor
	fd_TopicExistsResponse_exists protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_TopicExistsResponse = File_emissions_v5_query_proto.Messages().ByName("TopicExistsResponse")
	fd_TopicExistsResponse_exists = md_TopicExistsResponse.Fields().ByName("exists")
}

var _ protoreflect.Message = (*fastReflection_TopicExistsResponse)(nil)

type fastReflection_TopicExistsResponse TopicExistsResponse

func (x *TopicExistsResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_TopicExistsResponse)(x)
}

func (x *TopicExistsResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[111]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_TopicExistsResponse_messageType fastReflection_TopicExistsResponse_messageType
var _ protoreflect.MessageType = fastReflection_TopicExistsResponse_messageType{}

type fastReflection_TopicExistsResponse_messageType struct{}

func (x fastReflection_TopicExistsResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_TopicExistsResponse)(nil)
}
func (x fastReflection_TopicExistsResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_TopicExistsResponse)
}
func (x fastReflection_TopicExistsResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_TopicExistsResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_TopicExistsResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_TopicExistsResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_TopicExistsResponse) Type() protoreflect.MessageType {
	return _fastReflection_TopicExistsResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_TopicExistsResponse) New() protoreflect.Message {
	return new(fastReflection_TopicExistsResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_TopicExistsResponse) Interface() protoreflect.ProtoMessage {
	return (*TopicExistsResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_TopicExistsResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Exists != false {
		value := protoreflect.ValueOfBool(x.Exists)
		if !f(fd_TopicExistsResponse_exists, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_TopicExistsResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.TopicExistsResponse.exists":
		return x.Exists != false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicExistsResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicExistsResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TopicExistsResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.TopicExistsResponse.exists":
		x.Exists = false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicExistsResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicExistsResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_TopicExistsResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.TopicExistsResponse.exists":
		value := x.Exists
		return protoreflect.ValueOfBool(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicExistsResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicExistsResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TopicExistsResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.TopicExistsResponse.exists":
		x.Exists = value.Bool()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicExistsResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicExistsResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TopicExistsResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.TopicExistsResponse.exists":
		panic(fmt.Errorf("field exists of message emissions.v5.TopicExistsResponse is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicExistsResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicExistsResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_TopicExistsResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.TopicExistsResponse.exists":
		return protoreflect.ValueOfBool(false)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicExistsResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicExistsResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_TopicExistsResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.TopicExistsResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_TopicExistsResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TopicExistsResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_TopicExistsResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_TopicExistsResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*TopicExistsResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Exists {
			n += 2
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*TopicExistsResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Exists {
			i--
			if x.Exists {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*TopicExistsResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: TopicExistsResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: TopicExistsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Exists", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.Exists = bool(v != 0)
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_IsTopicActiveRequest          protoreflect.MessageDescriptor
	fd_IsTopicActiveRequest_topic_id protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_IsTopicActiveRequest = File_emissions_v5_query_proto.Messages().ByName("IsTopicActiveRequest")
	fd_IsTopicActiveRequest_topic_id = md_IsTopicActiveRequest.Fields().ByName("topic_id")
}

var _ protoreflect.Message = (*fastReflection_IsTopicActiveRequest)(nil)

type fastReflection_IsTopicActiveRequest IsTopicActiveRequest

func (x *IsTopicActiveRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_IsTopicActiveRequest)(x)
}

func (x *IsTopicActiveRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[112]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_IsTopicActiveRequest_messageType fastReflection_IsTopicActiveRequest_messageType
var _ protoreflect.MessageType = fastReflection_IsTopicActiveRequest_messageType{}

type fastReflection_IsTopicActiveRequest_messageType struct{}

func (x fastReflection_IsTopicActiveRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_IsTopicActiveRequest)(nil)
}
func (x fastReflection_IsTopicActiveRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_IsTopicActiveRequest)
}
func (x fastReflection_IsTopicActiveRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_IsTopicActiveRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_IsTopicActiveRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_IsTopicActiveRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_IsTopicActiveRequest) Type() protoreflect.MessageType {
	return _fastReflection_IsTopicActiveRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_IsTopicActiveRequest) New() protoreflect.Message {
	return new(fastReflection_IsTopicActiveRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_IsTopicActiveRequest) Interface() protoreflect.ProtoMessage {
	return (*IsTopicActiveRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_IsTopicActiveRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_IsTopicActiveRequest_topic_id, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_IsTopicActiveRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.IsTopicActiveRequest.topic_id":
		return x.TopicId != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.IsTopicActiveRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.IsTopicActiveRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_IsTopicActiveRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.IsTopicActiveRequest.topic_id":
		x.TopicId = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.IsTopicActiveRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.IsTopicActiveRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_IsTopicActiveRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.IsTopicActiveRequest.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.IsTopicActiveRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.IsTopicActiveRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_IsTopicActiveRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.IsTopicActiveRequest.topic_id":
		x.TopicId = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.IsTopicActiveRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.IsTopicActiveRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_IsTopicActiveRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.IsTopicActiveRequest.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.IsTopicActiveRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.IsTopicActiveRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.IsTopicActiveRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_IsTopicActiveRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.IsTopicActiveRequest.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.IsTopicActiveRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.IsTopicActiveRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_IsTopicActiveRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.IsTopicActiveRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_IsTopicActiveRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_IsTopicActiveRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_IsTopicActiveRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_IsTopicActiveRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*IsTopicActiveRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*IsTopicActiveRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*IsTopicActiveRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: IsTopicActiveRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: IsTopicActiveRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_IsTopicActiveResponse           protoreflect.MessageDescriptor
	fd_IsTopicActiveResponse_is_active protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_IsTopicActiveResponse = File_emissions_v5_query_proto.Messages().ByName("IsTopicActiveResponse")
	fd_IsTopicActiveResponse_is_active = md_IsTopicActiveResponse.Fields().ByName("is_active")
}

var _ protoreflect.Message = (*fastReflection_IsTopicActiveResponse)(nil)

type fastReflection_IsTopicActiveResponse IsTopicActiveResponse

func (x *IsTopicActiveResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_IsTopicActiveResponse)(x)
}

func (x *IsTopicActiveResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[113]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_IsTopicActiveResponse_messageType fastReflection_IsTopicActiveResponse_messageType
var _ protoreflect.MessageType = fastReflection_IsTopicActiveResponse_messageType{}

type fastReflection_IsTopicActiveResponse_messageType struct{}

func (x fastReflection_IsTopicActiveResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_IsTopicActiveResponse)(nil)
}
func (x fastReflection_IsTopicActiveResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_IsTopicActiveResponse)
}
func (x fastReflection_IsTopicActiveResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_IsTopicActiveResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_IsTopicActiveResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_IsTopicActiveResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_IsTopicActiveResponse) Type() protoreflect.MessageType {
	return _fastReflection_IsTopicActiveResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_IsTopicActiveResponse) New() protoreflect.Message {
	return new(fastReflection_IsTopicActiveResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_IsTopicActiveResponse) Interface() protoreflect.ProtoMessage {
	return (*IsTopicActiveResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_IsTopicActiveResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.IsActive != false {
		value := protoreflect.ValueOfBool(x.IsActive)
		if !f(fd_IsTopicActiveResponse_is_active, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_IsTopicActiveResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.IsTopicActiveResponse.is_active":
		return x.IsActive != false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.IsTopicActiveResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.IsTopicActiveResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_IsTopicActiveResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.IsTopicActiveResponse.is_active":
		x.IsActive = false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.IsTopicActiveResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.IsTopicActiveResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_IsTopicActiveResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.IsTopicActiveResponse.is_active":
		value := x.IsActive
		return protoreflect.ValueOfBool(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.IsTopicActiveResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.IsTopicActiveResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_IsTopicActiveResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.IsTopicActiveResponse.is_active":
		x.IsActive = value.Bool()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.IsTopicActiveResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.IsTopicActiveResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_IsTopicActiveResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.IsTopicActiveResponse.is_active":
		panic(fmt.Errorf("field is_active of message emissions.v5.IsTopicActiveResponse is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.IsTopicActiveResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.IsTopicActiveResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_IsTopicActiveResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.IsTopicActiveResponse.is_active":
		return protoreflect.ValueOfBool(false)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.IsTopicActiveResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.IsTopicActiveResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_IsTopicActiveResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.IsTopicActiveResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_IsTopicActiveResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_IsTopicActiveResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_IsTopicActiveResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_IsTopicActiveResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*IsTopicActiveResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.IsActive {
			n += 2
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*IsTopicActiveResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.IsActive {
			i--
			if x.IsActive {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*IsTopicActiveResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: IsTopicActiveResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: IsTopicActiveResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field IsActive", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.IsActive = bool(v != 0)
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetTopicFeeRevenueRequest          protoreflect.MessageDescriptor
	fd_GetTopicFeeRevenueRequest_topic_id protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetTopicFeeRevenueRequest = File_emissions_v5_query_proto.Messages().ByName("GetTopicFeeRevenueRequest")
	fd_GetTopicFeeRevenueRequest_topic_id = md_GetTopicFeeRevenueRequest.Fields().ByName("topic_id")
}

var _ protoreflect.Message = (*fastReflection_GetTopicFeeRevenueRequest)(nil)

type fastReflection_GetTopicFeeRevenueRequest GetTopicFeeRevenueRequest

func (x *GetTopicFeeRevenueRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetTopicFeeRevenueRequest)(x)
}

func (x *GetTopicFeeRevenueRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[114]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetTopicFeeRevenueRequest_messageType fastReflection_GetTopicFeeRevenueRequest_messageType
var _ protoreflect.MessageType = fastReflection_GetTopicFeeRevenueRequest_messageType{}

type fastReflection_GetTopicFeeRevenueRequest_messageType struct{}

func (x fastReflection_GetTopicFeeRevenueRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetTopicFeeRevenueRequest)(nil)
}
func (x fastReflection_GetTopicFeeRevenueRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_GetTopicFeeRevenueRequest)
}
func (x fastReflection_GetTopicFeeRevenueRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetTopicFeeRevenueRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetTopicFeeRevenueRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_GetTopicFeeRevenueRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetTopicFeeRevenueRequest) Type() protoreflect.MessageType {
	return _fastReflection_GetTopicFeeRevenueRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetTopicFeeRevenueRequest) New() protoreflect.Message {
	return new(fastReflection_GetTopicFeeRevenueRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetTopicFeeRevenueRequest) Interface() protoreflect.ProtoMessage {
	return (*GetTopicFeeRevenueRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetTopicFeeRevenueRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_GetTopicFeeRevenueRequest_topic_id, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetTopicFeeRevenueRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetTopicFeeRevenueRequest.topic_id":
		return x.TopicId != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetTopicFeeRevenueRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetTopicFeeRevenueRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetTopicFeeRevenueRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetTopicFeeRevenueRequest.topic_id":
		x.TopicId = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetTopicFeeRevenueRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetTopicFeeRevenueRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetTopicFeeRevenueRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetTopicFeeRevenueRequest.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetTopicFeeRevenueRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetTopicFeeRevenueRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetTopicFeeRevenueRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetTopicFeeRevenueRequest.topic_id":
		x.TopicId = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetTopicFeeRevenueRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetTopicFeeRevenueRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetTopicFeeRevenueRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetTopicFeeRevenueRequest.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.GetTopicFeeRevenueRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetTopicFeeRevenueRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetTopicFeeRevenueRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetTopicFeeRevenueRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetTopicFeeRevenueRequest.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetTopicFeeRevenueRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetTopicFeeRevenueRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetTopicFeeRevenueRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetTopicFeeRevenueRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetTopicFeeRevenueRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetTopicFeeRevenueRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetTopicFeeRevenueRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetTopicFeeRevenueRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetTopicFeeRevenueRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetTopicFeeRevenueRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetTopicFeeRevenueRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetTopicFeeRevenueRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetTopicFeeRevenueRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetTopicFeeRevenueResponse             protoreflect.MessageDescriptor
	fd_GetTopicFeeRevenueResponse_fee_revenue protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetTopicFeeRevenueResponse = File_emissions_v5_query_proto.Messages().ByName("GetTopicFeeRevenueResponse")
	fd_GetTopicFeeRevenueResponse_fee_revenue = md_GetTopicFeeRevenueResponse.Fields().ByName("fee_revenue")
}

var _ protoreflect.Message = (*fastReflection_GetTopicFeeRevenueResponse)(nil)

type fastReflection_GetTopicFeeRevenueResponse GetTopicFeeRevenueResponse

func (x *GetTopicFeeRevenueResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetTopicFeeRevenueResponse)(x)
}

func (x *GetTopicFeeRevenueResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[115]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetTopicFeeRevenueResponse_messageType fastReflection_GetTopicFeeRevenueResponse_messageType
var _ protoreflect.MessageType = fastReflection_GetTopicFeeRevenueResponse_messageType{}

type fastReflection_GetTopicFeeRevenueResponse_messageType struct{}

func (x fastReflection_GetTopicFeeRevenueResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetTopicFeeRevenueResponse)(nil)
}
func (x fastReflection_GetTopicFeeRevenueResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_GetTopicFeeRevenueResponse)
}
func (x fastReflection_GetTopicFeeRevenueResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetTopicFeeRevenueResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetTopicFeeRevenueResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_GetTopicFeeRevenueResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetTopicFeeRevenueResponse) Type() protoreflect.MessageType {
	return _fastReflection_GetTopicFeeRevenueResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetTopicFeeRevenueResponse) New() protoreflect.Message {
	return new(fastReflection_GetTopicFeeRevenueResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetTopicFeeRevenueResponse) Interface() protoreflect.ProtoMessage {
	return (*GetTopicFeeRevenueResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetTopicFeeRevenueResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.FeeRevenue != "" {
		value := protoreflect.ValueOfString(x.FeeRevenue)
		if !f(fd_GetTopicFeeRevenueResponse_fee_revenue, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetTopicFeeRevenueResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetTopicFeeRevenueResponse.fee_revenue":
		return x.FeeRevenue != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetTopicFeeRevenueResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetTopicFeeRevenueResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetTopicFeeRevenueResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetTopicFeeRevenueResponse.fee_revenue":
		x.FeeRevenue = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetTopicFeeRevenueResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetTopicFeeRevenueResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetTopicFeeRevenueResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetTopicFeeRevenueResponse.fee_revenue":
		value := x.FeeRevenue
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetTopicFeeRevenueResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetTopicFeeRevenueResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetTopicFeeRevenueResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetTopicFeeRevenueResponse.fee_revenue":
		x.FeeRevenue = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetTopicFeeRevenueResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetTopicFeeRevenueResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetTopicFeeRevenueResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetTopicFeeRevenueResponse.fee_revenue":
		panic(fmt.Errorf("field fee_revenue of message emissions.v5.GetTopicFeeRevenueResponse is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetTopicFeeRevenueResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetTopicFeeRevenueResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetTopicFeeRevenueResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetTopicFeeRevenueResponse.fee_revenue":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetTopicFeeRevenueResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetTopicFeeRevenueResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetTopicFeeRevenueResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetTopicFeeRevenueResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetTopicFeeRevenueResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetTopicFeeRevenueResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetTopicFeeRevenueResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetTopicFeeRevenueResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetTopicFeeRevenueResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.FeeRevenue)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetTopicFeeRevenueResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.FeeRevenue) > 0 {
			i -= len(x.FeeRevenue)
			copy(dAtA[i:], x.FeeRevenue)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.FeeRevenue)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetTopicFeeRevenueResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetTopicFeeRevenueResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetTopicFeeRevenueResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field FeeRevenue", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.FeeRevenue = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetInfererScoreEmaRequest          protoreflect.MessageDescriptor
	fd_GetInfererScoreEmaRequest_topic_id protoreflect.FieldDescriptor
	fd_GetInfererScoreEmaRequest_inferer  protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetInfererScoreEmaRequest = File_emissions_v5_query_proto.Messages().ByName("GetInfererScoreEmaRequest")
	fd_GetInfererScoreEmaRequest_topic_id = md_GetInfererScoreEmaRequest.Fields().ByName("topic_id")
	fd_GetInfererScoreEmaRequest_inferer = md_GetInfererScoreEmaRequest.Fields().ByName("inferer")
}

var _ protoreflect.Message = (*fastReflection_GetInfererScoreEmaRequest)(nil)

type fastReflection_GetInfererScoreEmaRequest GetInfererScoreEmaRequest

func (x *GetInfererScoreEmaRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetInfererScoreEmaRequest)(x)
}

func (x *GetInfererScoreEmaRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[116]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetInfererScoreEmaRequest_messageType fastReflection_GetInfererScoreEmaRequest_messageType
var _ protoreflect.MessageType = fastReflection_GetInfererScoreEmaRequest_messageType{}

type fastReflection_GetInfererScoreEmaRequest_messageType struct{}

func (x fastReflection_GetInfererScoreEmaRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetInfererScoreEmaRequest)(nil)
}
func (x fastReflection_GetInfererScoreEmaRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_GetInfererScoreEmaRequest)
}
func (x fastReflection_GetInfererScoreEmaRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetInfererScoreEmaRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetInfererScoreEmaRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_GetInfererScoreEmaRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetInfererScoreEmaRequest) Type() protoreflect.MessageType {
	return _fastReflection_GetInfererScoreEmaRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetInfererScoreEmaRequest) New() protoreflect.Message {
	return new(fastReflection_GetInfererScoreEmaRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetInfererScoreEmaRequest) Interface() protoreflect.ProtoMessage {
	return (*GetInfererScoreEmaRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetInfererScoreEmaRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_GetInfererScoreEmaRequest_topic_id, value) {
			return
		}
	}
	if x.Inferer != "" {
		value := protoreflect.ValueOfString(x.Inferer)
		if !f(fd_GetInfererScoreEmaRequest_inferer, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetInfererScoreEmaRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetInfererScoreEmaRequest.topic_id":
		return x.TopicId != uint64(0)
	case "emissions.v5.GetInfererScoreEmaRequest.inferer":
		return x.Inferer != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetInfererScoreEmaRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetInfererScoreEmaRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetInfererScoreEmaRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetInfererScoreEmaRequest.topic_id":
		x.TopicId = uint64(0)
	case "emissions.v5.GetInfererScoreEmaRequest.inferer":
		x.Inferer = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetInfererScoreEmaRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetInfererScoreEmaRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetInfererScoreEmaRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetInfererScoreEmaRequest.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	case "emissions.v5.GetInfererScoreEmaRequest.inferer":
		value := x.Inferer
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetInfererScoreEmaRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetInfererScoreEmaRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetInfererScoreEmaRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetInfererScoreEmaRequest.topic_id":
		x.TopicId = value.Uint()
	case "emissions.v5.GetInfererScoreEmaRequest.inferer":
		x.Inferer = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetInfererScoreEmaRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetInfererScoreEmaRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetInfererScoreEmaRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetInfererScoreEmaRequest.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.GetInfererScoreEmaRequest is not mutable"))
	case "emissions.v5.GetInfererScoreEmaRequest.inferer":
		panic(fmt.Errorf("field inferer of message emissions.v5.GetInfererScoreEmaRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetInfererScoreEmaRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetInfererScoreEmaRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetInfererScoreEmaRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetInfererScoreEmaRequest.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "emissions.v5.GetInfererScoreEmaRequest.inferer":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetInfererScoreEmaRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetInfererScoreEmaRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetInfererScoreEmaRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetInfererScoreEmaRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetInfererScoreEmaRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetInfererScoreEmaRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetInfererScoreEmaRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetInfererScoreEmaRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetInfererScoreEmaRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		l = len(x.Inferer)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetInfererScoreEmaRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Inferer) > 0 {
			i -= len(x.Inferer)
			copy(dAtA[i:], x.Inferer)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Inferer)))
			i--
			dAtA[i] = 0x12
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetInfererScoreEmaRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetInfererScoreEmaRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetInfererScoreEmaRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Inferer", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Inferer = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetInfererScoreEmaResponse       protoreflect.MessageDescriptor
	fd_GetInfererScoreEmaResponse_score protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetInfererScoreEmaResponse = File_emissions_v5_query_proto.Messages().ByName("GetInfererScoreEmaResponse")
	fd_GetInfererScoreEmaResponse_score = md_GetInfererScoreEmaResponse.Fields().ByName("score")
}

var _ protoreflect.Message = (*fastReflection_GetInfererScoreEmaResponse)(nil)

type fastReflection_GetInfererScoreEmaResponse GetInfererScoreEmaResponse

func (x *GetInfererScoreEmaResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetInfererScoreEmaResponse)(x)
}

func (x *GetInfererScoreEmaResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[117]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetInfererScoreEmaResponse_messageType fastReflection_GetInfererScoreEmaResponse_messageType
var _ protoreflect.MessageType = fastReflection_GetInfererScoreEmaResponse_messageType{}

type fastReflection_GetInfererScoreEmaResponse_messageType struct{}

func (x fastReflection_GetInfererScoreEmaResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetInfererScoreEmaResponse)(nil)
}
func (x fastReflection_GetInfererScoreEmaResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_GetInfererScoreEmaResponse)
}
func (x fastReflection_GetInfererScoreEmaResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetInfererScoreEmaResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetInfererScoreEmaResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_GetInfererScoreEmaResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetInfererScoreEmaResponse) Type() protoreflect.MessageType {
	return _fastReflection_GetInfererScoreEmaResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetInfererScoreEmaResponse) New() protoreflect.Message {
	return new(fastReflection_GetInfererScoreEmaResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetInfererScoreEmaResponse) Interface() protoreflect.ProtoMessage {
	return (*GetInfererScoreEmaResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetInfererScoreEmaResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Score != nil {
		value := protoreflect.ValueOfMessage(x.Score.ProtoReflect())
		if !f(fd_GetInfererScoreEmaResponse_score, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetInfererScoreEmaResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetInfererScoreEmaResponse.score":
		return x.Score != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetInfererScoreEmaResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetInfererScoreEmaResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetInfererScoreEmaResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetInfererScoreEmaResponse.score":
		x.Score = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetInfererScoreEmaResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetInfererScoreEmaResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetInfererScoreEmaResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetInfererScoreEmaResponse.score":
		value := x.Score
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetInfererScoreEmaResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetInfererScoreEmaResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetInfererScoreEmaResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetInfererScoreEmaResponse.score":
		x.Score = value.Message().Interface().(*v3.Score)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetInfererScoreEmaResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetInfererScoreEmaResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetInfererScoreEmaResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetInfererScoreEmaResponse.score":
		if x.Score == nil {
			x.Score = new(v3.Score)
		}
		return protoreflect.ValueOfMessage(x.Score.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetInfererScoreEmaResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetInfererScoreEmaResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetInfererScoreEmaResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetInfererScoreEmaResponse.score":
		m := new(v3.Score)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetInfererScoreEmaResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetInfererScoreEmaResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetInfererScoreEmaResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetInfererScoreEmaResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetInfererScoreEmaResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetInfererScoreEmaResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetInfererScoreEmaResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetInfererScoreEmaResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetInfererScoreEmaResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Score != nil {
			l = options.Size(x.Score)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetInfererScoreEmaResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Score != nil {
			encoded, err := options.Marshal(x.Score)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetInfererScoreEmaResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetInfererScoreEmaResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetInfererScoreEmaResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Score", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Score == nil {
					x.Score = &v3.Score{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Score); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetForecasterScoreEmaRequest            protoreflect.MessageDescriptor
	fd_GetForecasterScoreEmaRequest_topic_id   protoreflect.FieldDescriptor
	fd_GetForecasterScoreEmaRequest_forecaster protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetForecasterScoreEmaRequest = File_emissions_v5_query_proto.Messages().ByName("GetForecasterScoreEmaRequest")
	fd_GetForecasterScoreEmaRequest_topic_id = md_GetForecasterScoreEmaRequest.Fields().ByName("topic_id")
	fd_GetForecasterScoreEmaRequest_forecaster = md_GetForecasterScoreEmaRequest.Fields().ByName("forecaster")
}

var _ protoreflect.Message = (*fastReflection_GetForecasterScoreEmaRequest)(nil)

type fastReflection_GetForecasterScoreEmaRequest GetForecasterScoreEmaRequest

func (x *GetForecasterScoreEmaRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetForecasterScoreEmaRequest)(x)
}

func (x *GetForecasterScoreEmaRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[118]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetForecasterScoreEmaRequest_messageType fastReflection_GetForecasterScoreEmaRequest_messageType
var _ protoreflect.MessageType = fastReflection_GetForecasterScoreEmaRequest_messageType{}

type fastReflection_GetForecasterScoreEmaRequest_messageType struct{}

func (x fastReflection_GetForecasterScoreEmaRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetForecasterScoreEmaRequest)(nil)
}
func (x fastReflection_GetForecasterScoreEmaRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_GetForecasterScoreEmaRequest)
}
func (x fastReflection_GetForecasterScoreEmaRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetForecasterScoreEmaRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetForecasterScoreEmaRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_GetForecasterScoreEmaRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetForecasterScoreEmaRequest) Type() protoreflect.MessageType {
	return _fastReflection_GetForecasterScoreEmaRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetForecasterScoreEmaRequest) New() protoreflect.Message {
	return new(fastReflection_GetForecasterScoreEmaRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetForecasterScoreEmaRequest) Interface() protoreflect.ProtoMessage {
	return (*GetForecasterScoreEmaRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetForecasterScoreEmaRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_GetForecasterScoreEmaRequest_topic_id, value) {
			return
		}
	}
	if x.Forecaster != "" {
		value := protoreflect.ValueOfString(x.Forecaster)
		if !f(fd_GetForecasterScoreEmaRequest_forecaster, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetForecasterScoreEmaRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetForecasterScoreEmaRequest.topic_id":
		return x.TopicId != uint64(0)
	case "emissions.v5.GetForecasterScoreEmaRequest.forecaster":
		return x.Forecaster != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetForecasterScoreEmaRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetForecasterScoreEmaRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetForecasterScoreEmaRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetForecasterScoreEmaRequest.topic_id":
		x.TopicId = uint64(0)
	case "emissions.v5.GetForecasterScoreEmaRequest.forecaster":
		x.Forecaster = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetForecasterScoreEmaRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetForecasterScoreEmaRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetForecasterScoreEmaRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetForecasterScoreEmaRequest.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	case "emissions.v5.GetForecasterScoreEmaRequest.forecaster":
		value := x.Forecaster
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetForecasterScoreEmaRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetForecasterScoreEmaRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetForecasterScoreEmaRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetForecasterScoreEmaRequest.topic_id":
		x.TopicId = value.Uint()
	case "emissions.v5.GetForecasterScoreEmaRequest.forecaster":
		x.Forecaster = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetForecasterScoreEmaRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetForecasterScoreEmaRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetForecasterScoreEmaRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetForecasterScoreEmaRequest.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.GetForecasterScoreEmaRequest is not mutable"))
	case "emissions.v5.GetForecasterScoreEmaRequest.forecaster":
		panic(fmt.Errorf("field forecaster of message emissions.v5.GetForecasterScoreEmaRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetForecasterScoreEmaRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetForecasterScoreEmaRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetForecasterScoreEmaRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetForecasterScoreEmaRequest.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "emissions.v5.GetForecasterScoreEmaRequest.forecaster":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetForecasterScoreEmaRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetForecasterScoreEmaRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetForecasterScoreEmaRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetForecasterScoreEmaRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetForecasterScoreEmaRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetForecasterScoreEmaRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetForecasterScoreEmaRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetForecasterScoreEmaRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetForecasterScoreEmaRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		l = len(x.Forecaster)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetForecasterScoreEmaRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Forecaster) > 0 {
			i -= len(x.Forecaster)
			copy(dAtA[i:], x.Forecaster)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Forecaster)))
			i--
			dAtA[i] = 0x12
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetForecasterScoreEmaRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetForecasterScoreEmaRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetForecasterScoreEmaRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Forecaster", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Forecaster = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetForecasterScoreEmaResponse       protoreflect.MessageDescriptor
	fd_GetForecasterScoreEmaResponse_score protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetForecasterScoreEmaResponse = File_emissions_v5_query_proto.Messages().ByName("GetForecasterScoreEmaResponse")
	fd_GetForecasterScoreEmaResponse_score = md_GetForecasterScoreEmaResponse.Fields().ByName("score")
}

var _ protoreflect.Message = (*fastReflection_GetForecasterScoreEmaResponse)(nil)

type fastReflection_GetForecasterScoreEmaResponse GetForecasterScoreEmaResponse

func (x *GetForecasterScoreEmaResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetForecasterScoreEmaResponse)(x)
}

func (x *GetForecasterScoreEmaResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[119]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetForecasterScoreEmaResponse_messageType fastReflection_GetForecasterScoreEmaResponse_messageType
var _ protoreflect.MessageType = fastReflection_GetForecasterScoreEmaResponse_messageType{}

type fastReflection_GetForecasterScoreEmaResponse_messageType struct{}

func (x fastReflection_GetForecasterScoreEmaResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetForecasterScoreEmaResponse)(nil)
}
func (x fastReflection_GetForecasterScoreEmaResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_GetForecasterScoreEmaResponse)
}
func (x fastReflection_GetForecasterScoreEmaResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetForecasterScoreEmaResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetForecasterScoreEmaResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_GetForecasterScoreEmaResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetForecasterScoreEmaResponse) Type() protoreflect.MessageType {
	return _fastReflection_GetForecasterScoreEmaResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetForecasterScoreEmaResponse) New() protoreflect.Message {
	return new(fastReflection_GetForecasterScoreEmaResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetForecasterScoreEmaResponse) Interface() protoreflect.ProtoMessage {
	return (*GetForecasterScoreEmaResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetForecasterScoreEmaResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Score != nil {
		value := protoreflect.ValueOfMessage(x.Score.ProtoReflect())
		if !f(fd_GetForecasterScoreEmaResponse_score, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetForecasterScoreEmaResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetForecasterScoreEmaResponse.score":
		return x.Score != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetForecasterScoreEmaResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetForecasterScoreEmaResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetForecasterScoreEmaResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetForecasterScoreEmaResponse.score":
		x.Score = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetForecasterScoreEmaResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetForecasterScoreEmaResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetForecasterScoreEmaResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetForecasterScoreEmaResponse.score":
		value := x.Score
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetForecasterScoreEmaResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetForecasterScoreEmaResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetForecasterScoreEmaResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetForecasterScoreEmaResponse.score":
		x.Score = value.Message().Interface().(*v3.Score)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetForecasterScoreEmaResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetForecasterScoreEmaResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetForecasterScoreEmaResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetForecasterScoreEmaResponse.score":
		if x.Score == nil {
			x.Score = new(v3.Score)
		}
		return protoreflect.ValueOfMessage(x.Score.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetForecasterScoreEmaResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetForecasterScoreEmaResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetForecasterScoreEmaResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetForecasterScoreEmaResponse.score":
		m := new(v3.Score)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetForecasterScoreEmaResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetForecasterScoreEmaResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetForecasterScoreEmaResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetForecasterScoreEmaResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetForecasterScoreEmaResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetForecasterScoreEmaResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetForecasterScoreEmaResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetForecasterScoreEmaResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetForecasterScoreEmaResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Score != nil {
			l = options.Size(x.Score)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetForecasterScoreEmaResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Score != nil {
			encoded, err := options.Marshal(x.Score)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetForecasterScoreEmaResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetForecasterScoreEmaResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetForecasterScoreEmaResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Score", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Score == nil {
					x.Score = &v3.Score{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Score); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetReputerScoreEmaRequest          protoreflect.MessageDescriptor
	fd_GetReputerScoreEmaRequest_topic_id protoreflect.FieldDescriptor
	fd_GetReputerScoreEmaRequest_reputer  protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetReputerScoreEmaRequest = File_emissions_v5_query_proto.Messages().ByName("GetReputerScoreEmaRequest")
	fd_GetReputerScoreEmaRequest_topic_id = md_GetReputerScoreEmaRequest.Fields().ByName("topic_id")
	fd_GetReputerScoreEmaRequest_reputer = md_GetReputerScoreEmaRequest.Fields().ByName("reputer")
}

var _ protoreflect.Message = (*fastReflection_GetReputerScoreEmaRequest)(nil)

type fastReflection_GetReputerScoreEmaRequest GetReputerScoreEmaRequest

func (x *GetReputerScoreEmaRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetReputerScoreEmaRequest)(x)
}

func (x *GetReputerScoreEmaRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[120]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetReputerScoreEmaRequest_messageType fastReflection_GetReputerScoreEmaRequest_messageType
var _ protoreflect.MessageType = fastReflection_GetReputerScoreEmaRequest_messageType{}

type fastReflection_GetReputerScoreEmaRequest_messageType struct{}

func (x fastReflection_GetReputerScoreEmaRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetReputerScoreEmaRequest)(nil)
}
func (x fastReflection_GetReputerScoreEmaRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_GetReputerScoreEmaRequest)
}
func (x fastReflection_GetReputerScoreEmaRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetReputerScoreEmaRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetReputerScoreEmaRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_GetReputerScoreEmaRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetReputerScoreEmaRequest) Type() protoreflect.MessageType {
	return _fastReflection_GetReputerScoreEmaRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetReputerScoreEmaRequest) New() protoreflect.Message {
	return new(fastReflection_GetReputerScoreEmaRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetReputerScoreEmaRequest) Interface() protoreflect.ProtoMessage {
	return (*GetReputerScoreEmaRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetReputerScoreEmaRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_GetReputerScoreEmaRequest_topic_id, value) {
			return
		}
	}
	if x.Reputer != "" {
		value := protoreflect.ValueOfString(x.Reputer)
		if !f(fd_GetReputerScoreEmaRequest_reputer, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetReputerScoreEmaRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetReputerScoreEmaRequest.topic_id":
		return x.TopicId != uint64(0)
	case "emissions.v5.GetReputerScoreEmaRequest.reputer":
		return x.Reputer != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetReputerScoreEmaRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetReputerScoreEmaRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetReputerScoreEmaRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetReputerScoreEmaRequest.topic_id":
		x.TopicId = uint64(0)
	case "emissions.v5.GetReputerScoreEmaRequest.reputer":
		x.Reputer = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetReputerScoreEmaRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetReputerScoreEmaRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetReputerScoreEmaRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetReputerScoreEmaRequest.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	case "emissions.v5.GetReputerScoreEmaRequest.reputer":
		value := x.Reputer
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetReputerScoreEmaRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetReputerScoreEmaRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetReputerScoreEmaRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetReputerScoreEmaRequest.topic_id":
		x.TopicId = value.Uint()
	case "emissions.v5.GetReputerScoreEmaRequest.reputer":
		x.Reputer = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetReputerScoreEmaRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetReputerScoreEmaRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetReputerScoreEmaRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetReputerScoreEmaRequest.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.GetReputerScoreEmaRequest is not mutable"))
	case "emissions.v5.GetReputerScoreEmaRequest.reputer":
		panic(fmt.Errorf("field reputer of message emissions.v5.GetReputerScoreEmaRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetReputerScoreEmaRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetReputerScoreEmaRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetReputerScoreEmaRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetReputerScoreEmaRequest.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "emissions.v5.GetReputerScoreEmaRequest.reputer":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetReputerScoreEmaRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetReputerScoreEmaRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetReputerScoreEmaRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetReputerScoreEmaRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetReputerScoreEmaRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetReputerScoreEmaRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetReputerScoreEmaRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetReputerScoreEmaRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetReputerScoreEmaRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		l = len(x.Reputer)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetReputerScoreEmaRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Reputer) > 0 {
			i -= len(x.Reputer)
			copy(dAtA[i:], x.Reputer)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Reputer)))
			i--
			dAtA[i] = 0x12
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetReputerScoreEmaRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetReputerScoreEmaRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetReputerScoreEmaRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Reputer", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Reputer = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetReputerScoreEmaResponse       protoreflect.MessageDescriptor
	fd_GetReputerScoreEmaResponse_score protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetReputerScoreEmaResponse = File_emissions_v5_query_proto.Messages().ByName("GetReputerScoreEmaResponse")
	fd_GetReputerScoreEmaResponse_score = md_GetReputerScoreEmaResponse.Fields().ByName("score")
}

var _ protoreflect.Message = (*fastReflection_GetReputerScoreEmaResponse)(nil)

type fastReflection_GetReputerScoreEmaResponse GetReputerScoreEmaResponse

func (x *GetReputerScoreEmaResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetReputerScoreEmaResponse)(x)
}

func (x *GetReputerScoreEmaResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[121]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetReputerScoreEmaResponse_messageType fastReflection_GetReputerScoreEmaResponse_messageType
var _ protoreflect.MessageType = fastReflection_GetReputerScoreEmaResponse_messageType{}

type fastReflection_GetReputerScoreEmaResponse_messageType struct{}

func (x fastReflection_GetReputerScoreEmaResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetReputerScoreEmaResponse)(nil)
}
func (x fastReflection_GetReputerScoreEmaResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_GetReputerScoreEmaResponse)
}
func (x fastReflection_GetReputerScoreEmaResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetReputerScoreEmaResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetReputerScoreEmaResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_GetReputerScoreEmaResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetReputerScoreEmaResponse) Type() protoreflect.MessageType {
	return _fastReflection_GetReputerScoreEmaResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetReputerScoreEmaResponse) New() protoreflect.Message {
	return new(fastReflection_GetReputerScoreEmaResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetReputerScoreEmaResponse) Interface() protoreflect.ProtoMessage {
	return (*GetReputerScoreEmaResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetReputerScoreEmaResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Score != nil {
		value := protoreflect.ValueOfMessage(x.Score.ProtoReflect())
		if !f(fd_GetReputerScoreEmaResponse_score, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetReputerScoreEmaResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetReputerScoreEmaResponse.score":
		return x.Score != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetReputerScoreEmaResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetReputerScoreEmaResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetReputerScoreEmaResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetReputerScoreEmaResponse.score":
		x.Score = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetReputerScoreEmaResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetReputerScoreEmaResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetReputerScoreEmaResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetReputerScoreEmaResponse.score":
		value := x.Score
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetReputerScoreEmaResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetReputerScoreEmaResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetReputerScoreEmaResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetReputerScoreEmaResponse.score":
		x.Score = value.Message().Interface().(*v3.Score)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetReputerScoreEmaResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetReputerScoreEmaResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetReputerScoreEmaResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetReputerScoreEmaResponse.score":
		if x.Score == nil {
			x.Score = new(v3.Score)
		}
		return protoreflect.ValueOfMessage(x.Score.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetReputerScoreEmaResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetReputerScoreEmaResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetReputerScoreEmaResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetReputerScoreEmaResponse.score":
		m := new(v3.Score)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetReputerScoreEmaResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetReputerScoreEmaResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetReputerScoreEmaResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetReputerScoreEmaResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetReputerScoreEmaResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetReputerScoreEmaResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetReputerScoreEmaResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetReputerScoreEmaResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetReputerScoreEmaResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Score != nil {
			l = options.Size(x.Score)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetReputerScoreEmaResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Score != nil {
			encoded, err := options.Marshal(x.Score)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetReputerScoreEmaResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetReputerScoreEmaResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetReputerScoreEmaResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Score", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Score == nil {
					x.Score = &v3.Score{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Score); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetInferenceScoresUntilBlockRequest              protoreflect.MessageDescriptor
	fd_GetInferenceScoresUntilBlockRequest_topic_id     protoreflect.FieldDescriptor
	fd_GetInferenceScoresUntilBlockRequest_block_height protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetInferenceScoresUntilBlockRequest = File_emissions_v5_query_proto.Messages().ByName("GetInferenceScoresUntilBlockRequest")
	fd_GetInferenceScoresUntilBlockRequest_topic_id = md_GetInferenceScoresUntilBlockRequest.Fields().ByName("topic_id")
	fd_GetInferenceScoresUntilBlockRequest_block_height = md_GetInferenceScoresUntilBlockRequest.Fields().ByName("block_height")
}

var _ protoreflect.Message = (*fastReflection_GetInferenceScoresUntilBlockRequest)(nil)

type fastReflection_GetInferenceScoresUntilBlockRequest GetInferenceScoresUntilBlockRequest

func (x *GetInferenceScoresUntilBlockRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetInferenceScoresUntilBlockRequest)(x)
}

func (x *GetInferenceScoresUntilBlockRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[122]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetInferenceScoresUntilBlockRequest_messageType fastReflection_GetInferenceScoresUntilBlockRequest_messageType
var _ protoreflect.MessageType = fastReflection_GetInferenceScoresUntilBlockRequest_messageType{}

type fastReflection_GetInferenceScoresUntilBlockRequest_messageType struct{}

func (x fastReflection_GetInferenceScoresUntilBlockRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetInferenceScoresUntilBlockRequest)(nil)
}
func (x fastReflection_GetInferenceScoresUntilBlockRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_GetInferenceScoresUntilBlockRequest)
}
func (x fastReflection_GetInferenceScoresUntilBlockRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetInferenceScoresUntilBlockRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetInferenceScoresUntilBlockRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_GetInferenceScoresUntilBlockRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetInferenceScoresUntilBlockRequest) Type() protoreflect.MessageType {
	return _fastReflection_GetInferenceScoresUntilBlockRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetInferenceScoresUntilBlockRequest) New() protoreflect.Message {
	return new(fastReflection_GetInferenceScoresUntilBlockRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetInferenceScoresUntilBlockRequest) Interface() protoreflect.ProtoMessage {
	return (*GetInferenceScoresUntilBlockRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetInferenceScoresUntilBlockRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_GetInferenceScoresUntilBlockRequest_topic_id, value) {
			return
		}
	}
	if x.BlockHeight != int64(0) {
		value := protoreflect.ValueOfInt64(x.BlockHeight)
		if !f(fd_GetInferenceScoresUntilBlockRequest_block_height, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetInferenceScoresUntilBlockRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetInferenceScoresUntilBlockRequest.topic_id":
		return x.TopicId != uint64(0)
	case "emissions.v5.GetInferenceScoresUntilBlockRequest.block_height":
		return x.BlockHeight != int64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetInferenceScoresUntilBlockRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetInferenceScoresUntilBlockRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetInferenceScoresUntilBlockRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetInferenceScoresUntilBlockRequest.topic_id":
		x.TopicId = uint64(0)
	case "emissions.v5.GetInferenceScoresUntilBlockRequest.block_height":
		x.BlockHeight = int64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetInferenceScoresUntilBlockRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetInferenceScoresUntilBlockRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetInferenceScoresUntilBlockRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetInferenceScoresUntilBlockRequest.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	case "emissions.v5.GetInferenceScoresUntilBlockRequest.block_height":
		value := x.BlockHeight
		return protoreflect.ValueOfInt64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetInferenceScoresUntilBlockRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetInferenceScoresUntilBlockRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetInferenceScoresUntilBlockRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetInferenceScoresUntilBlockRequest.topic_id":
		x.TopicId = value.Uint()
	case "emissions.v5.GetInferenceScoresUntilBlockRequest.block_height":
		x.BlockHeight = value.Int()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetInferenceScoresUntilBlockRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetInferenceScoresUntilBlockRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetInferenceScoresUntilBlockRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetInferenceScoresUntilBlockRequest.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.GetInferenceScoresUntilBlockRequest is not mutable"))
	case "emissions.v5.GetInferenceScoresUntilBlockRequest.block_height":
		panic(fmt.Errorf("field block_height of message emissions.v5.GetInferenceScoresUntilBlockRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetInferenceScoresUntilBlockRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetInferenceScoresUntilBlockRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetInferenceScoresUntilBlockRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetInferenceScoresUntilBlockRequest.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "emissions.v5.GetInferenceScoresUntilBlockRequest.block_height":
		return protoreflect.ValueOfInt64(int64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetInferenceScoresUntilBlockRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetInferenceScoresUntilBlockRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetInferenceScoresUntilBlockRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetInferenceScoresUntilBlockRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetInferenceScoresUntilBlockRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetInferenceScoresUntilBlockRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetInferenceScoresUntilBlockRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetInferenceScoresUntilBlockRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetInferenceScoresUntilBlockRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		if x.BlockHeight != 0 {
			n += 1 + runtime.Sov(uint64(x.BlockHeight))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetInferenceScoresUntilBlockRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.BlockHeight != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.BlockHeight))
			i--
			dAtA[i] = 0x10
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetInferenceScoresUntilBlockRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetInferenceScoresUntilBlockRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetInferenceScoresUntilBlockRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BlockHeight", wireType)
				}
				x.BlockHeight = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.BlockHeight |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_GetInferenceScoresUntilBlockResponse_1_list)(nil)

type _GetInferenceScoresUntilBlockResponse_1_list struct {
	list *[]*v3.Score
}

func (x *_GetInferenceScoresUntilBlockResponse_1_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GetInferenceScoresUntilBlockResponse_1_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GetInferenceScoresUntilBlockResponse_1_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*v3.Score)
	(*x.list)[i] = concreteValue
}

func (x *_GetInferenceScoresUntilBlockResponse_1_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*v3.Score)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GetInferenceScoresUntilBlockResponse_1_list) AppendMutable() protoreflect.Value {
	v := new(v3.Score)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GetInferenceScoresUntilBlockResponse_1_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GetInferenceScoresUntilBlockResponse_1_list) NewElement() protoreflect.Value {
	v := new(v3.Score)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GetInferenceScoresUntilBlockResponse_1_list) IsValid() bool {
	return x.list != nil
}

var (
	md_GetInferenceScoresUntilBlockResponse        protoreflect.MessageDescriptor
	fd_GetInferenceScoresUntilBlockResponse_scores protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetInferenceScoresUntilBlockResponse = File_emissions_v5_query_proto.Messages().ByName("GetInferenceScoresUntilBlockResponse")
	fd_GetInferenceScoresUntilBlockResponse_scores = md_GetInferenceScoresUntilBlockResponse.Fields().ByName("scores")
}

var _ protoreflect.Message = (*fastReflection_GetInferenceScoresUntilBlockResponse)(nil)

type fastReflection_GetInferenceScoresUntilBlockResponse GetInferenceScoresUntilBlockResponse

func (x *GetInferenceScoresUntilBlockResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetInferenceScoresUntilBlockResponse)(x)
}

func (x *GetInferenceScoresUntilBlockResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[123]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetInferenceScoresUntilBlockResponse_messageType fastReflection_GetInferenceScoresUntilBlockResponse_messageType
var _ protoreflect.MessageType = fastReflection_GetInferenceScoresUntilBlockResponse_messageType{}

type fastReflection_GetInferenceScoresUntilBlockResponse_messageType struct{}

func (x fastReflection_GetInferenceScoresUntilBlockResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetInferenceScoresUntilBlockResponse)(nil)
}
func (x fastReflection_GetInferenceScoresUntilBlockResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_GetInferenceScoresUntilBlockResponse)
}
func (x fastReflection_GetInferenceScoresUntilBlockResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetInferenceScoresUntilBlockResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetInferenceScoresUntilBlockResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_GetInferenceScoresUntilBlockResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetInferenceScoresUntilBlockResponse) Type() protoreflect.MessageType {
	return _fastReflection_GetInferenceScoresUntilBlockResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetInferenceScoresUntilBlockResponse) New() protoreflect.Message {
	return new(fastReflection_GetInferenceScoresUntilBlockResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetInferenceScoresUntilBlockResponse) Interface() protoreflect.ProtoMessage {
	return (*GetInferenceScoresUntilBlockResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetInferenceScoresUntilBlockResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.Scores) != 0 {
		value := protoreflect.ValueOfList(&_GetInferenceScoresUntilBlockResponse_1_list{list: &x.Scores})
		if !f(fd_GetInferenceScoresUntilBlockResponse_scores, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetInferenceScoresUntilBlockResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetInferenceScoresUntilBlockResponse.scores":
		return len(x.Scores) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetInferenceScoresUntilBlockResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetInferenceScoresUntilBlockResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetInferenceScoresUntilBlockResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetInferenceScoresUntilBlockResponse.scores":
		x.Scores = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetInferenceScoresUntilBlockResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetInferenceScoresUntilBlockResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetInferenceScoresUntilBlockResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetInferenceScoresUntilBlockResponse.scores":
		if len(x.Scores) == 0 {
			return protoreflect.ValueOfList(&_GetInferenceScoresUntilBlockResponse_1_list{})
		}
		listValue := &_GetInferenceScoresUntilBlockResponse_1_list{list: &x.Scores}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetInferenceScoresUntilBlockResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetInferenceScoresUntilBlockResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetInferenceScoresUntilBlockResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetInferenceScoresUntilBlockResponse.scores":
		lv := value.List()
		clv := lv.(*_GetInferenceScoresUntilBlockResponse_1_list)
		x.Scores = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetInferenceScoresUntilBlockResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetInferenceScoresUntilBlockResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetInferenceScoresUntilBlockResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetInferenceScoresUntilBlockResponse.scores":
		if x.Scores == nil {
			x.Scores = []*v3.Score{}
		}
		value := &_GetInferenceScoresUntilBlockResponse_1_list{list: &x.Scores}
		return protoreflect.ValueOfList(value)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetInferenceScoresUntilBlockResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetInferenceScoresUntilBlockResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetInferenceScoresUntilBlockResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetInferenceScoresUntilBlockResponse.scores":
		list := []*v3.Score{}
		return protoreflect.ValueOfList(&_GetInferenceScoresUntilBlockResponse_1_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetInferenceScoresUntilBlockResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetInferenceScoresUntilBlockResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetInferenceScoresUntilBlockResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetInferenceScoresUntilBlockResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetInferenceScoresUntilBlockResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetInferenceScoresUntilBlockResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetInferenceScoresUntilBlockResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetInferenceScoresUntilBlockResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetInferenceScoresUntilBlockResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if len(x.Scores) > 0 {
			for _, e := range x.Scores {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetInferenceScoresUntilBlockResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Scores) > 0 {
			for iNdEx := len(x.Scores) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.Scores[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0xa
			}
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetInferenceScoresUntilBlockResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetInferenceScoresUntilBlockResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetInferenceScoresUntilBlockResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Scores", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Scores = append(x.Scores, &v3.Score{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Scores[len(x.Scores)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetPreviousTopicQuantileForecasterScoreEmaRequest          protoreflect.MessageDescriptor
	fd_GetPreviousTopicQuantileForecasterScoreEmaRequest_topic_id protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetPreviousTopicQuantileForecasterScoreEmaRequest = File_emissions_v5_query_proto.Messages().ByName("GetPreviousTopicQuantileForecasterScoreEmaRequest")
	fd_GetPreviousTopicQuantileForecasterScoreEmaRequest_topic_id = md_GetPreviousTopicQuantileForecasterScoreEmaRequest.Fields().ByName("topic_id")
}

var _ protoreflect.Message = (*fastReflection_GetPreviousTopicQuantileForecasterScoreEmaRequest)(nil)

type fastReflection_GetPreviousTopicQuantileForecasterScoreEmaRequest GetPreviousTopicQuantileForecasterScoreEmaRequest

func (x *GetPreviousTopicQuantileForecasterScoreEmaRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetPreviousTopicQuantileForecasterScoreEmaRequest)(x)
}

func (x *GetPreviousTopicQuantileForecasterScoreEmaRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[124]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetPreviousTopicQuantileForecasterScoreEmaRequest_messageType fastReflection_GetPreviousTopicQuantileForecasterScoreEmaRequest_messageType
var _ protoreflect.MessageType = fastReflection_GetPreviousTopicQuantileForecasterScoreEmaRequest_messageType{}

type fastReflection_GetPreviousTopicQuantileForecasterScoreEmaRequest_messageType struct{}

func (x fastReflection_GetPreviousTopicQuantileForecasterScoreEmaRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetPreviousTopicQuantileForecasterScoreEmaRequest)(nil)
}
func (x fastReflection_GetPreviousTopicQuantileForecasterScoreEmaRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_GetPreviousTopicQuantileForecasterScoreEmaRequest)
}
func (x fastReflection_GetPreviousTopicQuantileForecasterScoreEmaRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetPreviousTopicQuantileForecasterScoreEmaRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetPreviousTopicQuantileForecasterScoreEmaRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_GetPreviousTopicQuantileForecasterScoreEmaRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetPreviousTopicQuantileForecasterScoreEmaRequest) Type() protoreflect.MessageType {
	return _fastReflection_GetPreviousTopicQuantileForecasterScoreEmaRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetPreviousTopicQuantileForecasterScoreEmaRequest) New() protoreflect.Message {
	return new(fastReflection_GetPreviousTopicQuantileForecasterScoreEmaRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetPreviousTopicQuantileForecasterScoreEmaRequest) Interface() protoreflect.ProtoMessage {
	return (*GetPreviousTopicQuantileForecasterScoreEmaRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetPreviousTopicQuantileForecasterScoreEmaRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_GetPreviousTopicQuantileForecasterScoreEmaRequest_topic_id, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetPreviousTopicQuantileForecasterScoreEmaRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetPreviousTopicQuantileForecasterScoreEmaRequest.topic_id":
		return x.TopicId != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetPreviousTopicQuantileForecasterScoreEmaRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetPreviousTopicQuantileForecasterScoreEmaRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetPreviousTopicQuantileForecasterScoreEmaRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetPreviousTopicQuantileForecasterScoreEmaRequest.topic_id":
		x.TopicId = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetPreviousTopicQuantileForecasterScoreEmaRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetPreviousTopicQuantileForecasterScoreEmaRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetPreviousTopicQuantileForecasterScoreEmaRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetPreviousTopicQuantileForecasterScoreEmaRequest.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetPreviousTopicQuantileForecasterScoreEmaRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetPreviousTopicQuantileForecasterScoreEmaRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetPreviousTopicQuantileForecasterScoreEmaRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetPreviousTopicQuantileForecasterScoreEmaRequest.topic_id":
		x.TopicId = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetPreviousTopicQuantileForecasterScoreEmaRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetPreviousTopicQuantileForecasterScoreEmaRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetPreviousTopicQuantileForecasterScoreEmaRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetPreviousTopicQuantileForecasterScoreEmaRequest.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.GetPreviousTopicQuantileForecasterScoreEmaRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetPreviousTopicQuantileForecasterScoreEmaRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetPreviousTopicQuantileForecasterScoreEmaRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetPreviousTopicQuantileForecasterScoreEmaRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetPreviousTopicQuantileForecasterScoreEmaRequest.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetPreviousTopicQuantileForecasterScoreEmaRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetPreviousTopicQuantileForecasterScoreEmaRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetPreviousTopicQuantileForecasterScoreEmaRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetPreviousTopicQuantileForecasterScoreEmaRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetPreviousTopicQuantileForecasterScoreEmaRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetPreviousTopicQuantileForecasterScoreEmaRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetPreviousTopicQuantileForecasterScoreEmaRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetPreviousTopicQuantileForecasterScoreEmaRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetPreviousTopicQuantileForecasterScoreEmaRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetPreviousTopicQuantileForecasterScoreEmaRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetPreviousTopicQuantileForecasterScoreEmaRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetPreviousTopicQuantileForecasterScoreEmaRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetPreviousTopicQuantileForecasterScoreEmaRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetPreviousTopicQuantileForecasterScoreEmaResponse       protoreflect.MessageDescriptor
	fd_GetPreviousTopicQuantileForecasterScoreEmaResponse_value protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetPreviousTopicQuantileForecasterScoreEmaResponse = File_emissions_v5_query_proto.Messages().ByName("GetPreviousTopicQuantileForecasterScoreEmaResponse")
	fd_GetPreviousTopicQuantileForecasterScoreEmaResponse_value = md_GetPreviousTopicQuantileForecasterScoreEmaResponse.Fields().ByName("value")
}

var _ protoreflect.Message = (*fastReflection_GetPreviousTopicQuantileForecasterScoreEmaResponse)(nil)

type fastReflection_GetPreviousTopicQuantileForecasterScoreEmaResponse GetPreviousTopicQuantileForecasterScoreEmaResponse

func (x *GetPreviousTopicQuantileForecasterScoreEmaResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetPreviousTopicQuantileForecasterScoreEmaResponse)(x)
}

func (x *GetPreviousTopicQuantileForecasterScoreEmaResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[125]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetPreviousTopicQuantileForecasterScoreEmaResponse_messageType fastReflection_GetPreviousTopicQuantileForecasterScoreEmaResponse_messageType
var _ protoreflect.MessageType = fastReflection_GetPreviousTopicQuantileForecasterScoreEmaResponse_messageType{}

type fastReflection_GetPreviousTopicQuantileForecasterScoreEmaResponse_messageType struct{}

func (x fastReflection_GetPreviousTopicQuantileForecasterScoreEmaResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetPreviousTopicQuantileForecasterScoreEmaResponse)(nil)
}
func (x fastReflection_GetPreviousTopicQuantileForecasterScoreEmaResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_GetPreviousTopicQuantileForecasterScoreEmaResponse)
}
func (x fastReflection_GetPreviousTopicQuantileForecasterScoreEmaResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetPreviousTopicQuantileForecasterScoreEmaResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetPreviousTopicQuantileForecasterScoreEmaResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_GetPreviousTopicQuantileForecasterScoreEmaResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetPreviousTopicQuantileForecasterScoreEmaResponse) Type() protoreflect.MessageType {
	return _fastReflection_GetPreviousTopicQuantileForecasterScoreEmaResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetPreviousTopicQuantileForecasterScoreEmaResponse) New() protoreflect.Message {
	return new(fastReflection_GetPreviousTopicQuantileForecasterScoreEmaResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetPreviousTopicQuantileForecasterScoreEmaResponse) Interface() protoreflect.ProtoMessage {
	return (*GetPreviousTopicQuantileForecasterScoreEmaResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetPreviousTopicQuantileForecasterScoreEmaResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Value != "" {
		value := protoreflect.ValueOfString(x.Value)
		if !f(fd_GetPreviousTopicQuantileForecasterScoreEmaResponse_value, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetPreviousTopicQuantileForecasterScoreEmaResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetPreviousTopicQuantileForecasterScoreEmaResponse.value":
		return x.Value != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetPreviousTopicQuantileForecasterScoreEmaResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetPreviousTopicQuantileForecasterScoreEmaResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetPreviousTopicQuantileForecasterScoreEmaResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetPreviousTopicQuantileForecasterScoreEmaResponse.value":
		x.Value = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetPreviousTopicQuantileForecasterScoreEmaResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetPreviousTopicQuantileForecasterScoreEmaResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetPreviousTopicQuantileForecasterScoreEmaResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetPreviousTopicQuantileForecasterScoreEmaResponse.value":
		value := x.Value
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetPreviousTopicQuantileForecasterScoreEmaResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetPreviousTopicQuantileForecasterScoreEmaResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetPreviousTopicQuantileForecasterScoreEmaResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetPreviousTopicQuantileForecasterScoreEmaResponse.value":
		x.Value = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetPreviousTopicQuantileForecasterScoreEmaResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetPreviousTopicQuantileForecasterScoreEmaResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetPreviousTopicQuantileForecasterScoreEmaResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetPreviousTopicQuantileForecasterScoreEmaResponse.value":
		panic(fmt.Errorf("field value of message emissions.v5.GetPreviousTopicQuantileForecasterScoreEmaResponse is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetPreviousTopicQuantileForecasterScoreEmaResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetPreviousTopicQuantileForecasterScoreEmaResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetPreviousTopicQuantileForecasterScoreEmaResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetPreviousTopicQuantileForecasterScoreEmaResponse.value":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetPreviousTopicQuantileForecasterScoreEmaResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetPreviousTopicQuantileForecasterScoreEmaResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetPreviousTopicQuantileForecasterScoreEmaResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetPreviousTopicQuantileForecasterScoreEmaResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetPreviousTopicQuantileForecasterScoreEmaResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetPreviousTopicQuantileForecasterScoreEmaResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetPreviousTopicQuantileForecasterScoreEmaResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetPreviousTopicQuantileForecasterScoreEmaResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetPreviousTopicQuantileForecasterScoreEmaResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Value)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetPreviousTopicQuantileForecasterScoreEmaResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Value) > 0 {
			i -= len(x.Value)
			copy(dAtA[i:], x.Value)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Value)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetPreviousTopicQuantileForecasterScoreEmaResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetPreviousTopicQuantileForecasterScoreEmaResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetPreviousTopicQuantileForecasterScoreEmaResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Value", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Value = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetPreviousTopicQuantileInfererScoreEmaRequest          protoreflect.MessageDescriptor
	fd_GetPreviousTopicQuantileInfererScoreEmaRequest_topic_id protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetPreviousTopicQuantileInfererScoreEmaRequest = File_emissions_v5_query_proto.Messages().ByName("GetPreviousTopicQuantileInfererScoreEmaRequest")
	fd_GetPreviousTopicQuantileInfererScoreEmaRequest_topic_id = md_GetPreviousTopicQuantileInfererScoreEmaRequest.Fields().ByName("topic_id")
}

var _ protoreflect.Message = (*fastReflection_GetPreviousTopicQuantileInfererScoreEmaRequest)(nil)

type fastReflection_GetPreviousTopicQuantileInfererScoreEmaRequest GetPreviousTopicQuantileInfererScoreEmaRequest

func (x *GetPreviousTopicQuantileInfererScoreEmaRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetPreviousTopicQuantileInfererScoreEmaRequest)(x)
}

func (x *GetPreviousTopicQuantileInfererScoreEmaRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[126]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetPreviousTopicQuantileInfererScoreEmaRequest_messageType fastReflection_GetPreviousTopicQuantileInfererScoreEmaRequest_messageType
var _ protoreflect.MessageType = fastReflection_GetPreviousTopicQuantileInfererScoreEmaRequest_messageType{}

type fastReflection_GetPreviousTopicQuantileInfererScoreEmaRequest_messageType struct{}

func (x fastReflection_GetPreviousTopicQuantileInfererScoreEmaRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetPreviousTopicQuantileInfererScoreEmaRequest)(nil)
}
func (x fastReflection_GetPreviousTopicQuantileInfererScoreEmaRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_GetPreviousTopicQuantileInfererScoreEmaRequest)
}
func (x fastReflection_GetPreviousTopicQuantileInfererScoreEmaRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetPreviousTopicQuantileInfererScoreEmaRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetPreviousTopicQuantileInfererScoreEmaRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_GetPreviousTopicQuantileInfererScoreEmaRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetPreviousTopicQuantileInfererScoreEmaRequest) Type() protoreflect.MessageType {
	return _fastReflection_GetPreviousTopicQuantileInfererScoreEmaRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetPreviousTopicQuantileInfererScoreEmaRequest) New() protoreflect.Message {
	return new(fastReflection_GetPreviousTopicQuantileInfererScoreEmaRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetPreviousTopicQuantileInfererScoreEmaRequest) Interface() protoreflect.ProtoMessage {
	return (*GetPreviousTopicQuantileInfererScoreEmaRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetPreviousTopicQuantileInfererScoreEmaRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_GetPreviousTopicQuantileInfererScoreEmaRequest_topic_id, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetPreviousTopicQuantileInfererScoreEmaRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetPreviousTopicQuantileInfererScoreEmaRequest.topic_id":
		return x.TopicId != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetPreviousTopicQuantileInfererScoreEmaRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetPreviousTopicQuantileInfererScoreEmaRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetPreviousTopicQuantileInfererScoreEmaRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetPreviousTopicQuantileInfererScoreEmaRequest.topic_id":
		x.TopicId = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetPreviousTopicQuantileInfererScoreEmaRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetPreviousTopicQuantileInfererScoreEmaRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetPreviousTopicQuantileInfererScoreEmaRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetPreviousTopicQuantileInfererScoreEmaRequest.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetPreviousTopicQuantileInfererScoreEmaRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetPreviousTopicQuantileInfererScoreEmaRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetPreviousTopicQuantileInfererScoreEmaRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetPreviousTopicQuantileInfererScoreEmaRequest.topic_id":
		x.TopicId = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetPreviousTopicQuantileInfererScoreEmaRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetPreviousTopicQuantileInfererScoreEmaRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetPreviousTopicQuantileInfererScoreEmaRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetPreviousTopicQuantileInfererScoreEmaRequest.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.GetPreviousTopicQuantileInfererScoreEmaRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetPreviousTopicQuantileInfererScoreEmaRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetPreviousTopicQuantileInfererScoreEmaRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetPreviousTopicQuantileInfererScoreEmaRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetPreviousTopicQuantileInfererScoreEmaRequest.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetPreviousTopicQuantileInfererScoreEmaRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetPreviousTopicQuantileInfererScoreEmaRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetPreviousTopicQuantileInfererScoreEmaRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetPreviousTopicQuantileInfererScoreEmaRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetPreviousTopicQuantileInfererScoreEmaRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetPreviousTopicQuantileInfererScoreEmaRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetPreviousTopicQuantileInfererScoreEmaRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetPreviousTopicQuantileInfererScoreEmaRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetPreviousTopicQuantileInfererScoreEmaRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetPreviousTopicQuantileInfererScoreEmaRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetPreviousTopicQuantileInfererScoreEmaRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetPreviousTopicQuantileInfererScoreEmaRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetPreviousTopicQuantileInfererScoreEmaRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetPreviousTopicQuantileInfererScoreEmaResponse       protoreflect.MessageDescriptor
	fd_GetPreviousTopicQuantileInfererScoreEmaResponse_value protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetPreviousTopicQuantileInfererScoreEmaResponse = File_emissions_v5_query_proto.Messages().ByName("GetPreviousTopicQuantileInfererScoreEmaResponse")
	fd_GetPreviousTopicQuantileInfererScoreEmaResponse_value = md_GetPreviousTopicQuantileInfererScoreEmaResponse.Fields().ByName("value")
}

var _ protoreflect.Message = (*fastReflection_GetPreviousTopicQuantileInfererScoreEmaResponse)(nil)

type fastReflection_GetPreviousTopicQuantileInfererScoreEmaResponse GetPreviousTopicQuantileInfererScoreEmaResponse

func (x *GetPreviousTopicQuantileInfererScoreEmaResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetPreviousTopicQuantileInfererScoreEmaResponse)(x)
}

func (x *GetPreviousTopicQuantileInfererScoreEmaResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[127]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetPreviousTopicQuantileInfererScoreEmaResponse_messageType fastReflection_GetPreviousTopicQuantileInfererScoreEmaResponse_messageType
var _ protoreflect.MessageType = fastReflection_GetPreviousTopicQuantileInfererScoreEmaResponse_messageType{}

type fastReflection_GetPreviousTopicQuantileInfererScoreEmaResponse_messageType struct{}

func (x fastReflection_GetPreviousTopicQuantileInfererScoreEmaResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetPreviousTopicQuantileInfererScoreEmaResponse)(nil)
}
func (x fastReflection_GetPreviousTopicQuantileInfererScoreEmaResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_GetPreviousTopicQuantileInfererScoreEmaResponse)
}
func (x fastReflection_GetPreviousTopicQuantileInfererScoreEmaResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetPreviousTopicQuantileInfererScoreEmaResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetPreviousTopicQuantileInfererScoreEmaResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_GetPreviousTopicQuantileInfererScoreEmaResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetPreviousTopicQuantileInfererScoreEmaResponse) Type() protoreflect.MessageType {
	return _fastReflection_GetPreviousTopicQuantileInfererScoreEmaResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetPreviousTopicQuantileInfererScoreEmaResponse) New() protoreflect.Message {
	return new(fastReflection_GetPreviousTopicQuantileInfererScoreEmaResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetPreviousTopicQuantileInfererScoreEmaResponse) Interface() protoreflect.ProtoMessage {
	return (*GetPreviousTopicQuantileInfererScoreEmaResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetPreviousTopicQuantileInfererScoreEmaResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Value != "" {
		value := protoreflect.ValueOfString(x.Value)
		if !f(fd_GetPreviousTopicQuantileInfererScoreEmaResponse_value, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetPreviousTopicQuantileInfererScoreEmaResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetPreviousTopicQuantileInfererScoreEmaResponse.value":
		return x.Value != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetPreviousTopicQuantileInfererScoreEmaResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetPreviousTopicQuantileInfererScoreEmaResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetPreviousTopicQuantileInfererScoreEmaResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetPreviousTopicQuantileInfererScoreEmaResponse.value":
		x.Value = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetPreviousTopicQuantileInfererScoreEmaResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetPreviousTopicQuantileInfererScoreEmaResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetPreviousTopicQuantileInfererScoreEmaResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetPreviousTopicQuantileInfererScoreEmaResponse.value":
		value := x.Value
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetPreviousTopicQuantileInfererScoreEmaResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetPreviousTopicQuantileInfererScoreEmaResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetPreviousTopicQuantileInfererScoreEmaResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetPreviousTopicQuantileInfererScoreEmaResponse.value":
		x.Value = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetPreviousTopicQuantileInfererScoreEmaResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetPreviousTopicQuantileInfererScoreEmaResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetPreviousTopicQuantileInfererScoreEmaResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetPreviousTopicQuantileInfererScoreEmaResponse.value":
		panic(fmt.Errorf("field value of message emissions.v5.GetPreviousTopicQuantileInfererScoreEmaResponse is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetPreviousTopicQuantileInfererScoreEmaResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetPreviousTopicQuantileInfererScoreEmaResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetPreviousTopicQuantileInfererScoreEmaResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetPreviousTopicQuantileInfererScoreEmaResponse.value":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetPreviousTopicQuantileInfererScoreEmaResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetPreviousTopicQuantileInfererScoreEmaResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetPreviousTopicQuantileInfererScoreEmaResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetPreviousTopicQuantileInfererScoreEmaResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetPreviousTopicQuantileInfererScoreEmaResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetPreviousTopicQuantileInfererScoreEmaResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetPreviousTopicQuantileInfererScoreEmaResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetPreviousTopicQuantileInfererScoreEmaResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetPreviousTopicQuantileInfererScoreEmaResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Value)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetPreviousTopicQuantileInfererScoreEmaResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Value) > 0 {
			i -= len(x.Value)
			copy(dAtA[i:], x.Value)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Value)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetPreviousTopicQuantileInfererScoreEmaResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetPreviousTopicQuantileInfererScoreEmaResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetPreviousTopicQuantileInfererScoreEmaResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Value", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Value = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetPreviousTopicQuantileReputerScoreEmaRequest          protoreflect.MessageDescriptor
	fd_GetPreviousTopicQuantileReputerScoreEmaRequest_topic_id protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetPreviousTopicQuantileReputerScoreEmaRequest = File_emissions_v5_query_proto.Messages().ByName("GetPreviousTopicQuantileReputerScoreEmaRequest")
	fd_GetPreviousTopicQuantileReputerScoreEmaRequest_topic_id = md_GetPreviousTopicQuantileReputerScoreEmaRequest.Fields().ByName("topic_id")
}

var _ protoreflect.Message = (*fastReflection_GetPreviousTopicQuantileReputerScoreEmaRequest)(nil)

type fastReflection_GetPreviousTopicQuantileReputerScoreEmaRequest GetPreviousTopicQuantileReputerScoreEmaRequest

func (x *GetPreviousTopicQuantileReputerScoreEmaRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetPreviousTopicQuantileReputerScoreEmaRequest)(x)
}

func (x *GetPreviousTopicQuantileReputerScoreEmaRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[128]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetPreviousTopicQuantileReputerScoreEmaRequest_messageType fastReflection_GetPreviousTopicQuantileReputerScoreEmaRequest_messageType
var _ protoreflect.MessageType = fastReflection_GetPreviousTopicQuantileReputerScoreEmaRequest_messageType{}

type fastReflection_GetPreviousTopicQuantileReputerScoreEmaRequest_messageType struct{}

func (x fastReflection_GetPreviousTopicQuantileReputerScoreEmaRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetPreviousTopicQuantileReputerScoreEmaRequest)(nil)
}
func (x fastReflection_GetPreviousTopicQuantileReputerScoreEmaRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_GetPreviousTopicQuantileReputerScoreEmaRequest)
}
func (x fastReflection_GetPreviousTopicQuantileReputerScoreEmaRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetPreviousTopicQuantileReputerScoreEmaRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetPreviousTopicQuantileReputerScoreEmaRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_GetPreviousTopicQuantileReputerScoreEmaRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetPreviousTopicQuantileReputerScoreEmaRequest) Type() protoreflect.MessageType {
	return _fastReflection_GetPreviousTopicQuantileReputerScoreEmaRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetPreviousTopicQuantileReputerScoreEmaRequest) New() protoreflect.Message {
	return new(fastReflection_GetPreviousTopicQuantileReputerScoreEmaRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetPreviousTopicQuantileReputerScoreEmaRequest) Interface() protoreflect.ProtoMessage {
	return (*GetPreviousTopicQuantileReputerScoreEmaRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetPreviousTopicQuantileReputerScoreEmaRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_GetPreviousTopicQuantileReputerScoreEmaRequest_topic_id, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetPreviousTopicQuantileReputerScoreEmaRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetPreviousTopicQuantileReputerScoreEmaRequest.topic_id":
		return x.TopicId != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetPreviousTopicQuantileReputerScoreEmaRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetPreviousTopicQuantileReputerScoreEmaRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetPreviousTopicQuantileReputerScoreEmaRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetPreviousTopicQuantileReputerScoreEmaRequest.topic_id":
		x.TopicId = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetPreviousTopicQuantileReputerScoreEmaRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetPreviousTopicQuantileReputerScoreEmaRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetPreviousTopicQuantileReputerScoreEmaRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetPreviousTopicQuantileReputerScoreEmaRequest.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetPreviousTopicQuantileReputerScoreEmaRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetPreviousTopicQuantileReputerScoreEmaRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetPreviousTopicQuantileReputerScoreEmaRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetPreviousTopicQuantileReputerScoreEmaRequest.topic_id":
		x.TopicId = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetPreviousTopicQuantileReputerScoreEmaRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetPreviousTopicQuantileReputerScoreEmaRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetPreviousTopicQuantileReputerScoreEmaRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetPreviousTopicQuantileReputerScoreEmaRequest.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.GetPreviousTopicQuantileReputerScoreEmaRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetPreviousTopicQuantileReputerScoreEmaRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetPreviousTopicQuantileReputerScoreEmaRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetPreviousTopicQuantileReputerScoreEmaRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetPreviousTopicQuantileReputerScoreEmaRequest.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetPreviousTopicQuantileReputerScoreEmaRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetPreviousTopicQuantileReputerScoreEmaRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetPreviousTopicQuantileReputerScoreEmaRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetPreviousTopicQuantileReputerScoreEmaRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetPreviousTopicQuantileReputerScoreEmaRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetPreviousTopicQuantileReputerScoreEmaRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetPreviousTopicQuantileReputerScoreEmaRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetPreviousTopicQuantileReputerScoreEmaRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetPreviousTopicQuantileReputerScoreEmaRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetPreviousTopicQuantileReputerScoreEmaRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetPreviousTopicQuantileReputerScoreEmaRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetPreviousTopicQuantileReputerScoreEmaRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetPreviousTopicQuantileReputerScoreEmaRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetPreviousTopicQuantileReputerScoreEmaResponse       protoreflect.MessageDescriptor
	fd_GetPreviousTopicQuantileReputerScoreEmaResponse_value protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetPreviousTopicQuantileReputerScoreEmaResponse = File_emissions_v5_query_proto.Messages().ByName("GetPreviousTopicQuantileReputerScoreEmaResponse")
	fd_GetPreviousTopicQuantileReputerScoreEmaResponse_value = md_GetPreviousTopicQuantileReputerScoreEmaResponse.Fields().ByName("value")
}

var _ protoreflect.Message = (*fastReflection_GetPreviousTopicQuantileReputerScoreEmaResponse)(nil)

type fastReflection_GetPreviousTopicQuantileReputerScoreEmaResponse GetPreviousTopicQuantileReputerScoreEmaResponse

func (x *GetPreviousTopicQuantileReputerScoreEmaResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetPreviousTopicQuantileReputerScoreEmaResponse)(x)
}

func (x *GetPreviousTopicQuantileReputerScoreEmaResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[129]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetPreviousTopicQuantileReputerScoreEmaResponse_messageType fastReflection_GetPreviousTopicQuantileReputerScoreEmaResponse_messageType
var _ protoreflect.MessageType = fastReflection_GetPreviousTopicQuantileReputerScoreEmaResponse_messageType{}

type fastReflection_GetPreviousTopicQuantileReputerScoreEmaResponse_messageType struct{}

func (x fastReflection_GetPreviousTopicQuantileReputerScoreEmaResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetPreviousTopicQuantileReputerScoreEmaResponse)(nil)
}
func (x fastReflection_GetPreviousTopicQuantileReputerScoreEmaResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_GetPreviousTopicQuantileReputerScoreEmaResponse)
}
func (x fastReflection_GetPreviousTopicQuantileReputerScoreEmaResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetPreviousTopicQuantileReputerScoreEmaResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetPreviousTopicQuantileReputerScoreEmaResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_GetPreviousTopicQuantileReputerScoreEmaResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetPreviousTopicQuantileReputerScoreEmaResponse) Type() protoreflect.MessageType {
	return _fastReflection_GetPreviousTopicQuantileReputerScoreEmaResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetPreviousTopicQuantileReputerScoreEmaResponse) New() protoreflect.Message {
	return new(fastReflection_GetPreviousTopicQuantileReputerScoreEmaResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetPreviousTopicQuantileReputerScoreEmaResponse) Interface() protoreflect.ProtoMessage {
	return (*GetPreviousTopicQuantileReputerScoreEmaResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetPreviousTopicQuantileReputerScoreEmaResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Value != "" {
		value := protoreflect.ValueOfString(x.Value)
		if !f(fd_GetPreviousTopicQuantileReputerScoreEmaResponse_value, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetPreviousTopicQuantileReputerScoreEmaResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetPreviousTopicQuantileReputerScoreEmaResponse.value":
		return x.Value != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetPreviousTopicQuantileReputerScoreEmaResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetPreviousTopicQuantileReputerScoreEmaResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetPreviousTopicQuantileReputerScoreEmaResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetPreviousTopicQuantileReputerScoreEmaResponse.value":
		x.Value = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetPreviousTopicQuantileReputerScoreEmaResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetPreviousTopicQuantileReputerScoreEmaResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetPreviousTopicQuantileReputerScoreEmaResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetPreviousTopicQuantileReputerScoreEmaResponse.value":
		value := x.Value
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetPreviousTopicQuantileReputerScoreEmaResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetPreviousTopicQuantileReputerScoreEmaResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetPreviousTopicQuantileReputerScoreEmaResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetPreviousTopicQuantileReputerScoreEmaResponse.value":
		x.Value = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetPreviousTopicQuantileReputerScoreEmaResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetPreviousTopicQuantileReputerScoreEmaResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetPreviousTopicQuantileReputerScoreEmaResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetPreviousTopicQuantileReputerScoreEmaResponse.value":
		panic(fmt.Errorf("field value of message emissions.v5.GetPreviousTopicQuantileReputerScoreEmaResponse is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetPreviousTopicQuantileReputerScoreEmaResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetPreviousTopicQuantileReputerScoreEmaResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetPreviousTopicQuantileReputerScoreEmaResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetPreviousTopicQuantileReputerScoreEmaResponse.value":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetPreviousTopicQuantileReputerScoreEmaResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetPreviousTopicQuantileReputerScoreEmaResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetPreviousTopicQuantileReputerScoreEmaResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetPreviousTopicQuantileReputerScoreEmaResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetPreviousTopicQuantileReputerScoreEmaResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetPreviousTopicQuantileReputerScoreEmaResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetPreviousTopicQuantileReputerScoreEmaResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetPreviousTopicQuantileReputerScoreEmaResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetPreviousTopicQuantileReputerScoreEmaResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Value)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetPreviousTopicQuantileReputerScoreEmaResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Value) > 0 {
			i -= len(x.Value)
			copy(dAtA[i:], x.Value)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Value)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetPreviousTopicQuantileReputerScoreEmaResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetPreviousTopicQuantileReputerScoreEmaResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetPreviousTopicQuantileReputerScoreEmaResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Value", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Value = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetWorkerInferenceScoresAtBlockRequest              protoreflect.MessageDescriptor
	fd_GetWorkerInferenceScoresAtBlockRequest_topic_id     protoreflect.FieldDescriptor
	fd_GetWorkerInferenceScoresAtBlockRequest_block_height protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetWorkerInferenceScoresAtBlockRequest = File_emissions_v5_query_proto.Messages().ByName("GetWorkerInferenceScoresAtBlockRequest")
	fd_GetWorkerInferenceScoresAtBlockRequest_topic_id = md_GetWorkerInferenceScoresAtBlockRequest.Fields().ByName("topic_id")
	fd_GetWorkerInferenceScoresAtBlockRequest_block_height = md_GetWorkerInferenceScoresAtBlockRequest.Fields().ByName("block_height")
}

var _ protoreflect.Message = (*fastReflection_GetWorkerInferenceScoresAtBlockRequest)(nil)

type fastReflection_GetWorkerInferenceScoresAtBlockRequest GetWorkerInferenceScoresAtBlockRequest

func (x *GetWorkerInferenceScoresAtBlockRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetWorkerInferenceScoresAtBlockRequest)(x)
}

func (x *GetWorkerInferenceScoresAtBlockRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[130]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetWorkerInferenceScoresAtBlockRequest_messageType fastReflection_GetWorkerInferenceScoresAtBlockRequest_messageType
var _ protoreflect.MessageType = fastReflection_GetWorkerInferenceScoresAtBlockRequest_messageType{}

type fastReflection_GetWorkerInferenceScoresAtBlockRequest_messageType struct{}

func (x fastReflection_GetWorkerInferenceScoresAtBlockRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetWorkerInferenceScoresAtBlockRequest)(nil)
}
func (x fastReflection_GetWorkerInferenceScoresAtBlockRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_GetWorkerInferenceScoresAtBlockRequest)
}
func (x fastReflection_GetWorkerInferenceScoresAtBlockRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetWorkerInferenceScoresAtBlockRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetWorkerInferenceScoresAtBlockRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_GetWorkerInferenceScoresAtBlockRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetWorkerInferenceScoresAtBlockRequest) Type() protoreflect.MessageType {
	return _fastReflection_GetWorkerInferenceScoresAtBlockRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetWorkerInferenceScoresAtBlockRequest) New() protoreflect.Message {
	return new(fastReflection_GetWorkerInferenceScoresAtBlockRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetWorkerInferenceScoresAtBlockRequest) Interface() protoreflect.ProtoMessage {
	return (*GetWorkerInferenceScoresAtBlockRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetWorkerInferenceScoresAtBlockRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_GetWorkerInferenceScoresAtBlockRequest_topic_id, value) {
			return
		}
	}
	if x.BlockHeight != int64(0) {
		value := protoreflect.ValueOfInt64(x.BlockHeight)
		if !f(fd_GetWorkerInferenceScoresAtBlockRequest_block_height, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetWorkerInferenceScoresAtBlockRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetWorkerInferenceScoresAtBlockRequest.topic_id":
		return x.TopicId != uint64(0)
	case "emissions.v5.GetWorkerInferenceScoresAtBlockRequest.block_height":
		return x.BlockHeight != int64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetWorkerInferenceScoresAtBlockRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetWorkerInferenceScoresAtBlockRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetWorkerInferenceScoresAtBlockRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetWorkerInferenceScoresAtBlockRequest.topic_id":
		x.TopicId = uint64(0)
	case "emissions.v5.GetWorkerInferenceScoresAtBlockRequest.block_height":
		x.BlockHeight = int64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetWorkerInferenceScoresAtBlockRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetWorkerInferenceScoresAtBlockRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetWorkerInferenceScoresAtBlockRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetWorkerInferenceScoresAtBlockRequest.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	case "emissions.v5.GetWorkerInferenceScoresAtBlockRequest.block_height":
		value := x.BlockHeight
		return protoreflect.ValueOfInt64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetWorkerInferenceScoresAtBlockRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetWorkerInferenceScoresAtBlockRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetWorkerInferenceScoresAtBlockRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetWorkerInferenceScoresAtBlockRequest.topic_id":
		x.TopicId = value.Uint()
	case "emissions.v5.GetWorkerInferenceScoresAtBlockRequest.block_height":
		x.BlockHeight = value.Int()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetWorkerInferenceScoresAtBlockRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetWorkerInferenceScoresAtBlockRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetWorkerInferenceScoresAtBlockRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetWorkerInferenceScoresAtBlockRequest.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.GetWorkerInferenceScoresAtBlockRequest is not mutable"))
	case "emissions.v5.GetWorkerInferenceScoresAtBlockRequest.block_height":
		panic(fmt.Errorf("field block_height of message emissions.v5.GetWorkerInferenceScoresAtBlockRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetWorkerInferenceScoresAtBlockRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetWorkerInferenceScoresAtBlockRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetWorkerInferenceScoresAtBlockRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetWorkerInferenceScoresAtBlockRequest.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "emissions.v5.GetWorkerInferenceScoresAtBlockRequest.block_height":
		return protoreflect.ValueOfInt64(int64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetWorkerInferenceScoresAtBlockRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetWorkerInferenceScoresAtBlockRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetWorkerInferenceScoresAtBlockRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetWorkerInferenceScoresAtBlockRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetWorkerInferenceScoresAtBlockRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetWorkerInferenceScoresAtBlockRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetWorkerInferenceScoresAtBlockRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetWorkerInferenceScoresAtBlockRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetWorkerInferenceScoresAtBlockRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		if x.BlockHeight != 0 {
			n += 1 + runtime.Sov(uint64(x.BlockHeight))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetWorkerInferenceScoresAtBlockRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.BlockHeight != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.BlockHeight))
			i--
			dAtA[i] = 0x10
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetWorkerInferenceScoresAtBlockRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetWorkerInferenceScoresAtBlockRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetWorkerInferenceScoresAtBlockRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BlockHeight", wireType)
				}
				x.BlockHeight = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.BlockHeight |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetWorkerInferenceScoresAtBlockResponse        protoreflect.MessageDescriptor
	fd_GetWorkerInferenceScoresAtBlockResponse_scores protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetWorkerInferenceScoresAtBlockResponse = File_emissions_v5_query_proto.Messages().ByName("GetWorkerInferenceScoresAtBlockResponse")
	fd_GetWorkerInferenceScoresAtBlockResponse_scores = md_GetWorkerInferenceScoresAtBlockResponse.Fields().ByName("scores")
}

var _ protoreflect.Message = (*fastReflection_GetWorkerInferenceScoresAtBlockResponse)(nil)

type fastReflection_GetWorkerInferenceScoresAtBlockResponse GetWorkerInferenceScoresAtBlockResponse

func (x *GetWorkerInferenceScoresAtBlockResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetWorkerInferenceScoresAtBlockResponse)(x)
}

func (x *GetWorkerInferenceScoresAtBlockResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[131]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetWorkerInferenceScoresAtBlockResponse_messageType fastReflection_GetWorkerInferenceScoresAtBlockResponse_messageType
var _ protoreflect.MessageType = fastReflection_GetWorkerInferenceScoresAtBlockResponse_messageType{}

type fastReflection_GetWorkerInferenceScoresAtBlockResponse_messageType struct{}

func (x fastReflection_GetWorkerInferenceScoresAtBlockResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetWorkerInferenceScoresAtBlockResponse)(nil)
}
func (x fastReflection_GetWorkerInferenceScoresAtBlockResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_GetWorkerInferenceScoresAtBlockResponse)
}
func (x fastReflection_GetWorkerInferenceScoresAtBlockResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetWorkerInferenceScoresAtBlockResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetWorkerInferenceScoresAtBlockResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_GetWorkerInferenceScoresAtBlockResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetWorkerInferenceScoresAtBlockResponse) Type() protoreflect.MessageType {
	return _fastReflection_GetWorkerInferenceScoresAtBlockResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetWorkerInferenceScoresAtBlockResponse) New() protoreflect.Message {
	return new(fastReflection_GetWorkerInferenceScoresAtBlockResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetWorkerInferenceScoresAtBlockResponse) Interface() protoreflect.ProtoMessage {
	return (*GetWorkerInferenceScoresAtBlockResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetWorkerInferenceScoresAtBlockResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Scores != nil {
		value := protoreflect.ValueOfMessage(x.Scores.ProtoReflect())
		if !f(fd_GetWorkerInferenceScoresAtBlockResponse_scores, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetWorkerInferenceScoresAtBlockResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetWorkerInferenceScoresAtBlockResponse.scores":
		return x.Scores != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetWorkerInferenceScoresAtBlockResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetWorkerInferenceScoresAtBlockResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetWorkerInferenceScoresAtBlockResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetWorkerInferenceScoresAtBlockResponse.scores":
		x.Scores = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetWorkerInferenceScoresAtBlockResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetWorkerInferenceScoresAtBlockResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetWorkerInferenceScoresAtBlockResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetWorkerInferenceScoresAtBlockResponse.scores":
		value := x.Scores
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetWorkerInferenceScoresAtBlockResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetWorkerInferenceScoresAtBlockResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetWorkerInferenceScoresAtBlockResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetWorkerInferenceScoresAtBlockResponse.scores":
		x.Scores = value.Message().Interface().(*v3.Scores)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetWorkerInferenceScoresAtBlockResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetWorkerInferenceScoresAtBlockResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetWorkerInferenceScoresAtBlockResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetWorkerInferenceScoresAtBlockResponse.scores":
		if x.Scores == nil {
			x.Scores = new(v3.Scores)
		}
		return protoreflect.ValueOfMessage(x.Scores.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetWorkerInferenceScoresAtBlockResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetWorkerInferenceScoresAtBlockResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetWorkerInferenceScoresAtBlockResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetWorkerInferenceScoresAtBlockResponse.scores":
		m := new(v3.Scores)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetWorkerInferenceScoresAtBlockResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetWorkerInferenceScoresAtBlockResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetWorkerInferenceScoresAtBlockResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetWorkerInferenceScoresAtBlockResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetWorkerInferenceScoresAtBlockResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetWorkerInferenceScoresAtBlockResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetWorkerInferenceScoresAtBlockResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetWorkerInferenceScoresAtBlockResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetWorkerInferenceScoresAtBlockResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Scores != nil {
			l = options.Size(x.Scores)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetWorkerInferenceScoresAtBlockResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Scores != nil {
			encoded, err := options.Marshal(x.Scores)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetWorkerInferenceScoresAtBlockResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetWorkerInferenceScoresAtBlockResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetWorkerInferenceScoresAtBlockResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Scores", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Scores == nil {
					x.Scores = &v3.Scores{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Scores); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetCurrentLowestInfererScoreRequest          protoreflect.MessageDescriptor
	fd_GetCurrentLowestInfererScoreRequest_topic_id protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetCurrentLowestInfererScoreRequest = File_emissions_v5_query_proto.Messages().ByName("GetCurrentLowestInfererScoreRequest")
	fd_GetCurrentLowestInfererScoreRequest_topic_id = md_GetCurrentLowestInfererScoreRequest.Fields().ByName("topic_id")
}

var _ protoreflect.Message = (*fastReflection_GetCurrentLowestInfererScoreRequest)(nil)

type fastReflection_GetCurrentLowestInfererScoreRequest GetCurrentLowestInfererScoreRequest

func (x *GetCurrentLowestInfererScoreRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetCurrentLowestInfererScoreRequest)(x)
}

func (x *GetCurrentLowestInfererScoreRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[132]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetCurrentLowestInfererScoreRequest_messageType fastReflection_GetCurrentLowestInfererScoreRequest_messageType
var _ protoreflect.MessageType = fastReflection_GetCurrentLowestInfererScoreRequest_messageType{}

type fastReflection_GetCurrentLowestInfererScoreRequest_messageType struct{}

func (x fastReflection_GetCurrentLowestInfererScoreRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetCurrentLowestInfererScoreRequest)(nil)
}
func (x fastReflection_GetCurrentLowestInfererScoreRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_GetCurrentLowestInfererScoreRequest)
}
func (x fastReflection_GetCurrentLowestInfererScoreRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetCurrentLowestInfererScoreRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetCurrentLowestInfererScoreRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_GetCurrentLowestInfererScoreRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetCurrentLowestInfererScoreRequest) Type() protoreflect.MessageType {
	return _fastReflection_GetCurrentLowestInfererScoreRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetCurrentLowestInfererScoreRequest) New() protoreflect.Message {
	return new(fastReflection_GetCurrentLowestInfererScoreRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetCurrentLowestInfererScoreRequest) Interface() protoreflect.ProtoMessage {
	return (*GetCurrentLowestInfererScoreRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetCurrentLowestInfererScoreRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_GetCurrentLowestInfererScoreRequest_topic_id, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetCurrentLowestInfererScoreRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetCurrentLowestInfererScoreRequest.topic_id":
		return x.TopicId != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetCurrentLowestInfererScoreRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetCurrentLowestInfererScoreRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetCurrentLowestInfererScoreRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetCurrentLowestInfererScoreRequest.topic_id":
		x.TopicId = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetCurrentLowestInfererScoreRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetCurrentLowestInfererScoreRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetCurrentLowestInfererScoreRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetCurrentLowestInfererScoreRequest.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetCurrentLowestInfererScoreRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetCurrentLowestInfererScoreRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetCurrentLowestInfererScoreRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetCurrentLowestInfererScoreRequest.topic_id":
		x.TopicId = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetCurrentLowestInfererScoreRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetCurrentLowestInfererScoreRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetCurrentLowestInfererScoreRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetCurrentLowestInfererScoreRequest.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.GetCurrentLowestInfererScoreRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetCurrentLowestInfererScoreRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetCurrentLowestInfererScoreRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetCurrentLowestInfererScoreRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetCurrentLowestInfererScoreRequest.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetCurrentLowestInfererScoreRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetCurrentLowestInfererScoreRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetCurrentLowestInfererScoreRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetCurrentLowestInfererScoreRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetCurrentLowestInfererScoreRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetCurrentLowestInfererScoreRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetCurrentLowestInfererScoreRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetCurrentLowestInfererScoreRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetCurrentLowestInfererScoreRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetCurrentLowestInfererScoreRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetCurrentLowestInfererScoreRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetCurrentLowestInfererScoreRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetCurrentLowestInfererScoreRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetCurrentLowestInfererScoreResponse       protoreflect.MessageDescriptor
	fd_GetCurrentLowestInfererScoreResponse_score protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetCurrentLowestInfererScoreResponse = File_emissions_v5_query_proto.Messages().ByName("GetCurrentLowestInfererScoreResponse")
	fd_GetCurrentLowestInfererScoreResponse_score = md_GetCurrentLowestInfererScoreResponse.Fields().ByName("score")
}

var _ protoreflect.Message = (*fastReflection_GetCurrentLowestInfererScoreResponse)(nil)

type fastReflection_GetCurrentLowestInfererScoreResponse GetCurrentLowestInfererScoreResponse

func (x *GetCurrentLowestInfererScoreResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetCurrentLowestInfererScoreResponse)(x)
}

func (x *GetCurrentLowestInfererScoreResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[133]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetCurrentLowestInfererScoreResponse_messageType fastReflection_GetCurrentLowestInfererScoreResponse_messageType
var _ protoreflect.MessageType = fastReflection_GetCurrentLowestInfererScoreResponse_messageType{}

type fastReflection_GetCurrentLowestInfererScoreResponse_messageType struct{}

func (x fastReflection_GetCurrentLowestInfererScoreResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetCurrentLowestInfererScoreResponse)(nil)
}
func (x fastReflection_GetCurrentLowestInfererScoreResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_GetCurrentLowestInfererScoreResponse)
}
func (x fastReflection_GetCurrentLowestInfererScoreResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetCurrentLowestInfererScoreResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetCurrentLowestInfererScoreResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_GetCurrentLowestInfererScoreResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetCurrentLowestInfererScoreResponse) Type() protoreflect.MessageType {
	return _fastReflection_GetCurrentLowestInfererScoreResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetCurrentLowestInfererScoreResponse) New() protoreflect.Message {
	return new(fastReflection_GetCurrentLowestInfererScoreResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetCurrentLowestInfererScoreResponse) Interface() protoreflect.ProtoMessage {
	return (*GetCurrentLowestInfererScoreResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetCurrentLowestInfererScoreResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Score != nil {
		value := protoreflect.ValueOfMessage(x.Score.ProtoReflect())
		if !f(fd_GetCurrentLowestInfererScoreResponse_score, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetCurrentLowestInfererScoreResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetCurrentLowestInfererScoreResponse.score":
		return x.Score != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetCurrentLowestInfererScoreResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetCurrentLowestInfererScoreResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetCurrentLowestInfererScoreResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetCurrentLowestInfererScoreResponse.score":
		x.Score = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetCurrentLowestInfererScoreResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetCurrentLowestInfererScoreResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetCurrentLowestInfererScoreResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetCurrentLowestInfererScoreResponse.score":
		value := x.Score
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetCurrentLowestInfererScoreResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetCurrentLowestInfererScoreResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetCurrentLowestInfererScoreResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetCurrentLowestInfererScoreResponse.score":
		x.Score = value.Message().Interface().(*v3.Score)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetCurrentLowestInfererScoreResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetCurrentLowestInfererScoreResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetCurrentLowestInfererScoreResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetCurrentLowestInfererScoreResponse.score":
		if x.Score == nil {
			x.Score = new(v3.Score)
		}
		return protoreflect.ValueOfMessage(x.Score.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetCurrentLowestInfererScoreResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetCurrentLowestInfererScoreResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetCurrentLowestInfererScoreResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetCurrentLowestInfererScoreResponse.score":
		m := new(v3.Score)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetCurrentLowestInfererScoreResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetCurrentLowestInfererScoreResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetCurrentLowestInfererScoreResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetCurrentLowestInfererScoreResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetCurrentLowestInfererScoreResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetCurrentLowestInfererScoreResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetCurrentLowestInfererScoreResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetCurrentLowestInfererScoreResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetCurrentLowestInfererScoreResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Score != nil {
			l = options.Size(x.Score)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetCurrentLowestInfererScoreResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Score != nil {
			encoded, err := options.Marshal(x.Score)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetCurrentLowestInfererScoreResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetCurrentLowestInfererScoreResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetCurrentLowestInfererScoreResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Score", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Score == nil {
					x.Score = &v3.Score{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Score); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetForecastScoresUntilBlockRequest              protoreflect.MessageDescriptor
	fd_GetForecastScoresUntilBlockRequest_topic_id     protoreflect.FieldDescriptor
	fd_GetForecastScoresUntilBlockRequest_block_height protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetForecastScoresUntilBlockRequest = File_emissions_v5_query_proto.Messages().ByName("GetForecastScoresUntilBlockRequest")
	fd_GetForecastScoresUntilBlockRequest_topic_id = md_GetForecastScoresUntilBlockRequest.Fields().ByName("topic_id")
	fd_GetForecastScoresUntilBlockRequest_block_height = md_GetForecastScoresUntilBlockRequest.Fields().ByName("block_height")
}

var _ protoreflect.Message = (*fastReflection_GetForecastScoresUntilBlockRequest)(nil)

type fastReflection_GetForecastScoresUntilBlockRequest GetForecastScoresUntilBlockRequest

func (x *GetForecastScoresUntilBlockRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetForecastScoresUntilBlockRequest)(x)
}

func (x *GetForecastScoresUntilBlockRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[134]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetForecastScoresUntilBlockRequest_messageType fastReflection_GetForecastScoresUntilBlockRequest_messageType
var _ protoreflect.MessageType = fastReflection_GetForecastScoresUntilBlockRequest_messageType{}

type fastReflection_GetForecastScoresUntilBlockRequest_messageType struct{}

func (x fastReflection_GetForecastScoresUntilBlockRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetForecastScoresUntilBlockRequest)(nil)
}
func (x fastReflection_GetForecastScoresUntilBlockRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_GetForecastScoresUntilBlockRequest)
}
func (x fastReflection_GetForecastScoresUntilBlockRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetForecastScoresUntilBlockRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetForecastScoresUntilBlockRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_GetForecastScoresUntilBlockRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetForecastScoresUntilBlockRequest) Type() protoreflect.MessageType {
	return _fastReflection_GetForecastScoresUntilBlockRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetForecastScoresUntilBlockRequest) New() protoreflect.Message {
	return new(fastReflection_GetForecastScoresUntilBlockRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetForecastScoresUntilBlockRequest) Interface() protoreflect.ProtoMessage {
	return (*GetForecastScoresUntilBlockRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetForecastScoresUntilBlockRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_GetForecastScoresUntilBlockRequest_topic_id, value) {
			return
		}
	}
	if x.BlockHeight != int64(0) {
		value := protoreflect.ValueOfInt64(x.BlockHeight)
		if !f(fd_GetForecastScoresUntilBlockRequest_block_height, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetForecastScoresUntilBlockRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetForecastScoresUntilBlockRequest.topic_id":
		return x.TopicId != uint64(0)
	case "emissions.v5.GetForecastScoresUntilBlockRequest.block_height":
		return x.BlockHeight != int64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetForecastScoresUntilBlockRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetForecastScoresUntilBlockRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetForecastScoresUntilBlockRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetForecastScoresUntilBlockRequest.topic_id":
		x.TopicId = uint64(0)
	case "emissions.v5.GetForecastScoresUntilBlockRequest.block_height":
		x.BlockHeight = int64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetForecastScoresUntilBlockRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetForecastScoresUntilBlockRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetForecastScoresUntilBlockRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetForecastScoresUntilBlockRequest.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	case "emissions.v5.GetForecastScoresUntilBlockRequest.block_height":
		value := x.BlockHeight
		return protoreflect.ValueOfInt64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetForecastScoresUntilBlockRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetForecastScoresUntilBlockRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetForecastScoresUntilBlockRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetForecastScoresUntilBlockRequest.topic_id":
		x.TopicId = value.Uint()
	case "emissions.v5.GetForecastScoresUntilBlockRequest.block_height":
		x.BlockHeight = value.Int()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetForecastScoresUntilBlockRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetForecastScoresUntilBlockRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetForecastScoresUntilBlockRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetForecastScoresUntilBlockRequest.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.GetForecastScoresUntilBlockRequest is not mutable"))
	case "emissions.v5.GetForecastScoresUntilBlockRequest.block_height":
		panic(fmt.Errorf("field block_height of message emissions.v5.GetForecastScoresUntilBlockRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetForecastScoresUntilBlockRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetForecastScoresUntilBlockRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetForecastScoresUntilBlockRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetForecastScoresUntilBlockRequest.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "emissions.v5.GetForecastScoresUntilBlockRequest.block_height":
		return protoreflect.ValueOfInt64(int64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetForecastScoresUntilBlockRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetForecastScoresUntilBlockRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetForecastScoresUntilBlockRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetForecastScoresUntilBlockRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetForecastScoresUntilBlockRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetForecastScoresUntilBlockRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetForecastScoresUntilBlockRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetForecastScoresUntilBlockRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetForecastScoresUntilBlockRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		if x.BlockHeight != 0 {
			n += 1 + runtime.Sov(uint64(x.BlockHeight))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetForecastScoresUntilBlockRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.BlockHeight != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.BlockHeight))
			i--
			dAtA[i] = 0x10
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetForecastScoresUntilBlockRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetForecastScoresUntilBlockRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetForecastScoresUntilBlockRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BlockHeight", wireType)
				}
				x.BlockHeight = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.BlockHeight |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_GetForecastScoresUntilBlockResponse_1_list)(nil)

type _GetForecastScoresUntilBlockResponse_1_list struct {
	list *[]*v3.Score
}

func (x *_GetForecastScoresUntilBlockResponse_1_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GetForecastScoresUntilBlockResponse_1_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GetForecastScoresUntilBlockResponse_1_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*v3.Score)
	(*x.list)[i] = concreteValue
}

func (x *_GetForecastScoresUntilBlockResponse_1_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*v3.Score)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GetForecastScoresUntilBlockResponse_1_list) AppendMutable() protoreflect.Value {
	v := new(v3.Score)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GetForecastScoresUntilBlockResponse_1_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GetForecastScoresUntilBlockResponse_1_list) NewElement() protoreflect.Value {
	v := new(v3.Score)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GetForecastScoresUntilBlockResponse_1_list) IsValid() bool {
	return x.list != nil
}

var (
	md_GetForecastScoresUntilBlockResponse        protoreflect.MessageDescriptor
	fd_GetForecastScoresUntilBlockResponse_scores protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetForecastScoresUntilBlockResponse = File_emissions_v5_query_proto.Messages().ByName("GetForecastScoresUntilBlockResponse")
	fd_GetForecastScoresUntilBlockResponse_scores = md_GetForecastScoresUntilBlockResponse.Fields().ByName("scores")
}

var _ protoreflect.Message = (*fastReflection_GetForecastScoresUntilBlockResponse)(nil)

type fastReflection_GetForecastScoresUntilBlockResponse GetForecastScoresUntilBlockResponse

func (x *GetForecastScoresUntilBlockResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetForecastScoresUntilBlockResponse)(x)
}

func (x *GetForecastScoresUntilBlockResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[135]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetForecastScoresUntilBlockResponse_messageType fastReflection_GetForecastScoresUntilBlockResponse_messageType
var _ protoreflect.MessageType = fastReflection_GetForecastScoresUntilBlockResponse_messageType{}

type fastReflection_GetForecastScoresUntilBlockResponse_messageType struct{}

func (x fastReflection_GetForecastScoresUntilBlockResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetForecastScoresUntilBlockResponse)(nil)
}
func (x fastReflection_GetForecastScoresUntilBlockResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_GetForecastScoresUntilBlockResponse)
}
func (x fastReflection_GetForecastScoresUntilBlockResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetForecastScoresUntilBlockResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetForecastScoresUntilBlockResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_GetForecastScoresUntilBlockResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetForecastScoresUntilBlockResponse) Type() protoreflect.MessageType {
	return _fastReflection_GetForecastScoresUntilBlockResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetForecastScoresUntilBlockResponse) New() protoreflect.Message {
	return new(fastReflection_GetForecastScoresUntilBlockResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetForecastScoresUntilBlockResponse) Interface() protoreflect.ProtoMessage {
	return (*GetForecastScoresUntilBlockResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetForecastScoresUntilBlockResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.Scores) != 0 {
		value := protoreflect.ValueOfList(&_GetForecastScoresUntilBlockResponse_1_list{list: &x.Scores})
		if !f(fd_GetForecastScoresUntilBlockResponse_scores, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetForecastScoresUntilBlockResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetForecastScoresUntilBlockResponse.scores":
		return len(x.Scores) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetForecastScoresUntilBlockResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetForecastScoresUntilBlockResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetForecastScoresUntilBlockResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetForecastScoresUntilBlockResponse.scores":
		x.Scores = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetForecastScoresUntilBlockResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetForecastScoresUntilBlockResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetForecastScoresUntilBlockResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetForecastScoresUntilBlockResponse.scores":
		if len(x.Scores) == 0 {
			return protoreflect.ValueOfList(&_GetForecastScoresUntilBlockResponse_1_list{})
		}
		listValue := &_GetForecastScoresUntilBlockResponse_1_list{list: &x.Scores}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetForecastScoresUntilBlockResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetForecastScoresUntilBlockResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetForecastScoresUntilBlockResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetForecastScoresUntilBlockResponse.scores":
		lv := value.List()
		clv := lv.(*_GetForecastScoresUntilBlockResponse_1_list)
		x.Scores = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetForecastScoresUntilBlockResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetForecastScoresUntilBlockResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetForecastScoresUntilBlockResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetForecastScoresUntilBlockResponse.scores":
		if x.Scores == nil {
			x.Scores = []*v3.Score{}
		}
		value := &_GetForecastScoresUntilBlockResponse_1_list{list: &x.Scores}
		return protoreflect.ValueOfList(value)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetForecastScoresUntilBlockResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetForecastScoresUntilBlockResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetForecastScoresUntilBlockResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetForecastScoresUntilBlockResponse.scores":
		list := []*v3.Score{}
		return protoreflect.ValueOfList(&_GetForecastScoresUntilBlockResponse_1_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetForecastScoresUntilBlockResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetForecastScoresUntilBlockResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetForecastScoresUntilBlockResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetForecastScoresUntilBlockResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetForecastScoresUntilBlockResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetForecastScoresUntilBlockResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetForecastScoresUntilBlockResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetForecastScoresUntilBlockResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetForecastScoresUntilBlockResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if len(x.Scores) > 0 {
			for _, e := range x.Scores {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetForecastScoresUntilBlockResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Scores) > 0 {
			for iNdEx := len(x.Scores) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.Scores[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0xa
			}
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetForecastScoresUntilBlockResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetForecastScoresUntilBlockResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetForecastScoresUntilBlockResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Scores", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Scores = append(x.Scores, &v3.Score{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Scores[len(x.Scores)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetWorkerForecastScoresAtBlockRequest              protoreflect.MessageDescriptor
	fd_GetWorkerForecastScoresAtBlockRequest_topic_id     protoreflect.FieldDescriptor
	fd_GetWorkerForecastScoresAtBlockRequest_block_height protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetWorkerForecastScoresAtBlockRequest = File_emissions_v5_query_proto.Messages().ByName("GetWorkerForecastScoresAtBlockRequest")
	fd_GetWorkerForecastScoresAtBlockRequest_topic_id = md_GetWorkerForecastScoresAtBlockRequest.Fields().ByName("topic_id")
	fd_GetWorkerForecastScoresAtBlockRequest_block_height = md_GetWorkerForecastScoresAtBlockRequest.Fields().ByName("block_height")
}

var _ protoreflect.Message = (*fastReflection_GetWorkerForecastScoresAtBlockRequest)(nil)

type fastReflection_GetWorkerForecastScoresAtBlockRequest GetWorkerForecastScoresAtBlockRequest

func (x *GetWorkerForecastScoresAtBlockRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetWorkerForecastScoresAtBlockRequest)(x)
}

func (x *GetWorkerForecastScoresAtBlockRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[136]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetWorkerForecastScoresAtBlockRequest_messageType fastReflection_GetWorkerForecastScoresAtBlockRequest_messageType
var _ protoreflect.MessageType = fastReflection_GetWorkerForecastScoresAtBlockRequest_messageType{}

type fastReflection_GetWorkerForecastScoresAtBlockRequest_messageType struct{}

func (x fastReflection_GetWorkerForecastScoresAtBlockRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetWorkerForecastScoresAtBlockRequest)(nil)
}
func (x fastReflection_GetWorkerForecastScoresAtBlockRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_GetWorkerForecastScoresAtBlockRequest)
}
func (x fastReflection_GetWorkerForecastScoresAtBlockRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetWorkerForecastScoresAtBlockRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetWorkerForecastScoresAtBlockRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_GetWorkerForecastScoresAtBlockRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetWorkerForecastScoresAtBlockRequest) Type() protoreflect.MessageType {
	return _fastReflection_GetWorkerForecastScoresAtBlockRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetWorkerForecastScoresAtBlockRequest) New() protoreflect.Message {
	return new(fastReflection_GetWorkerForecastScoresAtBlockRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetWorkerForecastScoresAtBlockRequest) Interface() protoreflect.ProtoMessage {
	return (*GetWorkerForecastScoresAtBlockRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetWorkerForecastScoresAtBlockRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_GetWorkerForecastScoresAtBlockRequest_topic_id, value) {
			return
		}
	}
	if x.BlockHeight != int64(0) {
		value := protoreflect.ValueOfInt64(x.BlockHeight)
		if !f(fd_GetWorkerForecastScoresAtBlockRequest_block_height, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetWorkerForecastScoresAtBlockRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetWorkerForecastScoresAtBlockRequest.topic_id":
		return x.TopicId != uint64(0)
	case "emissions.v5.GetWorkerForecastScoresAtBlockRequest.block_height":
		return x.BlockHeight != int64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetWorkerForecastScoresAtBlockRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetWorkerForecastScoresAtBlockRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetWorkerForecastScoresAtBlockRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetWorkerForecastScoresAtBlockRequest.topic_id":
		x.TopicId = uint64(0)
	case "emissions.v5.GetWorkerForecastScoresAtBlockRequest.block_height":
		x.BlockHeight = int64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetWorkerForecastScoresAtBlockRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetWorkerForecastScoresAtBlockRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetWorkerForecastScoresAtBlockRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetWorkerForecastScoresAtBlockRequest.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	case "emissions.v5.GetWorkerForecastScoresAtBlockRequest.block_height":
		value := x.BlockHeight
		return protoreflect.ValueOfInt64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetWorkerForecastScoresAtBlockRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetWorkerForecastScoresAtBlockRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetWorkerForecastScoresAtBlockRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetWorkerForecastScoresAtBlockRequest.topic_id":
		x.TopicId = value.Uint()
	case "emissions.v5.GetWorkerForecastScoresAtBlockRequest.block_height":
		x.BlockHeight = value.Int()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetWorkerForecastScoresAtBlockRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetWorkerForecastScoresAtBlockRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetWorkerForecastScoresAtBlockRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetWorkerForecastScoresAtBlockRequest.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.GetWorkerForecastScoresAtBlockRequest is not mutable"))
	case "emissions.v5.GetWorkerForecastScoresAtBlockRequest.block_height":
		panic(fmt.Errorf("field block_height of message emissions.v5.GetWorkerForecastScoresAtBlockRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetWorkerForecastScoresAtBlockRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetWorkerForecastScoresAtBlockRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetWorkerForecastScoresAtBlockRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetWorkerForecastScoresAtBlockRequest.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "emissions.v5.GetWorkerForecastScoresAtBlockRequest.block_height":
		return protoreflect.ValueOfInt64(int64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetWorkerForecastScoresAtBlockRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetWorkerForecastScoresAtBlockRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetWorkerForecastScoresAtBlockRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetWorkerForecastScoresAtBlockRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetWorkerForecastScoresAtBlockRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetWorkerForecastScoresAtBlockRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetWorkerForecastScoresAtBlockRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetWorkerForecastScoresAtBlockRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetWorkerForecastScoresAtBlockRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		if x.BlockHeight != 0 {
			n += 1 + runtime.Sov(uint64(x.BlockHeight))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetWorkerForecastScoresAtBlockRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.BlockHeight != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.BlockHeight))
			i--
			dAtA[i] = 0x10
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetWorkerForecastScoresAtBlockRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetWorkerForecastScoresAtBlockRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetWorkerForecastScoresAtBlockRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BlockHeight", wireType)
				}
				x.BlockHeight = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.BlockHeight |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetWorkerForecastScoresAtBlockResponse        protoreflect.MessageDescriptor
	fd_GetWorkerForecastScoresAtBlockResponse_scores protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetWorkerForecastScoresAtBlockResponse = File_emissions_v5_query_proto.Messages().ByName("GetWorkerForecastScoresAtBlockResponse")
	fd_GetWorkerForecastScoresAtBlockResponse_scores = md_GetWorkerForecastScoresAtBlockResponse.Fields().ByName("scores")
}

var _ protoreflect.Message = (*fastReflection_GetWorkerForecastScoresAtBlockResponse)(nil)

type fastReflection_GetWorkerForecastScoresAtBlockResponse GetWorkerForecastScoresAtBlockResponse

func (x *GetWorkerForecastScoresAtBlockResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetWorkerForecastScoresAtBlockResponse)(x)
}

func (x *GetWorkerForecastScoresAtBlockResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[137]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetWorkerForecastScoresAtBlockResponse_messageType fastReflection_GetWorkerForecastScoresAtBlockResponse_messageType
var _ protoreflect.MessageType = fastReflection_GetWorkerForecastScoresAtBlockResponse_messageType{}

type fastReflection_GetWorkerForecastScoresAtBlockResponse_messageType struct{}

func (x fastReflection_GetWorkerForecastScoresAtBlockResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetWorkerForecastScoresAtBlockResponse)(nil)
}
func (x fastReflection_GetWorkerForecastScoresAtBlockResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_GetWorkerForecastScoresAtBlockResponse)
}
func (x fastReflection_GetWorkerForecastScoresAtBlockResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetWorkerForecastScoresAtBlockResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetWorkerForecastScoresAtBlockResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_GetWorkerForecastScoresAtBlockResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetWorkerForecastScoresAtBlockResponse) Type() protoreflect.MessageType {
	return _fastReflection_GetWorkerForecastScoresAtBlockResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetWorkerForecastScoresAtBlockResponse) New() protoreflect.Message {
	return new(fastReflection_GetWorkerForecastScoresAtBlockResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetWorkerForecastScoresAtBlockResponse) Interface() protoreflect.ProtoMessage {
	return (*GetWorkerForecastScoresAtBlockResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetWorkerForecastScoresAtBlockResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Scores != nil {
		value := protoreflect.ValueOfMessage(x.Scores.ProtoReflect())
		if !f(fd_GetWorkerForecastScoresAtBlockResponse_scores, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetWorkerForecastScoresAtBlockResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetWorkerForecastScoresAtBlockResponse.scores":
		return x.Scores != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetWorkerForecastScoresAtBlockResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetWorkerForecastScoresAtBlockResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetWorkerForecastScoresAtBlockResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetWorkerForecastScoresAtBlockResponse.scores":
		x.Scores = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetWorkerForecastScoresAtBlockResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetWorkerForecastScoresAtBlockResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetWorkerForecastScoresAtBlockResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetWorkerForecastScoresAtBlockResponse.scores":
		value := x.Scores
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetWorkerForecastScoresAtBlockResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetWorkerForecastScoresAtBlockResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetWorkerForecastScoresAtBlockResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetWorkerForecastScoresAtBlockResponse.scores":
		x.Scores = value.Message().Interface().(*v3.Scores)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetWorkerForecastScoresAtBlockResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetWorkerForecastScoresAtBlockResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetWorkerForecastScoresAtBlockResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetWorkerForecastScoresAtBlockResponse.scores":
		if x.Scores == nil {
			x.Scores = new(v3.Scores)
		}
		return protoreflect.ValueOfMessage(x.Scores.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetWorkerForecastScoresAtBlockResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetWorkerForecastScoresAtBlockResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetWorkerForecastScoresAtBlockResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetWorkerForecastScoresAtBlockResponse.scores":
		m := new(v3.Scores)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetWorkerForecastScoresAtBlockResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetWorkerForecastScoresAtBlockResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetWorkerForecastScoresAtBlockResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetWorkerForecastScoresAtBlockResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetWorkerForecastScoresAtBlockResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetWorkerForecastScoresAtBlockResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetWorkerForecastScoresAtBlockResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetWorkerForecastScoresAtBlockResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetWorkerForecastScoresAtBlockResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Scores != nil {
			l = options.Size(x.Scores)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetWorkerForecastScoresAtBlockResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Scores != nil {
			encoded, err := options.Marshal(x.Scores)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetWorkerForecastScoresAtBlockResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetWorkerForecastScoresAtBlockResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetWorkerForecastScoresAtBlockResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Scores", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Scores == nil {
					x.Scores = &v3.Scores{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Scores); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetCurrentLowestForecasterScoreRequest          protoreflect.MessageDescriptor
	fd_GetCurrentLowestForecasterScoreRequest_topic_id protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetCurrentLowestForecasterScoreRequest = File_emissions_v5_query_proto.Messages().ByName("GetCurrentLowestForecasterScoreRequest")
	fd_GetCurrentLowestForecasterScoreRequest_topic_id = md_GetCurrentLowestForecasterScoreRequest.Fields().ByName("topic_id")
}

var _ protoreflect.Message = (*fastReflection_GetCurrentLowestForecasterScoreRequest)(nil)

type fastReflection_GetCurrentLowestForecasterScoreRequest GetCurrentLowestForecasterScoreRequest

func (x *GetCurrentLowestForecasterScoreRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetCurrentLowestForecasterScoreRequest)(x)
}

func (x *GetCurrentLowestForecasterScoreRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[138]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetCurrentLowestForecasterScoreRequest_messageType fastReflection_GetCurrentLowestForecasterScoreRequest_messageType
var _ protoreflect.MessageType = fastReflection_GetCurrentLowestForecasterScoreRequest_messageType{}

type fastReflection_GetCurrentLowestForecasterScoreRequest_messageType struct{}

func (x fastReflection_GetCurrentLowestForecasterScoreRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetCurrentLowestForecasterScoreRequest)(nil)
}
func (x fastReflection_GetCurrentLowestForecasterScoreRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_GetCurrentLowestForecasterScoreRequest)
}
func (x fastReflection_GetCurrentLowestForecasterScoreRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetCurrentLowestForecasterScoreRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetCurrentLowestForecasterScoreRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_GetCurrentLowestForecasterScoreRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetCurrentLowestForecasterScoreRequest) Type() protoreflect.MessageType {
	return _fastReflection_GetCurrentLowestForecasterScoreRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetCurrentLowestForecasterScoreRequest) New() protoreflect.Message {
	return new(fastReflection_GetCurrentLowestForecasterScoreRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetCurrentLowestForecasterScoreRequest) Interface() protoreflect.ProtoMessage {
	return (*GetCurrentLowestForecasterScoreRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetCurrentLowestForecasterScoreRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_GetCurrentLowestForecasterScoreRequest_topic_id, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetCurrentLowestForecasterScoreRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetCurrentLowestForecasterScoreRequest.topic_id":
		return x.TopicId != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetCurrentLowestForecasterScoreRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetCurrentLowestForecasterScoreRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetCurrentLowestForecasterScoreRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetCurrentLowestForecasterScoreRequest.topic_id":
		x.TopicId = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetCurrentLowestForecasterScoreRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetCurrentLowestForecasterScoreRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetCurrentLowestForecasterScoreRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetCurrentLowestForecasterScoreRequest.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetCurrentLowestForecasterScoreRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetCurrentLowestForecasterScoreRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetCurrentLowestForecasterScoreRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetCurrentLowestForecasterScoreRequest.topic_id":
		x.TopicId = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetCurrentLowestForecasterScoreRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetCurrentLowestForecasterScoreRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetCurrentLowestForecasterScoreRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetCurrentLowestForecasterScoreRequest.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.GetCurrentLowestForecasterScoreRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetCurrentLowestForecasterScoreRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetCurrentLowestForecasterScoreRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetCurrentLowestForecasterScoreRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetCurrentLowestForecasterScoreRequest.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetCurrentLowestForecasterScoreRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetCurrentLowestForecasterScoreRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetCurrentLowestForecasterScoreRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetCurrentLowestForecasterScoreRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetCurrentLowestForecasterScoreRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetCurrentLowestForecasterScoreRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetCurrentLowestForecasterScoreRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetCurrentLowestForecasterScoreRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetCurrentLowestForecasterScoreRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetCurrentLowestForecasterScoreRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetCurrentLowestForecasterScoreRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetCurrentLowestForecasterScoreRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetCurrentLowestForecasterScoreRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetCurrentLowestForecasterScoreResponse       protoreflect.MessageDescriptor
	fd_GetCurrentLowestForecasterScoreResponse_score protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetCurrentLowestForecasterScoreResponse = File_emissions_v5_query_proto.Messages().ByName("GetCurrentLowestForecasterScoreResponse")
	fd_GetCurrentLowestForecasterScoreResponse_score = md_GetCurrentLowestForecasterScoreResponse.Fields().ByName("score")
}

var _ protoreflect.Message = (*fastReflection_GetCurrentLowestForecasterScoreResponse)(nil)

type fastReflection_GetCurrentLowestForecasterScoreResponse GetCurrentLowestForecasterScoreResponse

func (x *GetCurrentLowestForecasterScoreResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetCurrentLowestForecasterScoreResponse)(x)
}

func (x *GetCurrentLowestForecasterScoreResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[139]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetCurrentLowestForecasterScoreResponse_messageType fastReflection_GetCurrentLowestForecasterScoreResponse_messageType
var _ protoreflect.MessageType = fastReflection_GetCurrentLowestForecasterScoreResponse_messageType{}

type fastReflection_GetCurrentLowestForecasterScoreResponse_messageType struct{}

func (x fastReflection_GetCurrentLowestForecasterScoreResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetCurrentLowestForecasterScoreResponse)(nil)
}
func (x fastReflection_GetCurrentLowestForecasterScoreResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_GetCurrentLowestForecasterScoreResponse)
}
func (x fastReflection_GetCurrentLowestForecasterScoreResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetCurrentLowestForecasterScoreResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetCurrentLowestForecasterScoreResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_GetCurrentLowestForecasterScoreResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetCurrentLowestForecasterScoreResponse) Type() protoreflect.MessageType {
	return _fastReflection_GetCurrentLowestForecasterScoreResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetCurrentLowestForecasterScoreResponse) New() protoreflect.Message {
	return new(fastReflection_GetCurrentLowestForecasterScoreResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetCurrentLowestForecasterScoreResponse) Interface() protoreflect.ProtoMessage {
	return (*GetCurrentLowestForecasterScoreResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetCurrentLowestForecasterScoreResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Score != nil {
		value := protoreflect.ValueOfMessage(x.Score.ProtoReflect())
		if !f(fd_GetCurrentLowestForecasterScoreResponse_score, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetCurrentLowestForecasterScoreResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetCurrentLowestForecasterScoreResponse.score":
		return x.Score != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetCurrentLowestForecasterScoreResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetCurrentLowestForecasterScoreResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetCurrentLowestForecasterScoreResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetCurrentLowestForecasterScoreResponse.score":
		x.Score = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetCurrentLowestForecasterScoreResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetCurrentLowestForecasterScoreResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetCurrentLowestForecasterScoreResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetCurrentLowestForecasterScoreResponse.score":
		value := x.Score
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetCurrentLowestForecasterScoreResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetCurrentLowestForecasterScoreResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetCurrentLowestForecasterScoreResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetCurrentLowestForecasterScoreResponse.score":
		x.Score = value.Message().Interface().(*v3.Score)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetCurrentLowestForecasterScoreResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetCurrentLowestForecasterScoreResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetCurrentLowestForecasterScoreResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetCurrentLowestForecasterScoreResponse.score":
		if x.Score == nil {
			x.Score = new(v3.Score)
		}
		return protoreflect.ValueOfMessage(x.Score.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetCurrentLowestForecasterScoreResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetCurrentLowestForecasterScoreResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetCurrentLowestForecasterScoreResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetCurrentLowestForecasterScoreResponse.score":
		m := new(v3.Score)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetCurrentLowestForecasterScoreResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetCurrentLowestForecasterScoreResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetCurrentLowestForecasterScoreResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetCurrentLowestForecasterScoreResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetCurrentLowestForecasterScoreResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetCurrentLowestForecasterScoreResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetCurrentLowestForecasterScoreResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetCurrentLowestForecasterScoreResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetCurrentLowestForecasterScoreResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Score != nil {
			l = options.Size(x.Score)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetCurrentLowestForecasterScoreResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Score != nil {
			encoded, err := options.Marshal(x.Score)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetCurrentLowestForecasterScoreResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetCurrentLowestForecasterScoreResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetCurrentLowestForecasterScoreResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Score", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Score == nil {
					x.Score = &v3.Score{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Score); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetReputersScoresAtBlockRequest              protoreflect.MessageDescriptor
	fd_GetReputersScoresAtBlockRequest_topic_id     protoreflect.FieldDescriptor
	fd_GetReputersScoresAtBlockRequest_block_height protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetReputersScoresAtBlockRequest = File_emissions_v5_query_proto.Messages().ByName("GetReputersScoresAtBlockRequest")
	fd_GetReputersScoresAtBlockRequest_topic_id = md_GetReputersScoresAtBlockRequest.Fields().ByName("topic_id")
	fd_GetReputersScoresAtBlockRequest_block_height = md_GetReputersScoresAtBlockRequest.Fields().ByName("block_height")
}

var _ protoreflect.Message = (*fastReflection_GetReputersScoresAtBlockRequest)(nil)

type fastReflection_GetReputersScoresAtBlockRequest GetReputersScoresAtBlockRequest

func (x *GetReputersScoresAtBlockRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetReputersScoresAtBlockRequest)(x)
}

func (x *GetReputersScoresAtBlockRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[140]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetReputersScoresAtBlockRequest_messageType fastReflection_GetReputersScoresAtBlockRequest_messageType
var _ protoreflect.MessageType = fastReflection_GetReputersScoresAtBlockRequest_messageType{}

type fastReflection_GetReputersScoresAtBlockRequest_messageType struct{}

func (x fastReflection_GetReputersScoresAtBlockRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetReputersScoresAtBlockRequest)(nil)
}
func (x fastReflection_GetReputersScoresAtBlockRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_GetReputersScoresAtBlockRequest)
}
func (x fastReflection_GetReputersScoresAtBlockRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetReputersScoresAtBlockRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetReputersScoresAtBlockRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_GetReputersScoresAtBlockRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetReputersScoresAtBlockRequest) Type() protoreflect.MessageType {
	return _fastReflection_GetReputersScoresAtBlockRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetReputersScoresAtBlockRequest) New() protoreflect.Message {
	return new(fastReflection_GetReputersScoresAtBlockRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetReputersScoresAtBlockRequest) Interface() protoreflect.ProtoMessage {
	return (*GetReputersScoresAtBlockRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetReputersScoresAtBlockRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_GetReputersScoresAtBlockRequest_topic_id, value) {
			return
		}
	}
	if x.BlockHeight != int64(0) {
		value := protoreflect.ValueOfInt64(x.BlockHeight)
		if !f(fd_GetReputersScoresAtBlockRequest_block_height, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetReputersScoresAtBlockRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetReputersScoresAtBlockRequest.topic_id":
		return x.TopicId != uint64(0)
	case "emissions.v5.GetReputersScoresAtBlockRequest.block_height":
		return x.BlockHeight != int64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetReputersScoresAtBlockRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetReputersScoresAtBlockRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetReputersScoresAtBlockRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetReputersScoresAtBlockRequest.topic_id":
		x.TopicId = uint64(0)
	case "emissions.v5.GetReputersScoresAtBlockRequest.block_height":
		x.BlockHeight = int64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetReputersScoresAtBlockRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetReputersScoresAtBlockRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetReputersScoresAtBlockRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetReputersScoresAtBlockRequest.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	case "emissions.v5.GetReputersScoresAtBlockRequest.block_height":
		value := x.BlockHeight
		return protoreflect.ValueOfInt64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetReputersScoresAtBlockRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetReputersScoresAtBlockRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetReputersScoresAtBlockRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetReputersScoresAtBlockRequest.topic_id":
		x.TopicId = value.Uint()
	case "emissions.v5.GetReputersScoresAtBlockRequest.block_height":
		x.BlockHeight = value.Int()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetReputersScoresAtBlockRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetReputersScoresAtBlockRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetReputersScoresAtBlockRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetReputersScoresAtBlockRequest.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.GetReputersScoresAtBlockRequest is not mutable"))
	case "emissions.v5.GetReputersScoresAtBlockRequest.block_height":
		panic(fmt.Errorf("field block_height of message emissions.v5.GetReputersScoresAtBlockRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetReputersScoresAtBlockRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetReputersScoresAtBlockRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetReputersScoresAtBlockRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetReputersScoresAtBlockRequest.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "emissions.v5.GetReputersScoresAtBlockRequest.block_height":
		return protoreflect.ValueOfInt64(int64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetReputersScoresAtBlockRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetReputersScoresAtBlockRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetReputersScoresAtBlockRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetReputersScoresAtBlockRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetReputersScoresAtBlockRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetReputersScoresAtBlockRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetReputersScoresAtBlockRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetReputersScoresAtBlockRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetReputersScoresAtBlockRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		if x.BlockHeight != 0 {
			n += 1 + runtime.Sov(uint64(x.BlockHeight))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetReputersScoresAtBlockRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.BlockHeight != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.BlockHeight))
			i--
			dAtA[i] = 0x10
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetReputersScoresAtBlockRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetReputersScoresAtBlockRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetReputersScoresAtBlockRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BlockHeight", wireType)
				}
				x.BlockHeight = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.BlockHeight |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetReputersScoresAtBlockResponse        protoreflect.MessageDescriptor
	fd_GetReputersScoresAtBlockResponse_scores protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetReputersScoresAtBlockResponse = File_emissions_v5_query_proto.Messages().ByName("GetReputersScoresAtBlockResponse")
	fd_GetReputersScoresAtBlockResponse_scores = md_GetReputersScoresAtBlockResponse.Fields().ByName("scores")
}

var _ protoreflect.Message = (*fastReflection_GetReputersScoresAtBlockResponse)(nil)

type fastReflection_GetReputersScoresAtBlockResponse GetReputersScoresAtBlockResponse

func (x *GetReputersScoresAtBlockResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetReputersScoresAtBlockResponse)(x)
}

func (x *GetReputersScoresAtBlockResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[141]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetReputersScoresAtBlockResponse_messageType fastReflection_GetReputersScoresAtBlockResponse_messageType
var _ protoreflect.MessageType = fastReflection_GetReputersScoresAtBlockResponse_messageType{}

type fastReflection_GetReputersScoresAtBlockResponse_messageType struct{}

func (x fastReflection_GetReputersScoresAtBlockResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetReputersScoresAtBlockResponse)(nil)
}
func (x fastReflection_GetReputersScoresAtBlockResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_GetReputersScoresAtBlockResponse)
}
func (x fastReflection_GetReputersScoresAtBlockResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetReputersScoresAtBlockResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetReputersScoresAtBlockResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_GetReputersScoresAtBlockResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetReputersScoresAtBlockResponse) Type() protoreflect.MessageType {
	return _fastReflection_GetReputersScoresAtBlockResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetReputersScoresAtBlockResponse) New() protoreflect.Message {
	return new(fastReflection_GetReputersScoresAtBlockResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetReputersScoresAtBlockResponse) Interface() protoreflect.ProtoMessage {
	return (*GetReputersScoresAtBlockResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetReputersScoresAtBlockResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Scores != nil {
		value := protoreflect.ValueOfMessage(x.Scores.ProtoReflect())
		if !f(fd_GetReputersScoresAtBlockResponse_scores, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetReputersScoresAtBlockResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetReputersScoresAtBlockResponse.scores":
		return x.Scores != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetReputersScoresAtBlockResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetReputersScoresAtBlockResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetReputersScoresAtBlockResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetReputersScoresAtBlockResponse.scores":
		x.Scores = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetReputersScoresAtBlockResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetReputersScoresAtBlockResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetReputersScoresAtBlockResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetReputersScoresAtBlockResponse.scores":
		value := x.Scores
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetReputersScoresAtBlockResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetReputersScoresAtBlockResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetReputersScoresAtBlockResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetReputersScoresAtBlockResponse.scores":
		x.Scores = value.Message().Interface().(*v3.Scores)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetReputersScoresAtBlockResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetReputersScoresAtBlockResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetReputersScoresAtBlockResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetReputersScoresAtBlockResponse.scores":
		if x.Scores == nil {
			x.Scores = new(v3.Scores)
		}
		return protoreflect.ValueOfMessage(x.Scores.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetReputersScoresAtBlockResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetReputersScoresAtBlockResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetReputersScoresAtBlockResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetReputersScoresAtBlockResponse.scores":
		m := new(v3.Scores)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetReputersScoresAtBlockResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetReputersScoresAtBlockResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetReputersScoresAtBlockResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetReputersScoresAtBlockResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetReputersScoresAtBlockResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetReputersScoresAtBlockResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetReputersScoresAtBlockResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetReputersScoresAtBlockResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetReputersScoresAtBlockResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Scores != nil {
			l = options.Size(x.Scores)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetReputersScoresAtBlockResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Scores != nil {
			encoded, err := options.Marshal(x.Scores)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetReputersScoresAtBlockResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetReputersScoresAtBlockResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetReputersScoresAtBlockResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Scores", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Scores == nil {
					x.Scores = &v3.Scores{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Scores); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetCurrentLowestReputerScoreRequest          protoreflect.MessageDescriptor
	fd_GetCurrentLowestReputerScoreRequest_topic_id protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetCurrentLowestReputerScoreRequest = File_emissions_v5_query_proto.Messages().ByName("GetCurrentLowestReputerScoreRequest")
	fd_GetCurrentLowestReputerScoreRequest_topic_id = md_GetCurrentLowestReputerScoreRequest.Fields().ByName("topic_id")
}

var _ protoreflect.Message = (*fastReflection_GetCurrentLowestReputerScoreRequest)(nil)

type fastReflection_GetCurrentLowestReputerScoreRequest GetCurrentLowestReputerScoreRequest

func (x *GetCurrentLowestReputerScoreRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetCurrentLowestReputerScoreRequest)(x)
}

func (x *GetCurrentLowestReputerScoreRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[142]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetCurrentLowestReputerScoreRequest_messageType fastReflection_GetCurrentLowestReputerScoreRequest_messageType
var _ protoreflect.MessageType = fastReflection_GetCurrentLowestReputerScoreRequest_messageType{}

type fastReflection_GetCurrentLowestReputerScoreRequest_messageType struct{}

func (x fastReflection_GetCurrentLowestReputerScoreRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetCurrentLowestReputerScoreRequest)(nil)
}
func (x fastReflection_GetCurrentLowestReputerScoreRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_GetCurrentLowestReputerScoreRequest)
}
func (x fastReflection_GetCurrentLowestReputerScoreRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetCurrentLowestReputerScoreRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetCurrentLowestReputerScoreRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_GetCurrentLowestReputerScoreRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetCurrentLowestReputerScoreRequest) Type() protoreflect.MessageType {
	return _fastReflection_GetCurrentLowestReputerScoreRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetCurrentLowestReputerScoreRequest) New() protoreflect.Message {
	return new(fastReflection_GetCurrentLowestReputerScoreRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetCurrentLowestReputerScoreRequest) Interface() protoreflect.ProtoMessage {
	return (*GetCurrentLowestReputerScoreRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetCurrentLowestReputerScoreRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_GetCurrentLowestReputerScoreRequest_topic_id, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetCurrentLowestReputerScoreRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetCurrentLowestReputerScoreRequest.topic_id":
		return x.TopicId != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetCurrentLowestReputerScoreRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetCurrentLowestReputerScoreRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetCurrentLowestReputerScoreRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetCurrentLowestReputerScoreRequest.topic_id":
		x.TopicId = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetCurrentLowestReputerScoreRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetCurrentLowestReputerScoreRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetCurrentLowestReputerScoreRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetCurrentLowestReputerScoreRequest.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetCurrentLowestReputerScoreRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetCurrentLowestReputerScoreRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetCurrentLowestReputerScoreRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetCurrentLowestReputerScoreRequest.topic_id":
		x.TopicId = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetCurrentLowestReputerScoreRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetCurrentLowestReputerScoreRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetCurrentLowestReputerScoreRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetCurrentLowestReputerScoreRequest.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.GetCurrentLowestReputerScoreRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetCurrentLowestReputerScoreRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetCurrentLowestReputerScoreRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetCurrentLowestReputerScoreRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetCurrentLowestReputerScoreRequest.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetCurrentLowestReputerScoreRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetCurrentLowestReputerScoreRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetCurrentLowestReputerScoreRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetCurrentLowestReputerScoreRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetCurrentLowestReputerScoreRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetCurrentLowestReputerScoreRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetCurrentLowestReputerScoreRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetCurrentLowestReputerScoreRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetCurrentLowestReputerScoreRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetCurrentLowestReputerScoreRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetCurrentLowestReputerScoreRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetCurrentLowestReputerScoreRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetCurrentLowestReputerScoreRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetCurrentLowestReputerScoreResponse       protoreflect.MessageDescriptor
	fd_GetCurrentLowestReputerScoreResponse_score protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetCurrentLowestReputerScoreResponse = File_emissions_v5_query_proto.Messages().ByName("GetCurrentLowestReputerScoreResponse")
	fd_GetCurrentLowestReputerScoreResponse_score = md_GetCurrentLowestReputerScoreResponse.Fields().ByName("score")
}

var _ protoreflect.Message = (*fastReflection_GetCurrentLowestReputerScoreResponse)(nil)

type fastReflection_GetCurrentLowestReputerScoreResponse GetCurrentLowestReputerScoreResponse

func (x *GetCurrentLowestReputerScoreResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetCurrentLowestReputerScoreResponse)(x)
}

func (x *GetCurrentLowestReputerScoreResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[143]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetCurrentLowestReputerScoreResponse_messageType fastReflection_GetCurrentLowestReputerScoreResponse_messageType
var _ protoreflect.MessageType = fastReflection_GetCurrentLowestReputerScoreResponse_messageType{}

type fastReflection_GetCurrentLowestReputerScoreResponse_messageType struct{}

func (x fastReflection_GetCurrentLowestReputerScoreResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetCurrentLowestReputerScoreResponse)(nil)
}
func (x fastReflection_GetCurrentLowestReputerScoreResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_GetCurrentLowestReputerScoreResponse)
}
func (x fastReflection_GetCurrentLowestReputerScoreResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetCurrentLowestReputerScoreResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetCurrentLowestReputerScoreResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_GetCurrentLowestReputerScoreResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetCurrentLowestReputerScoreResponse) Type() protoreflect.MessageType {
	return _fastReflection_GetCurrentLowestReputerScoreResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetCurrentLowestReputerScoreResponse) New() protoreflect.Message {
	return new(fastReflection_GetCurrentLowestReputerScoreResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetCurrentLowestReputerScoreResponse) Interface() protoreflect.ProtoMessage {
	return (*GetCurrentLowestReputerScoreResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetCurrentLowestReputerScoreResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Score != nil {
		value := protoreflect.ValueOfMessage(x.Score.ProtoReflect())
		if !f(fd_GetCurrentLowestReputerScoreResponse_score, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetCurrentLowestReputerScoreResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetCurrentLowestReputerScoreResponse.score":
		return x.Score != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetCurrentLowestReputerScoreResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetCurrentLowestReputerScoreResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetCurrentLowestReputerScoreResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetCurrentLowestReputerScoreResponse.score":
		x.Score = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetCurrentLowestReputerScoreResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetCurrentLowestReputerScoreResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetCurrentLowestReputerScoreResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetCurrentLowestReputerScoreResponse.score":
		value := x.Score
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetCurrentLowestReputerScoreResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetCurrentLowestReputerScoreResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetCurrentLowestReputerScoreResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetCurrentLowestReputerScoreResponse.score":
		x.Score = value.Message().Interface().(*v3.Score)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetCurrentLowestReputerScoreResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetCurrentLowestReputerScoreResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetCurrentLowestReputerScoreResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetCurrentLowestReputerScoreResponse.score":
		if x.Score == nil {
			x.Score = new(v3.Score)
		}
		return protoreflect.ValueOfMessage(x.Score.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetCurrentLowestReputerScoreResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetCurrentLowestReputerScoreResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetCurrentLowestReputerScoreResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetCurrentLowestReputerScoreResponse.score":
		m := new(v3.Score)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetCurrentLowestReputerScoreResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetCurrentLowestReputerScoreResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetCurrentLowestReputerScoreResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetCurrentLowestReputerScoreResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetCurrentLowestReputerScoreResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetCurrentLowestReputerScoreResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetCurrentLowestReputerScoreResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetCurrentLowestReputerScoreResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetCurrentLowestReputerScoreResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Score != nil {
			l = options.Size(x.Score)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetCurrentLowestReputerScoreResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Score != nil {
			encoded, err := options.Marshal(x.Score)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetCurrentLowestReputerScoreResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetCurrentLowestReputerScoreResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetCurrentLowestReputerScoreResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Score", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Score == nil {
					x.Score = &v3.Score{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Score); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetListeningCoefficientRequest          protoreflect.MessageDescriptor
	fd_GetListeningCoefficientRequest_topic_id protoreflect.FieldDescriptor
	fd_GetListeningCoefficientRequest_reputer  protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetListeningCoefficientRequest = File_emissions_v5_query_proto.Messages().ByName("GetListeningCoefficientRequest")
	fd_GetListeningCoefficientRequest_topic_id = md_GetListeningCoefficientRequest.Fields().ByName("topic_id")
	fd_GetListeningCoefficientRequest_reputer = md_GetListeningCoefficientRequest.Fields().ByName("reputer")
}

var _ protoreflect.Message = (*fastReflection_GetListeningCoefficientRequest)(nil)

type fastReflection_GetListeningCoefficientRequest GetListeningCoefficientRequest

func (x *GetListeningCoefficientRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetListeningCoefficientRequest)(x)
}

func (x *GetListeningCoefficientRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[144]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetListeningCoefficientRequest_messageType fastReflection_GetListeningCoefficientRequest_messageType
var _ protoreflect.MessageType = fastReflection_GetListeningCoefficientRequest_messageType{}

type fastReflection_GetListeningCoefficientRequest_messageType struct{}

func (x fastReflection_GetListeningCoefficientRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetListeningCoefficientRequest)(nil)
}
func (x fastReflection_GetListeningCoefficientRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_GetListeningCoefficientRequest)
}
func (x fastReflection_GetListeningCoefficientRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetListeningCoefficientRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetListeningCoefficientRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_GetListeningCoefficientRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetListeningCoefficientRequest) Type() protoreflect.MessageType {
	return _fastReflection_GetListeningCoefficientRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetListeningCoefficientRequest) New() protoreflect.Message {
	return new(fastReflection_GetListeningCoefficientRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetListeningCoefficientRequest) Interface() protoreflect.ProtoMessage {
	return (*GetListeningCoefficientRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetListeningCoefficientRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_GetListeningCoefficientRequest_topic_id, value) {
			return
		}
	}
	if x.Reputer != "" {
		value := protoreflect.ValueOfString(x.Reputer)
		if !f(fd_GetListeningCoefficientRequest_reputer, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetListeningCoefficientRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetListeningCoefficientRequest.topic_id":
		return x.TopicId != uint64(0)
	case "emissions.v5.GetListeningCoefficientRequest.reputer":
		return x.Reputer != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetListeningCoefficientRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetListeningCoefficientRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetListeningCoefficientRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetListeningCoefficientRequest.topic_id":
		x.TopicId = uint64(0)
	case "emissions.v5.GetListeningCoefficientRequest.reputer":
		x.Reputer = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetListeningCoefficientRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetListeningCoefficientRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetListeningCoefficientRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetListeningCoefficientRequest.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	case "emissions.v5.GetListeningCoefficientRequest.reputer":
		value := x.Reputer
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetListeningCoefficientRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetListeningCoefficientRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetListeningCoefficientRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetListeningCoefficientRequest.topic_id":
		x.TopicId = value.Uint()
	case "emissions.v5.GetListeningCoefficientRequest.reputer":
		x.Reputer = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetListeningCoefficientRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetListeningCoefficientRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetListeningCoefficientRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetListeningCoefficientRequest.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.GetListeningCoefficientRequest is not mutable"))
	case "emissions.v5.GetListeningCoefficientRequest.reputer":
		panic(fmt.Errorf("field reputer of message emissions.v5.GetListeningCoefficientRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetListeningCoefficientRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetListeningCoefficientRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetListeningCoefficientRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetListeningCoefficientRequest.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "emissions.v5.GetListeningCoefficientRequest.reputer":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetListeningCoefficientRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetListeningCoefficientRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetListeningCoefficientRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetListeningCoefficientRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetListeningCoefficientRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetListeningCoefficientRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetListeningCoefficientRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetListeningCoefficientRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetListeningCoefficientRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		l = len(x.Reputer)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetListeningCoefficientRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Reputer) > 0 {
			i -= len(x.Reputer)
			copy(dAtA[i:], x.Reputer)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Reputer)))
			i--
			dAtA[i] = 0x12
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetListeningCoefficientRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetListeningCoefficientRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetListeningCoefficientRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Reputer", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Reputer = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetListeningCoefficientResponse                       protoreflect.MessageDescriptor
	fd_GetListeningCoefficientResponse_listening_coefficient protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetListeningCoefficientResponse = File_emissions_v5_query_proto.Messages().ByName("GetListeningCoefficientResponse")
	fd_GetListeningCoefficientResponse_listening_coefficient = md_GetListeningCoefficientResponse.Fields().ByName("listening_coefficient")
}

var _ protoreflect.Message = (*fastReflection_GetListeningCoefficientResponse)(nil)

type fastReflection_GetListeningCoefficientResponse GetListeningCoefficientResponse

func (x *GetListeningCoefficientResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetListeningCoefficientResponse)(x)
}

func (x *GetListeningCoefficientResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[145]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetListeningCoefficientResponse_messageType fastReflection_GetListeningCoefficientResponse_messageType
var _ protoreflect.MessageType = fastReflection_GetListeningCoefficientResponse_messageType{}

type fastReflection_GetListeningCoefficientResponse_messageType struct{}

func (x fastReflection_GetListeningCoefficientResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetListeningCoefficientResponse)(nil)
}
func (x fastReflection_GetListeningCoefficientResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_GetListeningCoefficientResponse)
}
func (x fastReflection_GetListeningCoefficientResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetListeningCoefficientResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetListeningCoefficientResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_GetListeningCoefficientResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetListeningCoefficientResponse) Type() protoreflect.MessageType {
	return _fastReflection_GetListeningCoefficientResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetListeningCoefficientResponse) New() protoreflect.Message {
	return new(fastReflection_GetListeningCoefficientResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetListeningCoefficientResponse) Interface() protoreflect.ProtoMessage {
	return (*GetListeningCoefficientResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetListeningCoefficientResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.ListeningCoefficient != nil {
		value := protoreflect.ValueOfMessage(x.ListeningCoefficient.ProtoReflect())
		if !f(fd_GetListeningCoefficientResponse_listening_coefficient, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetListeningCoefficientResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetListeningCoefficientResponse.listening_coefficient":
		return x.ListeningCoefficient != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetListeningCoefficientResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetListeningCoefficientResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetListeningCoefficientResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetListeningCoefficientResponse.listening_coefficient":
		x.ListeningCoefficient = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetListeningCoefficientResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetListeningCoefficientResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetListeningCoefficientResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetListeningCoefficientResponse.listening_coefficient":
		value := x.ListeningCoefficient
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetListeningCoefficientResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetListeningCoefficientResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetListeningCoefficientResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetListeningCoefficientResponse.listening_coefficient":
		x.ListeningCoefficient = value.Message().Interface().(*v3.ListeningCoefficient)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetListeningCoefficientResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetListeningCoefficientResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetListeningCoefficientResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetListeningCoefficientResponse.listening_coefficient":
		if x.ListeningCoefficient == nil {
			x.ListeningCoefficient = new(v3.ListeningCoefficient)
		}
		return protoreflect.ValueOfMessage(x.ListeningCoefficient.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetListeningCoefficientResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetListeningCoefficientResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetListeningCoefficientResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetListeningCoefficientResponse.listening_coefficient":
		m := new(v3.ListeningCoefficient)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetListeningCoefficientResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetListeningCoefficientResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetListeningCoefficientResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetListeningCoefficientResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetListeningCoefficientResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetListeningCoefficientResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetListeningCoefficientResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetListeningCoefficientResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetListeningCoefficientResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.ListeningCoefficient != nil {
			l = options.Size(x.ListeningCoefficient)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetListeningCoefficientResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.ListeningCoefficient != nil {
			encoded, err := options.Marshal(x.ListeningCoefficient)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetListeningCoefficientResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetListeningCoefficientResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetListeningCoefficientResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ListeningCoefficient", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.ListeningCoefficient == nil {
					x.ListeningCoefficient = &v3.ListeningCoefficient{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.ListeningCoefficient); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetPreviousReputerRewardFractionRequest          protoreflect.MessageDescriptor
	fd_GetPreviousReputerRewardFractionRequest_topic_id protoreflect.FieldDescriptor
	fd_GetPreviousReputerRewardFractionRequest_reputer  protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetPreviousReputerRewardFractionRequest = File_emissions_v5_query_proto.Messages().ByName("GetPreviousReputerRewardFractionRequest")
	fd_GetPreviousReputerRewardFractionRequest_topic_id = md_GetPreviousReputerRewardFractionRequest.Fields().ByName("topic_id")
	fd_GetPreviousReputerRewardFractionRequest_reputer = md_GetPreviousReputerRewardFractionRequest.Fields().ByName("reputer")
}

var _ protoreflect.Message = (*fastReflection_GetPreviousReputerRewardFractionRequest)(nil)

type fastReflection_GetPreviousReputerRewardFractionRequest GetPreviousReputerRewardFractionRequest

func (x *GetPreviousReputerRewardFractionRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetPreviousReputerRewardFractionRequest)(x)
}

func (x *GetPreviousReputerRewardFractionRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[146]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetPreviousReputerRewardFractionRequest_messageType fastReflection_GetPreviousReputerRewardFractionRequest_messageType
var _ protoreflect.MessageType = fastReflection_GetPreviousReputerRewardFractionRequest_messageType{}

type fastReflection_GetPreviousReputerRewardFractionRequest_messageType struct{}

func (x fastReflection_GetPreviousReputerRewardFractionRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetPreviousReputerRewardFractionRequest)(nil)
}
func (x fastReflection_GetPreviousReputerRewardFractionRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_GetPreviousReputerRewardFractionRequest)
}
func (x fastReflection_GetPreviousReputerRewardFractionRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetPreviousReputerRewardFractionRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetPreviousReputerRewardFractionRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_GetPreviousReputerRewardFractionRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetPreviousReputerRewardFractionRequest) Type() protoreflect.MessageType {
	return _fastReflection_GetPreviousReputerRewardFractionRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetPreviousReputerRewardFractionRequest) New() protoreflect.Message {
	return new(fastReflection_GetPreviousReputerRewardFractionRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetPreviousReputerRewardFractionRequest) Interface() protoreflect.ProtoMessage {
	return (*GetPreviousReputerRewardFractionRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetPreviousReputerRewardFractionRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_GetPreviousReputerRewardFractionRequest_topic_id, value) {
			return
		}
	}
	if x.Reputer != "" {
		value := protoreflect.ValueOfString(x.Reputer)
		if !f(fd_GetPreviousReputerRewardFractionRequest_reputer, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetPreviousReputerRewardFractionRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetPreviousReputerRewardFractionRequest.topic_id":
		return x.TopicId != uint64(0)
	case "emissions.v5.GetPreviousReputerRewardFractionRequest.reputer":
		return x.Reputer != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetPreviousReputerRewardFractionRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetPreviousReputerRewardFractionRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetPreviousReputerRewardFractionRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetPreviousReputerRewardFractionRequest.topic_id":
		x.TopicId = uint64(0)
	case "emissions.v5.GetPreviousReputerRewardFractionRequest.reputer":
		x.Reputer = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetPreviousReputerRewardFractionRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetPreviousReputerRewardFractionRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetPreviousReputerRewardFractionRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetPreviousReputerRewardFractionRequest.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	case "emissions.v5.GetPreviousReputerRewardFractionRequest.reputer":
		value := x.Reputer
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetPreviousReputerRewardFractionRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetPreviousReputerRewardFractionRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetPreviousReputerRewardFractionRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetPreviousReputerRewardFractionRequest.topic_id":
		x.TopicId = value.Uint()
	case "emissions.v5.GetPreviousReputerRewardFractionRequest.reputer":
		x.Reputer = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetPreviousReputerRewardFractionRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetPreviousReputerRewardFractionRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetPreviousReputerRewardFractionRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetPreviousReputerRewardFractionRequest.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.GetPreviousReputerRewardFractionRequest is not mutable"))
	case "emissions.v5.GetPreviousReputerRewardFractionRequest.reputer":
		panic(fmt.Errorf("field reputer of message emissions.v5.GetPreviousReputerRewardFractionRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetPreviousReputerRewardFractionRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetPreviousReputerRewardFractionRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetPreviousReputerRewardFractionRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetPreviousReputerRewardFractionRequest.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "emissions.v5.GetPreviousReputerRewardFractionRequest.reputer":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetPreviousReputerRewardFractionRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetPreviousReputerRewardFractionRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetPreviousReputerRewardFractionRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetPreviousReputerRewardFractionRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetPreviousReputerRewardFractionRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetPreviousReputerRewardFractionRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetPreviousReputerRewardFractionRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetPreviousReputerRewardFractionRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetPreviousReputerRewardFractionRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		l = len(x.Reputer)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetPreviousReputerRewardFractionRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Reputer) > 0 {
			i -= len(x.Reputer)
			copy(dAtA[i:], x.Reputer)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Reputer)))
			i--
			dAtA[i] = 0x12
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetPreviousReputerRewardFractionRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetPreviousReputerRewardFractionRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetPreviousReputerRewardFractionRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Reputer", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Reputer = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetPreviousReputerRewardFractionResponse                 protoreflect.MessageDescriptor
	fd_GetPreviousReputerRewardFractionResponse_reward_fraction protoreflect.FieldDescriptor
	fd_GetPreviousReputerRewardFractionResponse_not_found       protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetPreviousReputerRewardFractionResponse = File_emissions_v5_query_proto.Messages().ByName("GetPreviousReputerRewardFractionResponse")
	fd_GetPreviousReputerRewardFractionResponse_reward_fraction = md_GetPreviousReputerRewardFractionResponse.Fields().ByName("reward_fraction")
	fd_GetPreviousReputerRewardFractionResponse_not_found = md_GetPreviousReputerRewardFractionResponse.Fields().ByName("not_found")
}

var _ protoreflect.Message = (*fastReflection_GetPreviousReputerRewardFractionResponse)(nil)

type fastReflection_GetPreviousReputerRewardFractionResponse GetPreviousReputerRewardFractionResponse

func (x *GetPreviousReputerRewardFractionResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetPreviousReputerRewardFractionResponse)(x)
}

func (x *GetPreviousReputerRewardFractionResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[147]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetPreviousReputerRewardFractionResponse_messageType fastReflection_GetPreviousReputerRewardFractionResponse_messageType
var _ protoreflect.MessageType = fastReflection_GetPreviousReputerRewardFractionResponse_messageType{}

type fastReflection_GetPreviousReputerRewardFractionResponse_messageType struct{}

func (x fastReflection_GetPreviousReputerRewardFractionResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetPreviousReputerRewardFractionResponse)(nil)
}
func (x fastReflection_GetPreviousReputerRewardFractionResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_GetPreviousReputerRewardFractionResponse)
}
func (x fastReflection_GetPreviousReputerRewardFractionResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetPreviousReputerRewardFractionResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetPreviousReputerRewardFractionResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_GetPreviousReputerRewardFractionResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetPreviousReputerRewardFractionResponse) Type() protoreflect.MessageType {
	return _fastReflection_GetPreviousReputerRewardFractionResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetPreviousReputerRewardFractionResponse) New() protoreflect.Message {
	return new(fastReflection_GetPreviousReputerRewardFractionResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetPreviousReputerRewardFractionResponse) Interface() protoreflect.ProtoMessage {
	return (*GetPreviousReputerRewardFractionResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetPreviousReputerRewardFractionResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.RewardFraction != "" {
		value := protoreflect.ValueOfString(x.RewardFraction)
		if !f(fd_GetPreviousReputerRewardFractionResponse_reward_fraction, value) {
			return
		}
	}
	if x.NotFound != false {
		value := protoreflect.ValueOfBool(x.NotFound)
		if !f(fd_GetPreviousReputerRewardFractionResponse_not_found, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetPreviousReputerRewardFractionResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetPreviousReputerRewardFractionResponse.reward_fraction":
		return x.RewardFraction != ""
	case "emissions.v5.GetPreviousReputerRewardFractionResponse.not_found":
		return x.NotFound != false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetPreviousReputerRewardFractionResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetPreviousReputerRewardFractionResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetPreviousReputerRewardFractionResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetPreviousReputerRewardFractionResponse.reward_fraction":
		x.RewardFraction = ""
	case "emissions.v5.GetPreviousReputerRewardFractionResponse.not_found":
		x.NotFound = false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetPreviousReputerRewardFractionResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetPreviousReputerRewardFractionResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetPreviousReputerRewardFractionResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetPreviousReputerRewardFractionResponse.reward_fraction":
		value := x.RewardFraction
		return protoreflect.ValueOfString(value)
	case "emissions.v5.GetPreviousReputerRewardFractionResponse.not_found":
		value := x.NotFound
		return protoreflect.ValueOfBool(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetPreviousReputerRewardFractionResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetPreviousReputerRewardFractionResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetPreviousReputerRewardFractionResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetPreviousReputerRewardFractionResponse.reward_fraction":
		x.RewardFraction = value.Interface().(string)
	case "emissions.v5.GetPreviousReputerRewardFractionResponse.not_found":
		x.NotFound = value.Bool()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetPreviousReputerRewardFractionResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetPreviousReputerRewardFractionResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetPreviousReputerRewardFractionResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetPreviousReputerRewardFractionResponse.reward_fraction":
		panic(fmt.Errorf("field reward_fraction of message emissions.v5.GetPreviousReputerRewardFractionResponse is not mutable"))
	case "emissions.v5.GetPreviousReputerRewardFractionResponse.not_found":
		panic(fmt.Errorf("field not_found of message emissions.v5.GetPreviousReputerRewardFractionResponse is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetPreviousReputerRewardFractionResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetPreviousReputerRewardFractionResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetPreviousReputerRewardFractionResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetPreviousReputerRewardFractionResponse.reward_fraction":
		return protoreflect.ValueOfString("")
	case "emissions.v5.GetPreviousReputerRewardFractionResponse.not_found":
		return protoreflect.ValueOfBool(false)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetPreviousReputerRewardFractionResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetPreviousReputerRewardFractionResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetPreviousReputerRewardFractionResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetPreviousReputerRewardFractionResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetPreviousReputerRewardFractionResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetPreviousReputerRewardFractionResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetPreviousReputerRewardFractionResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetPreviousReputerRewardFractionResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetPreviousReputerRewardFractionResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.RewardFraction)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.NotFound {
			n += 2
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetPreviousReputerRewardFractionResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.NotFound {
			i--
			if x.NotFound {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x10
		}
		if len(x.RewardFraction) > 0 {
			i -= len(x.RewardFraction)
			copy(dAtA[i:], x.RewardFraction)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.RewardFraction)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetPreviousReputerRewardFractionResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetPreviousReputerRewardFractionResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetPreviousReputerRewardFractionResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RewardFraction", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.RewardFraction = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field NotFound", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.NotFound = bool(v != 0)
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetPreviousInferenceRewardFractionRequest          protoreflect.MessageDescriptor
	fd_GetPreviousInferenceRewardFractionRequest_topic_id protoreflect.FieldDescriptor
	fd_GetPreviousInferenceRewardFractionRequest_worker   protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetPreviousInferenceRewardFractionRequest = File_emissions_v5_query_proto.Messages().ByName("GetPreviousInferenceRewardFractionRequest")
	fd_GetPreviousInferenceRewardFractionRequest_topic_id = md_GetPreviousInferenceRewardFractionRequest.Fields().ByName("topic_id")
	fd_GetPreviousInferenceRewardFractionRequest_worker = md_GetPreviousInferenceRewardFractionRequest.Fields().ByName("worker")
}

var _ protoreflect.Message = (*fastReflection_GetPreviousInferenceRewardFractionRequest)(nil)

type fastReflection_GetPreviousInferenceRewardFractionRequest GetPreviousInferenceRewardFractionRequest

func (x *GetPreviousInferenceRewardFractionRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetPreviousInferenceRewardFractionRequest)(x)
}

func (x *GetPreviousInferenceRewardFractionRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[148]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetPreviousInferenceRewardFractionRequest_messageType fastReflection_GetPreviousInferenceRewardFractionRequest_messageType
var _ protoreflect.MessageType = fastReflection_GetPreviousInferenceRewardFractionRequest_messageType{}

type fastReflection_GetPreviousInferenceRewardFractionRequest_messageType struct{}

func (x fastReflection_GetPreviousInferenceRewardFractionRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetPreviousInferenceRewardFractionRequest)(nil)
}
func (x fastReflection_GetPreviousInferenceRewardFractionRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_GetPreviousInferenceRewardFractionRequest)
}
func (x fastReflection_GetPreviousInferenceRewardFractionRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetPreviousInferenceRewardFractionRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetPreviousInferenceRewardFractionRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_GetPreviousInferenceRewardFractionRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetPreviousInferenceRewardFractionRequest) Type() protoreflect.MessageType {
	return _fastReflection_GetPreviousInferenceRewardFractionRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetPreviousInferenceRewardFractionRequest) New() protoreflect.Message {
	return new(fastReflection_GetPreviousInferenceRewardFractionRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetPreviousInferenceRewardFractionRequest) Interface() protoreflect.ProtoMessage {
	return (*GetPreviousInferenceRewardFractionRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetPreviousInferenceRewardFractionRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_GetPreviousInferenceRewardFractionRequest_topic_id, value) {
			return
		}
	}
	if x.Worker != "" {
		value := protoreflect.ValueOfString(x.Worker)
		if !f(fd_GetPreviousInferenceRewardFractionRequest_worker, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetPreviousInferenceRewardFractionRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetPreviousInferenceRewardFractionRequest.topic_id":
		return x.TopicId != uint64(0)
	case "emissions.v5.GetPreviousInferenceRewardFractionRequest.worker":
		return x.Worker != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetPreviousInferenceRewardFractionRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetPreviousInferenceRewardFractionRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetPreviousInferenceRewardFractionRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetPreviousInferenceRewardFractionRequest.topic_id":
		x.TopicId = uint64(0)
	case "emissions.v5.GetPreviousInferenceRewardFractionRequest.worker":
		x.Worker = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetPreviousInferenceRewardFractionRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetPreviousInferenceRewardFractionRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetPreviousInferenceRewardFractionRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetPreviousInferenceRewardFractionRequest.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	case "emissions.v5.GetPreviousInferenceRewardFractionRequest.worker":
		value := x.Worker
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetPreviousInferenceRewardFractionRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetPreviousInferenceRewardFractionRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetPreviousInferenceRewardFractionRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetPreviousInferenceRewardFractionRequest.topic_id":
		x.TopicId = value.Uint()
	case "emissions.v5.GetPreviousInferenceRewardFractionRequest.worker":
		x.Worker = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetPreviousInferenceRewardFractionRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetPreviousInferenceRewardFractionRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetPreviousInferenceRewardFractionRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetPreviousInferenceRewardFractionRequest.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.GetPreviousInferenceRewardFractionRequest is not mutable"))
	case "emissions.v5.GetPreviousInferenceRewardFractionRequest.worker":
		panic(fmt.Errorf("field worker of message emissions.v5.GetPreviousInferenceRewardFractionRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetPreviousInferenceRewardFractionRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetPreviousInferenceRewardFractionRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetPreviousInferenceRewardFractionRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetPreviousInferenceRewardFractionRequest.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "emissions.v5.GetPreviousInferenceRewardFractionRequest.worker":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetPreviousInferenceRewardFractionRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetPreviousInferenceRewardFractionRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetPreviousInferenceRewardFractionRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetPreviousInferenceRewardFractionRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetPreviousInferenceRewardFractionRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetPreviousInferenceRewardFractionRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetPreviousInferenceRewardFractionRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetPreviousInferenceRewardFractionRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetPreviousInferenceRewardFractionRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		l = len(x.Worker)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetPreviousInferenceRewardFractionRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Worker) > 0 {
			i -= len(x.Worker)
			copy(dAtA[i:], x.Worker)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Worker)))
			i--
			dAtA[i] = 0x12
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetPreviousInferenceRewardFractionRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetPreviousInferenceRewardFractionRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetPreviousInferenceRewardFractionRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Worker", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Worker = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetPreviousInferenceRewardFractionResponse                 protoreflect.MessageDescriptor
	fd_GetPreviousInferenceRewardFractionResponse_reward_fraction protoreflect.FieldDescriptor
	fd_GetPreviousInferenceRewardFractionResponse_not_found       protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetPreviousInferenceRewardFractionResponse = File_emissions_v5_query_proto.Messages().ByName("GetPreviousInferenceRewardFractionResponse")
	fd_GetPreviousInferenceRewardFractionResponse_reward_fraction = md_GetPreviousInferenceRewardFractionResponse.Fields().ByName("reward_fraction")
	fd_GetPreviousInferenceRewardFractionResponse_not_found = md_GetPreviousInferenceRewardFractionResponse.Fields().ByName("not_found")
}

var _ protoreflect.Message = (*fastReflection_GetPreviousInferenceRewardFractionResponse)(nil)

type fastReflection_GetPreviousInferenceRewardFractionResponse GetPreviousInferenceRewardFractionResponse

func (x *GetPreviousInferenceRewardFractionResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetPreviousInferenceRewardFractionResponse)(x)
}

func (x *GetPreviousInferenceRewardFractionResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[149]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetPreviousInferenceRewardFractionResponse_messageType fastReflection_GetPreviousInferenceRewardFractionResponse_messageType
var _ protoreflect.MessageType = fastReflection_GetPreviousInferenceRewardFractionResponse_messageType{}

type fastReflection_GetPreviousInferenceRewardFractionResponse_messageType struct{}

func (x fastReflection_GetPreviousInferenceRewardFractionResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetPreviousInferenceRewardFractionResponse)(nil)
}
func (x fastReflection_GetPreviousInferenceRewardFractionResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_GetPreviousInferenceRewardFractionResponse)
}
func (x fastReflection_GetPreviousInferenceRewardFractionResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetPreviousInferenceRewardFractionResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetPreviousInferenceRewardFractionResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_GetPreviousInferenceRewardFractionResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetPreviousInferenceRewardFractionResponse) Type() protoreflect.MessageType {
	return _fastReflection_GetPreviousInferenceRewardFractionResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetPreviousInferenceRewardFractionResponse) New() protoreflect.Message {
	return new(fastReflection_GetPreviousInferenceRewardFractionResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetPreviousInferenceRewardFractionResponse) Interface() protoreflect.ProtoMessage {
	return (*GetPreviousInferenceRewardFractionResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetPreviousInferenceRewardFractionResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.RewardFraction != "" {
		value := protoreflect.ValueOfString(x.RewardFraction)
		if !f(fd_GetPreviousInferenceRewardFractionResponse_reward_fraction, value) {
			return
		}
	}
	if x.NotFound != false {
		value := protoreflect.ValueOfBool(x.NotFound)
		if !f(fd_GetPreviousInferenceRewardFractionResponse_not_found, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetPreviousInferenceRewardFractionResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetPreviousInferenceRewardFractionResponse.reward_fraction":
		return x.RewardFraction != ""
	case "emissions.v5.GetPreviousInferenceRewardFractionResponse.not_found":
		return x.NotFound != false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetPreviousInferenceRewardFractionResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetPreviousInferenceRewardFractionResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetPreviousInferenceRewardFractionResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetPreviousInferenceRewardFractionResponse.reward_fraction":
		x.RewardFraction = ""
	case "emissions.v5.GetPreviousInferenceRewardFractionResponse.not_found":
		x.NotFound = false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetPreviousInferenceRewardFractionResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetPreviousInferenceRewardFractionResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetPreviousInferenceRewardFractionResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetPreviousInferenceRewardFractionResponse.reward_fraction":
		value := x.RewardFraction
		return protoreflect.ValueOfString(value)
	case "emissions.v5.GetPreviousInferenceRewardFractionResponse.not_found":
		value := x.NotFound
		return protoreflect.ValueOfBool(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetPreviousInferenceRewardFractionResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetPreviousInferenceRewardFractionResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetPreviousInferenceRewardFractionResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetPreviousInferenceRewardFractionResponse.reward_fraction":
		x.RewardFraction = value.Interface().(string)
	case "emissions.v5.GetPreviousInferenceRewardFractionResponse.not_found":
		x.NotFound = value.Bool()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetPreviousInferenceRewardFractionResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetPreviousInferenceRewardFractionResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetPreviousInferenceRewardFractionResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetPreviousInferenceRewardFractionResponse.reward_fraction":
		panic(fmt.Errorf("field reward_fraction of message emissions.v5.GetPreviousInferenceRewardFractionResponse is not mutable"))
	case "emissions.v5.GetPreviousInferenceRewardFractionResponse.not_found":
		panic(fmt.Errorf("field not_found of message emissions.v5.GetPreviousInferenceRewardFractionResponse is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetPreviousInferenceRewardFractionResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetPreviousInferenceRewardFractionResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetPreviousInferenceRewardFractionResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetPreviousInferenceRewardFractionResponse.reward_fraction":
		return protoreflect.ValueOfString("")
	case "emissions.v5.GetPreviousInferenceRewardFractionResponse.not_found":
		return protoreflect.ValueOfBool(false)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetPreviousInferenceRewardFractionResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetPreviousInferenceRewardFractionResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetPreviousInferenceRewardFractionResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetPreviousInferenceRewardFractionResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetPreviousInferenceRewardFractionResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetPreviousInferenceRewardFractionResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetPreviousInferenceRewardFractionResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetPreviousInferenceRewardFractionResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetPreviousInferenceRewardFractionResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.RewardFraction)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.NotFound {
			n += 2
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetPreviousInferenceRewardFractionResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.NotFound {
			i--
			if x.NotFound {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x10
		}
		if len(x.RewardFraction) > 0 {
			i -= len(x.RewardFraction)
			copy(dAtA[i:], x.RewardFraction)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.RewardFraction)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetPreviousInferenceRewardFractionResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetPreviousInferenceRewardFractionResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetPreviousInferenceRewardFractionResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RewardFraction", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.RewardFraction = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field NotFound", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.NotFound = bool(v != 0)
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetPreviousForecastRewardFractionRequest          protoreflect.MessageDescriptor
	fd_GetPreviousForecastRewardFractionRequest_topic_id protoreflect.FieldDescriptor
	fd_GetPreviousForecastRewardFractionRequest_worker   protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetPreviousForecastRewardFractionRequest = File_emissions_v5_query_proto.Messages().ByName("GetPreviousForecastRewardFractionRequest")
	fd_GetPreviousForecastRewardFractionRequest_topic_id = md_GetPreviousForecastRewardFractionRequest.Fields().ByName("topic_id")
	fd_GetPreviousForecastRewardFractionRequest_worker = md_GetPreviousForecastRewardFractionRequest.Fields().ByName("worker")
}

var _ protoreflect.Message = (*fastReflection_GetPreviousForecastRewardFractionRequest)(nil)

type fastReflection_GetPreviousForecastRewardFractionRequest GetPreviousForecastRewardFractionRequest

func (x *GetPreviousForecastRewardFractionRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetPreviousForecastRewardFractionRequest)(x)
}

func (x *GetPreviousForecastRewardFractionRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[150]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetPreviousForecastRewardFractionRequest_messageType fastReflection_GetPreviousForecastRewardFractionRequest_messageType
var _ protoreflect.MessageType = fastReflection_GetPreviousForecastRewardFractionRequest_messageType{}

type fastReflection_GetPreviousForecastRewardFractionRequest_messageType struct{}

func (x fastReflection_GetPreviousForecastRewardFractionRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetPreviousForecastRewardFractionRequest)(nil)
}
func (x fastReflection_GetPreviousForecastRewardFractionRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_GetPreviousForecastRewardFractionRequest)
}
func (x fastReflection_GetPreviousForecastRewardFractionRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetPreviousForecastRewardFractionRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetPreviousForecastRewardFractionRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_GetPreviousForecastRewardFractionRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetPreviousForecastRewardFractionRequest) Type() protoreflect.MessageType {
	return _fastReflection_GetPreviousForecastRewardFractionRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetPreviousForecastRewardFractionRequest) New() protoreflect.Message {
	return new(fastReflection_GetPreviousForecastRewardFractionRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetPreviousForecastRewardFractionRequest) Interface() protoreflect.ProtoMessage {
	return (*GetPreviousForecastRewardFractionRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetPreviousForecastRewardFractionRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_GetPreviousForecastRewardFractionRequest_topic_id, value) {
			return
		}
	}
	if x.Worker != "" {
		value := protoreflect.ValueOfString(x.Worker)
		if !f(fd_GetPreviousForecastRewardFractionRequest_worker, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetPreviousForecastRewardFractionRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetPreviousForecastRewardFractionRequest.topic_id":
		return x.TopicId != uint64(0)
	case "emissions.v5.GetPreviousForecastRewardFractionRequest.worker":
		return x.Worker != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetPreviousForecastRewardFractionRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetPreviousForecastRewardFractionRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetPreviousForecastRewardFractionRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetPreviousForecastRewardFractionRequest.topic_id":
		x.TopicId = uint64(0)
	case "emissions.v5.GetPreviousForecastRewardFractionRequest.worker":
		x.Worker = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetPreviousForecastRewardFractionRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetPreviousForecastRewardFractionRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetPreviousForecastRewardFractionRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetPreviousForecastRewardFractionRequest.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	case "emissions.v5.GetPreviousForecastRewardFractionRequest.worker":
		value := x.Worker
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetPreviousForecastRewardFractionRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetPreviousForecastRewardFractionRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetPreviousForecastRewardFractionRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetPreviousForecastRewardFractionRequest.topic_id":
		x.TopicId = value.Uint()
	case "emissions.v5.GetPreviousForecastRewardFractionRequest.worker":
		x.Worker = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetPreviousForecastRewardFractionRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetPreviousForecastRewardFractionRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetPreviousForecastRewardFractionRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetPreviousForecastRewardFractionRequest.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.GetPreviousForecastRewardFractionRequest is not mutable"))
	case "emissions.v5.GetPreviousForecastRewardFractionRequest.worker":
		panic(fmt.Errorf("field worker of message emissions.v5.GetPreviousForecastRewardFractionRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetPreviousForecastRewardFractionRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetPreviousForecastRewardFractionRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetPreviousForecastRewardFractionRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetPreviousForecastRewardFractionRequest.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "emissions.v5.GetPreviousForecastRewardFractionRequest.worker":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetPreviousForecastRewardFractionRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetPreviousForecastRewardFractionRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetPreviousForecastRewardFractionRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetPreviousForecastRewardFractionRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetPreviousForecastRewardFractionRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetPreviousForecastRewardFractionRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetPreviousForecastRewardFractionRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetPreviousForecastRewardFractionRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetPreviousForecastRewardFractionRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		l = len(x.Worker)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetPreviousForecastRewardFractionRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Worker) > 0 {
			i -= len(x.Worker)
			copy(dAtA[i:], x.Worker)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Worker)))
			i--
			dAtA[i] = 0x12
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetPreviousForecastRewardFractionRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetPreviousForecastRewardFractionRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetPreviousForecastRewardFractionRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Worker", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Worker = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetPreviousForecastRewardFractionResponse                 protoreflect.MessageDescriptor
	fd_GetPreviousForecastRewardFractionResponse_reward_fraction protoreflect.FieldDescriptor
	fd_GetPreviousForecastRewardFractionResponse_not_found       protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetPreviousForecastRewardFractionResponse = File_emissions_v5_query_proto.Messages().ByName("GetPreviousForecastRewardFractionResponse")
	fd_GetPreviousForecastRewardFractionResponse_reward_fraction = md_GetPreviousForecastRewardFractionResponse.Fields().ByName("reward_fraction")
	fd_GetPreviousForecastRewardFractionResponse_not_found = md_GetPreviousForecastRewardFractionResponse.Fields().ByName("not_found")
}

var _ protoreflect.Message = (*fastReflection_GetPreviousForecastRewardFractionResponse)(nil)

type fastReflection_GetPreviousForecastRewardFractionResponse GetPreviousForecastRewardFractionResponse

func (x *GetPreviousForecastRewardFractionResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetPreviousForecastRewardFractionResponse)(x)
}

func (x *GetPreviousForecastRewardFractionResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[151]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetPreviousForecastRewardFractionResponse_messageType fastReflection_GetPreviousForecastRewardFractionResponse_messageType
var _ protoreflect.MessageType = fastReflection_GetPreviousForecastRewardFractionResponse_messageType{}

type fastReflection_GetPreviousForecastRewardFractionResponse_messageType struct{}

func (x fastReflection_GetPreviousForecastRewardFractionResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetPreviousForecastRewardFractionResponse)(nil)
}
func (x fastReflection_GetPreviousForecastRewardFractionResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_GetPreviousForecastRewardFractionResponse)
}
func (x fastReflection_GetPreviousForecastRewardFractionResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetPreviousForecastRewardFractionResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetPreviousForecastRewardFractionResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_GetPreviousForecastRewardFractionResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetPreviousForecastRewardFractionResponse) Type() protoreflect.MessageType {
	return _fastReflection_GetPreviousForecastRewardFractionResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetPreviousForecastRewardFractionResponse) New() protoreflect.Message {
	return new(fastReflection_GetPreviousForecastRewardFractionResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetPreviousForecastRewardFractionResponse) Interface() protoreflect.ProtoMessage {
	return (*GetPreviousForecastRewardFractionResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetPreviousForecastRewardFractionResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.RewardFraction != "" {
		value := protoreflect.ValueOfString(x.RewardFraction)
		if !f(fd_GetPreviousForecastRewardFractionResponse_reward_fraction, value) {
			return
		}
	}
	if x.NotFound != false {
		value := protoreflect.ValueOfBool(x.NotFound)
		if !f(fd_GetPreviousForecastRewardFractionResponse_not_found, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetPreviousForecastRewardFractionResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetPreviousForecastRewardFractionResponse.reward_fraction":
		return x.RewardFraction != ""
	case "emissions.v5.GetPreviousForecastRewardFractionResponse.not_found":
		return x.NotFound != false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetPreviousForecastRewardFractionResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetPreviousForecastRewardFractionResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetPreviousForecastRewardFractionResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetPreviousForecastRewardFractionResponse.reward_fraction":
		x.RewardFraction = ""
	case "emissions.v5.GetPreviousForecastRewardFractionResponse.not_found":
		x.NotFound = false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetPreviousForecastRewardFractionResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetPreviousForecastRewardFractionResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetPreviousForecastRewardFractionResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetPreviousForecastRewardFractionResponse.reward_fraction":
		value := x.RewardFraction
		return protoreflect.ValueOfString(value)
	case "emissions.v5.GetPreviousForecastRewardFractionResponse.not_found":
		value := x.NotFound
		return protoreflect.ValueOfBool(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetPreviousForecastRewardFractionResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetPreviousForecastRewardFractionResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetPreviousForecastRewardFractionResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetPreviousForecastRewardFractionResponse.reward_fraction":
		x.RewardFraction = value.Interface().(string)
	case "emissions.v5.GetPreviousForecastRewardFractionResponse.not_found":
		x.NotFound = value.Bool()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetPreviousForecastRewardFractionResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetPreviousForecastRewardFractionResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetPreviousForecastRewardFractionResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetPreviousForecastRewardFractionResponse.reward_fraction":
		panic(fmt.Errorf("field reward_fraction of message emissions.v5.GetPreviousForecastRewardFractionResponse is not mutable"))
	case "emissions.v5.GetPreviousForecastRewardFractionResponse.not_found":
		panic(fmt.Errorf("field not_found of message emissions.v5.GetPreviousForecastRewardFractionResponse is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetPreviousForecastRewardFractionResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetPreviousForecastRewardFractionResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetPreviousForecastRewardFractionResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetPreviousForecastRewardFractionResponse.reward_fraction":
		return protoreflect.ValueOfString("")
	case "emissions.v5.GetPreviousForecastRewardFractionResponse.not_found":
		return protoreflect.ValueOfBool(false)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetPreviousForecastRewardFractionResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetPreviousForecastRewardFractionResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetPreviousForecastRewardFractionResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetPreviousForecastRewardFractionResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetPreviousForecastRewardFractionResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetPreviousForecastRewardFractionResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetPreviousForecastRewardFractionResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetPreviousForecastRewardFractionResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetPreviousForecastRewardFractionResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.RewardFraction)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.NotFound {
			n += 2
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetPreviousForecastRewardFractionResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.NotFound {
			i--
			if x.NotFound {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x10
		}
		if len(x.RewardFraction) > 0 {
			i -= len(x.RewardFraction)
			copy(dAtA[i:], x.RewardFraction)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.RewardFraction)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetPreviousForecastRewardFractionResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetPreviousForecastRewardFractionResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetPreviousForecastRewardFractionResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RewardFraction", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.RewardFraction = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field NotFound", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.NotFound = bool(v != 0)
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetPreviousPercentageRewardToStakedReputersRequest protoreflect.MessageDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetPreviousPercentageRewardToStakedReputersRequest = File_emissions_v5_query_proto.Messages().ByName("GetPreviousPercentageRewardToStakedReputersRequest")
}

var _ protoreflect.Message = (*fastReflection_GetPreviousPercentageRewardToStakedReputersRequest)(nil)

type fastReflection_GetPreviousPercentageRewardToStakedReputersRequest GetPreviousPercentageRewardToStakedReputersRequest

func (x *GetPreviousPercentageRewardToStakedReputersRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetPreviousPercentageRewardToStakedReputersRequest)(x)
}

func (x *GetPreviousPercentageRewardToStakedReputersRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[152]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetPreviousPercentageRewardToStakedReputersRequest_messageType fastReflection_GetPreviousPercentageRewardToStakedReputersRequest_messageType
var _ protoreflect.MessageType = fastReflection_GetPreviousPercentageRewardToStakedReputersRequest_messageType{}

type fastReflection_GetPreviousPercentageRewardToStakedReputersRequest_messageType struct{}

func (x fastReflection_GetPreviousPercentageRewardToStakedReputersRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetPreviousPercentageRewardToStakedReputersRequest)(nil)
}
func (x fastReflection_GetPreviousPercentageRewardToStakedReputersRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_GetPreviousPercentageRewardToStakedReputersRequest)
}
func (x fastReflection_GetPreviousPercentageRewardToStakedReputersRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetPreviousPercentageRewardToStakedReputersRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetPreviousPercentageRewardToStakedReputersRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_GetPreviousPercentageRewardToStakedReputersRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetPreviousPercentageRewardToStakedReputersRequest) Type() protoreflect.MessageType {
	return _fastReflection_GetPreviousPercentageRewardToStakedReputersRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetPreviousPercentageRewardToStakedReputersRequest) New() protoreflect.Message {
	return new(fastReflection_GetPreviousPercentageRewardToStakedReputersRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetPreviousPercentageRewardToStakedReputersRequest) Interface() protoreflect.ProtoMessage {
	return (*GetPreviousPercentageRewardToStakedReputersRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetPreviousPercentageRewardToStakedReputersRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetPreviousPercentageRewardToStakedReputersRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetPreviousPercentageRewardToStakedReputersRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetPreviousPercentageRewardToStakedReputersRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetPreviousPercentageRewardToStakedReputersRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetPreviousPercentageRewardToStakedReputersRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetPreviousPercentageRewardToStakedReputersRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetPreviousPercentageRewardToStakedReputersRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetPreviousPercentageRewardToStakedReputersRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetPreviousPercentageRewardToStakedReputersRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetPreviousPercentageRewardToStakedReputersRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetPreviousPercentageRewardToStakedReputersRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetPreviousPercentageRewardToStakedReputersRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetPreviousPercentageRewardToStakedReputersRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetPreviousPercentageRewardToStakedReputersRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetPreviousPercentageRewardToStakedReputersRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetPreviousPercentageRewardToStakedReputersRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetPreviousPercentageRewardToStakedReputersRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetPreviousPercentageRewardToStakedReputersRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetPreviousPercentageRewardToStakedReputersRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetPreviousPercentageRewardToStakedReputersRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetPreviousPercentageRewardToStakedReputersRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetPreviousPercentageRewardToStakedReputersRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetPreviousPercentageRewardToStakedReputersRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetPreviousPercentageRewardToStakedReputersRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetPreviousPercentageRewardToStakedReputersRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetPreviousPercentageRewardToStakedReputersRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetPreviousPercentageRewardToStakedReputersRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetPreviousPercentageRewardToStakedReputersRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetPreviousPercentageRewardToStakedReputersRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetPreviousPercentageRewardToStakedReputersResponse                   protoreflect.MessageDescriptor
	fd_GetPreviousPercentageRewardToStakedReputersResponse_percentage_reward protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetPreviousPercentageRewardToStakedReputersResponse = File_emissions_v5_query_proto.Messages().ByName("GetPreviousPercentageRewardToStakedReputersResponse")
	fd_GetPreviousPercentageRewardToStakedReputersResponse_percentage_reward = md_GetPreviousPercentageRewardToStakedReputersResponse.Fields().ByName("percentage_reward")
}

var _ protoreflect.Message = (*fastReflection_GetPreviousPercentageRewardToStakedReputersResponse)(nil)

type fastReflection_GetPreviousPercentageRewardToStakedReputersResponse GetPreviousPercentageRewardToStakedReputersResponse

func (x *GetPreviousPercentageRewardToStakedReputersResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetPreviousPercentageRewardToStakedReputersResponse)(x)
}

func (x *GetPreviousPercentageRewardToStakedReputersResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[153]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetPreviousPercentageRewardToStakedReputersResponse_messageType fastReflection_GetPreviousPercentageRewardToStakedReputersResponse_messageType
var _ protoreflect.MessageType = fastReflection_GetPreviousPercentageRewardToStakedReputersResponse_messageType{}

type fastReflection_GetPreviousPercentageRewardToStakedReputersResponse_messageType struct{}

func (x fastReflection_GetPreviousPercentageRewardToStakedReputersResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetPreviousPercentageRewardToStakedReputersResponse)(nil)
}
func (x fastReflection_GetPreviousPercentageRewardToStakedReputersResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_GetPreviousPercentageRewardToStakedReputersResponse)
}
func (x fastReflection_GetPreviousPercentageRewardToStakedReputersResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetPreviousPercentageRewardToStakedReputersResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetPreviousPercentageRewardToStakedReputersResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_GetPreviousPercentageRewardToStakedReputersResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetPreviousPercentageRewardToStakedReputersResponse) Type() protoreflect.MessageType {
	return _fastReflection_GetPreviousPercentageRewardToStakedReputersResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetPreviousPercentageRewardToStakedReputersResponse) New() protoreflect.Message {
	return new(fastReflection_GetPreviousPercentageRewardToStakedReputersResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetPreviousPercentageRewardToStakedReputersResponse) Interface() protoreflect.ProtoMessage {
	return (*GetPreviousPercentageRewardToStakedReputersResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetPreviousPercentageRewardToStakedReputersResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.PercentageReward != "" {
		value := protoreflect.ValueOfString(x.PercentageReward)
		if !f(fd_GetPreviousPercentageRewardToStakedReputersResponse_percentage_reward, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetPreviousPercentageRewardToStakedReputersResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetPreviousPercentageRewardToStakedReputersResponse.percentage_reward":
		return x.PercentageReward != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetPreviousPercentageRewardToStakedReputersResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetPreviousPercentageRewardToStakedReputersResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetPreviousPercentageRewardToStakedReputersResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetPreviousPercentageRewardToStakedReputersResponse.percentage_reward":
		x.PercentageReward = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetPreviousPercentageRewardToStakedReputersResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetPreviousPercentageRewardToStakedReputersResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetPreviousPercentageRewardToStakedReputersResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetPreviousPercentageRewardToStakedReputersResponse.percentage_reward":
		value := x.PercentageReward
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetPreviousPercentageRewardToStakedReputersResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetPreviousPercentageRewardToStakedReputersResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetPreviousPercentageRewardToStakedReputersResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetPreviousPercentageRewardToStakedReputersResponse.percentage_reward":
		x.PercentageReward = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetPreviousPercentageRewardToStakedReputersResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetPreviousPercentageRewardToStakedReputersResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetPreviousPercentageRewardToStakedReputersResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetPreviousPercentageRewardToStakedReputersResponse.percentage_reward":
		panic(fmt.Errorf("field percentage_reward of message emissions.v5.GetPreviousPercentageRewardToStakedReputersResponse is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetPreviousPercentageRewardToStakedReputersResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetPreviousPercentageRewardToStakedReputersResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetPreviousPercentageRewardToStakedReputersResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetPreviousPercentageRewardToStakedReputersResponse.percentage_reward":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetPreviousPercentageRewardToStakedReputersResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetPreviousPercentageRewardToStakedReputersResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetPreviousPercentageRewardToStakedReputersResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetPreviousPercentageRewardToStakedReputersResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetPreviousPercentageRewardToStakedReputersResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetPreviousPercentageRewardToStakedReputersResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetPreviousPercentageRewardToStakedReputersResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetPreviousPercentageRewardToStakedReputersResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetPreviousPercentageRewardToStakedReputersResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.PercentageReward)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetPreviousPercentageRewardToStakedReputersResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.PercentageReward) > 0 {
			i -= len(x.PercentageReward)
			copy(dAtA[i:], x.PercentageReward)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.PercentageReward)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetPreviousPercentageRewardToStakedReputersResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetPreviousPercentageRewardToStakedReputersResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetPreviousPercentageRewardToStakedReputersResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PercentageReward", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.PercentageReward = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetTotalRewardToDistributeRequest protoreflect.MessageDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetTotalRewardToDistributeRequest = File_emissions_v5_query_proto.Messages().ByName("GetTotalRewardToDistributeRequest")
}

var _ protoreflect.Message = (*fastReflection_GetTotalRewardToDistributeRequest)(nil)

type fastReflection_GetTotalRewardToDistributeRequest GetTotalRewardToDistributeRequest

func (x *GetTotalRewardToDistributeRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetTotalRewardToDistributeRequest)(x)
}

func (x *GetTotalRewardToDistributeRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[154]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetTotalRewardToDistributeRequest_messageType fastReflection_GetTotalRewardToDistributeRequest_messageType
var _ protoreflect.MessageType = fastReflection_GetTotalRewardToDistributeRequest_messageType{}

type fastReflection_GetTotalRewardToDistributeRequest_messageType struct{}

func (x fastReflection_GetTotalRewardToDistributeRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetTotalRewardToDistributeRequest)(nil)
}
func (x fastReflection_GetTotalRewardToDistributeRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_GetTotalRewardToDistributeRequest)
}
func (x fastReflection_GetTotalRewardToDistributeRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetTotalRewardToDistributeRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetTotalRewardToDistributeRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_GetTotalRewardToDistributeRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetTotalRewardToDistributeRequest) Type() protoreflect.MessageType {
	return _fastReflection_GetTotalRewardToDistributeRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetTotalRewardToDistributeRequest) New() protoreflect.Message {
	return new(fastReflection_GetTotalRewardToDistributeRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetTotalRewardToDistributeRequest) Interface() protoreflect.ProtoMessage {
	return (*GetTotalRewardToDistributeRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetTotalRewardToDistributeRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetTotalRewardToDistributeRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetTotalRewardToDistributeRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetTotalRewardToDistributeRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetTotalRewardToDistributeRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetTotalRewardToDistributeRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetTotalRewardToDistributeRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetTotalRewardToDistributeRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetTotalRewardToDistributeRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetTotalRewardToDistributeRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetTotalRewardToDistributeRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetTotalRewardToDistributeRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetTotalRewardToDistributeRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetTotalRewardToDistributeRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetTotalRewardToDistributeRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetTotalRewardToDistributeRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetTotalRewardToDistributeRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetTotalRewardToDistributeRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetTotalRewardToDistributeRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetTotalRewardToDistributeRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetTotalRewardToDistributeRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetTotalRewardToDistributeRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetTotalRewardToDistributeRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetTotalRewardToDistributeRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetTotalRewardToDistributeRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetTotalRewardToDistributeRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetTotalRewardToDistributeRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetTotalRewardToDistributeRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetTotalRewardToDistributeRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetTotalRewardToDistributeRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetTotalRewardToDistributeResponse              protoreflect.MessageDescriptor
	fd_GetTotalRewardToDistributeResponse_total_reward protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetTotalRewardToDistributeResponse = File_emissions_v5_query_proto.Messages().ByName("GetTotalRewardToDistributeResponse")
	fd_GetTotalRewardToDistributeResponse_total_reward = md_GetTotalRewardToDistributeResponse.Fields().ByName("total_reward")
}

var _ protoreflect.Message = (*fastReflection_GetTotalRewardToDistributeResponse)(nil)

type fastReflection_GetTotalRewardToDistributeResponse GetTotalRewardToDistributeResponse

func (x *GetTotalRewardToDistributeResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetTotalRewardToDistributeResponse)(x)
}

func (x *GetTotalRewardToDistributeResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[155]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetTotalRewardToDistributeResponse_messageType fastReflection_GetTotalRewardToDistributeResponse_messageType
var _ protoreflect.MessageType = fastReflection_GetTotalRewardToDistributeResponse_messageType{}

type fastReflection_GetTotalRewardToDistributeResponse_messageType struct{}

func (x fastReflection_GetTotalRewardToDistributeResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetTotalRewardToDistributeResponse)(nil)
}
func (x fastReflection_GetTotalRewardToDistributeResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_GetTotalRewardToDistributeResponse)
}
func (x fastReflection_GetTotalRewardToDistributeResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetTotalRewardToDistributeResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetTotalRewardToDistributeResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_GetTotalRewardToDistributeResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetTotalRewardToDistributeResponse) Type() protoreflect.MessageType {
	return _fastReflection_GetTotalRewardToDistributeResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetTotalRewardToDistributeResponse) New() protoreflect.Message {
	return new(fastReflection_GetTotalRewardToDistributeResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetTotalRewardToDistributeResponse) Interface() protoreflect.ProtoMessage {
	return (*GetTotalRewardToDistributeResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetTotalRewardToDistributeResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TotalReward != "" {
		value := protoreflect.ValueOfString(x.TotalReward)
		if !f(fd_GetTotalRewardToDistributeResponse_total_reward, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetTotalRewardToDistributeResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetTotalRewardToDistributeResponse.total_reward":
		return x.TotalReward != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetTotalRewardToDistributeResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetTotalRewardToDistributeResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetTotalRewardToDistributeResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetTotalRewardToDistributeResponse.total_reward":
		x.TotalReward = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetTotalRewardToDistributeResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetTotalRewardToDistributeResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetTotalRewardToDistributeResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetTotalRewardToDistributeResponse.total_reward":
		value := x.TotalReward
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetTotalRewardToDistributeResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetTotalRewardToDistributeResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetTotalRewardToDistributeResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetTotalRewardToDistributeResponse.total_reward":
		x.TotalReward = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetTotalRewardToDistributeResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetTotalRewardToDistributeResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetTotalRewardToDistributeResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetTotalRewardToDistributeResponse.total_reward":
		panic(fmt.Errorf("field total_reward of message emissions.v5.GetTotalRewardToDistributeResponse is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetTotalRewardToDistributeResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetTotalRewardToDistributeResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetTotalRewardToDistributeResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetTotalRewardToDistributeResponse.total_reward":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetTotalRewardToDistributeResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetTotalRewardToDistributeResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetTotalRewardToDistributeResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetTotalRewardToDistributeResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetTotalRewardToDistributeResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetTotalRewardToDistributeResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetTotalRewardToDistributeResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetTotalRewardToDistributeResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetTotalRewardToDistributeResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.TotalReward)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetTotalRewardToDistributeResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.TotalReward) > 0 {
			i -= len(x.TotalReward)
			copy(dAtA[i:], x.TotalReward)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.TotalReward)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetTotalRewardToDistributeResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetTotalRewardToDistributeResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetTotalRewardToDistributeResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TotalReward", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TotalReward = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetActiveTopicsAtBlockRequest              protoreflect.MessageDescriptor
	fd_GetActiveTopicsAtBlockRequest_block_height protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetActiveTopicsAtBlockRequest = File_emissions_v5_query_proto.Messages().ByName("GetActiveTopicsAtBlockRequest")
	fd_GetActiveTopicsAtBlockRequest_block_height = md_GetActiveTopicsAtBlockRequest.Fields().ByName("block_height")
}

var _ protoreflect.Message = (*fastReflection_GetActiveTopicsAtBlockRequest)(nil)

type fastReflection_GetActiveTopicsAtBlockRequest GetActiveTopicsAtBlockRequest

func (x *GetActiveTopicsAtBlockRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetActiveTopicsAtBlockRequest)(x)
}

func (x *GetActiveTopicsAtBlockRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[156]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetActiveTopicsAtBlockRequest_messageType fastReflection_GetActiveTopicsAtBlockRequest_messageType
var _ protoreflect.MessageType = fastReflection_GetActiveTopicsAtBlockRequest_messageType{}

type fastReflection_GetActiveTopicsAtBlockRequest_messageType struct{}

func (x fastReflection_GetActiveTopicsAtBlockRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetActiveTopicsAtBlockRequest)(nil)
}
func (x fastReflection_GetActiveTopicsAtBlockRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_GetActiveTopicsAtBlockRequest)
}
func (x fastReflection_GetActiveTopicsAtBlockRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetActiveTopicsAtBlockRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetActiveTopicsAtBlockRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_GetActiveTopicsAtBlockRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetActiveTopicsAtBlockRequest) Type() protoreflect.MessageType {
	return _fastReflection_GetActiveTopicsAtBlockRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetActiveTopicsAtBlockRequest) New() protoreflect.Message {
	return new(fastReflection_GetActiveTopicsAtBlockRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetActiveTopicsAtBlockRequest) Interface() protoreflect.ProtoMessage {
	return (*GetActiveTopicsAtBlockRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetActiveTopicsAtBlockRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.BlockHeight != int64(0) {
		value := protoreflect.ValueOfInt64(x.BlockHeight)
		if !f(fd_GetActiveTopicsAtBlockRequest_block_height, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetActiveTopicsAtBlockRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetActiveTopicsAtBlockRequest.block_height":
		return x.BlockHeight != int64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetActiveTopicsAtBlockRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetActiveTopicsAtBlockRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetActiveTopicsAtBlockRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetActiveTopicsAtBlockRequest.block_height":
		x.BlockHeight = int64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetActiveTopicsAtBlockRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetActiveTopicsAtBlockRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetActiveTopicsAtBlockRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetActiveTopicsAtBlockRequest.block_height":
		value := x.BlockHeight
		return protoreflect.ValueOfInt64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetActiveTopicsAtBlockRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetActiveTopicsAtBlockRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetActiveTopicsAtBlockRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetActiveTopicsAtBlockRequest.block_height":
		x.BlockHeight = value.Int()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetActiveTopicsAtBlockRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetActiveTopicsAtBlockRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetActiveTopicsAtBlockRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetActiveTopicsAtBlockRequest.block_height":
		panic(fmt.Errorf("field block_height of message emissions.v5.GetActiveTopicsAtBlockRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetActiveTopicsAtBlockRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetActiveTopicsAtBlockRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetActiveTopicsAtBlockRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetActiveTopicsAtBlockRequest.block_height":
		return protoreflect.ValueOfInt64(int64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetActiveTopicsAtBlockRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetActiveTopicsAtBlockRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetActiveTopicsAtBlockRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetActiveTopicsAtBlockRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetActiveTopicsAtBlockRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetActiveTopicsAtBlockRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetActiveTopicsAtBlockRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetActiveTopicsAtBlockRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetActiveTopicsAtBlockRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.BlockHeight != 0 {
			n += 1 + runtime.Sov(uint64(x.BlockHeight))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetActiveTopicsAtBlockRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.BlockHeight != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.BlockHeight))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetActiveTopicsAtBlockRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetActiveTopicsAtBlockRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetActiveTopicsAtBlockRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BlockHeight", wireType)
				}
				x.BlockHeight = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.BlockHeight |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_GetActiveTopicsAtBlockResponse_1_list)(nil)

type _GetActiveTopicsAtBlockResponse_1_list struct {
	list *[]*v3.Topic
}

func (x *_GetActiveTopicsAtBlockResponse_1_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GetActiveTopicsAtBlockResponse_1_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GetActiveTopicsAtBlockResponse_1_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*v3.Topic)
	(*x.list)[i] = concreteValue
}

func (x *_GetActiveTopicsAtBlockResponse_1_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*v3.Topic)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GetActiveTopicsAtBlockResponse_1_list) AppendMutable() protoreflect.Value {
	v := new(v3.Topic)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GetActiveTopicsAtBlockResponse_1_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GetActiveTopicsAtBlockResponse_1_list) NewElement() protoreflect.Value {
	v := new(v3.Topic)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GetActiveTopicsAtBlockResponse_1_list) IsValid() bool {
	return x.list != nil
}

var (
	md_GetActiveTopicsAtBlockResponse            protoreflect.MessageDescriptor
	fd_GetActiveTopicsAtBlockResponse_topics     protoreflect.FieldDescriptor
	fd_GetActiveTopicsAtBlockResponse_pagination protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetActiveTopicsAtBlockResponse = File_emissions_v5_query_proto.Messages().ByName("GetActiveTopicsAtBlockResponse")
	fd_GetActiveTopicsAtBlockResponse_topics = md_GetActiveTopicsAtBlockResponse.Fields().ByName("topics")
	fd_GetActiveTopicsAtBlockResponse_pagination = md_GetActiveTopicsAtBlockResponse.Fields().ByName("pagination")
}

var _ protoreflect.Message = (*fastReflection_GetActiveTopicsAtBlockResponse)(nil)

type fastReflection_GetActiveTopicsAtBlockResponse GetActiveTopicsAtBlockResponse

func (x *GetActiveTopicsAtBlockResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetActiveTopicsAtBlockResponse)(x)
}

func (x *GetActiveTopicsAtBlockResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[157]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetActiveTopicsAtBlockResponse_messageType fastReflection_GetActiveTopicsAtBlockResponse_messageType
var _ protoreflect.MessageType = fastReflection_GetActiveTopicsAtBlockResponse_messageType{}

type fastReflection_GetActiveTopicsAtBlockResponse_messageType struct{}

func (x fastReflection_GetActiveTopicsAtBlockResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetActiveTopicsAtBlockResponse)(nil)
}
func (x fastReflection_GetActiveTopicsAtBlockResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_GetActiveTopicsAtBlockResponse)
}
func (x fastReflection_GetActiveTopicsAtBlockResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetActiveTopicsAtBlockResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetActiveTopicsAtBlockResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_GetActiveTopicsAtBlockResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetActiveTopicsAtBlockResponse) Type() protoreflect.MessageType {
	return _fastReflection_GetActiveTopicsAtBlockResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetActiveTopicsAtBlockResponse) New() protoreflect.Message {
	return new(fastReflection_GetActiveTopicsAtBlockResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetActiveTopicsAtBlockResponse) Interface() protoreflect.ProtoMessage {
	return (*GetActiveTopicsAtBlockResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetActiveTopicsAtBlockResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.Topics) != 0 {
		value := protoreflect.ValueOfList(&_GetActiveTopicsAtBlockResponse_1_list{list: &x.Topics})
		if !f(fd_GetActiveTopicsAtBlockResponse_topics, value) {
			return
		}
	}
	if x.Pagination != nil {
		value := protoreflect.ValueOfMessage(x.Pagination.ProtoReflect())
		if !f(fd_GetActiveTopicsAtBlockResponse_pagination, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetActiveTopicsAtBlockResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetActiveTopicsAtBlockResponse.topics":
		return len(x.Topics) != 0
	case "emissions.v5.GetActiveTopicsAtBlockResponse.pagination":
		return x.Pagination != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetActiveTopicsAtBlockResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetActiveTopicsAtBlockResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetActiveTopicsAtBlockResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetActiveTopicsAtBlockResponse.topics":
		x.Topics = nil
	case "emissions.v5.GetActiveTopicsAtBlockResponse.pagination":
		x.Pagination = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetActiveTopicsAtBlockResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetActiveTopicsAtBlockResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetActiveTopicsAtBlockResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetActiveTopicsAtBlockResponse.topics":
		if len(x.Topics) == 0 {
			return protoreflect.ValueOfList(&_GetActiveTopicsAtBlockResponse_1_list{})
		}
		listValue := &_GetActiveTopicsAtBlockResponse_1_list{list: &x.Topics}
		return protoreflect.ValueOfList(listValue)
	case "emissions.v5.GetActiveTopicsAtBlockResponse.pagination":
		value := x.Pagination
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetActiveTopicsAtBlockResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetActiveTopicsAtBlockResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetActiveTopicsAtBlockResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetActiveTopicsAtBlockResponse.topics":
		lv := value.List()
		clv := lv.(*_GetActiveTopicsAtBlockResponse_1_list)
		x.Topics = *clv.list
	case "emissions.v5.GetActiveTopicsAtBlockResponse.pagination":
		x.Pagination = value.Message().Interface().(*v3.SimpleCursorPaginationResponse)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetActiveTopicsAtBlockResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetActiveTopicsAtBlockResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetActiveTopicsAtBlockResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetActiveTopicsAtBlockResponse.topics":
		if x.Topics == nil {
			x.Topics = []*v3.Topic{}
		}
		value := &_GetActiveTopicsAtBlockResponse_1_list{list: &x.Topics}
		return protoreflect.ValueOfList(value)
	case "emissions.v5.GetActiveTopicsAtBlockResponse.pagination":
		if x.Pagination == nil {
			x.Pagination = new(v3.SimpleCursorPaginationResponse)
		}
		return protoreflect.ValueOfMessage(x.Pagination.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetActiveTopicsAtBlockResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetActiveTopicsAtBlockResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetActiveTopicsAtBlockResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetActiveTopicsAtBlockResponse.topics":
		list := []*v3.Topic{}
		return protoreflect.ValueOfList(&_GetActiveTopicsAtBlockResponse_1_list{list: &list})
	case "emissions.v5.GetActiveTopicsAtBlockResponse.pagination":
		m := new(v3.SimpleCursorPaginationResponse)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetActiveTopicsAtBlockResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetActiveTopicsAtBlockResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetActiveTopicsAtBlockResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetActiveTopicsAtBlockResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetActiveTopicsAtBlockResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetActiveTopicsAtBlockResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetActiveTopicsAtBlockResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetActiveTopicsAtBlockResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetActiveTopicsAtBlockResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if len(x.Topics) > 0 {
			for _, e := range x.Topics {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.Pagination != nil {
			l = options.Size(x.Pagination)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetActiveTopicsAtBlockResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Pagination != nil {
			encoded, err := options.Marshal(x.Pagination)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Topics) > 0 {
			for iNdEx := len(x.Topics) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.Topics[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0xa
			}
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetActiveTopicsAtBlockResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetActiveTopicsAtBlockResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetActiveTopicsAtBlockResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Topics", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Topics = append(x.Topics, &v3.Topic{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Topics[len(x.Topics)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Pagination", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Pagination == nil {
					x.Pagination = &v3.SimpleCursorPaginationResponse{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Pagination); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetNextChurningBlockByTopicIdRequest          protoreflect.MessageDescriptor
	fd_GetNextChurningBlockByTopicIdRequest_topic_id protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetNextChurningBlockByTopicIdRequest = File_emissions_v5_query_proto.Messages().ByName("GetNextChurningBlockByTopicIdRequest")
	fd_GetNextChurningBlockByTopicIdRequest_topic_id = md_GetNextChurningBlockByTopicIdRequest.Fields().ByName("topic_id")
}

var _ protoreflect.Message = (*fastReflection_GetNextChurningBlockByTopicIdRequest)(nil)

type fastReflection_GetNextChurningBlockByTopicIdRequest GetNextChurningBlockByTopicIdRequest

func (x *GetNextChurningBlockByTopicIdRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetNextChurningBlockByTopicIdRequest)(x)
}

func (x *GetNextChurningBlockByTopicIdRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[158]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetNextChurningBlockByTopicIdRequest_messageType fastReflection_GetNextChurningBlockByTopicIdRequest_messageType
var _ protoreflect.MessageType = fastReflection_GetNextChurningBlockByTopicIdRequest_messageType{}

type fastReflection_GetNextChurningBlockByTopicIdRequest_messageType struct{}

func (x fastReflection_GetNextChurningBlockByTopicIdRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetNextChurningBlockByTopicIdRequest)(nil)
}
func (x fastReflection_GetNextChurningBlockByTopicIdRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_GetNextChurningBlockByTopicIdRequest)
}
func (x fastReflection_GetNextChurningBlockByTopicIdRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetNextChurningBlockByTopicIdRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetNextChurningBlockByTopicIdRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_GetNextChurningBlockByTopicIdRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetNextChurningBlockByTopicIdRequest) Type() protoreflect.MessageType {
	return _fastReflection_GetNextChurningBlockByTopicIdRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetNextChurningBlockByTopicIdRequest) New() protoreflect.Message {
	return new(fastReflection_GetNextChurningBlockByTopicIdRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetNextChurningBlockByTopicIdRequest) Interface() protoreflect.ProtoMessage {
	return (*GetNextChurningBlockByTopicIdRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetNextChurningBlockByTopicIdRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_GetNextChurningBlockByTopicIdRequest_topic_id, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetNextChurningBlockByTopicIdRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetNextChurningBlockByTopicIdRequest.topic_id":
		return x.TopicId != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetNextChurningBlockByTopicIdRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetNextChurningBlockByTopicIdRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetNextChurningBlockByTopicIdRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetNextChurningBlockByTopicIdRequest.topic_id":
		x.TopicId = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetNextChurningBlockByTopicIdRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetNextChurningBlockByTopicIdRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetNextChurningBlockByTopicIdRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetNextChurningBlockByTopicIdRequest.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetNextChurningBlockByTopicIdRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetNextChurningBlockByTopicIdRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetNextChurningBlockByTopicIdRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetNextChurningBlockByTopicIdRequest.topic_id":
		x.TopicId = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetNextChurningBlockByTopicIdRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetNextChurningBlockByTopicIdRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetNextChurningBlockByTopicIdRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetNextChurningBlockByTopicIdRequest.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.GetNextChurningBlockByTopicIdRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetNextChurningBlockByTopicIdRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetNextChurningBlockByTopicIdRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetNextChurningBlockByTopicIdRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetNextChurningBlockByTopicIdRequest.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetNextChurningBlockByTopicIdRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetNextChurningBlockByTopicIdRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetNextChurningBlockByTopicIdRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetNextChurningBlockByTopicIdRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetNextChurningBlockByTopicIdRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetNextChurningBlockByTopicIdRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetNextChurningBlockByTopicIdRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetNextChurningBlockByTopicIdRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetNextChurningBlockByTopicIdRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetNextChurningBlockByTopicIdRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetNextChurningBlockByTopicIdRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetNextChurningBlockByTopicIdRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetNextChurningBlockByTopicIdRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetNextChurningBlockByTopicIdResponse              protoreflect.MessageDescriptor
	fd_GetNextChurningBlockByTopicIdResponse_block_height protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetNextChurningBlockByTopicIdResponse = File_emissions_v5_query_proto.Messages().ByName("GetNextChurningBlockByTopicIdResponse")
	fd_GetNextChurningBlockByTopicIdResponse_block_height = md_GetNextChurningBlockByTopicIdResponse.Fields().ByName("block_height")
}

var _ protoreflect.Message = (*fastReflection_GetNextChurningBlockByTopicIdResponse)(nil)

type fastReflection_GetNextChurningBlockByTopicIdResponse GetNextChurningBlockByTopicIdResponse

func (x *GetNextChurningBlockByTopicIdResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetNextChurningBlockByTopicIdResponse)(x)
}

func (x *GetNextChurningBlockByTopicIdResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[159]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetNextChurningBlockByTopicIdResponse_messageType fastReflection_GetNextChurningBlockByTopicIdResponse_messageType
var _ protoreflect.MessageType = fastReflection_GetNextChurningBlockByTopicIdResponse_messageType{}

type fastReflection_GetNextChurningBlockByTopicIdResponse_messageType struct{}

func (x fastReflection_GetNextChurningBlockByTopicIdResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetNextChurningBlockByTopicIdResponse)(nil)
}
func (x fastReflection_GetNextChurningBlockByTopicIdResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_GetNextChurningBlockByTopicIdResponse)
}
func (x fastReflection_GetNextChurningBlockByTopicIdResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetNextChurningBlockByTopicIdResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetNextChurningBlockByTopicIdResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_GetNextChurningBlockByTopicIdResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetNextChurningBlockByTopicIdResponse) Type() protoreflect.MessageType {
	return _fastReflection_GetNextChurningBlockByTopicIdResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetNextChurningBlockByTopicIdResponse) New() protoreflect.Message {
	return new(fastReflection_GetNextChurningBlockByTopicIdResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetNextChurningBlockByTopicIdResponse) Interface() protoreflect.ProtoMessage {
	return (*GetNextChurningBlockByTopicIdResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetNextChurningBlockByTopicIdResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.BlockHeight != int64(0) {
		value := protoreflect.ValueOfInt64(x.BlockHeight)
		if !f(fd_GetNextChurningBlockByTopicIdResponse_block_height, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetNextChurningBlockByTopicIdResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetNextChurningBlockByTopicIdResponse.block_height":
		return x.BlockHeight != int64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetNextChurningBlockByTopicIdResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetNextChurningBlockByTopicIdResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetNextChurningBlockByTopicIdResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetNextChurningBlockByTopicIdResponse.block_height":
		x.BlockHeight = int64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetNextChurningBlockByTopicIdResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetNextChurningBlockByTopicIdResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetNextChurningBlockByTopicIdResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetNextChurningBlockByTopicIdResponse.block_height":
		value := x.BlockHeight
		return protoreflect.ValueOfInt64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetNextChurningBlockByTopicIdResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetNextChurningBlockByTopicIdResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetNextChurningBlockByTopicIdResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetNextChurningBlockByTopicIdResponse.block_height":
		x.BlockHeight = value.Int()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetNextChurningBlockByTopicIdResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetNextChurningBlockByTopicIdResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetNextChurningBlockByTopicIdResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetNextChurningBlockByTopicIdResponse.block_height":
		panic(fmt.Errorf("field block_height of message emissions.v5.GetNextChurningBlockByTopicIdResponse is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetNextChurningBlockByTopicIdResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetNextChurningBlockByTopicIdResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetNextChurningBlockByTopicIdResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetNextChurningBlockByTopicIdResponse.block_height":
		return protoreflect.ValueOfInt64(int64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetNextChurningBlockByTopicIdResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetNextChurningBlockByTopicIdResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetNextChurningBlockByTopicIdResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetNextChurningBlockByTopicIdResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetNextChurningBlockByTopicIdResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetNextChurningBlockByTopicIdResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetNextChurningBlockByTopicIdResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetNextChurningBlockByTopicIdResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetNextChurningBlockByTopicIdResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.BlockHeight != 0 {
			n += 1 + runtime.Sov(uint64(x.BlockHeight))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetNextChurningBlockByTopicIdResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.BlockHeight != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.BlockHeight))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetNextChurningBlockByTopicIdResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetNextChurningBlockByTopicIdResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetNextChurningBlockByTopicIdResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BlockHeight", wireType)
				}
				x.BlockHeight = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.BlockHeight |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetActiveReputersForTopicRequest          protoreflect.MessageDescriptor
	fd_GetActiveReputersForTopicRequest_topic_id protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetActiveReputersForTopicRequest = File_emissions_v5_query_proto.Messages().ByName("GetActiveReputersForTopicRequest")
	fd_GetActiveReputersForTopicRequest_topic_id = md_GetActiveReputersForTopicRequest.Fields().ByName("topic_id")
}

var _ protoreflect.Message = (*fastReflection_GetActiveReputersForTopicRequest)(nil)

type fastReflection_GetActiveReputersForTopicRequest GetActiveReputersForTopicRequest

func (x *GetActiveReputersForTopicRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetActiveReputersForTopicRequest)(x)
}

func (x *GetActiveReputersForTopicRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[160]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetActiveReputersForTopicRequest_messageType fastReflection_GetActiveReputersForTopicRequest_messageType
var _ protoreflect.MessageType = fastReflection_GetActiveReputersForTopicRequest_messageType{}

type fastReflection_GetActiveReputersForTopicRequest_messageType struct{}

func (x fastReflection_GetActiveReputersForTopicRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetActiveReputersForTopicRequest)(nil)
}
func (x fastReflection_GetActiveReputersForTopicRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_GetActiveReputersForTopicRequest)
}
func (x fastReflection_GetActiveReputersForTopicRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetActiveReputersForTopicRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetActiveReputersForTopicRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_GetActiveReputersForTopicRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetActiveReputersForTopicRequest) Type() protoreflect.MessageType {
	return _fastReflection_GetActiveReputersForTopicRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetActiveReputersForTopicRequest) New() protoreflect.Message {
	return new(fastReflection_GetActiveReputersForTopicRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetActiveReputersForTopicRequest) Interface() protoreflect.ProtoMessage {
	return (*GetActiveReputersForTopicRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetActiveReputersForTopicRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_GetActiveReputersForTopicRequest_topic_id, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetActiveReputersForTopicRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetActiveReputersForTopicRequest.topic_id":
		return x.TopicId != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetActiveReputersForTopicRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetActiveReputersForTopicRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetActiveReputersForTopicRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetActiveReputersForTopicRequest.topic_id":
		x.TopicId = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetActiveReputersForTopicRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetActiveReputersForTopicRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetActiveReputersForTopicRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetActiveReputersForTopicRequest.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetActiveReputersForTopicRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetActiveReputersForTopicRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetActiveReputersForTopicRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetActiveReputersForTopicRequest.topic_id":
		x.TopicId = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetActiveReputersForTopicRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetActiveReputersForTopicRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetActiveReputersForTopicRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetActiveReputersForTopicRequest.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.GetActiveReputersForTopicRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetActiveReputersForTopicRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetActiveReputersForTopicRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetActiveReputersForTopicRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetActiveReputersForTopicRequest.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetActiveReputersForTopicRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetActiveReputersForTopicRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetActiveReputersForTopicRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetActiveReputersForTopicRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetActiveReputersForTopicRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetActiveReputersForTopicRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetActiveReputersForTopicRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetActiveReputersForTopicRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetActiveReputersForTopicRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetActiveReputersForTopicRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetActiveReputersForTopicRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetActiveReputersForTopicRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetActiveReputersForTopicRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_GetActiveReputersForTopicResponse_1_list)(nil)

type _GetActiveReputersForTopicResponse_1_list struct {
	list *[]string
}

func (x *_GetActiveReputersForTopicResponse_1_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GetActiveReputersForTopicResponse_1_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfString((*x.list)[i])
}

func (x *_GetActiveReputersForTopicResponse_1_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_GetActiveReputersForTopicResponse_1_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_GetActiveReputersForTopicResponse_1_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message GetActiveReputersForTopicResponse at list field Reputers as it is not of Message kind"))
}

func (x *_GetActiveReputersForTopicResponse_1_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_GetActiveReputersForTopicResponse_1_list) NewElement() protoreflect.Value {
	v := ""
	return protoreflect.ValueOfString(v)
}

func (x *_GetActiveReputersForTopicResponse_1_list) IsValid() bool {
	return x.list != nil
}

var (
	md_GetActiveReputersForTopicResponse          protoreflect.MessageDescriptor
	fd_GetActiveReputersForTopicResponse_reputers protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetActiveReputersForTopicResponse = File_emissions_v5_query_proto.Messages().ByName("GetActiveReputersForTopicResponse")
	fd_GetActiveReputersForTopicResponse_reputers = md_GetActiveReputersForTopicResponse.Fields().ByName("reputers")
}

var _ protoreflect.Message = (*fastReflection_GetActiveReputersForTopicResponse)(nil)

type fastReflection_GetActiveReputersForTopicResponse GetActiveReputersForTopicResponse

func (x *GetActiveReputersForTopicResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetActiveReputersForTopicResponse)(x)
}

func (x *GetActiveReputersForTopicResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[161]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetActiveReputersForTopicResponse_messageType fastReflection_GetActiveReputersForTopicResponse_messageType
var _ protoreflect.MessageType = fastReflection_GetActiveReputersForTopicResponse_messageType{}

type fastReflection_GetActiveReputersForTopicResponse_messageType struct{}

func (x fastReflection_GetActiveReputersForTopicResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetActiveReputersForTopicResponse)(nil)
}
func (x fastReflection_GetActiveReputersForTopicResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_GetActiveReputersForTopicResponse)
}
func (x fastReflection_GetActiveReputersForTopicResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetActiveReputersForTopicResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetActiveReputersForTopicResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_GetActiveReputersForTopicResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetActiveReputersForTopicResponse) Type() protoreflect.MessageType {
	return _fastReflection_GetActiveReputersForTopicResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetActiveReputersForTopicResponse) New() protoreflect.Message {
	return new(fastReflection_GetActiveReputersForTopicResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetActiveReputersForTopicResponse) Interface() protoreflect.ProtoMessage {
	return (*GetActiveReputersForTopicResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetActiveReputersForTopicResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.Reputers) != 0 {
		value := protoreflect.ValueOfList(&_GetActiveReputersForTopicResponse_1_list{list: &x.Reputers})
		if !f(fd_GetActiveReputersForTopicResponse_reputers, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetActiveReputersForTopicResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetActiveReputersForTopicResponse.reputers":
		return len(x.Reputers) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetActiveReputersForTopicResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetActiveReputersForTopicResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetActiveReputersForTopicResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetActiveReputersForTopicResponse.reputers":
		x.Reputers = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetActiveReputersForTopicResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetActiveReputersForTopicResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetActiveReputersForTopicResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetActiveReputersForTopicResponse.reputers":
		if len(x.Reputers) == 0 {
			return protoreflect.ValueOfList(&_GetActiveReputersForTopicResponse_1_list{})
		}
		listValue := &_GetActiveReputersForTopicResponse_1_list{list: &x.Reputers}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetActiveReputersForTopicResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetActiveReputersForTopicResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetActiveReputersForTopicResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetActiveReputersForTopicResponse.reputers":
		lv := value.List()
		clv := lv.(*_GetActiveReputersForTopicResponse_1_list)
		x.Reputers = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetActiveReputersForTopicResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetActiveReputersForTopicResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetActiveReputersForTopicResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetActiveReputersForTopicResponse.reputers":
		if x.Reputers == nil {
			x.Reputers = []string{}
		}
		value := &_GetActiveReputersForTopicResponse_1_list{list: &x.Reputers}
		return protoreflect.ValueOfList(value)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetActiveReputersForTopicResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetActiveReputersForTopicResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetActiveReputersForTopicResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetActiveReputersForTopicResponse.reputers":
		list := []string{}
		return protoreflect.ValueOfList(&_GetActiveReputersForTopicResponse_1_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetActiveReputersForTopicResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetActiveReputersForTopicResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetActiveReputersForTopicResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetActiveReputersForTopicResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetActiveReputersForTopicResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetActiveReputersForTopicResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetActiveReputersForTopicResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetActiveReputersForTopicResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetActiveReputersForTopicResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if len(x.Reputers) > 0 {
			for _, s := range x.Reputers {
				l = len(s)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetActiveReputersForTopicResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Reputers) > 0 {
			for iNdEx := len(x.Reputers) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.Reputers[iNdEx])
				copy(dAtA[i:], x.Reputers[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Reputers[iNdEx])))
				i--
				dAtA[i] = 0xa
			}
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetActiveReputersForTopicResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetActiveReputersForTopicResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetActiveReputersForTopicResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Reputers", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Reputers = append(x.Reputers, string(dAtA[iNdEx:postIndex]))
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetActiveForecastersForTopicRequest          protoreflect.MessageDescriptor
	fd_GetActiveForecastersForTopicRequest_topic_id protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetActiveForecastersForTopicRequest = File_emissions_v5_query_proto.Messages().ByName("GetActiveForecastersForTopicRequest")
	fd_GetActiveForecastersForTopicRequest_topic_id = md_GetActiveForecastersForTopicRequest.Fields().ByName("topic_id")
}

var _ protoreflect.Message = (*fastReflection_GetActiveForecastersForTopicRequest)(nil)

type fastReflection_GetActiveForecastersForTopicRequest GetActiveForecastersForTopicRequest

func (x *GetActiveForecastersForTopicRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetActiveForecastersForTopicRequest)(x)
}

func (x *GetActiveForecastersForTopicRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[162]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetActiveForecastersForTopicRequest_messageType fastReflection_GetActiveForecastersForTopicRequest_messageType
var _ protoreflect.MessageType = fastReflection_GetActiveForecastersForTopicRequest_messageType{}

type fastReflection_GetActiveForecastersForTopicRequest_messageType struct{}

func (x fastReflection_GetActiveForecastersForTopicRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetActiveForecastersForTopicRequest)(nil)
}
func (x fastReflection_GetActiveForecastersForTopicRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_GetActiveForecastersForTopicRequest)
}
func (x fastReflection_GetActiveForecastersForTopicRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetActiveForecastersForTopicRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetActiveForecastersForTopicRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_GetActiveForecastersForTopicRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetActiveForecastersForTopicRequest) Type() protoreflect.MessageType {
	return _fastReflection_GetActiveForecastersForTopicRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetActiveForecastersForTopicRequest) New() protoreflect.Message {
	return new(fastReflection_GetActiveForecastersForTopicRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetActiveForecastersForTopicRequest) Interface() protoreflect.ProtoMessage {
	return (*GetActiveForecastersForTopicRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetActiveForecastersForTopicRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_GetActiveForecastersForTopicRequest_topic_id, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetActiveForecastersForTopicRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetActiveForecastersForTopicRequest.topic_id":
		return x.TopicId != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetActiveForecastersForTopicRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetActiveForecastersForTopicRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetActiveForecastersForTopicRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetActiveForecastersForTopicRequest.topic_id":
		x.TopicId = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetActiveForecastersForTopicRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetActiveForecastersForTopicRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetActiveForecastersForTopicRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetActiveForecastersForTopicRequest.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetActiveForecastersForTopicRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetActiveForecastersForTopicRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetActiveForecastersForTopicRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetActiveForecastersForTopicRequest.topic_id":
		x.TopicId = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetActiveForecastersForTopicRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetActiveForecastersForTopicRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetActiveForecastersForTopicRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetActiveForecastersForTopicRequest.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.GetActiveForecastersForTopicRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetActiveForecastersForTopicRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetActiveForecastersForTopicRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetActiveForecastersForTopicRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetActiveForecastersForTopicRequest.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetActiveForecastersForTopicRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetActiveForecastersForTopicRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetActiveForecastersForTopicRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetActiveForecastersForTopicRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetActiveForecastersForTopicRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetActiveForecastersForTopicRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetActiveForecastersForTopicRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetActiveForecastersForTopicRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetActiveForecastersForTopicRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetActiveForecastersForTopicRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetActiveForecastersForTopicRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetActiveForecastersForTopicRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetActiveForecastersForTopicRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_GetActiveForecastersForTopicResponse_1_list)(nil)

type _GetActiveForecastersForTopicResponse_1_list struct {
	list *[]string
}

func (x *_GetActiveForecastersForTopicResponse_1_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GetActiveForecastersForTopicResponse_1_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfString((*x.list)[i])
}

func (x *_GetActiveForecastersForTopicResponse_1_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_GetActiveForecastersForTopicResponse_1_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_GetActiveForecastersForTopicResponse_1_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message GetActiveForecastersForTopicResponse at list field Forecasters as it is not of Message kind"))
}

func (x *_GetActiveForecastersForTopicResponse_1_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_GetActiveForecastersForTopicResponse_1_list) NewElement() protoreflect.Value {
	v := ""
	return protoreflect.ValueOfString(v)
}

func (x *_GetActiveForecastersForTopicResponse_1_list) IsValid() bool {
	return x.list != nil
}

var (
	md_GetActiveForecastersForTopicResponse             protoreflect.MessageDescriptor
	fd_GetActiveForecastersForTopicResponse_forecasters protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetActiveForecastersForTopicResponse = File_emissions_v5_query_proto.Messages().ByName("GetActiveForecastersForTopicResponse")
	fd_GetActiveForecastersForTopicResponse_forecasters = md_GetActiveForecastersForTopicResponse.Fields().ByName("forecasters")
}

var _ protoreflect.Message = (*fastReflection_GetActiveForecastersForTopicResponse)(nil)

type fastReflection_GetActiveForecastersForTopicResponse GetActiveForecastersForTopicResponse

func (x *GetActiveForecastersForTopicResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetActiveForecastersForTopicResponse)(x)
}

func (x *GetActiveForecastersForTopicResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[163]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetActiveForecastersForTopicResponse_messageType fastReflection_GetActiveForecastersForTopicResponse_messageType
var _ protoreflect.MessageType = fastReflection_GetActiveForecastersForTopicResponse_messageType{}

type fastReflection_GetActiveForecastersForTopicResponse_messageType struct{}

func (x fastReflection_GetActiveForecastersForTopicResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetActiveForecastersForTopicResponse)(nil)
}
func (x fastReflection_GetActiveForecastersForTopicResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_GetActiveForecastersForTopicResponse)
}
func (x fastReflection_GetActiveForecastersForTopicResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetActiveForecastersForTopicResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetActiveForecastersForTopicResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_GetActiveForecastersForTopicResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetActiveForecastersForTopicResponse) Type() protoreflect.MessageType {
	return _fastReflection_GetActiveForecastersForTopicResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetActiveForecastersForTopicResponse) New() protoreflect.Message {
	return new(fastReflection_GetActiveForecastersForTopicResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetActiveForecastersForTopicResponse) Interface() protoreflect.ProtoMessage {
	return (*GetActiveForecastersForTopicResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetActiveForecastersForTopicResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.Forecasters) != 0 {
		value := protoreflect.ValueOfList(&_GetActiveForecastersForTopicResponse_1_list{list: &x.Forecasters})
		if !f(fd_GetActiveForecastersForTopicResponse_forecasters, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetActiveForecastersForTopicResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetActiveForecastersForTopicResponse.forecasters":
		return len(x.Forecasters) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetActiveForecastersForTopicResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetActiveForecastersForTopicResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetActiveForecastersForTopicResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetActiveForecastersForTopicResponse.forecasters":
		x.Forecasters = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetActiveForecastersForTopicResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetActiveForecastersForTopicResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetActiveForecastersForTopicResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetActiveForecastersForTopicResponse.forecasters":
		if len(x.Forecasters) == 0 {
			return protoreflect.ValueOfList(&_GetActiveForecastersForTopicResponse_1_list{})
		}
		listValue := &_GetActiveForecastersForTopicResponse_1_list{list: &x.Forecasters}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetActiveForecastersForTopicResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetActiveForecastersForTopicResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetActiveForecastersForTopicResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetActiveForecastersForTopicResponse.forecasters":
		lv := value.List()
		clv := lv.(*_GetActiveForecastersForTopicResponse_1_list)
		x.Forecasters = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetActiveForecastersForTopicResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetActiveForecastersForTopicResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetActiveForecastersForTopicResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetActiveForecastersForTopicResponse.forecasters":
		if x.Forecasters == nil {
			x.Forecasters = []string{}
		}
		value := &_GetActiveForecastersForTopicResponse_1_list{list: &x.Forecasters}
		return protoreflect.ValueOfList(value)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetActiveForecastersForTopicResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetActiveForecastersForTopicResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetActiveForecastersForTopicResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetActiveForecastersForTopicResponse.forecasters":
		list := []string{}
		return protoreflect.ValueOfList(&_GetActiveForecastersForTopicResponse_1_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetActiveForecastersForTopicResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetActiveForecastersForTopicResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetActiveForecastersForTopicResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetActiveForecastersForTopicResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetActiveForecastersForTopicResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetActiveForecastersForTopicResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetActiveForecastersForTopicResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetActiveForecastersForTopicResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetActiveForecastersForTopicResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if len(x.Forecasters) > 0 {
			for _, s := range x.Forecasters {
				l = len(s)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetActiveForecastersForTopicResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Forecasters) > 0 {
			for iNdEx := len(x.Forecasters) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.Forecasters[iNdEx])
				copy(dAtA[i:], x.Forecasters[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Forecasters[iNdEx])))
				i--
				dAtA[i] = 0xa
			}
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetActiveForecastersForTopicResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetActiveForecastersForTopicResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetActiveForecastersForTopicResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Forecasters", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Forecasters = append(x.Forecasters, string(dAtA[iNdEx:postIndex]))
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GetActiveInferersForTopicRequest          protoreflect.MessageDescriptor
	fd_GetActiveInferersForTopicRequest_topic_id protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetActiveInferersForTopicRequest = File_emissions_v5_query_proto.Messages().ByName("GetActiveInferersForTopicRequest")
	fd_GetActiveInferersForTopicRequest_topic_id = md_GetActiveInferersForTopicRequest.Fields().ByName("topic_id")
}

var _ protoreflect.Message = (*fastReflection_GetActiveInferersForTopicRequest)(nil)

type fastReflection_GetActiveInferersForTopicRequest GetActiveInferersForTopicRequest

func (x *GetActiveInferersForTopicRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetActiveInferersForTopicRequest)(x)
}

func (x *GetActiveInferersForTopicRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[164]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetActiveInferersForTopicRequest_messageType fastReflection_GetActiveInferersForTopicRequest_messageType
var _ protoreflect.MessageType = fastReflection_GetActiveInferersForTopicRequest_messageType{}

type fastReflection_GetActiveInferersForTopicRequest_messageType struct{}

func (x fastReflection_GetActiveInferersForTopicRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetActiveInferersForTopicRequest)(nil)
}
func (x fastReflection_GetActiveInferersForTopicRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_GetActiveInferersForTopicRequest)
}
func (x fastReflection_GetActiveInferersForTopicRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetActiveInferersForTopicRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetActiveInferersForTopicRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_GetActiveInferersForTopicRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetActiveInferersForTopicRequest) Type() protoreflect.MessageType {
	return _fastReflection_GetActiveInferersForTopicRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetActiveInferersForTopicRequest) New() protoreflect.Message {
	return new(fastReflection_GetActiveInferersForTopicRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetActiveInferersForTopicRequest) Interface() protoreflect.ProtoMessage {
	return (*GetActiveInferersForTopicRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetActiveInferersForTopicRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_GetActiveInferersForTopicRequest_topic_id, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetActiveInferersForTopicRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetActiveInferersForTopicRequest.topic_id":
		return x.TopicId != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetActiveInferersForTopicRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetActiveInferersForTopicRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetActiveInferersForTopicRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetActiveInferersForTopicRequest.topic_id":
		x.TopicId = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetActiveInferersForTopicRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetActiveInferersForTopicRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetActiveInferersForTopicRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetActiveInferersForTopicRequest.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetActiveInferersForTopicRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetActiveInferersForTopicRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetActiveInferersForTopicRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetActiveInferersForTopicRequest.topic_id":
		x.TopicId = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetActiveInferersForTopicRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetActiveInferersForTopicRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetActiveInferersForTopicRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetActiveInferersForTopicRequest.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.GetActiveInferersForTopicRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetActiveInferersForTopicRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetActiveInferersForTopicRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetActiveInferersForTopicRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetActiveInferersForTopicRequest.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetActiveInferersForTopicRequest"))
		}
		panic(fmt.Errorf("message emissions.v5.GetActiveInferersForTopicRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetActiveInferersForTopicRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetActiveInferersForTopicRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetActiveInferersForTopicRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetActiveInferersForTopicRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetActiveInferersForTopicRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetActiveInferersForTopicRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetActiveInferersForTopicRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetActiveInferersForTopicRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetActiveInferersForTopicRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetActiveInferersForTopicRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetActiveInferersForTopicRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_GetActiveInferersForTopicResponse_1_list)(nil)

type _GetActiveInferersForTopicResponse_1_list struct {
	list *[]string
}

func (x *_GetActiveInferersForTopicResponse_1_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GetActiveInferersForTopicResponse_1_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfString((*x.list)[i])
}

func (x *_GetActiveInferersForTopicResponse_1_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_GetActiveInferersForTopicResponse_1_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_GetActiveInferersForTopicResponse_1_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message GetActiveInferersForTopicResponse at list field Inferers as it is not of Message kind"))
}

func (x *_GetActiveInferersForTopicResponse_1_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_GetActiveInferersForTopicResponse_1_list) NewElement() protoreflect.Value {
	v := ""
	return protoreflect.ValueOfString(v)
}

func (x *_GetActiveInferersForTopicResponse_1_list) IsValid() bool {
	return x.list != nil
}

var (
	md_GetActiveInferersForTopicResponse          protoreflect.MessageDescriptor
	fd_GetActiveInferersForTopicResponse_inferers protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_query_proto_init()
	md_GetActiveInferersForTopicResponse = File_emissions_v5_query_proto.Messages().ByName("GetActiveInferersForTopicResponse")
	fd_GetActiveInferersForTopicResponse_inferers = md_GetActiveInferersForTopicResponse.Fields().ByName("inferers")
}

var _ protoreflect.Message = (*fastReflection_GetActiveInferersForTopicResponse)(nil)

type fastReflection_GetActiveInferersForTopicResponse GetActiveInferersForTopicResponse

func (x *GetActiveInferersForTopicResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetActiveInferersForTopicResponse)(x)
}

func (x *GetActiveInferersForTopicResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_query_proto_msgTypes[165]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetActiveInferersForTopicResponse_messageType fastReflection_GetActiveInferersForTopicResponse_messageType
var _ protoreflect.MessageType = fastReflection_GetActiveInferersForTopicResponse_messageType{}

type fastReflection_GetActiveInferersForTopicResponse_messageType struct{}

func (x fastReflection_GetActiveInferersForTopicResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetActiveInferersForTopicResponse)(nil)
}
func (x fastReflection_GetActiveInferersForTopicResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_GetActiveInferersForTopicResponse)
}
func (x fastReflection_GetActiveInferersForTopicResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetActiveInferersForTopicResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetActiveInferersForTopicResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_GetActiveInferersForTopicResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetActiveInferersForTopicResponse) Type() protoreflect.MessageType {
	return _fastReflection_GetActiveInferersForTopicResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetActiveInferersForTopicResponse) New() protoreflect.Message {
	return new(fastReflection_GetActiveInferersForTopicResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetActiveInferersForTopicResponse) Interface() protoreflect.ProtoMessage {
	return (*GetActiveInferersForTopicResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetActiveInferersForTopicResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.Inferers) != 0 {
		value := protoreflect.ValueOfList(&_GetActiveInferersForTopicResponse_1_list{list: &x.Inferers})
		if !f(fd_GetActiveInferersForTopicResponse_inferers, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetActiveInferersForTopicResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GetActiveInferersForTopicResponse.inferers":
		return len(x.Inferers) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetActiveInferersForTopicResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetActiveInferersForTopicResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetActiveInferersForTopicResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GetActiveInferersForTopicResponse.inferers":
		x.Inferers = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetActiveInferersForTopicResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetActiveInferersForTopicResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetActiveInferersForTopicResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GetActiveInferersForTopicResponse.inferers":
		if len(x.Inferers) == 0 {
			return protoreflect.ValueOfList(&_GetActiveInferersForTopicResponse_1_list{})
		}
		listValue := &_GetActiveInferersForTopicResponse_1_list{list: &x.Inferers}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetActiveInferersForTopicResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetActiveInferersForTopicResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetActiveInferersForTopicResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GetActiveInferersForTopicResponse.inferers":
		lv := value.List()
		clv := lv.(*_GetActiveInferersForTopicResponse_1_list)
		x.Inferers = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetActiveInferersForTopicResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetActiveInferersForTopicResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetActiveInferersForTopicResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetActiveInferersForTopicResponse.inferers":
		if x.Inferers == nil {
			x.Inferers = []string{}
		}
		value := &_GetActiveInferersForTopicResponse_1_list{list: &x.Inferers}
		return protoreflect.ValueOfList(value)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetActiveInferersForTopicResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetActiveInferersForTopicResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetActiveInferersForTopicResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GetActiveInferersForTopicResponse.inferers":
		list := []string{}
		return protoreflect.ValueOfList(&_GetActiveInferersForTopicResponse_1_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GetActiveInferersForTopicResponse"))
		}
		panic(fmt.Errorf("message emissions.v5.GetActiveInferersForTopicResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetActiveInferersForTopicResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GetActiveInferersForTopicResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetActiveInferersForTopicResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetActiveInferersForTopicResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetActiveInferersForTopicResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetActiveInferersForTopicResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetActiveInferersForTopicResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if len(x.Inferers) > 0 {
			for _, s := range x.Inferers {
				l = len(s)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetActiveInferersForTopicResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Inferers) > 0 {
			for iNdEx := len(x.Inferers) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.Inferers[iNdEx])
				copy(dAtA[i:], x.Inferers[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Inferers[iNdEx])))
				i--
				dAtA[i] = 0xa
			}
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetActiveInferersForTopicResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetActiveInferersForTopicResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetActiveInferersForTopicResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Inferers", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Inferers = append(x.Inferers, string(dAtA[iNdEx:postIndex]))
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: emissions/v5/query.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetCountInfererInclusionsInTopicRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId uint64 `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	Inferer string `protobuf:"bytes,2,opt,name=inferer,proto3" json:"inferer,omitempty"`
}

func (x *GetCountInfererInclusionsInTopicRequest) Reset() {
	*x = GetCountInfererInclusionsInTopicRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCountInfererInclusionsInTopicRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCountInfererInclusionsInTopicRequest) ProtoMessage() {}

// Deprecated: Use GetCountInfererInclusionsInTopicRequest.ProtoReflect.Descriptor instead.
func (*GetCountInfererInclusionsInTopicRequest) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{0}
}

func (x *GetCountInfererInclusionsInTopicRequest) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

func (x *GetCountInfererInclusionsInTopicRequest) GetInferer() string {
	if x != nil {
		return x.Inferer
	}
	return ""
}

type GetCountInfererInclusionsInTopicResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count uint64 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *GetCountInfererInclusionsInTopicResponse) Reset() {
	*x = GetCountInfererInclusionsInTopicResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCountInfererInclusionsInTopicResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCountInfererInclusionsInTopicResponse) ProtoMessage() {}

// Deprecated: Use GetCountInfererInclusionsInTopicResponse.ProtoReflect.Descriptor instead.
func (*GetCountInfererInclusionsInTopicResponse) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{1}
}

func (x *GetCountInfererInclusionsInTopicResponse) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type GetCountForecasterInclusionsInTopicRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId    uint64 `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	Forecaster string `protobuf:"bytes,2,opt,name=forecaster,proto3" json:"forecaster,omitempty"`
}

func (x *GetCountForecasterInclusionsInTopicRequest) Reset() {
	*x = GetCountForecasterInclusionsInTopicRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCountForecasterInclusionsInTopicRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCountForecasterInclusionsInTopicRequest) ProtoMessage() {}

// Deprecated: Use GetCountForecasterInclusionsInTopicRequest.ProtoReflect.Descriptor instead.
func (*GetCountForecasterInclusionsInTopicRequest) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{2}
}

func (x *GetCountForecasterInclusionsInTopicRequest) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

func (x *GetCountForecasterInclusionsInTopicRequest) GetForecaster() string {
	if x != nil {
		return x.Forecaster
	}
	return ""
}

type GetCountForecasterInclusionsInTopicResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count uint64 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *GetCountForecasterInclusionsInTopicResponse) Reset() {
	*x = GetCountForecasterInclusionsInTopicResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCountForecasterInclusionsInTopicResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCountForecasterInclusionsInTopicResponse) ProtoMessage() {}

// Deprecated: Use GetCountForecasterInclusionsInTopicResponse.ProtoReflect.Descriptor instead.
func (*GetCountForecasterInclusionsInTopicResponse) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{3}
}

func (x *GetCountForecasterInclusionsInTopicResponse) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type GetNaiveInfererNetworkRegretRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId uint64 `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	Inferer string `protobuf:"bytes,2,opt,name=inferer,proto3" json:"inferer,omitempty"`
}

func (x *GetNaiveInfererNetworkRegretRequest) Reset() {
	*x = GetNaiveInfererNetworkRegretRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNaiveInfererNetworkRegretRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNaiveInfererNetworkRegretRequest) ProtoMessage() {}

// Deprecated: Use GetNaiveInfererNetworkRegretRequest.ProtoReflect.Descriptor instead.
func (*GetNaiveInfererNetworkRegretRequest) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{4}
}

func (x *GetNaiveInfererNetworkRegretRequest) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

func (x *GetNaiveInfererNetworkRegretRequest) GetInferer() string {
	if x != nil {
		return x.Inferer
	}
	return ""
}

type GetNaiveInfererNetworkRegretResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Regret *v3.TimestampedValue `protobuf:"bytes,1,opt,name=regret,proto3" json:"regret,omitempty"`
}

func (x *GetNaiveInfererNetworkRegretResponse) Reset() {
	*x = GetNaiveInfererNetworkRegretResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNaiveInfererNetworkRegretResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNaiveInfererNetworkRegretResponse) ProtoMessage() {}

// Deprecated: Use GetNaiveInfererNetworkRegretResponse.ProtoReflect.Descriptor instead.
func (*GetNaiveInfererNetworkRegretResponse) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{5}
}

func (x *GetNaiveInfererNetworkRegretResponse) GetRegret() *v3.TimestampedValue {
	if x != nil {
		return x.Regret
	}
	return nil
}

type GetOneOutInfererInfererNetworkRegretRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId       uint64 `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	OneOutInferer string `protobuf:"bytes,2,opt,name=one_out_inferer,json=oneOutInferer,proto3" json:"one_out_inferer,omitempty"`
	Inferer       string `protobuf:"bytes,3,opt,name=inferer,proto3" json:"inferer,omitempty"`
}

func (x *GetOneOutInfererInfererNetworkRegretRequest) Reset() {
	*x = GetOneOutInfererInfererNetworkRegretRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOneOutInfererInfererNetworkRegretRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOneOutInfererInfererNetworkRegretRequest) ProtoMessage() {}

// Deprecated: Use GetOneOutInfererInfererNetworkRegretRequest.ProtoReflect.Descriptor instead.
func (*GetOneOutInfererInfererNetworkRegretRequest) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{6}
}

func (x *GetOneOutInfererInfererNetworkRegretRequest) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

func (x *GetOneOutInfererInfererNetworkRegretRequest) GetOneOutInferer() string {
	if x != nil {
		return x.OneOutInferer
	}
	return ""
}

func (x *GetOneOutInfererInfererNetworkRegretRequest) GetInferer() string {
	if x != nil {
		return x.Inferer
	}
	return ""
}

type GetOneOutInfererInfererNetworkRegretResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Regret *v3.TimestampedValue `protobuf:"bytes,1,opt,name=regret,proto3" json:"regret,omitempty"`
}

func (x *GetOneOutInfererInfererNetworkRegretResponse) Reset() {
	*x = GetOneOutInfererInfererNetworkRegretResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOneOutInfererInfererNetworkRegretResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOneOutInfererInfererNetworkRegretResponse) ProtoMessage() {}

// Deprecated: Use GetOneOutInfererInfererNetworkRegretResponse.ProtoReflect.Descriptor instead.
func (*GetOneOutInfererInfererNetworkRegretResponse) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{7}
}

func (x *GetOneOutInfererInfererNetworkRegretResponse) GetRegret() *v3.TimestampedValue {
	if x != nil {
		return x.Regret
	}
	return nil
}

type GetOneOutInfererForecasterNetworkRegretRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId       uint64 `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	OneOutInferer string `protobuf:"bytes,2,opt,name=one_out_inferer,json=oneOutInferer,proto3" json:"one_out_inferer,omitempty"`
	Forecaster    string `protobuf:"bytes,3,opt,name=forecaster,proto3" json:"forecaster,omitempty"`
}

func (x *GetOneOutInfererForecasterNetworkRegretRequest) Reset() {
	*x = GetOneOutInfererForecasterNetworkRegretRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOneOutInfererForecasterNetworkRegretRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOneOutInfererForecasterNetworkRegretRequest) ProtoMessage() {}

// Deprecated: Use GetOneOutInfererForecasterNetworkRegretRequest.ProtoReflect.Descriptor instead.
func (*GetOneOutInfererForecasterNetworkRegretRequest) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{8}
}

func (x *GetOneOutInfererForecasterNetworkRegretRequest) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

func (x *GetOneOutInfererForecasterNetworkRegretRequest) GetOneOutInferer() string {
	if x != nil {
		return x.OneOutInferer
	}
	return ""
}

func (x *GetOneOutInfererForecasterNetworkRegretRequest) GetForecaster() string {
	if x != nil {
		return x.Forecaster
	}
	return ""
}

type GetOneOutInfererForecasterNetworkRegretResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Regret *v3.TimestampedValue `protobuf:"bytes,1,opt,name=regret,proto3" json:"regret,omitempty"`
}

func (x *GetOneOutInfererForecasterNetworkRegretResponse) Reset() {
	*x = GetOneOutInfererForecasterNetworkRegretResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOneOutInfererForecasterNetworkRegretResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOneOutInfererForecasterNetworkRegretResponse) ProtoMessage() {}

// Deprecated: Use GetOneOutInfererForecasterNetworkRegretResponse.ProtoReflect.Descriptor instead.
func (*GetOneOutInfererForecasterNetworkRegretResponse) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{9}
}

func (x *GetOneOutInfererForecasterNetworkRegretResponse) GetRegret() *v3.TimestampedValue {
	if x != nil {
		return x.Regret
	}
	return nil
}

type GetOneOutForecasterInfererNetworkRegretRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId          uint64 `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	OneOutForecaster string `protobuf:"bytes,2,opt,name=one_out_forecaster,json=oneOutForecaster,proto3" json:"one_out_forecaster,omitempty"`
	Inferer          string `protobuf:"bytes,3,opt,name=inferer,proto3" json:"inferer,omitempty"`
}

func (x *GetOneOutForecasterInfererNetworkRegretRequest) Reset() {
	*x = GetOneOutForecasterInfererNetworkRegretRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOneOutForecasterInfererNetworkRegretRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOneOutForecasterInfererNetworkRegretRequest) ProtoMessage() {}

// Deprecated: Use GetOneOutForecasterInfererNetworkRegretRequest.ProtoReflect.Descriptor instead.
func (*GetOneOutForecasterInfererNetworkRegretRequest) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{10}
}

func (x *GetOneOutForecasterInfererNetworkRegretRequest) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

func (x *GetOneOutForecasterInfererNetworkRegretRequest) GetOneOutForecaster() string {
	if x != nil {
		return x.OneOutForecaster
	}
	return ""
}

func (x *GetOneOutForecasterInfererNetworkRegretRequest) GetInferer() string {
	if x != nil {
		return x.Inferer
	}
	return ""
}

type GetOneOutForecasterInfererNetworkRegretResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Regret *v3.TimestampedValue `protobuf:"bytes,1,opt,name=regret,proto3" json:"regret,omitempty"`
}

func (x *GetOneOutForecasterInfererNetworkRegretResponse) Reset() {
	*x = GetOneOutForecasterInfererNetworkRegretResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOneOutForecasterInfererNetworkRegretResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOneOutForecasterInfererNetworkRegretResponse) ProtoMessage() {}

// Deprecated: Use GetOneOutForecasterInfererNetworkRegretResponse.ProtoReflect.Descriptor instead.
func (*GetOneOutForecasterInfererNetworkRegretResponse) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{11}
}

func (x *GetOneOutForecasterInfererNetworkRegretResponse) GetRegret() *v3.TimestampedValue {
	if x != nil {
		return x.Regret
	}
	return nil
}

type GetOneOutForecasterForecasterNetworkRegretRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId          uint64 `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	OneOutForecaster string `protobuf:"bytes,2,opt,name=one_out_forecaster,json=oneOutForecaster,proto3" json:"one_out_forecaster,omitempty"`
	Forecaster       string `protobuf:"bytes,3,opt,name=forecaster,proto3" json:"forecaster,omitempty"`
}

func (x *GetOneOutForecasterForecasterNetworkRegretRequest) Reset() {
	*x = GetOneOutForecasterForecasterNetworkRegretRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOneOutForecasterForecasterNetworkRegretRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOneOutForecasterForecasterNetworkRegretRequest) ProtoMessage() {}

// Deprecated: Use GetOneOutForecasterForecasterNetworkRegretRequest.ProtoReflect.Descriptor instead.
func (*GetOneOutForecasterForecasterNetworkRegretRequest) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{12}
}

func (x *GetOneOutForecasterForecasterNetworkRegretRequest) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

func (x *GetOneOutForecasterForecasterNetworkRegretRequest) GetOneOutForecaster() string {
	if x != nil {
		return x.OneOutForecaster
	}
	return ""
}

func (x *GetOneOutForecasterForecasterNetworkRegretRequest) GetForecaster() string {
	if x != nil {
		return x.Forecaster
	}
	return ""
}

type GetOneOutForecasterForecasterNetworkRegretResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Regret *v3.TimestampedValue `protobuf:"bytes,1,opt,name=regret,proto3" json:"regret,omitempty"`
}

func (x *GetOneOutForecasterForecasterNetworkRegretResponse) Reset() {
	*x = GetOneOutForecasterForecasterNetworkRegretResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOneOutForecasterForecasterNetworkRegretResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOneOutForecasterForecasterNetworkRegretResponse) ProtoMessage() {}

// Deprecated: Use GetOneOutForecasterForecasterNetworkRegretResponse.ProtoReflect.Descriptor instead.
func (*GetOneOutForecasterForecasterNetworkRegretResponse) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{13}
}

func (x *GetOneOutForecasterForecasterNetworkRegretResponse) GetRegret() *v3.TimestampedValue {
	if x != nil {
		return x.Regret
	}
	return nil
}

// GetParamsRequest is the request type for the Get/Params RPC method.
type GetParamsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetParamsRequest) Reset() {
	*x = GetParamsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetParamsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetParamsRequest) ProtoMessage() {}

// Deprecated: Use GetParamsRequest.ProtoReflect.Descriptor instead.
func (*GetParamsRequest) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{14}
}

// GetParamsResponse is the response type for the Get/Params RPC method.
type GetParamsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// params defines the parameters of the module.
	Params *Params `protobuf:"bytes,1,opt,name=params,proto3" json:"params,omitempty"`
}

func (x *GetParamsResponse) Reset() {
	*x = GetParamsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetParamsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetParamsResponse) ProtoMessage() {}

// Deprecated: Use GetParamsResponse.ProtoReflect.Descriptor instead.
func (*GetParamsResponse) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{15}
}

func (x *GetParamsResponse) GetParams() *Params {
	if x != nil {
		return x.Params
	}
	return nil
}

// Total Stake returns the total amount of stake in the system
type GetTotalStakeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetTotalStakeRequest) Reset() {
	*x = GetTotalStakeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTotalStakeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTotalStakeRequest) ProtoMessage() {}

// Deprecated: Use GetTotalStakeRequest.ProtoReflect.Descriptor instead.
func (*GetTotalStakeRequest) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{16}
}

// Total Stake returns the total amount of stake in the system
//
// NOTE: The amount field is an Int which implements the custom method
// signatures required by gogoproto.
type GetTotalStakeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount string `protobuf:"bytes,1,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *GetTotalStakeResponse) Reset() {
	*x = GetTotalStakeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTotalStakeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTotalStakeResponse) ProtoMessage() {}

// Deprecated: Use GetTotalStakeResponse.ProtoReflect.Descriptor instead.
func (*GetTotalStakeResponse) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{17}
}

func (x *GetTotalStakeResponse) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

type GetReputerStakeInTopicRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	TopicId uint64 `protobuf:"varint,2,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
}

func (x *GetReputerStakeInTopicRequest) Reset() {
	*x = GetReputerStakeInTopicRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReputerStakeInTopicRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReputerStakeInTopicRequest) ProtoMessage() {}

// Deprecated: Use GetReputerStakeInTopicRequest.ProtoReflect.Descriptor instead.
func (*GetReputerStakeInTopicRequest) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{18}
}

func (x *GetReputerStakeInTopicRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *GetReputerStakeInTopicRequest) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

type GetReputerStakeInTopicResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount string `protobuf:"bytes,1,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *GetReputerStakeInTopicResponse) Reset() {
	*x = GetReputerStakeInTopicResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReputerStakeInTopicResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReputerStakeInTopicResponse) ProtoMessage() {}

// Deprecated: Use GetReputerStakeInTopicResponse.ProtoReflect.Descriptor instead.
func (*GetReputerStakeInTopicResponse) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{19}
}

func (x *GetReputerStakeInTopicResponse) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

type GetMultiReputerStakeInTopicRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addresses []string `protobuf:"bytes,1,rep,name=addresses,proto3" json:"addresses,omitempty"`
	TopicId   uint64   `protobuf:"varint,2,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
}

func (x *GetMultiReputerStakeInTopicRequest) Reset() {
	*x = GetMultiReputerStakeInTopicRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMultiReputerStakeInTopicRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMultiReputerStakeInTopicRequest) ProtoMessage() {}

// Deprecated: Use GetMultiReputerStakeInTopicRequest.ProtoReflect.Descriptor instead.
func (*GetMultiReputerStakeInTopicRequest) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{20}
}

func (x *GetMultiReputerStakeInTopicRequest) GetAddresses() []string {
	if x != nil {
		return x.Addresses
	}
	return nil
}

func (x *GetMultiReputerStakeInTopicRequest) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

type GetMultiReputerStakeInTopicResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amounts []*v3.StakeInfo `protobuf:"bytes,1,rep,name=amounts,proto3" json:"amounts,omitempty"`
}

func (x *GetMultiReputerStakeInTopicResponse) Reset() {
	*x = GetMultiReputerStakeInTopicResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMultiReputerStakeInTopicResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMultiReputerStakeInTopicResponse) ProtoMessage() {}

// Deprecated: Use GetMultiReputerStakeInTopicResponse.ProtoReflect.Descriptor instead.
func (*GetMultiReputerStakeInTopicResponse) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{21}
}

func (x *GetMultiReputerStakeInTopicResponse) GetAmounts() []*v3.StakeInfo {
	if x != nil {
		return x.Amounts
	}
	return nil
}

type GetStakeFromReputerInTopicInSelfRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReputerAddress string `protobuf:"bytes,1,opt,name=reputer_address,json=reputerAddress,proto3" json:"reputer_address,omitempty"`
	TopicId        uint64 `protobuf:"varint,2,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
}

func (x *GetStakeFromReputerInTopicInSelfRequest) Reset() {
	*x = GetStakeFromReputerInTopicInSelfRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStakeFromReputerInTopicInSelfRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStakeFromReputerInTopicInSelfRequest) ProtoMessage() {}

// Deprecated: Use GetStakeFromReputerInTopicInSelfRequest.ProtoReflect.Descriptor instead.
func (*GetStakeFromReputerInTopicInSelfRequest) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{22}
}

func (x *GetStakeFromReputerInTopicInSelfRequest) GetReputerAddress() string {
	if x != nil {
		return x.ReputerAddress
	}
	return ""
}

func (x *GetStakeFromReputerInTopicInSelfRequest) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

type GetStakeFromReputerInTopicInSelfResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount string `protobuf:"bytes,1,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *GetStakeFromReputerInTopicInSelfResponse) Reset() {
	*x = GetStakeFromReputerInTopicInSelfResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStakeFromReputerInTopicInSelfResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStakeFromReputerInTopicInSelfResponse) ProtoMessage() {}

// Deprecated: Use GetStakeFromReputerInTopicInSelfResponse.ProtoReflect.Descriptor instead.
func (*GetStakeFromReputerInTopicInSelfResponse) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{23}
}

func (x *GetStakeFromReputerInTopicInSelfResponse) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

type GetDelegateStakeInTopicInReputerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReputerAddress string `protobuf:"bytes,1,opt,name=reputer_address,json=reputerAddress,proto3" json:"reputer_address,omitempty"`
	TopicId        uint64 `protobuf:"varint,2,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
}

func (x *GetDelegateStakeInTopicInReputerRequest) Reset() {
	*x = GetDelegateStakeInTopicInReputerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDelegateStakeInTopicInReputerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDelegateStakeInTopicInReputerRequest) ProtoMessage() {}

// Deprecated: Use GetDelegateStakeInTopicInReputerRequest.ProtoReflect.Descriptor instead.
func (*GetDelegateStakeInTopicInReputerRequest) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{24}
}

func (x *GetDelegateStakeInTopicInReputerRequest) GetReputerAddress() string {
	if x != nil {
		return x.ReputerAddress
	}
	return ""
}

func (x *GetDelegateStakeInTopicInReputerRequest) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

type GetDelegateStakeInTopicInReputerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount string `protobuf:"bytes,1,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *GetDelegateStakeInTopicInReputerResponse) Reset() {
	*x = GetDelegateStakeInTopicInReputerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDelegateStakeInTopicInReputerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDelegateStakeInTopicInReputerResponse) ProtoMessage() {}

// Deprecated: Use GetDelegateStakeInTopicInReputerResponse.ProtoReflect.Descriptor instead.
func (*GetDelegateStakeInTopicInReputerResponse) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{25}
}

func (x *GetDelegateStakeInTopicInReputerResponse) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

type GetStakeFromDelegatorInTopicInReputerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DelegatorAddress string `protobuf:"bytes,1,opt,name=delegator_address,json=delegatorAddress,proto3" json:"delegator_address,omitempty"`
	ReputerAddress   string `protobuf:"bytes,2,opt,name=reputer_address,json=reputerAddress,proto3" json:"reputer_address,omitempty"`
	TopicId          uint64 `protobuf:"varint,3,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
}

func (x *GetStakeFromDelegatorInTopicInReputerRequest) Reset() {
	*x = GetStakeFromDelegatorInTopicInReputerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStakeFromDelegatorInTopicInReputerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStakeFromDelegatorInTopicInReputerRequest) ProtoMessage() {}

// Deprecated: Use GetStakeFromDelegatorInTopicInReputerRequest.ProtoReflect.Descriptor instead.
func (*GetStakeFromDelegatorInTopicInReputerRequest) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{26}
}

func (x *GetStakeFromDelegatorInTopicInReputerRequest) GetDelegatorAddress() string {
	if x != nil {
		return x.DelegatorAddress
	}
	return ""
}

func (x *GetStakeFromDelegatorInTopicInReputerRequest) GetReputerAddress() string {
	if x != nil {
		return x.ReputerAddress
	}
	return ""
}

func (x *GetStakeFromDelegatorInTopicInReputerRequest) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

type GetStakeFromDelegatorInTopicInReputerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount string `protobuf:"bytes,1,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *GetStakeFromDelegatorInTopicInReputerResponse) Reset() {
	*x = GetStakeFromDelegatorInTopicInReputerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStakeFromDelegatorInTopicInReputerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStakeFromDelegatorInTopicInReputerResponse) ProtoMessage() {}

// Deprecated: Use GetStakeFromDelegatorInTopicInReputerResponse.ProtoReflect.Descriptor instead.
func (*GetStakeFromDelegatorInTopicInReputerResponse) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{27}
}

func (x *GetStakeFromDelegatorInTopicInReputerResponse) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

type GetStakeFromDelegatorInTopicRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DelegatorAddress string `protobuf:"bytes,1,opt,name=delegator_address,json=delegatorAddress,proto3" json:"delegator_address,omitempty"`
	TopicId          uint64 `protobuf:"varint,2,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
}

func (x *GetStakeFromDelegatorInTopicRequest) Reset() {
	*x = GetStakeFromDelegatorInTopicRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStakeFromDelegatorInTopicRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStakeFromDelegatorInTopicRequest) ProtoMessage() {}

// Deprecated: Use GetStakeFromDelegatorInTopicRequest.ProtoReflect.Descriptor instead.
func (*GetStakeFromDelegatorInTopicRequest) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{28}
}

func (x *GetStakeFromDelegatorInTopicRequest) GetDelegatorAddress() string {
	if x != nil {
		return x.DelegatorAddress
	}
	return ""
}

func (x *GetStakeFromDelegatorInTopicRequest) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

type GetStakeFromDelegatorInTopicResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount string `protobuf:"bytes,1,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *GetStakeFromDelegatorInTopicResponse) Reset() {
	*x = GetStakeFromDelegatorInTopicResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStakeFromDelegatorInTopicResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStakeFromDelegatorInTopicResponse) ProtoMessage() {}

// Deprecated: Use GetStakeFromDelegatorInTopicResponse.ProtoReflect.Descriptor instead.
func (*GetStakeFromDelegatorInTopicResponse) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{29}
}

func (x *GetStakeFromDelegatorInTopicResponse) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

type GetTopicStakeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId uint64 `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
}

func (x *GetTopicStakeRequest) Reset() {
	*x = GetTopicStakeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTopicStakeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTopicStakeRequest) ProtoMessage() {}

// Deprecated: Use GetTopicStakeRequest.ProtoReflect.Descriptor instead.
func (*GetTopicStakeRequest) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{30}
}

func (x *GetTopicStakeRequest) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

type GetTopicStakeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount string `protobuf:"bytes,1,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *GetTopicStakeResponse) Reset() {
	*x = GetTopicStakeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTopicStakeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTopicStakeResponse) ProtoMessage() {}

// Deprecated: Use GetTopicStakeResponse.ProtoReflect.Descriptor instead.
func (*GetTopicStakeResponse) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{31}
}

func (x *GetTopicStakeResponse) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

type GetNetworkLossBundleAtBlockRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId     uint64 `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	BlockHeight int64  `protobuf:"varint,2,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
}

func (x *GetNetworkLossBundleAtBlockRequest) Reset() {
	*x = GetNetworkLossBundleAtBlockRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNetworkLossBundleAtBlockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNetworkLossBundleAtBlockRequest) ProtoMessage() {}

// Deprecated: Use GetNetworkLossBundleAtBlockRequest.ProtoReflect.Descriptor instead.
func (*GetNetworkLossBundleAtBlockRequest) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{32}
}

func (x *GetNetworkLossBundleAtBlockRequest) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

func (x *GetNetworkLossBundleAtBlockRequest) GetBlockHeight() int64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

type GetNetworkLossBundleAtBlockResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LossBundle *v3.ValueBundle `protobuf:"bytes,1,opt,name=loss_bundle,json=lossBundle,proto3" json:"loss_bundle,omitempty"`
}

func (x *GetNetworkLossBundleAtBlockResponse) Reset() {
	*x = GetNetworkLossBundleAtBlockResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNetworkLossBundleAtBlockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNetworkLossBundleAtBlockResponse) ProtoMessage() {}

// Deprecated: Use GetNetworkLossBundleAtBlockResponse.ProtoReflect.Descriptor instead.
func (*GetNetworkLossBundleAtBlockResponse) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{33}
}

func (x *GetNetworkLossBundleAtBlockResponse) GetLossBundle() *v3.ValueBundle {
	if x != nil {
		return x.LossBundle
	}
	return nil
}

type GetNextTopicIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetNextTopicIdRequest) Reset() {
	*x = GetNextTopicIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNextTopicIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNextTopicIdRequest) ProtoMessage() {}

// Deprecated: Use GetNextTopicIdRequest.ProtoReflect.Descriptor instead.
func (*GetNextTopicIdRequest) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{34}
}

type GetNextTopicIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NextTopicId uint64 `protobuf:"varint,1,opt,name=next_topic_id,json=nextTopicId,proto3" json:"next_topic_id,omitempty"`
}

func (x *GetNextTopicIdResponse) Reset() {
	*x = GetNextTopicIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNextTopicIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNextTopicIdResponse) ProtoMessage() {}

// Deprecated: Use GetNextTopicIdResponse.ProtoReflect.Descriptor instead.
func (*GetNextTopicIdResponse) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{35}
}

func (x *GetNextTopicIdResponse) GetNextTopicId() uint64 {
	if x != nil {
		return x.NextTopicId
	}
	return 0
}

type GetTopicRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId uint64 `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
}

func (x *GetTopicRequest) Reset() {
	*x = GetTopicRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTopicRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTopicRequest) ProtoMessage() {}

// Deprecated: Use GetTopicRequest.ProtoReflect.Descriptor instead.
func (*GetTopicRequest) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{36}
}

func (x *GetTopicRequest) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

type GetTopicResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Topic            *v3.Topic `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	Weight           string    `protobuf:"bytes,2,opt,name=weight,proto3" json:"weight,omitempty"`
	EffectiveRevenue string    `protobuf:"bytes,3,opt,name=effective_revenue,json=effectiveRevenue,proto3" json:"effective_revenue,omitempty"`
}

func (x *GetTopicResponse) Reset() {
	*x = GetTopicResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTopicResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTopicResponse) ProtoMessage() {}

// Deprecated: Use GetTopicResponse.ProtoReflect.Descriptor instead.
func (*GetTopicResponse) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{37}
}

func (x *GetTopicResponse) GetTopic() *v3.Topic {
	if x != nil {
		return x.Topic
	}
	return nil
}

func (x *GetTopicResponse) GetWeight() string {
	if x != nil {
		return x.Weight
	}
	return ""
}

func (x *GetTopicResponse) GetEffectiveRevenue() string {
	if x != nil {
		return x.EffectiveRevenue
	}
	return ""
}

type GetActiveTopicsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pagination *v3.SimpleCursorPaginationRequest `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *GetActiveTopicsRequest) Reset() {
	*x = GetActiveTopicsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetActiveTopicsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActiveTopicsRequest) ProtoMessage() {}

// Deprecated: Use GetActiveTopicsRequest.ProtoReflect.Descriptor instead.
func (*GetActiveTopicsRequest) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{38}
}

func (x *GetActiveTopicsRequest) GetPagination() *v3.SimpleCursorPaginationRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type GetActiveTopicsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Topics     []*v3.Topic                        `protobuf:"bytes,1,rep,name=topics,proto3" json:"topics,omitempty"`
	Pagination *v3.SimpleCursorPaginationResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *GetActiveTopicsResponse) Reset() {
	*x = GetActiveTopicsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetActiveTopicsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActiveTopicsResponse) ProtoMessage() {}

// Deprecated: Use GetActiveTopicsResponse.ProtoReflect.Descriptor instead.
func (*GetActiveTopicsResponse) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{39}
}

func (x *GetActiveTopicsResponse) GetTopics() []*v3.Topic {
	if x != nil {
		return x.Topics
	}
	return nil
}

func (x *GetActiveTopicsResponse) GetPagination() *v3.SimpleCursorPaginationResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// Returns the inferences on a topic posted at a block height
type GetInferencesAtBlockRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId     uint64 `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	BlockHeight int64  `protobuf:"varint,2,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
}

func (x *GetInferencesAtBlockRequest) Reset() {
	*x = GetInferencesAtBlockRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInferencesAtBlockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInferencesAtBlockRequest) ProtoMessage() {}

// Deprecated: Use GetInferencesAtBlockRequest.ProtoReflect.Descriptor instead.
func (*GetInferencesAtBlockRequest) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{40}
}

func (x *GetInferencesAtBlockRequest) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

func (x *GetInferencesAtBlockRequest) GetBlockHeight() int64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

// Returns the inferences on a topic posted at a block height
//
// NOTE: The amount field is a Uint which implements the custom method
// signatures required by gogoproto.
type GetInferencesAtBlockResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inferences *v3.Inferences `protobuf:"bytes,1,opt,name=inferences,proto3" json:"inferences,omitempty"`
}

func (x *GetInferencesAtBlockResponse) Reset() {
	*x = GetInferencesAtBlockResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInferencesAtBlockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInferencesAtBlockResponse) ProtoMessage() {}

// Deprecated: Use GetInferencesAtBlockResponse.ProtoReflect.Descriptor instead.
func (*GetInferencesAtBlockResponse) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{41}
}

func (x *GetInferencesAtBlockResponse) GetInferences() *v3.Inferences {
	if x != nil {
		return x.Inferences
	}
	return nil
}

type GetLatestTopicInferencesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId uint64 `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
}

func (x *GetLatestTopicInferencesRequest) Reset() {
	*x = GetLatestTopicInferencesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLatestTopicInferencesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLatestTopicInferencesRequest) ProtoMessage() {}

// Deprecated: Use GetLatestTopicInferencesRequest.ProtoReflect.Descriptor instead.
func (*GetLatestTopicInferencesRequest) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{42}
}

func (x *GetLatestTopicInferencesRequest) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

type GetLatestTopicInferencesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inferences  *v3.Inferences `protobuf:"bytes,1,opt,name=inferences,proto3" json:"inferences,omitempty"`
	BlockHeight int64          `protobuf:"varint,2,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
}

func (x *GetLatestTopicInferencesResponse) Reset() {
	*x = GetLatestTopicInferencesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLatestTopicInferencesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLatestTopicInferencesResponse) ProtoMessage() {}

// Deprecated: Use GetLatestTopicInferencesResponse.ProtoReflect.Descriptor instead.
func (*GetLatestTopicInferencesResponse) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{43}
}

func (x *GetLatestTopicInferencesResponse) GetInferences() *v3.Inferences {
	if x != nil {
		return x.Inferences
	}
	return nil
}

func (x *GetLatestTopicInferencesResponse) GetBlockHeight() int64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

// Returns the forecasts on a topic posted at a block height
type GetForecastsAtBlockRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId     uint64 `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	BlockHeight int64  `protobuf:"varint,2,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
}

func (x *GetForecastsAtBlockRequest) Reset() {
	*x = GetForecastsAtBlockRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetForecastsAtBlockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetForecastsAtBlockRequest) ProtoMessage() {}

// Deprecated: Use GetForecastsAtBlockRequest.ProtoReflect.Descriptor instead.
func (*GetForecastsAtBlockRequest) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{44}
}

func (x *GetForecastsAtBlockRequest) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

func (x *GetForecastsAtBlockRequest) GetBlockHeight() int64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

// Returns the forecasts on a topic posted at a block height
//
// NOTE: The amount field is a Uint which implements the custom method
// signatures required by gogoproto.
type GetForecastsAtBlockResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Forecasts *v3.Forecasts `protobuf:"bytes,1,opt,name=forecasts,proto3" json:"forecasts,omitempty"`
}

func (x *GetForecastsAtBlockResponse) Reset() {
	*x = GetForecastsAtBlockResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetForecastsAtBlockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetForecastsAtBlockResponse) ProtoMessage() {}

// Deprecated: Use GetForecastsAtBlockResponse.ProtoReflect.Descriptor instead.
func (*GetForecastsAtBlockResponse) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{45}
}

func (x *GetForecastsAtBlockResponse) GetForecasts() *v3.Forecasts {
	if x != nil {
		return x.Forecasts
	}
	return nil
}

type GetWorkerLatestInferenceByTopicIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId       uint64 `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	WorkerAddress string `protobuf:"bytes,2,opt,name=worker_address,json=workerAddress,proto3" json:"worker_address,omitempty"`
}

func (x *GetWorkerLatestInferenceByTopicIdRequest) Reset() {
	*x = GetWorkerLatestInferenceByTopicIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWorkerLatestInferenceByTopicIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkerLatestInferenceByTopicIdRequest) ProtoMessage() {}

// Deprecated: Use GetWorkerLatestInferenceByTopicIdRequest.ProtoReflect.Descriptor instead.
func (*GetWorkerLatestInferenceByTopicIdRequest) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{46}
}

func (x *GetWorkerLatestInferenceByTopicIdRequest) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

func (x *GetWorkerLatestInferenceByTopicIdRequest) GetWorkerAddress() string {
	if x != nil {
		return x.WorkerAddress
	}
	return ""
}

type GetWorkerLatestInferenceByTopicIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LatestInference *v3.Inference `protobuf:"bytes,1,opt,name=latest_inference,json=latestInference,proto3" json:"latest_inference,omitempty"`
}

func (x *GetWorkerLatestInferenceByTopicIdResponse) Reset() {
	*x = GetWorkerLatestInferenceByTopicIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWorkerLatestInferenceByTopicIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkerLatestInferenceByTopicIdResponse) ProtoMessage() {}

// Deprecated: Use GetWorkerLatestInferenceByTopicIdResponse.ProtoReflect.Descriptor instead.
func (*GetWorkerLatestInferenceByTopicIdResponse) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{47}
}

func (x *GetWorkerLatestInferenceByTopicIdResponse) GetLatestInference() *v3.Inference {
	if x != nil {
		return x.LatestInference
	}
	return nil
}

type GetWorkerNodeInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *GetWorkerNodeInfoRequest) Reset() {
	*x = GetWorkerNodeInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWorkerNodeInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkerNodeInfoRequest) ProtoMessage() {}

// Deprecated: Use GetWorkerNodeInfoRequest.ProtoReflect.Descriptor instead.
func (*GetWorkerNodeInfoRequest) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{48}
}

func (x *GetWorkerNodeInfoRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type GetWorkerNodeInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeInfo *v3.OffchainNode `protobuf:"bytes,1,opt,name=node_info,json=nodeInfo,proto3" json:"node_info,omitempty"`
}

func (x *GetWorkerNodeInfoResponse) Reset() {
	*x = GetWorkerNodeInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWorkerNodeInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkerNodeInfoResponse) ProtoMessage() {}

// Deprecated: Use GetWorkerNodeInfoResponse.ProtoReflect.Descriptor instead.
func (*GetWorkerNodeInfoResponse) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{49}
}

func (x *GetWorkerNodeInfoResponse) GetNodeInfo() *v3.OffchainNode {
	if x != nil {
		return x.NodeInfo
	}
	return nil
}

type GetReputerNodeInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *GetReputerNodeInfoRequest) Reset() {
	*x = GetReputerNodeInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReputerNodeInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReputerNodeInfoRequest) ProtoMessage() {}

// Deprecated: Use GetReputerNodeInfoRequest.ProtoReflect.Descriptor instead.
func (*GetReputerNodeInfoRequest) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{50}
}

func (x *GetReputerNodeInfoRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type GetReputerNodeInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeInfo *v3.OffchainNode `protobuf:"bytes,1,opt,name=node_info,json=nodeInfo,proto3" json:"node_info,omitempty"`
}

func (x *GetReputerNodeInfoResponse) Reset() {
	*x = GetReputerNodeInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReputerNodeInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReputerNodeInfoResponse) ProtoMessage() {}

// Deprecated: Use GetReputerNodeInfoResponse.ProtoReflect.Descriptor instead.
func (*GetReputerNodeInfoResponse) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{51}
}

func (x *GetReputerNodeInfoResponse) GetNodeInfo() *v3.OffchainNode {
	if x != nil {
		return x.NodeInfo
	}
	return nil
}

type GetNetworkInferencesAtBlockRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId                  uint64 `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	BlockHeightLastInference int64  `protobuf:"varint,2,opt,name=block_height_last_inference,json=blockHeightLastInference,proto3" json:"block_height_last_inference,omitempty"`
}

func (x *GetNetworkInferencesAtBlockRequest) Reset() {
	*x = GetNetworkInferencesAtBlockRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNetworkInferencesAtBlockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNetworkInferencesAtBlockRequest) ProtoMessage() {}

// Deprecated: Use GetNetworkInferencesAtBlockRequest.ProtoReflect.Descriptor instead.
func (*GetNetworkInferencesAtBlockRequest) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{52}
}

func (x *GetNetworkInferencesAtBlockRequest) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

func (x *GetNetworkInferencesAtBlockRequest) GetBlockHeightLastInference() int64 {
	if x != nil {
		return x.BlockHeightLastInference
	}
	return 0
}

type GetLatestNetworkInferencesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId uint64 `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
}

func (x *GetLatestNetworkInferencesRequest) Reset() {
	*x = GetLatestNetworkInferencesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLatestNetworkInferencesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLatestNetworkInferencesRequest) ProtoMessage() {}

// Deprecated: Use GetLatestNetworkInferencesRequest.ProtoReflect.Descriptor instead.
func (*GetLatestNetworkInferencesRequest) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{53}
}

func (x *GetLatestNetworkInferencesRequest) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

type GetLatestAvailableNetworkInferencesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId uint64 `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
}

func (x *GetLatestAvailableNetworkInferencesRequest) Reset() {
	*x = GetLatestAvailableNetworkInferencesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLatestAvailableNetworkInferencesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLatestAvailableNetworkInferencesRequest) ProtoMessage() {}

// Deprecated: Use GetLatestAvailableNetworkInferencesRequest.ProtoReflect.Descriptor instead.
func (*GetLatestAvailableNetworkInferencesRequest) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{54}
}

func (x *GetLatestAvailableNetworkInferencesRequest) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

type IsWorkerNonceUnfulfilledRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId     uint64 `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	BlockHeight int64  `protobuf:"varint,2,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
}

func (x *IsWorkerNonceUnfulfilledRequest) Reset() {
	*x = IsWorkerNonceUnfulfilledRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsWorkerNonceUnfulfilledRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsWorkerNonceUnfulfilledRequest) ProtoMessage() {}

// Deprecated: Use IsWorkerNonceUnfulfilledRequest.ProtoReflect.Descriptor instead.
func (*IsWorkerNonceUnfulfilledRequest) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{55}
}

func (x *IsWorkerNonceUnfulfilledRequest) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

func (x *IsWorkerNonceUnfulfilledRequest) GetBlockHeight() int64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

type IsWorkerNonceUnfulfilledResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsWorkerNonceUnfulfilled bool `protobuf:"varint,1,opt,name=is_worker_nonce_unfulfilled,json=isWorkerNonceUnfulfilled,proto3" json:"is_worker_nonce_unfulfilled,omitempty"`
}

func (x *IsWorkerNonceUnfulfilledResponse) Reset() {
	*x = IsWorkerNonceUnfulfilledResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsWorkerNonceUnfulfilledResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsWorkerNonceUnfulfilledResponse) ProtoMessage() {}

// Deprecated: Use IsWorkerNonceUnfulfilledResponse.ProtoReflect.Descriptor instead.
func (*IsWorkerNonceUnfulfilledResponse) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{56}
}

func (x *IsWorkerNonceUnfulfilledResponse) GetIsWorkerNonceUnfulfilled() bool {
	if x != nil {
		return x.IsWorkerNonceUnfulfilled
	}
	return false
}

type GetUnfulfilledReputerNoncesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId uint64 `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
}

func (x *GetUnfulfilledReputerNoncesRequest) Reset() {
	*x = GetUnfulfilledReputerNoncesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUnfulfilledReputerNoncesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUnfulfilledReputerNoncesRequest) ProtoMessage() {}

// Deprecated: Use GetUnfulfilledReputerNoncesRequest.ProtoReflect.Descriptor instead.
func (*GetUnfulfilledReputerNoncesRequest) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{57}
}

func (x *GetUnfulfilledReputerNoncesRequest) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

type GetUnfulfilledReputerNoncesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonces *v3.ReputerRequestNonces `protobuf:"bytes,1,opt,name=nonces,proto3" json:"nonces,omitempty"`
}

func (x *GetUnfulfilledReputerNoncesResponse) Reset() {
	*x = GetUnfulfilledReputerNoncesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUnfulfilledReputerNoncesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUnfulfilledReputerNoncesResponse) ProtoMessage() {}

// Deprecated: Use GetUnfulfilledReputerNoncesResponse.ProtoReflect.Descriptor instead.
func (*GetUnfulfilledReputerNoncesResponse) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{58}
}

func (x *GetUnfulfilledReputerNoncesResponse) GetNonces() *v3.ReputerRequestNonces {
	if x != nil {
		return x.Nonces
	}
	return nil
}

type GetUnfulfilledWorkerNoncesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId uint64 `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
}

func (x *GetUnfulfilledWorkerNoncesRequest) Reset() {
	*x = GetUnfulfilledWorkerNoncesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUnfulfilledWorkerNoncesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUnfulfilledWorkerNoncesRequest) ProtoMessage() {}

// Deprecated: Use GetUnfulfilledWorkerNoncesRequest.ProtoReflect.Descriptor instead.
func (*GetUnfulfilledWorkerNoncesRequest) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{59}
}

func (x *GetUnfulfilledWorkerNoncesRequest) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

type GetUnfulfilledWorkerNoncesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonces *v3.Nonces `protobuf:"bytes,1,opt,name=nonces,proto3" json:"nonces,omitempty"`
}

func (x *GetUnfulfilledWorkerNoncesResponse) Reset() {
	*x = GetUnfulfilledWorkerNoncesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUnfulfilledWorkerNoncesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUnfulfilledWorkerNoncesResponse) ProtoMessage() {}

// Deprecated: Use GetUnfulfilledWorkerNoncesResponse.ProtoReflect.Descriptor instead.
func (*GetUnfulfilledWorkerNoncesResponse) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{60}
}

func (x *GetUnfulfilledWorkerNoncesResponse) GetNonces() *v3.Nonces {
	if x != nil {
		return x.Nonces
	}
	return nil
}

type GetInfererNetworkRegretRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId uint64 `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	ActorId string `protobuf:"bytes,2,opt,name=actor_id,json=actorId,proto3" json:"actor_id,omitempty"`
}

func (x *GetInfererNetworkRegretRequest) Reset() {
	*x = GetInfererNetworkRegretRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInfererNetworkRegretRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInfererNetworkRegretRequest) ProtoMessage() {}

// Deprecated: Use GetInfererNetworkRegretRequest.ProtoReflect.Descriptor instead.
func (*GetInfererNetworkRegretRequest) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{61}
}

func (x *GetInfererNetworkRegretRequest) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

func (x *GetInfererNetworkRegretRequest) GetActorId() string {
	if x != nil {
		return x.ActorId
	}
	return ""
}

type GetInfererNetworkRegretResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Regret *v3.TimestampedValue `protobuf:"bytes,1,opt,name=regret,proto3" json:"regret,omitempty"`
}

func (x *GetInfererNetworkRegretResponse) Reset() {
	*x = GetInfererNetworkRegretResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInfererNetworkRegretResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInfererNetworkRegretResponse) ProtoMessage() {}

// Deprecated: Use GetInfererNetworkRegretResponse.ProtoReflect.Descriptor instead.
func (*GetInfererNetworkRegretResponse) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{62}
}

func (x *GetInfererNetworkRegretResponse) GetRegret() *v3.TimestampedValue {
	if x != nil {
		return x.Regret
	}
	return nil
}

type GetForecasterNetworkRegretRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId uint64 `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	Worker  string `protobuf:"bytes,2,opt,name=worker,proto3" json:"worker,omitempty"`
}

func (x *GetForecasterNetworkRegretRequest) Reset() {
	*x = GetForecasterNetworkRegretRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetForecasterNetworkRegretRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetForecasterNetworkRegretRequest) ProtoMessage() {}

// Deprecated: Use GetForecasterNetworkRegretRequest.ProtoReflect.Descriptor instead.
func (*GetForecasterNetworkRegretRequest) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{63}
}

func (x *GetForecasterNetworkRegretRequest) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

func (x *GetForecasterNetworkRegretRequest) GetWorker() string {
	if x != nil {
		return x.Worker
	}
	return ""
}

type GetForecasterNetworkRegretResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Regret *v3.TimestampedValue `protobuf:"bytes,1,opt,name=regret,proto3" json:"regret,omitempty"`
}

func (x *GetForecasterNetworkRegretResponse) Reset() {
	*x = GetForecasterNetworkRegretResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetForecasterNetworkRegretResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetForecasterNetworkRegretResponse) ProtoMessage() {}

// Deprecated: Use GetForecasterNetworkRegretResponse.ProtoReflect.Descriptor instead.
func (*GetForecasterNetworkRegretResponse) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{64}
}

func (x *GetForecasterNetworkRegretResponse) GetRegret() *v3.TimestampedValue {
	if x != nil {
		return x.Regret
	}
	return nil
}

type GetOneInForecasterNetworkRegretRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId    uint64 `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	Forecaster string `protobuf:"bytes,2,opt,name=forecaster,proto3" json:"forecaster,omitempty"`
	Inferer    string `protobuf:"bytes,3,opt,name=inferer,proto3" json:"inferer,omitempty"`
}

func (x *GetOneInForecasterNetworkRegretRequest) Reset() {
	*x = GetOneInForecasterNetworkRegretRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOneInForecasterNetworkRegretRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOneInForecasterNetworkRegretRequest) ProtoMessage() {}

// Deprecated: Use GetOneInForecasterNetworkRegretRequest.ProtoReflect.Descriptor instead.
func (*GetOneInForecasterNetworkRegretRequest) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{65}
}

func (x *GetOneInForecasterNetworkRegretRequest) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

func (x *GetOneInForecasterNetworkRegretRequest) GetForecaster() string {
	if x != nil {
		return x.Forecaster
	}
	return ""
}

func (x *GetOneInForecasterNetworkRegretRequest) GetInferer() string {
	if x != nil {
		return x.Inferer
	}
	return ""
}

type GetOneInForecasterNetworkRegretResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Regret *v3.TimestampedValue `protobuf:"bytes,1,opt,name=regret,proto3" json:"regret,omitempty"`
}

func (x *GetOneInForecasterNetworkRegretResponse) Reset() {
	*x = GetOneInForecasterNetworkRegretResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOneInForecasterNetworkRegretResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOneInForecasterNetworkRegretResponse) ProtoMessage() {}

// Deprecated: Use GetOneInForecasterNetworkRegretResponse.ProtoReflect.Descriptor instead.
func (*GetOneInForecasterNetworkRegretResponse) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{66}
}

func (x *GetOneInForecasterNetworkRegretResponse) GetRegret() *v3.TimestampedValue {
	if x != nil {
		return x.Regret
	}
	return nil
}

type IsReputerNonceUnfulfilledRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId     uint64 `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	BlockHeight int64  `protobuf:"varint,2,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
}

func (x *IsReputerNonceUnfulfilledRequest) Reset() {
	*x = IsReputerNonceUnfulfilledRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsReputerNonceUnfulfilledRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsReputerNonceUnfulfilledRequest) ProtoMessage() {}

// Deprecated: Use IsReputerNonceUnfulfilledRequest.ProtoReflect.Descriptor instead.
func (*IsReputerNonceUnfulfilledRequest) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{67}
}

func (x *IsReputerNonceUnfulfilledRequest) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

func (x *IsReputerNonceUnfulfilledRequest) GetBlockHeight() int64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

type IsReputerNonceUnfulfilledResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsReputerNonceUnfulfilled bool `protobuf:"varint,1,opt,name=is_reputer_nonce_unfulfilled,json=isReputerNonceUnfulfilled,proto3" json:"is_reputer_nonce_unfulfilled,omitempty"`
}

func (x *IsReputerNonceUnfulfilledResponse) Reset() {
	*x = IsReputerNonceUnfulfilledResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsReputerNonceUnfulfilledResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsReputerNonceUnfulfilledResponse) ProtoMessage() {}

// Deprecated: Use IsReputerNonceUnfulfilledResponse.ProtoReflect.Descriptor instead.
func (*IsReputerNonceUnfulfilledResponse) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{68}
}

func (x *IsReputerNonceUnfulfilledResponse) GetIsReputerNonceUnfulfilled() bool {
	if x != nil {
		return x.IsReputerNonceUnfulfilled
	}
	return false
}

type GetNetworkInferencesAtBlockResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NetworkInferences *v3.ValueBundle `protobuf:"bytes,1,opt,name=network_inferences,json=networkInferences,proto3" json:"network_inferences,omitempty"`
}

func (x *GetNetworkInferencesAtBlockResponse) Reset() {
	*x = GetNetworkInferencesAtBlockResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNetworkInferencesAtBlockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNetworkInferencesAtBlockResponse) ProtoMessage() {}

// Deprecated: Use GetNetworkInferencesAtBlockResponse.ProtoReflect.Descriptor instead.
func (*GetNetworkInferencesAtBlockResponse) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{69}
}

func (x *GetNetworkInferencesAtBlockResponse) GetNetworkInferences() *v3.ValueBundle {
	if x != nil {
		return x.NetworkInferences
	}
	return nil
}

type GetLatestNetworkInferencesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NetworkInferences                *v3.ValueBundle            `protobuf:"bytes,1,opt,name=network_inferences,json=networkInferences,proto3" json:"network_inferences,omitempty"`
	InfererWeights                   []*v3.RegretInformedWeight `protobuf:"bytes,2,rep,name=inferer_weights,json=infererWeights,proto3" json:"inferer_weights,omitempty"`
	ForecasterWeights                []*v3.RegretInformedWeight `protobuf:"bytes,3,rep,name=forecaster_weights,json=forecasterWeights,proto3" json:"forecaster_weights,omitempty"`
	InferenceBlockHeight             int64                      `protobuf:"varint,5,opt,name=inference_block_height,json=inferenceBlockHeight,proto3" json:"inference_block_height,omitempty"`
	LossBlockHeight                  int64                      `protobuf:"varint,6,opt,name=loss_block_height,json=lossBlockHeight,proto3" json:"loss_block_height,omitempty"`
	ConfidenceIntervalRawPercentiles []string                   `protobuf:"bytes,7,rep,name=confidence_interval_raw_percentiles,json=confidenceIntervalRawPercentiles,proto3" json:"confidence_interval_raw_percentiles,omitempty"`
	ConfidenceIntervalValues         []string                   `protobuf:"bytes,8,rep,name=confidence_interval_values,json=confidenceIntervalValues,proto3" json:"confidence_interval_values,omitempty"`
}

func (x *GetLatestNetworkInferencesResponse) Reset() {
	*x = GetLatestNetworkInferencesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLatestNetworkInferencesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLatestNetworkInferencesResponse) ProtoMessage() {}

// Deprecated: Use GetLatestNetworkInferencesResponse.ProtoReflect.Descriptor instead.
func (*GetLatestNetworkInferencesResponse) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{70}
}

func (x *GetLatestNetworkInferencesResponse) GetNetworkInferences() *v3.ValueBundle {
	if x != nil {
		return x.NetworkInferences
	}
	return nil
}

func (x *GetLatestNetworkInferencesResponse) GetInfererWeights() []*v3.RegretInformedWeight {
	if x != nil {
		return x.InfererWeights
	}
	return nil
}

func (x *GetLatestNetworkInferencesResponse) GetForecasterWeights() []*v3.RegretInformedWeight {
	if x != nil {
		return x.ForecasterWeights
	}
	return nil
}

func (x *GetLatestNetworkInferencesResponse) GetInferenceBlockHeight() int64 {
	if x != nil {
		return x.InferenceBlockHeight
	}
	return 0
}

func (x *GetLatestNetworkInferencesResponse) GetLossBlockHeight() int64 {
	if x != nil {
		return x.LossBlockHeight
	}
	return 0
}

func (x *GetLatestNetworkInferencesResponse) GetConfidenceIntervalRawPercentiles() []string {
	if x != nil {
		return x.ConfidenceIntervalRawPercentiles
	}
	return nil
}

func (x *GetLatestNetworkInferencesResponse) GetConfidenceIntervalValues() []string {
	if x != nil {
		return x.ConfidenceIntervalValues
	}
	return nil
}

type GetLatestAvailableNetworkInferencesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NetworkInferences                *v3.ValueBundle            `protobuf:"bytes,1,opt,name=network_inferences,json=networkInferences,proto3" json:"network_inferences,omitempty"`
	InfererWeights                   []*v3.RegretInformedWeight `protobuf:"bytes,2,rep,name=inferer_weights,json=infererWeights,proto3" json:"inferer_weights,omitempty"`
	ForecasterWeights                []*v3.RegretInformedWeight `protobuf:"bytes,3,rep,name=forecaster_weights,json=forecasterWeights,proto3" json:"forecaster_weights,omitempty"`
	InferenceBlockHeight             int64                      `protobuf:"varint,5,opt,name=inference_block_height,json=inferenceBlockHeight,proto3" json:"inference_block_height,omitempty"`
	LossBlockHeight                  int64                      `protobuf:"varint,6,opt,name=loss_block_height,json=lossBlockHeight,proto3" json:"loss_block_height,omitempty"`
	ConfidenceIntervalRawPercentiles []string                   `protobuf:"bytes,7,rep,name=confidence_interval_raw_percentiles,json=confidenceIntervalRawPercentiles,proto3" json:"confidence_interval_raw_percentiles,omitempty"`
	ConfidenceIntervalValues         []string                   `protobuf:"bytes,8,rep,name=confidence_interval_values,json=confidenceIntervalValues,proto3" json:"confidence_interval_values,omitempty"`
}

func (x *GetLatestAvailableNetworkInferencesResponse) Reset() {
	*x = GetLatestAvailableNetworkInferencesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLatestAvailableNetworkInferencesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLatestAvailableNetworkInferencesResponse) ProtoMessage() {}

// Deprecated: Use GetLatestAvailableNetworkInferencesResponse.ProtoReflect.Descriptor instead.
func (*GetLatestAvailableNetworkInferencesResponse) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{71}
}

func (x *GetLatestAvailableNetworkInferencesResponse) GetNetworkInferences() *v3.ValueBundle {
	if x != nil {
		return x.NetworkInferences
	}
	return nil
}

func (x *GetLatestAvailableNetworkInferencesResponse) GetInfererWeights() []*v3.RegretInformedWeight {
	if x != nil {
		return x.InfererWeights
	}
	return nil
}

func (x *GetLatestAvailableNetworkInferencesResponse) GetForecasterWeights() []*v3.RegretInformedWeight {
	if x != nil {
		return x.ForecasterWeights
	}
	return nil
}

func (x *GetLatestAvailableNetworkInferencesResponse) GetInferenceBlockHeight() int64 {
	if x != nil {
		return x.InferenceBlockHeight
	}
	return 0
}

func (x *GetLatestAvailableNetworkInferencesResponse) GetLossBlockHeight() int64 {
	if x != nil {
		return x.LossBlockHeight
	}
	return 0
}

func (x *GetLatestAvailableNetworkInferencesResponse) GetConfidenceIntervalRawPercentiles() []string {
	if x != nil {
		return x.ConfidenceIntervalRawPercentiles
	}
	return nil
}

func (x *GetLatestAvailableNetworkInferencesResponse) GetConfidenceIntervalValues() []string {
	if x != nil {
		return x.ConfidenceIntervalValues
	}
	return nil
}

type IsWorkerRegisteredInTopicIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId uint64 `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	Address string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *IsWorkerRegisteredInTopicIdRequest) Reset() {
	*x = IsWorkerRegisteredInTopicIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsWorkerRegisteredInTopicIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsWorkerRegisteredInTopicIdRequest) ProtoMessage() {}

// Deprecated: Use IsWorkerRegisteredInTopicIdRequest.ProtoReflect.Descriptor instead.
func (*IsWorkerRegisteredInTopicIdRequest) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{72}
}

func (x *IsWorkerRegisteredInTopicIdRequest) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

func (x *IsWorkerRegisteredInTopicIdRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type IsWorkerRegisteredInTopicIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsRegistered bool `protobuf:"varint,1,opt,name=is_registered,json=isRegistered,proto3" json:"is_registered,omitempty"`
}

func (x *IsWorkerRegisteredInTopicIdResponse) Reset() {
	*x = IsWorkerRegisteredInTopicIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsWorkerRegisteredInTopicIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsWorkerRegisteredInTopicIdResponse) ProtoMessage() {}

// Deprecated: Use IsWorkerRegisteredInTopicIdResponse.ProtoReflect.Descriptor instead.
func (*IsWorkerRegisteredInTopicIdResponse) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{73}
}

func (x *IsWorkerRegisteredInTopicIdResponse) GetIsRegistered() bool {
	if x != nil {
		return x.IsRegistered
	}
	return false
}

type IsReputerRegisteredInTopicIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId uint64 `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	Address string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *IsReputerRegisteredInTopicIdRequest) Reset() {
	*x = IsReputerRegisteredInTopicIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsReputerRegisteredInTopicIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsReputerRegisteredInTopicIdRequest) ProtoMessage() {}

// Deprecated: Use IsReputerRegisteredInTopicIdRequest.ProtoReflect.Descriptor instead.
func (*IsReputerRegisteredInTopicIdRequest) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{74}
}

func (x *IsReputerRegisteredInTopicIdRequest) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

func (x *IsReputerRegisteredInTopicIdRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type IsReputerRegisteredInTopicIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsRegistered bool `protobuf:"varint,1,opt,name=is_registered,json=isRegistered,proto3" json:"is_registered,omitempty"`
}

func (x *IsReputerRegisteredInTopicIdResponse) Reset() {
	*x = IsReputerRegisteredInTopicIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsReputerRegisteredInTopicIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsReputerRegisteredInTopicIdResponse) ProtoMessage() {}

// Deprecated: Use IsReputerRegisteredInTopicIdResponse.ProtoReflect.Descriptor instead.
func (*IsReputerRegisteredInTopicIdResponse) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{75}
}

func (x *IsReputerRegisteredInTopicIdResponse) GetIsRegistered() bool {
	if x != nil {
		return x.IsRegistered
	}
	return false
}

type IsWhitelistAdminRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *IsWhitelistAdminRequest) Reset() {
	*x = IsWhitelistAdminRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsWhitelistAdminRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsWhitelistAdminRequest) ProtoMessage() {}

// Deprecated: Use IsWhitelistAdminRequest.ProtoReflect.Descriptor instead.
func (*IsWhitelistAdminRequest) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{76}
}

func (x *IsWhitelistAdminRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type IsWhitelistAdminResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsAdmin bool `protobuf:"varint,1,opt,name=is_admin,json=isAdmin,proto3" json:"is_admin,omitempty"`
}

func (x *IsWhitelistAdminResponse) Reset() {
	*x = IsWhitelistAdminResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsWhitelistAdminResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsWhitelistAdminResponse) ProtoMessage() {}

// Deprecated: Use IsWhitelistAdminResponse.ProtoReflect.Descriptor instead.
func (*IsWhitelistAdminResponse) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{77}
}

func (x *IsWhitelistAdminResponse) GetIsAdmin() bool {
	if x != nil {
		return x.IsAdmin
	}
	return false
}

type GetStakeRemovalsUpUntilBlockRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockHeight int64 `protobuf:"varint,1,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
}

func (x *GetStakeRemovalsUpUntilBlockRequest) Reset() {
	*x = GetStakeRemovalsUpUntilBlockRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStakeRemovalsUpUntilBlockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStakeRemovalsUpUntilBlockRequest) ProtoMessage() {}

// Deprecated: Use GetStakeRemovalsUpUntilBlockRequest.ProtoReflect.Descriptor instead.
func (*GetStakeRemovalsUpUntilBlockRequest) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{78}
}

func (x *GetStakeRemovalsUpUntilBlockRequest) GetBlockHeight() int64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

type GetStakeRemovalsUpUntilBlockResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Removals []*v3.StakeRemovalInfo `protobuf:"bytes,1,rep,name=removals,proto3" json:"removals,omitempty"`
}

func (x *GetStakeRemovalsUpUntilBlockResponse) Reset() {
	*x = GetStakeRemovalsUpUntilBlockResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStakeRemovalsUpUntilBlockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStakeRemovalsUpUntilBlockResponse) ProtoMessage() {}

// Deprecated: Use GetStakeRemovalsUpUntilBlockResponse.ProtoReflect.Descriptor instead.
func (*GetStakeRemovalsUpUntilBlockResponse) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{79}
}

func (x *GetStakeRemovalsUpUntilBlockResponse) GetRemovals() []*v3.StakeRemovalInfo {
	if x != nil {
		return x.Removals
	}
	return nil
}

type GetDelegateStakeRemovalsUpUntilBlockRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockHeight int64 `protobuf:"varint,1,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
}

func (x *GetDelegateStakeRemovalsUpUntilBlockRequest) Reset() {
	*x = GetDelegateStakeRemovalsUpUntilBlockRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDelegateStakeRemovalsUpUntilBlockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDelegateStakeRemovalsUpUntilBlockRequest) ProtoMessage() {}

// Deprecated: Use GetDelegateStakeRemovalsUpUntilBlockRequest.ProtoReflect.Descriptor instead.
func (*GetDelegateStakeRemovalsUpUntilBlockRequest) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{80}
}

func (x *GetDelegateStakeRemovalsUpUntilBlockRequest) GetBlockHeight() int64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

type GetDelegateStakeRemovalsUpUntilBlockResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Removals []*v3.DelegateStakeRemovalInfo `protobuf:"bytes,1,rep,name=removals,proto3" json:"removals,omitempty"`
}

func (x *GetDelegateStakeRemovalsUpUntilBlockResponse) Reset() {
	*x = GetDelegateStakeRemovalsUpUntilBlockResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDelegateStakeRemovalsUpUntilBlockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDelegateStakeRemovalsUpUntilBlockResponse) ProtoMessage() {}

// Deprecated: Use GetDelegateStakeRemovalsUpUntilBlockResponse.ProtoReflect.Descriptor instead.
func (*GetDelegateStakeRemovalsUpUntilBlockResponse) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{81}
}

func (x *GetDelegateStakeRemovalsUpUntilBlockResponse) GetRemovals() []*v3.DelegateStakeRemovalInfo {
	if x != nil {
		return x.Removals
	}
	return nil
}

type GetStakeRemovalInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId uint64 `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	Reputer string `protobuf:"bytes,2,opt,name=reputer,proto3" json:"reputer,omitempty"`
}

func (x *GetStakeRemovalInfoRequest) Reset() {
	*x = GetStakeRemovalInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStakeRemovalInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStakeRemovalInfoRequest) ProtoMessage() {}

// Deprecated: Use GetStakeRemovalInfoRequest.ProtoReflect.Descriptor instead.
func (*GetStakeRemovalInfoRequest) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{82}
}

func (x *GetStakeRemovalInfoRequest) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

func (x *GetStakeRemovalInfoRequest) GetReputer() string {
	if x != nil {
		return x.Reputer
	}
	return ""
}

type GetStakeRemovalInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Removal *v3.StakeRemovalInfo `protobuf:"bytes,1,opt,name=removal,proto3" json:"removal,omitempty"`
}

func (x *GetStakeRemovalInfoResponse) Reset() {
	*x = GetStakeRemovalInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStakeRemovalInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStakeRemovalInfoResponse) ProtoMessage() {}

// Deprecated: Use GetStakeRemovalInfoResponse.ProtoReflect.Descriptor instead.
func (*GetStakeRemovalInfoResponse) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{83}
}

func (x *GetStakeRemovalInfoResponse) GetRemoval() *v3.StakeRemovalInfo {
	if x != nil {
		return x.Removal
	}
	return nil
}

type GetDelegateStakeRemovalInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId   uint64 `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	Delegator string `protobuf:"bytes,2,opt,name=delegator,proto3" json:"delegator,omitempty"`
	Reputer   string `protobuf:"bytes,3,opt,name=reputer,proto3" json:"reputer,omitempty"`
}

func (x *GetDelegateStakeRemovalInfoRequest) Reset() {
	*x = GetDelegateStakeRemovalInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDelegateStakeRemovalInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDelegateStakeRemovalInfoRequest) ProtoMessage() {}

// Deprecated: Use GetDelegateStakeRemovalInfoRequest.ProtoReflect.Descriptor instead.
func (*GetDelegateStakeRemovalInfoRequest) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{84}
}

func (x *GetDelegateStakeRemovalInfoRequest) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

func (x *GetDelegateStakeRemovalInfoRequest) GetDelegator() string {
	if x != nil {
		return x.Delegator
	}
	return ""
}

func (x *GetDelegateStakeRemovalInfoRequest) GetReputer() string {
	if x != nil {
		return x.Reputer
	}
	return ""
}

type GetDelegateStakeRemovalInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Removal *v3.DelegateStakeRemovalInfo `protobuf:"bytes,1,opt,name=removal,proto3" json:"removal,omitempty"`
}

func (x *GetDelegateStakeRemovalInfoResponse) Reset() {
	*x = GetDelegateStakeRemovalInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDelegateStakeRemovalInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDelegateStakeRemovalInfoResponse) ProtoMessage() {}

// Deprecated: Use GetDelegateStakeRemovalInfoResponse.ProtoReflect.Descriptor instead.
func (*GetDelegateStakeRemovalInfoResponse) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{85}
}

func (x *GetDelegateStakeRemovalInfoResponse) GetRemoval() *v3.DelegateStakeRemovalInfo {
	if x != nil {
		return x.Removal
	}
	return nil
}

type GetTopicLastWorkerCommitInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId uint64 `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
}

func (x *GetTopicLastWorkerCommitInfoRequest) Reset() {
	*x = GetTopicLastWorkerCommitInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTopicLastWorkerCommitInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTopicLastWorkerCommitInfoRequest) ProtoMessage() {}

// Deprecated: Use GetTopicLastWorkerCommitInfoRequest.ProtoReflect.Descriptor instead.
func (*GetTopicLastWorkerCommitInfoRequest) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{86}
}

func (x *GetTopicLastWorkerCommitInfoRequest) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

type GetTopicLastWorkerCommitInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LastCommit *v3.TimestampedActorNonce `protobuf:"bytes,1,opt,name=last_commit,json=lastCommit,proto3" json:"last_commit,omitempty"`
}

func (x *GetTopicLastWorkerCommitInfoResponse) Reset() {
	*x = GetTopicLastWorkerCommitInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTopicLastWorkerCommitInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTopicLastWorkerCommitInfoResponse) ProtoMessage() {}

// Deprecated: Use GetTopicLastWorkerCommitInfoResponse.ProtoReflect.Descriptor instead.
func (*GetTopicLastWorkerCommitInfoResponse) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{87}
}

func (x *GetTopicLastWorkerCommitInfoResponse) GetLastCommit() *v3.TimestampedActorNonce {
	if x != nil {
		return x.LastCommit
	}
	return nil
}

type GetTopicLastReputerCommitInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId uint64 `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
}

func (x *GetTopicLastReputerCommitInfoRequest) Reset() {
	*x = GetTopicLastReputerCommitInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTopicLastReputerCommitInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTopicLastReputerCommitInfoRequest) ProtoMessage() {}

// Deprecated: Use GetTopicLastReputerCommitInfoRequest.ProtoReflect.Descriptor instead.
func (*GetTopicLastReputerCommitInfoRequest) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{88}
}

func (x *GetTopicLastReputerCommitInfoRequest) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

type GetTopicLastReputerCommitInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LastCommit *v3.TimestampedActorNonce `protobuf:"bytes,1,opt,name=last_commit,json=lastCommit,proto3" json:"last_commit,omitempty"`
}

func (x *GetTopicLastReputerCommitInfoResponse) Reset() {
	*x = GetTopicLastReputerCommitInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTopicLastReputerCommitInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTopicLastReputerCommitInfoResponse) ProtoMessage() {}

// Deprecated: Use GetTopicLastReputerCommitInfoResponse.ProtoReflect.Descriptor instead.
func (*GetTopicLastReputerCommitInfoResponse) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{89}
}

func (x *GetTopicLastReputerCommitInfoResponse) GetLastCommit() *v3.TimestampedActorNonce {
	if x != nil {
		return x.LastCommit
	}
	return nil
}

type GetTopicRewardNonceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId uint64 `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
}

func (x *GetTopicRewardNonceRequest) Reset() {
	*x = GetTopicRewardNonceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTopicRewardNonceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTopicRewardNonceRequest) ProtoMessage() {}

// Deprecated: Use GetTopicRewardNonceRequest.ProtoReflect.Descriptor instead.
func (*GetTopicRewardNonceRequest) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{90}
}

func (x *GetTopicRewardNonceRequest) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

type GetTopicRewardNonceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce int64 `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
}

func (x *GetTopicRewardNonceResponse) Reset() {
	*x = GetTopicRewardNonceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTopicRewardNonceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTopicRewardNonceResponse) ProtoMessage() {}

// Deprecated: Use GetTopicRewardNonceResponse.ProtoReflect.Descriptor instead.
func (*GetTopicRewardNonceResponse) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{91}
}

func (x *GetTopicRewardNonceResponse) GetNonce() int64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

type GetReputerLossBundlesAtBlockRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId     uint64 `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	BlockHeight int64  `protobuf:"varint,2,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
}

func (x *GetReputerLossBundlesAtBlockRequest) Reset() {
	*x = GetReputerLossBundlesAtBlockRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReputerLossBundlesAtBlockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReputerLossBundlesAtBlockRequest) ProtoMessage() {}

// Deprecated: Use GetReputerLossBundlesAtBlockRequest.ProtoReflect.Descriptor instead.
func (*GetReputerLossBundlesAtBlockRequest) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{92}
}

func (x *GetReputerLossBundlesAtBlockRequest) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

func (x *GetReputerLossBundlesAtBlockRequest) GetBlockHeight() int64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

type GetReputerLossBundlesAtBlockResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LossBundles *v3.ReputerValueBundles `protobuf:"bytes,1,opt,name=loss_bundles,json=lossBundles,proto3" json:"loss_bundles,omitempty"`
}

func (x *GetReputerLossBundlesAtBlockResponse) Reset() {
	*x = GetReputerLossBundlesAtBlockResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReputerLossBundlesAtBlockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReputerLossBundlesAtBlockResponse) ProtoMessage() {}

// Deprecated: Use GetReputerLossBundlesAtBlockResponse.ProtoReflect.Descriptor instead.
func (*GetReputerLossBundlesAtBlockResponse) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{93}
}

func (x *GetReputerLossBundlesAtBlockResponse) GetLossBundles() *v3.ReputerValueBundles {
	if x != nil {
		return x.LossBundles
	}
	return nil
}

type GetStakeReputerAuthorityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId uint64 `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	Reputer string `protobuf:"bytes,2,opt,name=reputer,proto3" json:"reputer,omitempty"`
}

func (x *GetStakeReputerAuthorityRequest) Reset() {
	*x = GetStakeReputerAuthorityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStakeReputerAuthorityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStakeReputerAuthorityRequest) ProtoMessage() {}

// Deprecated: Use GetStakeReputerAuthorityRequest.ProtoReflect.Descriptor instead.
func (*GetStakeReputerAuthorityRequest) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{94}
}

func (x *GetStakeReputerAuthorityRequest) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

func (x *GetStakeReputerAuthorityRequest) GetReputer() string {
	if x != nil {
		return x.Reputer
	}
	return ""
}

type GetStakeReputerAuthorityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Authority string `protobuf:"bytes,1,opt,name=authority,proto3" json:"authority,omitempty"`
}

func (x *GetStakeReputerAuthorityResponse) Reset() {
	*x = GetStakeReputerAuthorityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStakeReputerAuthorityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStakeReputerAuthorityResponse) ProtoMessage() {}

// Deprecated: Use GetStakeReputerAuthorityResponse.ProtoReflect.Descriptor instead.
func (*GetStakeReputerAuthorityResponse) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{95}
}

func (x *GetStakeReputerAuthorityResponse) GetAuthority() string {
	if x != nil {
		return x.Authority
	}
	return ""
}

type GetDelegateStakePlacementRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId   uint64 `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	Delegator string `protobuf:"bytes,2,opt,name=delegator,proto3" json:"delegator,omitempty"`
	Target    string `protobuf:"bytes,3,opt,name=target,proto3" json:"target,omitempty"`
}

func (x *GetDelegateStakePlacementRequest) Reset() {
	*x = GetDelegateStakePlacementRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDelegateStakePlacementRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDelegateStakePlacementRequest) ProtoMessage() {}

// Deprecated: Use GetDelegateStakePlacementRequest.ProtoReflect.Descriptor instead.
func (*GetDelegateStakePlacementRequest) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{96}
}

func (x *GetDelegateStakePlacementRequest) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

func (x *GetDelegateStakePlacementRequest) GetDelegator() string {
	if x != nil {
		return x.Delegator
	}
	return ""
}

func (x *GetDelegateStakePlacementRequest) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

type GetDelegateStakePlacementResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DelegatorInfo *v3.DelegatorInfo `protobuf:"bytes,1,opt,name=delegator_info,json=delegatorInfo,proto3" json:"delegator_info,omitempty"`
}

func (x *GetDelegateStakePlacementResponse) Reset() {
	*x = GetDelegateStakePlacementResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDelegateStakePlacementResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDelegateStakePlacementResponse) ProtoMessage() {}

// Deprecated: Use GetDelegateStakePlacementResponse.ProtoReflect.Descriptor instead.
func (*GetDelegateStakePlacementResponse) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{97}
}

func (x *GetDelegateStakePlacementResponse) GetDelegatorInfo() *v3.DelegatorInfo {
	if x != nil {
		return x.DelegatorInfo
	}
	return nil
}

type GetDelegateStakeUponReputerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId uint64 `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	Target  string `protobuf:"bytes,2,opt,name=target,proto3" json:"target,omitempty"`
}

func (x *GetDelegateStakeUponReputerRequest) Reset() {
	*x = GetDelegateStakeUponReputerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDelegateStakeUponReputerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDelegateStakeUponReputerRequest) ProtoMessage() {}

// Deprecated: Use GetDelegateStakeUponReputerRequest.ProtoReflect.Descriptor instead.
func (*GetDelegateStakeUponReputerRequest) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{98}
}

func (x *GetDelegateStakeUponReputerRequest) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

func (x *GetDelegateStakeUponReputerRequest) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

type GetDelegateStakeUponReputerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stake string `protobuf:"bytes,1,opt,name=stake,proto3" json:"stake,omitempty"`
}

func (x *GetDelegateStakeUponReputerResponse) Reset() {
	*x = GetDelegateStakeUponReputerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDelegateStakeUponReputerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDelegateStakeUponReputerResponse) ProtoMessage() {}

// Deprecated: Use GetDelegateStakeUponReputerResponse.ProtoReflect.Descriptor instead.
func (*GetDelegateStakeUponReputerResponse) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{99}
}

func (x *GetDelegateStakeUponReputerResponse) GetStake() string {
	if x != nil {
		return x.Stake
	}
	return ""
}

type GetDelegateRewardPerShareRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId uint64 `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	Reputer string `protobuf:"bytes,2,opt,name=reputer,proto3" json:"reputer,omitempty"`
}

func (x *GetDelegateRewardPerShareRequest) Reset() {
	*x = GetDelegateRewardPerShareRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDelegateRewardPerShareRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDelegateRewardPerShareRequest) ProtoMessage() {}

// Deprecated: Use GetDelegateRewardPerShareRequest.ProtoReflect.Descriptor instead.
func (*GetDelegateRewardPerShareRequest) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{100}
}

func (x *GetDelegateRewardPerShareRequest) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

func (x *GetDelegateRewardPerShareRequest) GetReputer() string {
	if x != nil {
		return x.Reputer
	}
	return ""
}

type GetDelegateRewardPerShareResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RewardPerShare string `protobuf:"bytes,1,opt,name=reward_per_share,json=rewardPerShare,proto3" json:"reward_per_share,omitempty"`
}

func (x *GetDelegateRewardPerShareResponse) Reset() {
	*x = GetDelegateRewardPerShareResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDelegateRewardPerShareResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDelegateRewardPerShareResponse) ProtoMessage() {}

// Deprecated: Use GetDelegateRewardPerShareResponse.ProtoReflect.Descriptor instead.
func (*GetDelegateRewardPerShareResponse) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{101}
}

func (x *GetDelegateRewardPerShareResponse) GetRewardPerShare() string {
	if x != nil {
		return x.RewardPerShare
	}
	return ""
}

type GetStakeRemovalForReputerAndTopicIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reputer string `protobuf:"bytes,1,opt,name=reputer,proto3" json:"reputer,omitempty"`
	TopicId uint64 `protobuf:"varint,2,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
}

func (x *GetStakeRemovalForReputerAndTopicIdRequest) Reset() {
	*x = GetStakeRemovalForReputerAndTopicIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStakeRemovalForReputerAndTopicIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStakeRemovalForReputerAndTopicIdRequest) ProtoMessage() {}

// Deprecated: Use GetStakeRemovalForReputerAndTopicIdRequest.ProtoReflect.Descriptor instead.
func (*GetStakeRemovalForReputerAndTopicIdRequest) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{102}
}

func (x *GetStakeRemovalForReputerAndTopicIdRequest) GetReputer() string {
	if x != nil {
		return x.Reputer
	}
	return ""
}

func (x *GetStakeRemovalForReputerAndTopicIdRequest) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

type GetStakeRemovalForReputerAndTopicIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StakeRemovalInfo *v3.StakeRemovalInfo `protobuf:"bytes,1,opt,name=stake_removal_info,json=stakeRemovalInfo,proto3" json:"stake_removal_info,omitempty"`
}

func (x *GetStakeRemovalForReputerAndTopicIdResponse) Reset() {
	*x = GetStakeRemovalForReputerAndTopicIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStakeRemovalForReputerAndTopicIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStakeRemovalForReputerAndTopicIdResponse) ProtoMessage() {}

// Deprecated: Use GetStakeRemovalForReputerAndTopicIdResponse.ProtoReflect.Descriptor instead.
func (*GetStakeRemovalForReputerAndTopicIdResponse) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{103}
}

func (x *GetStakeRemovalForReputerAndTopicIdResponse) GetStakeRemovalInfo() *v3.StakeRemovalInfo {
	if x != nil {
		return x.StakeRemovalInfo
	}
	return nil
}

type GetDelegateStakeRemovalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockHeight int64  `protobuf:"varint,1,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	TopicId     uint64 `protobuf:"varint,2,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	Delegator   string `protobuf:"bytes,3,opt,name=delegator,proto3" json:"delegator,omitempty"`
	Reputer     string `protobuf:"bytes,4,opt,name=reputer,proto3" json:"reputer,omitempty"`
}

func (x *GetDelegateStakeRemovalRequest) Reset() {
	*x = GetDelegateStakeRemovalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDelegateStakeRemovalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDelegateStakeRemovalRequest) ProtoMessage() {}

// Deprecated: Use GetDelegateStakeRemovalRequest.ProtoReflect.Descriptor instead.
func (*GetDelegateStakeRemovalRequest) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{104}
}

func (x *GetDelegateStakeRemovalRequest) GetBlockHeight() int64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

func (x *GetDelegateStakeRemovalRequest) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

func (x *GetDelegateStakeRemovalRequest) GetDelegator() string {
	if x != nil {
		return x.Delegator
	}
	return ""
}

func (x *GetDelegateStakeRemovalRequest) GetReputer() string {
	if x != nil {
		return x.Reputer
	}
	return ""
}

type GetDelegateStakeRemovalResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StakeRemovalInfo *v3.DelegateStakeRemovalInfo `protobuf:"bytes,1,opt,name=stake_removal_info,json=stakeRemovalInfo,proto3" json:"stake_removal_info,omitempty"`
}

func (x *GetDelegateStakeRemovalResponse) Reset() {
	*x = GetDelegateStakeRemovalResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDelegateStakeRemovalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDelegateStakeRemovalResponse) ProtoMessage() {}

// Deprecated: Use GetDelegateStakeRemovalResponse.ProtoReflect.Descriptor instead.
func (*GetDelegateStakeRemovalResponse) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{105}
}

func (x *GetDelegateStakeRemovalResponse) GetStakeRemovalInfo() *v3.DelegateStakeRemovalInfo {
	if x != nil {
		return x.StakeRemovalInfo
	}
	return nil
}

type GetPreviousTopicWeightRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId uint64 `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
}

func (x *GetPreviousTopicWeightRequest) Reset() {
	*x = GetPreviousTopicWeightRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPreviousTopicWeightRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPreviousTopicWeightRequest) ProtoMessage() {}

// Deprecated: Use GetPreviousTopicWeightRequest.ProtoReflect.Descriptor instead.
func (*GetPreviousTopicWeightRequest) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{106}
}

func (x *GetPreviousTopicWeightRequest) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

type GetPreviousTopicWeightResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Weight   string `protobuf:"bytes,1,opt,name=weight,proto3" json:"weight,omitempty"`
	NotFound bool   `protobuf:"varint,2,opt,name=not_found,json=notFound,proto3" json:"not_found,omitempty"`
}

func (x *GetPreviousTopicWeightResponse) Reset() {
	*x = GetPreviousTopicWeightResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPreviousTopicWeightResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPreviousTopicWeightResponse) ProtoMessage() {}

// Deprecated: Use GetPreviousTopicWeightResponse.ProtoReflect.Descriptor instead.
func (*GetPreviousTopicWeightResponse) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{107}
}

func (x *GetPreviousTopicWeightResponse) GetWeight() string {
	if x != nil {
		return x.Weight
	}
	return ""
}

func (x *GetPreviousTopicWeightResponse) GetNotFound() bool {
	if x != nil {
		return x.NotFound
	}
	return false
}

type GetTotalSumPreviousTopicWeightsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetTotalSumPreviousTopicWeightsRequest) Reset() {
	*x = GetTotalSumPreviousTopicWeightsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTotalSumPreviousTopicWeightsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTotalSumPreviousTopicWeightsRequest) ProtoMessage() {}

// Deprecated: Use GetTotalSumPreviousTopicWeightsRequest.ProtoReflect.Descriptor instead.
func (*GetTotalSumPreviousTopicWeightsRequest) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{108}
}

type GetTotalSumPreviousTopicWeightsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Weight string `protobuf:"bytes,1,opt,name=weight,proto3" json:"weight,omitempty"`
}

func (x *GetTotalSumPreviousTopicWeightsResponse) Reset() {
	*x = GetTotalSumPreviousTopicWeightsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTotalSumPreviousTopicWeightsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTotalSumPreviousTopicWeightsResponse) ProtoMessage() {}

// Deprecated: Use GetTotalSumPreviousTopicWeightsResponse.ProtoReflect.Descriptor instead.
func (*GetTotalSumPreviousTopicWeightsResponse) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{109}
}

func (x *GetTotalSumPreviousTopicWeightsResponse) GetWeight() string {
	if x != nil {
		return x.Weight
	}
	return ""
}

type TopicExistsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId uint64 `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
}

func (x *TopicExistsRequest) Reset() {
	*x = TopicExistsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[110]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopicExistsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopicExistsRequest) ProtoMessage() {}

// Deprecated: Use TopicExistsRequest.ProtoReflect.Descriptor instead.
func (*TopicExistsRequest) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{110}
}

func (x *TopicExistsRequest) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

type TopicExistsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exists bool `protobuf:"varint,1,opt,name=exists,proto3" json:"exists,omitempty"`
}

func (x *TopicExistsResponse) Reset() {
	*x = TopicExistsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[111]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopicExistsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopicExistsResponse) ProtoMessage() {}

// Deprecated: Use TopicExistsResponse.ProtoReflect.Descriptor instead.
func (*TopicExistsResponse) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{111}
}

func (x *TopicExistsResponse) GetExists() bool {
	if x != nil {
		return x.Exists
	}
	return false
}

type IsTopicActiveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId uint64 `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
}

func (x *IsTopicActiveRequest) Reset() {
	*x = IsTopicActiveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[112]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsTopicActiveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsTopicActiveRequest) ProtoMessage() {}

// Deprecated: Use IsTopicActiveRequest.ProtoReflect.Descriptor instead.
func (*IsTopicActiveRequest) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{112}
}

func (x *IsTopicActiveRequest) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

type IsTopicActiveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsActive bool `protobuf:"varint,1,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
}

func (x *IsTopicActiveResponse) Reset() {
	*x = IsTopicActiveResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[113]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsTopicActiveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsTopicActiveResponse) ProtoMessage() {}

// Deprecated: Use IsTopicActiveResponse.ProtoReflect.Descriptor instead.
func (*IsTopicActiveResponse) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{113}
}

func (x *IsTopicActiveResponse) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

type GetTopicFeeRevenueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId uint64 `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
}

func (x *GetTopicFeeRevenueRequest) Reset() {
	*x = GetTopicFeeRevenueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[114]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTopicFeeRevenueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTopicFeeRevenueRequest) ProtoMessage() {}

// Deprecated: Use GetTopicFeeRevenueRequest.ProtoReflect.Descriptor instead.
func (*GetTopicFeeRevenueRequest) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{114}
}

func (x *GetTopicFeeRevenueRequest) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

type GetTopicFeeRevenueResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FeeRevenue string `protobuf:"bytes,1,opt,name=fee_revenue,json=feeRevenue,proto3" json:"fee_revenue,omitempty"`
}

func (x *GetTopicFeeRevenueResponse) Reset() {
	*x = GetTopicFeeRevenueResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[115]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTopicFeeRevenueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTopicFeeRevenueResponse) ProtoMessage() {}

// Deprecated: Use GetTopicFeeRevenueResponse.ProtoReflect.Descriptor instead.
func (*GetTopicFeeRevenueResponse) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{115}
}

func (x *GetTopicFeeRevenueResponse) GetFeeRevenue() string {
	if x != nil {
		return x.FeeRevenue
	}
	return ""
}

type GetInfererScoreEmaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId uint64 `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	Inferer string `protobuf:"bytes,2,opt,name=inferer,proto3" json:"inferer,omitempty"`
}

func (x *GetInfererScoreEmaRequest) Reset() {
	*x = GetInfererScoreEmaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[116]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInfererScoreEmaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInfererScoreEmaRequest) ProtoMessage() {}

// Deprecated: Use GetInfererScoreEmaRequest.ProtoReflect.Descriptor instead.
func (*GetInfererScoreEmaRequest) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{116}
}

func (x *GetInfererScoreEmaRequest) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

func (x *GetInfererScoreEmaRequest) GetInferer() string {
	if x != nil {
		return x.Inferer
	}
	return ""
}

type GetInfererScoreEmaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Score *v3.Score `protobuf:"bytes,1,opt,name=score,proto3" json:"score,omitempty"`
}

func (x *GetInfererScoreEmaResponse) Reset() {
	*x = GetInfererScoreEmaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[117]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInfererScoreEmaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInfererScoreEmaResponse) ProtoMessage() {}

// Deprecated: Use GetInfererScoreEmaResponse.ProtoReflect.Descriptor instead.
func (*GetInfererScoreEmaResponse) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{117}
}

func (x *GetInfererScoreEmaResponse) GetScore() *v3.Score {
	if x != nil {
		return x.Score
	}
	return nil
}

type GetForecasterScoreEmaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId    uint64 `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	Forecaster string `protobuf:"bytes,2,opt,name=forecaster,proto3" json:"forecaster,omitempty"`
}

func (x *GetForecasterScoreEmaRequest) Reset() {
	*x = GetForecasterScoreEmaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[118]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetForecasterScoreEmaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetForecasterScoreEmaRequest) ProtoMessage() {}

// Deprecated: Use GetForecasterScoreEmaRequest.ProtoReflect.Descriptor instead.
func (*GetForecasterScoreEmaRequest) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{118}
}

func (x *GetForecasterScoreEmaRequest) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

func (x *GetForecasterScoreEmaRequest) GetForecaster() string {
	if x != nil {
		return x.Forecaster
	}
	return ""
}

type GetForecasterScoreEmaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Score *v3.Score `protobuf:"bytes,1,opt,name=score,proto3" json:"score,omitempty"`
}

func (x *GetForecasterScoreEmaResponse) Reset() {
	*x = GetForecasterScoreEmaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[119]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetForecasterScoreEmaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetForecasterScoreEmaResponse) ProtoMessage() {}

// Deprecated: Use GetForecasterScoreEmaResponse.ProtoReflect.Descriptor instead.
func (*GetForecasterScoreEmaResponse) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{119}
}

func (x *GetForecasterScoreEmaResponse) GetScore() *v3.Score {
	if x != nil {
		return x.Score
	}
	return nil
}

type GetReputerScoreEmaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId uint64 `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	Reputer string `protobuf:"bytes,2,opt,name=reputer,proto3" json:"reputer,omitempty"`
}

func (x *GetReputerScoreEmaRequest) Reset() {
	*x = GetReputerScoreEmaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[120]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReputerScoreEmaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReputerScoreEmaRequest) ProtoMessage() {}

// Deprecated: Use GetReputerScoreEmaRequest.ProtoReflect.Descriptor instead.
func (*GetReputerScoreEmaRequest) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{120}
}

func (x *GetReputerScoreEmaRequest) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

func (x *GetReputerScoreEmaRequest) GetReputer() string {
	if x != nil {
		return x.Reputer
	}
	return ""
}

type GetReputerScoreEmaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Score *v3.Score `protobuf:"bytes,1,opt,name=score,proto3" json:"score,omitempty"`
}

func (x *GetReputerScoreEmaResponse) Reset() {
	*x = GetReputerScoreEmaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[121]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReputerScoreEmaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReputerScoreEmaResponse) ProtoMessage() {}

// Deprecated: Use GetReputerScoreEmaResponse.ProtoReflect.Descriptor instead.
func (*GetReputerScoreEmaResponse) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{121}
}

func (x *GetReputerScoreEmaResponse) GetScore() *v3.Score {
	if x != nil {
		return x.Score
	}
	return nil
}

type GetInferenceScoresUntilBlockRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId     uint64 `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	BlockHeight int64  `protobuf:"varint,2,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
}

func (x *GetInferenceScoresUntilBlockRequest) Reset() {
	*x = GetInferenceScoresUntilBlockRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[122]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInferenceScoresUntilBlockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInferenceScoresUntilBlockRequest) ProtoMessage() {}

// Deprecated: Use GetInferenceScoresUntilBlockRequest.ProtoReflect.Descriptor instead.
func (*GetInferenceScoresUntilBlockRequest) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{122}
}

func (x *GetInferenceScoresUntilBlockRequest) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

func (x *GetInferenceScoresUntilBlockRequest) GetBlockHeight() int64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

type GetInferenceScoresUntilBlockResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scores []*v3.Score `protobuf:"bytes,1,rep,name=scores,proto3" json:"scores,omitempty"`
}

func (x *GetInferenceScoresUntilBlockResponse) Reset() {
	*x = GetInferenceScoresUntilBlockResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[123]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInferenceScoresUntilBlockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInferenceScoresUntilBlockResponse) ProtoMessage() {}

// Deprecated: Use GetInferenceScoresUntilBlockResponse.ProtoReflect.Descriptor instead.
func (*GetInferenceScoresUntilBlockResponse) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{123}
}

func (x *GetInferenceScoresUntilBlockResponse) GetScores() []*v3.Score {
	if x != nil {
		return x.Scores
	}
	return nil
}

type GetPreviousTopicQuantileForecasterScoreEmaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId uint64 `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
}

func (x *GetPreviousTopicQuantileForecasterScoreEmaRequest) Reset() {
	*x = GetPreviousTopicQuantileForecasterScoreEmaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[124]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPreviousTopicQuantileForecasterScoreEmaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPreviousTopicQuantileForecasterScoreEmaRequest) ProtoMessage() {}

// Deprecated: Use GetPreviousTopicQuantileForecasterScoreEmaRequest.ProtoReflect.Descriptor instead.
func (*GetPreviousTopicQuantileForecasterScoreEmaRequest) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{124}
}

func (x *GetPreviousTopicQuantileForecasterScoreEmaRequest) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

type GetPreviousTopicQuantileForecasterScoreEmaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *GetPreviousTopicQuantileForecasterScoreEmaResponse) Reset() {
	*x = GetPreviousTopicQuantileForecasterScoreEmaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[125]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPreviousTopicQuantileForecasterScoreEmaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPreviousTopicQuantileForecasterScoreEmaResponse) ProtoMessage() {}

// Deprecated: Use GetPreviousTopicQuantileForecasterScoreEmaResponse.ProtoReflect.Descriptor instead.
func (*GetPreviousTopicQuantileForecasterScoreEmaResponse) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{125}
}

func (x *GetPreviousTopicQuantileForecasterScoreEmaResponse) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type GetPreviousTopicQuantileInfererScoreEmaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId uint64 `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
}

func (x *GetPreviousTopicQuantileInfererScoreEmaRequest) Reset() {
	*x = GetPreviousTopicQuantileInfererScoreEmaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[126]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPreviousTopicQuantileInfererScoreEmaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPreviousTopicQuantileInfererScoreEmaRequest) ProtoMessage() {}

// Deprecated: Use GetPreviousTopicQuantileInfererScoreEmaRequest.ProtoReflect.Descriptor instead.
func (*GetPreviousTopicQuantileInfererScoreEmaRequest) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{126}
}

func (x *GetPreviousTopicQuantileInfererScoreEmaRequest) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

type GetPreviousTopicQuantileInfererScoreEmaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *GetPreviousTopicQuantileInfererScoreEmaResponse) Reset() {
	*x = GetPreviousTopicQuantileInfererScoreEmaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[127]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPreviousTopicQuantileInfererScoreEmaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPreviousTopicQuantileInfererScoreEmaResponse) ProtoMessage() {}

// Deprecated: Use GetPreviousTopicQuantileInfererScoreEmaResponse.ProtoReflect.Descriptor instead.
func (*GetPreviousTopicQuantileInfererScoreEmaResponse) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{127}
}

func (x *GetPreviousTopicQuantileInfererScoreEmaResponse) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type GetPreviousTopicQuantileReputerScoreEmaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId uint64 `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
}

func (x *GetPreviousTopicQuantileReputerScoreEmaRequest) Reset() {
	*x = GetPreviousTopicQuantileReputerScoreEmaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[128]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPreviousTopicQuantileReputerScoreEmaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPreviousTopicQuantileReputerScoreEmaRequest) ProtoMessage() {}

// Deprecated: Use GetPreviousTopicQuantileReputerScoreEmaRequest.ProtoReflect.Descriptor instead.
func (*GetPreviousTopicQuantileReputerScoreEmaRequest) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{128}
}

func (x *GetPreviousTopicQuantileReputerScoreEmaRequest) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

type GetPreviousTopicQuantileReputerScoreEmaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *GetPreviousTopicQuantileReputerScoreEmaResponse) Reset() {
	*x = GetPreviousTopicQuantileReputerScoreEmaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[129]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPreviousTopicQuantileReputerScoreEmaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPreviousTopicQuantileReputerScoreEmaResponse) ProtoMessage() {}

// Deprecated: Use GetPreviousTopicQuantileReputerScoreEmaResponse.ProtoReflect.Descriptor instead.
func (*GetPreviousTopicQuantileReputerScoreEmaResponse) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{129}
}

func (x *GetPreviousTopicQuantileReputerScoreEmaResponse) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type GetWorkerInferenceScoresAtBlockRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId     uint64 `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	BlockHeight int64  `protobuf:"varint,2,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
}

func (x *GetWorkerInferenceScoresAtBlockRequest) Reset() {
	*x = GetWorkerInferenceScoresAtBlockRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[130]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWorkerInferenceScoresAtBlockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkerInferenceScoresAtBlockRequest) ProtoMessage() {}

// Deprecated: Use GetWorkerInferenceScoresAtBlockRequest.ProtoReflect.Descriptor instead.
func (*GetWorkerInferenceScoresAtBlockRequest) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{130}
}

func (x *GetWorkerInferenceScoresAtBlockRequest) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

func (x *GetWorkerInferenceScoresAtBlockRequest) GetBlockHeight() int64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

type GetWorkerInferenceScoresAtBlockResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scores *v3.Scores `protobuf:"bytes,1,opt,name=scores,proto3" json:"scores,omitempty"`
}

func (x *GetWorkerInferenceScoresAtBlockResponse) Reset() {
	*x = GetWorkerInferenceScoresAtBlockResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[131]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWorkerInferenceScoresAtBlockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkerInferenceScoresAtBlockResponse) ProtoMessage() {}

// Deprecated: Use GetWorkerInferenceScoresAtBlockResponse.ProtoReflect.Descriptor instead.
func (*GetWorkerInferenceScoresAtBlockResponse) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{131}
}

func (x *GetWorkerInferenceScoresAtBlockResponse) GetScores() *v3.Scores {
	if x != nil {
		return x.Scores
	}
	return nil
}

type GetCurrentLowestInfererScoreRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId uint64 `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
}

func (x *GetCurrentLowestInfererScoreRequest) Reset() {
	*x = GetCurrentLowestInfererScoreRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[132]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCurrentLowestInfererScoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCurrentLowestInfererScoreRequest) ProtoMessage() {}

// Deprecated: Use GetCurrentLowestInfererScoreRequest.ProtoReflect.Descriptor instead.
func (*GetCurrentLowestInfererScoreRequest) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{132}
}

func (x *GetCurrentLowestInfererScoreRequest) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

type GetCurrentLowestInfererScoreResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Score *v3.Score `protobuf:"bytes,1,opt,name=score,proto3" json:"score,omitempty"`
}

func (x *GetCurrentLowestInfererScoreResponse) Reset() {
	*x = GetCurrentLowestInfererScoreResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[133]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCurrentLowestInfererScoreResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCurrentLowestInfererScoreResponse) ProtoMessage() {}

// Deprecated: Use GetCurrentLowestInfererScoreResponse.ProtoReflect.Descriptor instead.
func (*GetCurrentLowestInfererScoreResponse) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{133}
}

func (x *GetCurrentLowestInfererScoreResponse) GetScore() *v3.Score {
	if x != nil {
		return x.Score
	}
	return nil
}

type GetForecastScoresUntilBlockRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId     uint64 `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	BlockHeight int64  `protobuf:"varint,2,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
}

func (x *GetForecastScoresUntilBlockRequest) Reset() {
	*x = GetForecastScoresUntilBlockRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[134]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetForecastScoresUntilBlockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetForecastScoresUntilBlockRequest) ProtoMessage() {}

// Deprecated: Use GetForecastScoresUntilBlockRequest.ProtoReflect.Descriptor instead.
func (*GetForecastScoresUntilBlockRequest) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{134}
}

func (x *GetForecastScoresUntilBlockRequest) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

func (x *GetForecastScoresUntilBlockRequest) GetBlockHeight() int64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

type GetForecastScoresUntilBlockResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scores []*v3.Score `protobuf:"bytes,1,rep,name=scores,proto3" json:"scores,omitempty"`
}

func (x *GetForecastScoresUntilBlockResponse) Reset() {
	*x = GetForecastScoresUntilBlockResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[135]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetForecastScoresUntilBlockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetForecastScoresUntilBlockResponse) ProtoMessage() {}

// Deprecated: Use GetForecastScoresUntilBlockResponse.ProtoReflect.Descriptor instead.
func (*GetForecastScoresUntilBlockResponse) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{135}
}

func (x *GetForecastScoresUntilBlockResponse) GetScores() []*v3.Score {
	if x != nil {
		return x.Scores
	}
	return nil
}

type GetWorkerForecastScoresAtBlockRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId     uint64 `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	BlockHeight int64  `protobuf:"varint,2,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
}

func (x *GetWorkerForecastScoresAtBlockRequest) Reset() {
	*x = GetWorkerForecastScoresAtBlockRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[136]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWorkerForecastScoresAtBlockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkerForecastScoresAtBlockRequest) ProtoMessage() {}

// Deprecated: Use GetWorkerForecastScoresAtBlockRequest.ProtoReflect.Descriptor instead.
func (*GetWorkerForecastScoresAtBlockRequest) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{136}
}

func (x *GetWorkerForecastScoresAtBlockRequest) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

func (x *GetWorkerForecastScoresAtBlockRequest) GetBlockHeight() int64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

type GetWorkerForecastScoresAtBlockResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scores *v3.Scores `protobuf:"bytes,1,opt,name=scores,proto3" json:"scores,omitempty"`
}

func (x *GetWorkerForecastScoresAtBlockResponse) Reset() {
	*x = GetWorkerForecastScoresAtBlockResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[137]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWorkerForecastScoresAtBlockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkerForecastScoresAtBlockResponse) ProtoMessage() {}

// Deprecated: Use GetWorkerForecastScoresAtBlockResponse.ProtoReflect.Descriptor instead.
func (*GetWorkerForecastScoresAtBlockResponse) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{137}
}

func (x *GetWorkerForecastScoresAtBlockResponse) GetScores() *v3.Scores {
	if x != nil {
		return x.Scores
	}
	return nil
}

type GetCurrentLowestForecasterScoreRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId uint64 `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
}

func (x *GetCurrentLowestForecasterScoreRequest) Reset() {
	*x = GetCurrentLowestForecasterScoreRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[138]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCurrentLowestForecasterScoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCurrentLowestForecasterScoreRequest) ProtoMessage() {}

// Deprecated: Use GetCurrentLowestForecasterScoreRequest.ProtoReflect.Descriptor instead.
func (*GetCurrentLowestForecasterScoreRequest) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{138}
}

func (x *GetCurrentLowestForecasterScoreRequest) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

type GetCurrentLowestForecasterScoreResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Score *v3.Score `protobuf:"bytes,1,opt,name=score,proto3" json:"score,omitempty"`
}

func (x *GetCurrentLowestForecasterScoreResponse) Reset() {
	*x = GetCurrentLowestForecasterScoreResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[139]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCurrentLowestForecasterScoreResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCurrentLowestForecasterScoreResponse) ProtoMessage() {}

// Deprecated: Use GetCurrentLowestForecasterScoreResponse.ProtoReflect.Descriptor instead.
func (*GetCurrentLowestForecasterScoreResponse) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{139}
}

func (x *GetCurrentLowestForecasterScoreResponse) GetScore() *v3.Score {
	if x != nil {
		return x.Score
	}
	return nil
}

type GetReputersScoresAtBlockRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId     uint64 `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	BlockHeight int64  `protobuf:"varint,2,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
}

func (x *GetReputersScoresAtBlockRequest) Reset() {
	*x = GetReputersScoresAtBlockRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[140]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReputersScoresAtBlockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReputersScoresAtBlockRequest) ProtoMessage() {}

// Deprecated: Use GetReputersScoresAtBlockRequest.ProtoReflect.Descriptor instead.
func (*GetReputersScoresAtBlockRequest) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{140}
}

func (x *GetReputersScoresAtBlockRequest) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

func (x *GetReputersScoresAtBlockRequest) GetBlockHeight() int64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

type GetReputersScoresAtBlockResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scores *v3.Scores `protobuf:"bytes,1,opt,name=scores,proto3" json:"scores,omitempty"`
}

func (x *GetReputersScoresAtBlockResponse) Reset() {
	*x = GetReputersScoresAtBlockResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[141]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReputersScoresAtBlockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReputersScoresAtBlockResponse) ProtoMessage() {}

// Deprecated: Use GetReputersScoresAtBlockResponse.ProtoReflect.Descriptor instead.
func (*GetReputersScoresAtBlockResponse) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{141}
}

func (x *GetReputersScoresAtBlockResponse) GetScores() *v3.Scores {
	if x != nil {
		return x.Scores
	}
	return nil
}

type GetCurrentLowestReputerScoreRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId uint64 `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
}

func (x *GetCurrentLowestReputerScoreRequest) Reset() {
	*x = GetCurrentLowestReputerScoreRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[142]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCurrentLowestReputerScoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCurrentLowestReputerScoreRequest) ProtoMessage() {}

// Deprecated: Use GetCurrentLowestReputerScoreRequest.ProtoReflect.Descriptor instead.
func (*GetCurrentLowestReputerScoreRequest) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{142}
}

func (x *GetCurrentLowestReputerScoreRequest) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

type GetCurrentLowestReputerScoreResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Score *v3.Score `protobuf:"bytes,1,opt,name=score,proto3" json:"score,omitempty"`
}

func (x *GetCurrentLowestReputerScoreResponse) Reset() {
	*x = GetCurrentLowestReputerScoreResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[143]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCurrentLowestReputerScoreResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCurrentLowestReputerScoreResponse) ProtoMessage() {}

// Deprecated: Use GetCurrentLowestReputerScoreResponse.ProtoReflect.Descriptor instead.
func (*GetCurrentLowestReputerScoreResponse) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{143}
}

func (x *GetCurrentLowestReputerScoreResponse) GetScore() *v3.Score {
	if x != nil {
		return x.Score
	}
	return nil
}

type GetListeningCoefficientRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId uint64 `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	Reputer string `protobuf:"bytes,2,opt,name=reputer,proto3" json:"reputer,omitempty"`
}

func (x *GetListeningCoefficientRequest) Reset() {
	*x = GetListeningCoefficientRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[144]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListeningCoefficientRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListeningCoefficientRequest) ProtoMessage() {}

// Deprecated: Use GetListeningCoefficientRequest.ProtoReflect.Descriptor instead.
func (*GetListeningCoefficientRequest) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{144}
}

func (x *GetListeningCoefficientRequest) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

func (x *GetListeningCoefficientRequest) GetReputer() string {
	if x != nil {
		return x.Reputer
	}
	return ""
}

type GetListeningCoefficientResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListeningCoefficient *v3.ListeningCoefficient `protobuf:"bytes,1,opt,name=listening_coefficient,json=listeningCoefficient,proto3" json:"listening_coefficient,omitempty"`
}

func (x *GetListeningCoefficientResponse) Reset() {
	*x = GetListeningCoefficientResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[145]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListeningCoefficientResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListeningCoefficientResponse) ProtoMessage() {}

// Deprecated: Use GetListeningCoefficientResponse.ProtoReflect.Descriptor instead.
func (*GetListeningCoefficientResponse) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{145}
}

func (x *GetListeningCoefficientResponse) GetListeningCoefficient() *v3.ListeningCoefficient {
	if x != nil {
		return x.ListeningCoefficient
	}
	return nil
}

type GetPreviousReputerRewardFractionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId uint64 `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	Reputer string `protobuf:"bytes,2,opt,name=reputer,proto3" json:"reputer,omitempty"`
}

func (x *GetPreviousReputerRewardFractionRequest) Reset() {
	*x = GetPreviousReputerRewardFractionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[146]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPreviousReputerRewardFractionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPreviousReputerRewardFractionRequest) ProtoMessage() {}

// Deprecated: Use GetPreviousReputerRewardFractionRequest.ProtoReflect.Descriptor instead.
func (*GetPreviousReputerRewardFractionRequest) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{146}
}

func (x *GetPreviousReputerRewardFractionRequest) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

func (x *GetPreviousReputerRewardFractionRequest) GetReputer() string {
	if x != nil {
		return x.Reputer
	}
	return ""
}

type GetPreviousReputerRewardFractionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RewardFraction string `protobuf:"bytes,1,opt,name=reward_fraction,json=rewardFraction,proto3" json:"reward_fraction,omitempty"`
	NotFound       bool   `protobuf:"varint,2,opt,name=not_found,json=notFound,proto3" json:"not_found,omitempty"`
}

func (x *GetPreviousReputerRewardFractionResponse) Reset() {
	*x = GetPreviousReputerRewardFractionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[147]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPreviousReputerRewardFractionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPreviousReputerRewardFractionResponse) ProtoMessage() {}

// Deprecated: Use GetPreviousReputerRewardFractionResponse.ProtoReflect.Descriptor instead.
func (*GetPreviousReputerRewardFractionResponse) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{147}
}

func (x *GetPreviousReputerRewardFractionResponse) GetRewardFraction() string {
	if x != nil {
		return x.RewardFraction
	}
	return ""
}

func (x *GetPreviousReputerRewardFractionResponse) GetNotFound() bool {
	if x != nil {
		return x.NotFound
	}
	return false
}

type GetPreviousInferenceRewardFractionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId uint64 `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	Worker  string `protobuf:"bytes,2,opt,name=worker,proto3" json:"worker,omitempty"`
}

func (x *GetPreviousInferenceRewardFractionRequest) Reset() {
	*x = GetPreviousInferenceRewardFractionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[148]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPreviousInferenceRewardFractionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPreviousInferenceRewardFractionRequest) ProtoMessage() {}

// Deprecated: Use GetPreviousInferenceRewardFractionRequest.ProtoReflect.Descriptor instead.
func (*GetPreviousInferenceRewardFractionRequest) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{148}
}

func (x *GetPreviousInferenceRewardFractionRequest) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

func (x *GetPreviousInferenceRewardFractionRequest) GetWorker() string {
	if x != nil {
		return x.Worker
	}
	return ""
}

type GetPreviousInferenceRewardFractionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RewardFraction string `protobuf:"bytes,1,opt,name=reward_fraction,json=rewardFraction,proto3" json:"reward_fraction,omitempty"`
	NotFound       bool   `protobuf:"varint,2,opt,name=not_found,json=notFound,proto3" json:"not_found,omitempty"`
}

func (x *GetPreviousInferenceRewardFractionResponse) Reset() {
	*x = GetPreviousInferenceRewardFractionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[149]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPreviousInferenceRewardFractionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPreviousInferenceRewardFractionResponse) ProtoMessage() {}

// Deprecated: Use GetPreviousInferenceRewardFractionResponse.ProtoReflect.Descriptor instead.
func (*GetPreviousInferenceRewardFractionResponse) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{149}
}

func (x *GetPreviousInferenceRewardFractionResponse) GetRewardFraction() string {
	if x != nil {
		return x.RewardFraction
	}
	return ""
}

func (x *GetPreviousInferenceRewardFractionResponse) GetNotFound() bool {
	if x != nil {
		return x.NotFound
	}
	return false
}

type GetPreviousForecastRewardFractionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId uint64 `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	Worker  string `protobuf:"bytes,2,opt,name=worker,proto3" json:"worker,omitempty"`
}

func (x *GetPreviousForecastRewardFractionRequest) Reset() {
	*x = GetPreviousForecastRewardFractionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[150]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPreviousForecastRewardFractionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPreviousForecastRewardFractionRequest) ProtoMessage() {}

// Deprecated: Use GetPreviousForecastRewardFractionRequest.ProtoReflect.Descriptor instead.
func (*GetPreviousForecastRewardFractionRequest) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{150}
}

func (x *GetPreviousForecastRewardFractionRequest) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

func (x *GetPreviousForecastRewardFractionRequest) GetWorker() string {
	if x != nil {
		return x.Worker
	}
	return ""
}

type GetPreviousForecastRewardFractionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RewardFraction string `protobuf:"bytes,1,opt,name=reward_fraction,json=rewardFraction,proto3" json:"reward_fraction,omitempty"`
	NotFound       bool   `protobuf:"varint,2,opt,name=not_found,json=notFound,proto3" json:"not_found,omitempty"`
}

func (x *GetPreviousForecastRewardFractionResponse) Reset() {
	*x = GetPreviousForecastRewardFractionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[151]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPreviousForecastRewardFractionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPreviousForecastRewardFractionResponse) ProtoMessage() {}

// Deprecated: Use GetPreviousForecastRewardFractionResponse.ProtoReflect.Descriptor instead.
func (*GetPreviousForecastRewardFractionResponse) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{151}
}

func (x *GetPreviousForecastRewardFractionResponse) GetRewardFraction() string {
	if x != nil {
		return x.RewardFraction
	}
	return ""
}

func (x *GetPreviousForecastRewardFractionResponse) GetNotFound() bool {
	if x != nil {
		return x.NotFound
	}
	return false
}

type GetPreviousPercentageRewardToStakedReputersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetPreviousPercentageRewardToStakedReputersRequest) Reset() {
	*x = GetPreviousPercentageRewardToStakedReputersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[152]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPreviousPercentageRewardToStakedReputersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPreviousPercentageRewardToStakedReputersRequest) ProtoMessage() {}

// Deprecated: Use GetPreviousPercentageRewardToStakedReputersRequest.ProtoReflect.Descriptor instead.
func (*GetPreviousPercentageRewardToStakedReputersRequest) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{152}
}

type GetPreviousPercentageRewardToStakedReputersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PercentageReward string `protobuf:"bytes,1,opt,name=percentage_reward,json=percentageReward,proto3" json:"percentage_reward,omitempty"`
}

func (x *GetPreviousPercentageRewardToStakedReputersResponse) Reset() {
	*x = GetPreviousPercentageRewardToStakedReputersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[153]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPreviousPercentageRewardToStakedReputersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPreviousPercentageRewardToStakedReputersResponse) ProtoMessage() {}

// Deprecated: Use GetPreviousPercentageRewardToStakedReputersResponse.ProtoReflect.Descriptor instead.
func (*GetPreviousPercentageRewardToStakedReputersResponse) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{153}
}

func (x *GetPreviousPercentageRewardToStakedReputersResponse) GetPercentageReward() string {
	if x != nil {
		return x.PercentageReward
	}
	return ""
}

type GetTotalRewardToDistributeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetTotalRewardToDistributeRequest) Reset() {
	*x = GetTotalRewardToDistributeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[154]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTotalRewardToDistributeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTotalRewardToDistributeRequest) ProtoMessage() {}

// Deprecated: Use GetTotalRewardToDistributeRequest.ProtoReflect.Descriptor instead.
func (*GetTotalRewardToDistributeRequest) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{154}
}

type GetTotalRewardToDistributeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalReward string `protobuf:"bytes,1,opt,name=total_reward,json=totalReward,proto3" json:"total_reward,omitempty"`
}

func (x *GetTotalRewardToDistributeResponse) Reset() {
	*x = GetTotalRewardToDistributeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[155]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTotalRewardToDistributeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTotalRewardToDistributeResponse) ProtoMessage() {}

// Deprecated: Use GetTotalRewardToDistributeResponse.ProtoReflect.Descriptor instead.
func (*GetTotalRewardToDistributeResponse) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{155}
}

func (x *GetTotalRewardToDistributeResponse) GetTotalReward() string {
	if x != nil {
		return x.TotalReward
	}
	return ""
}

type GetActiveTopicsAtBlockRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockHeight int64 `protobuf:"varint,1,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
}

func (x *GetActiveTopicsAtBlockRequest) Reset() {
	*x = GetActiveTopicsAtBlockRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[156]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetActiveTopicsAtBlockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActiveTopicsAtBlockRequest) ProtoMessage() {}

// Deprecated: Use GetActiveTopicsAtBlockRequest.ProtoReflect.Descriptor instead.
func (*GetActiveTopicsAtBlockRequest) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{156}
}

func (x *GetActiveTopicsAtBlockRequest) GetBlockHeight() int64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

type GetActiveTopicsAtBlockResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Topics     []*v3.Topic                        `protobuf:"bytes,1,rep,name=topics,proto3" json:"topics,omitempty"`
	Pagination *v3.SimpleCursorPaginationResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *GetActiveTopicsAtBlockResponse) Reset() {
	*x = GetActiveTopicsAtBlockResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[157]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetActiveTopicsAtBlockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActiveTopicsAtBlockResponse) ProtoMessage() {}

// Deprecated: Use GetActiveTopicsAtBlockResponse.ProtoReflect.Descriptor instead.
func (*GetActiveTopicsAtBlockResponse) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{157}
}

func (x *GetActiveTopicsAtBlockResponse) GetTopics() []*v3.Topic {
	if x != nil {
		return x.Topics
	}
	return nil
}

func (x *GetActiveTopicsAtBlockResponse) GetPagination() *v3.SimpleCursorPaginationResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type GetNextChurningBlockByTopicIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId uint64 `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
}

func (x *GetNextChurningBlockByTopicIdRequest) Reset() {
	*x = GetNextChurningBlockByTopicIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[158]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNextChurningBlockByTopicIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNextChurningBlockByTopicIdRequest) ProtoMessage() {}

// Deprecated: Use GetNextChurningBlockByTopicIdRequest.ProtoReflect.Descriptor instead.
func (*GetNextChurningBlockByTopicIdRequest) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{158}
}

func (x *GetNextChurningBlockByTopicIdRequest) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

type GetNextChurningBlockByTopicIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockHeight int64 `protobuf:"varint,1,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
}

func (x *GetNextChurningBlockByTopicIdResponse) Reset() {
	*x = GetNextChurningBlockByTopicIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[159]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNextChurningBlockByTopicIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNextChurningBlockByTopicIdResponse) ProtoMessage() {}

// Deprecated: Use GetNextChurningBlockByTopicIdResponse.ProtoReflect.Descriptor instead.
func (*GetNextChurningBlockByTopicIdResponse) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{159}
}

func (x *GetNextChurningBlockByTopicIdResponse) GetBlockHeight() int64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

type GetActiveReputersForTopicRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId uint64 `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
}

func (x *GetActiveReputersForTopicRequest) Reset() {
	*x = GetActiveReputersForTopicRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[160]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetActiveReputersForTopicRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActiveReputersForTopicRequest) ProtoMessage() {}

// Deprecated: Use GetActiveReputersForTopicRequest.ProtoReflect.Descriptor instead.
func (*GetActiveReputersForTopicRequest) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{160}
}

func (x *GetActiveReputersForTopicRequest) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

type GetActiveReputersForTopicResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reputers []string `protobuf:"bytes,1,rep,name=reputers,proto3" json:"reputers,omitempty"`
}

func (x *GetActiveReputersForTopicResponse) Reset() {
	*x = GetActiveReputersForTopicResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[161]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetActiveReputersForTopicResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActiveReputersForTopicResponse) ProtoMessage() {}

// Deprecated: Use GetActiveReputersForTopicResponse.ProtoReflect.Descriptor instead.
func (*GetActiveReputersForTopicResponse) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{161}
}

func (x *GetActiveReputersForTopicResponse) GetReputers() []string {
	if x != nil {
		return x.Reputers
	}
	return nil
}

type GetActiveForecastersForTopicRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId uint64 `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
}

func (x *GetActiveForecastersForTopicRequest) Reset() {
	*x = GetActiveForecastersForTopicRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[162]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetActiveForecastersForTopicRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActiveForecastersForTopicRequest) ProtoMessage() {}

// Deprecated: Use GetActiveForecastersForTopicRequest.ProtoReflect.Descriptor instead.
func (*GetActiveForecastersForTopicRequest) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{162}
}

func (x *GetActiveForecastersForTopicRequest) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

type GetActiveForecastersForTopicResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Forecasters []string `protobuf:"bytes,1,rep,name=forecasters,proto3" json:"forecasters,omitempty"`
}

func (x *GetActiveForecastersForTopicResponse) Reset() {
	*x = GetActiveForecastersForTopicResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[163]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetActiveForecastersForTopicResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActiveForecastersForTopicResponse) ProtoMessage() {}

// Deprecated: Use GetActiveForecastersForTopicResponse.ProtoReflect.Descriptor instead.
func (*GetActiveForecastersForTopicResponse) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{163}
}

func (x *GetActiveForecastersForTopicResponse) GetForecasters() []string {
	if x != nil {
		return x.Forecasters
	}
	return nil
}

type GetActiveInferersForTopicRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId uint64 `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
}

func (x *GetActiveInferersForTopicRequest) Reset() {
	*x = GetActiveInferersForTopicRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[164]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetActiveInferersForTopicRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActiveInferersForTopicRequest) ProtoMessage() {}

// Deprecated: Use GetActiveInferersForTopicRequest.ProtoReflect.Descriptor instead.
func (*GetActiveInferersForTopicRequest) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{164}
}

func (x *GetActiveInferersForTopicRequest) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

type GetActiveInferersForTopicResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inferers []string `protobuf:"bytes,1,rep,name=inferers,proto3" json:"inferers,omitempty"`
}

func (x *GetActiveInferersForTopicResponse) Reset() {
	*x = GetActiveInferersForTopicResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_query_proto_msgTypes[165]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetActiveInferersForTopicResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActiveInferersForTopicResponse) ProtoMessage() {}

// Deprecated: Use GetActiveInferersForTopicResponse.ProtoReflect.Descriptor instead.
func (*GetActiveInferersForTopicResponse) Descriptor() ([]byte, []int) {
	return file_emissions_v5_query_proto_rawDescGZIP(), []int{165}
}

func (x *GetActiveInferersForTopicResponse) GetInferers() []string {
	if x != nil {
		return x.Inferers
	}
	return nil
}

var File_emissions_v5_query_proto protoreflect.FileDescriptor

var file_emissions_v5_query_proto_rawDesc = []byte{
	0x0a, 0x18, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x35, 0x2f, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x65, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x1a, 0x11, 0x61, 0x6d, 0x69, 0x6e, 0x6f, 0x2f,
	0x61, 0x6d, 0x69, 0x6e, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x63, 0x6f, 0x73,
	0x6d, 0x6f, 0x73, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76,
	0x33, 0x2f, 0x69, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x17, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x33, 0x2f,
	0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x65, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x33, 0x2f, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f,
	0x76, 0x33, 0x2f, 0x72, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x18, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x33, 0x2f, 0x73,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x65, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x33, 0x2f, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f,
	0x76, 0x33, 0x2f, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18,
	0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x33, 0x2f, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x33, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76,
	0x35, 0x2f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14,
	0x67, 0x6f, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x67, 0x6f, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x5e, 0x0a, 0x27, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e,
	0x66, 0x65, 0x72, 0x65, 0x72, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x49,
	0x6e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x6e, 0x66, 0x65,
	0x72, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x6e, 0x66, 0x65, 0x72,
	0x65, 0x72, 0x22, 0x40, 0x0a, 0x28, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e,
	0x66, 0x65, 0x72, 0x65, 0x72, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x49,
	0x6e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0x67, 0x0a, 0x2a, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x66, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x66, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x22, 0x43, 0x0a,
	0x2b, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x54,
	0x6f, 0x70, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0x5a, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x4e, 0x61, 0x69, 0x76, 0x65, 0x49, 0x6e,
	0x66, 0x65, 0x72, 0x65, 0x72, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x67, 0x72,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70,
	0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x6f, 0x70,
	0x69, 0x63, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x72, 0x22, 0x5e,
	0x0a, 0x24, 0x47, 0x65, 0x74, 0x4e, 0x61, 0x69, 0x76, 0x65, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x65,
	0x72, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x67, 0x72, 0x65, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x72, 0x65, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x76, 0x33, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x65,
	0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x72, 0x65, 0x67, 0x72, 0x65, 0x74, 0x22, 0x8a,
	0x01, 0x0a, 0x2b, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x65, 0x4f, 0x75, 0x74, 0x49, 0x6e, 0x66, 0x65,
	0x72, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x72, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x52, 0x65, 0x67, 0x72, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19,
	0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x6f, 0x6e, 0x65,
	0x5f, 0x6f, 0x75, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x6f, 0x6e, 0x65, 0x4f, 0x75, 0x74, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x65,
	0x72, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x69, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x72, 0x22, 0x66, 0x0a, 0x2c, 0x47,
	0x65, 0x74, 0x4f, 0x6e, 0x65, 0x4f, 0x75, 0x74, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x65, 0x72, 0x65, 0x72, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x67,
	0x72, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x06, 0x72,
	0x65, 0x67, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x33, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x72, 0x65, 0x67,
	0x72, 0x65, 0x74, 0x22, 0x93, 0x01, 0x0a, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x65, 0x4f, 0x75,
	0x74, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x67, 0x72, 0x65, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49,
	0x64, 0x12, 0x26, 0x0a, 0x0f, 0x6f, 0x6e, 0x65, 0x5f, 0x6f, 0x75, 0x74, 0x5f, 0x69, 0x6e, 0x66,
	0x65, 0x72, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6f, 0x6e, 0x65, 0x4f,
	0x75, 0x74, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x6f, 0x72,
	0x65, 0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66,
	0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x22, 0x69, 0x0a, 0x2f, 0x47, 0x65, 0x74,
	0x4f, 0x6e, 0x65, 0x4f, 0x75, 0x74, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x72, 0x46, 0x6f, 0x72,
	0x65, 0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65,
	0x67, 0x72, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x06,
	0x72, 0x65, 0x67, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x33, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x72, 0x65,
	0x67, 0x72, 0x65, 0x74, 0x22, 0x93, 0x01, 0x0a, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x65, 0x4f,
	0x75, 0x74, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x65,
	0x72, 0x65, 0x72, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x67, 0x72, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63,
	0x49, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x6f, 0x6e, 0x65, 0x5f, 0x6f, 0x75, 0x74, 0x5f, 0x66, 0x6f,
	0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x6f, 0x6e, 0x65, 0x4f, 0x75, 0x74, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x65, 0x72,
	0x12, 0x18, 0x0a, 0x07, 0x69, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x69, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x72, 0x22, 0x69, 0x0a, 0x2f, 0x47, 0x65,
	0x74, 0x4f, 0x6e, 0x65, 0x4f, 0x75, 0x74, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x72, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52,
	0x65, 0x67, 0x72, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a,
	0x06, 0x72, 0x65, 0x67, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x33, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x72,
	0x65, 0x67, 0x72, 0x65, 0x74, 0x22, 0x9c, 0x01, 0x0a, 0x31, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x65,
	0x4f, 0x75, 0x74, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x46, 0x6f, 0x72,
	0x65, 0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65,
	0x67, 0x72, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74,
	0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74,
	0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x6f, 0x6e, 0x65, 0x5f, 0x6f, 0x75,
	0x74, 0x5f, 0x66, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x6f, 0x6e, 0x65, 0x4f, 0x75, 0x74, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61,
	0x73, 0x74, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x6f, 0x72, 0x65, 0x63, 0x61,
	0x73, 0x74, 0x65, 0x72, 0x22, 0x6c, 0x0a, 0x32, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x65, 0x4f, 0x75,
	0x74, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x65, 0x63,
	0x61, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x67, 0x72,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x06, 0x72, 0x65,
	0x67, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x33, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x72, 0x65, 0x67, 0x72,
	0x65, 0x74, 0x22, 0x12, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x4c, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x06, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x65, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x42, 0x09, 0xc8, 0xde, 0x1f, 0x00, 0xa8, 0xe7, 0xb0, 0x2a, 0x01, 0x52, 0x06, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x22, 0x16, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x53, 0x74, 0x61, 0x6b, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x67, 0x0a, 0x15,
	0x47, 0x65, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x30, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x15, 0x63,
	0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73, 0x64, 0x6b, 0x2e, 0x69, 0x6f, 0x2f, 0x6d, 0x61, 0x74, 0x68,
	0x2e, 0x49, 0x6e, 0x74, 0xd2, 0xb4, 0x2d, 0x0a, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x49,
	0x6e, 0x74, 0xa8, 0xe7, 0xb0, 0x2a, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x3a,
	0x04, 0xe8, 0xa0, 0x1f, 0x01, 0x22, 0x54, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x75,
	0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x49, 0x6e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x22, 0x70, 0x0a, 0x1e, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x49, 0x6e,
	0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x30, 0xc8,
	0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x15, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73, 0x64, 0x6b,
	0x2e, 0x69, 0x6f, 0x2f, 0x6d, 0x61, 0x74, 0x68, 0x2e, 0x49, 0x6e, 0x74, 0xd2, 0xb4, 0x2d, 0x0a,
	0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0xa8, 0xe7, 0xb0, 0x2a, 0x01, 0x52,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x3a, 0x04, 0xe8, 0xa0, 0x1f, 0x01, 0x22, 0x5d, 0x0a,
	0x22, 0x47, 0x65, 0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x52, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x6b, 0x65, 0x49, 0x6e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65,
	0x73, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x22, 0x58, 0x0a, 0x23,
	0x47, 0x65, 0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x52, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x53,
	0x74, 0x61, 0x6b, 0x65, 0x49, 0x6e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x07, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x76, 0x33, 0x2e, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x22, 0x6d, 0x0a, 0x27, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61,
	0x6b, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x54,
	0x6f, 0x70, 0x69, 0x63, 0x49, 0x6e, 0x53, 0x65, 0x6c, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x70, 0x75,
	0x74, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f,
	0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x6f,
	0x70, 0x69, 0x63, 0x49, 0x64, 0x22, 0x7a, 0x0a, 0x28, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x6b,
	0x65, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x54, 0x6f,
	0x70, 0x69, 0x63, 0x49, 0x6e, 0x53, 0x65, 0x6c, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x48, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x30, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x15, 0x63, 0x6f, 0x73, 0x6d, 0x6f,
	0x73, 0x73, 0x64, 0x6b, 0x2e, 0x69, 0x6f, 0x2f, 0x6d, 0x61, 0x74, 0x68, 0x2e, 0x49, 0x6e, 0x74,
	0xd2, 0xb4, 0x2d, 0x0a, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0xa8, 0xe7,
	0xb0, 0x2a, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x3a, 0x04, 0xe8, 0xa0, 0x1f,
	0x01, 0x22, 0x6d, 0x0a, 0x27, 0x47, 0x65, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65,
	0x53, 0x74, 0x61, 0x6b, 0x65, 0x49, 0x6e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x6e, 0x52, 0x65,
	0x70, 0x75, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f,
	0x72, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64,
	0x22, 0x7a, 0x0a, 0x28, 0x47, 0x65, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x53,
	0x74, 0x61, 0x6b, 0x65, 0x49, 0x6e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x6e, 0x52, 0x65, 0x70,
	0x75, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x30, 0xc8, 0xde,
	0x1f, 0x00, 0xda, 0xde, 0x1f, 0x15, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73, 0x64, 0x6b, 0x2e,
	0x69, 0x6f, 0x2f, 0x6d, 0x61, 0x74, 0x68, 0x2e, 0x49, 0x6e, 0x74, 0xd2, 0xb4, 0x2d, 0x0a, 0x63,
	0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0xa8, 0xe7, 0xb0, 0x2a, 0x01, 0x52, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x3a, 0x04, 0xe8, 0xa0, 0x1f, 0x01, 0x22, 0x9f, 0x01, 0x0a,
	0x2c, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x44, 0x65, 0x6c,
	0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x6e, 0x52,
	0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a,
	0x11, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61,
	0x74, 0x6f, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65,
	0x70, 0x75, 0x74, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x22, 0x7f,
	0x0a, 0x2d, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x44, 0x65,
	0x6c, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x6e,
	0x52, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x48, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x30, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x15, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73,
	0x64, 0x6b, 0x2e, 0x69, 0x6f, 0x2f, 0x6d, 0x61, 0x74, 0x68, 0x2e, 0x49, 0x6e, 0x74, 0xd2, 0xb4,
	0x2d, 0x0a, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0xa8, 0xe7, 0xb0, 0x2a,
	0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x3a, 0x04, 0xe8, 0xa0, 0x1f, 0x01, 0x22,
	0x6d, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x44,
	0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x11, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61,
	0x74, 0x6f, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x22, 0x76,
	0x0a, 0x24, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x44, 0x65,
	0x6c, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x30, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x15,
	0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73, 0x64, 0x6b, 0x2e, 0x69, 0x6f, 0x2f, 0x6d, 0x61, 0x74,
	0x68, 0x2e, 0x49, 0x6e, 0x74, 0xd2, 0xb4, 0x2d, 0x0a, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e,
	0x49, 0x6e, 0x74, 0xa8, 0xe7, 0xb0, 0x2a, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x3a, 0x04, 0xe8, 0xa0, 0x1f, 0x01, 0x22, 0x31, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70,
	0x69, 0x63, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19,
	0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x22, 0x67, 0x0a, 0x15, 0x47, 0x65, 0x74,
	0x54, 0x6f, 0x70, 0x69, 0x63, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x48, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x30, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x15, 0x63, 0x6f, 0x73, 0x6d,
	0x6f, 0x73, 0x73, 0x64, 0x6b, 0x2e, 0x69, 0x6f, 0x2f, 0x6d, 0x61, 0x74, 0x68, 0x2e, 0x49, 0x6e,
	0x74, 0xd2, 0xb4, 0x2d, 0x0a, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0xa8,
	0xe7, 0xb0, 0x2a, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x3a, 0x04, 0xe8, 0xa0,
	0x1f, 0x01, 0x22, 0x62, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x4c, 0x6f, 0x73, 0x73, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x41, 0x74, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69,
	0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69,
	0x63, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x61, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x4c, 0x6f, 0x73, 0x73, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x41, 0x74,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a,
	0x0b, 0x6c, 0x6f, 0x73, 0x73, 0x5f, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76,
	0x33, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x0a, 0x6c,
	0x6f, 0x73, 0x73, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x22, 0x17, 0x0a, 0x15, 0x47, 0x65, 0x74,
	0x4e, 0x65, 0x78, 0x74, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x3c, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x78, 0x74, 0x54, 0x6f, 0x70,
	0x69, 0x63, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x0d,
	0x6e, 0x65, 0x78, 0x74, 0x5f, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0b, 0x6e, 0x65, 0x78, 0x74, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64,
	0x22, 0x2c, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x22, 0x82,
	0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76,
	0x33, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x16,
	0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x2b, 0x0a, 0x11, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x5f, 0x72, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x52, 0x65, 0x76, 0x65,
	0x6e, 0x75, 0x65, 0x22, 0x65, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x54, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4b, 0x0a,
	0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2b, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x33,
	0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x50, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0a,
	0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x94, 0x01, 0x0a, 0x17, 0x47,
	0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x06, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x76, 0x33, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x06, 0x74, 0x6f, 0x70,
	0x69, 0x63, 0x73, 0x12, 0x4c, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x33, 0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x43, 0x75, 0x72,
	0x73, 0x6f, 0x72, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x5b, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x73, 0x41, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x58,
	0x0a, 0x1c, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x41,
	0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38,
	0x0a, 0x0a, 0x69, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76,
	0x33, 0x2e, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x0a, 0x69, 0x6e,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x22, 0x3c, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x4c,
	0x61, 0x74, 0x65, 0x73, 0x74, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74,
	0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74,
	0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x22, 0x7f, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74,
	0x65, 0x73, 0x74, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x0a, 0x69, 0x6e,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x33, 0x2e, 0x49, 0x6e,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x0a, 0x69, 0x6e, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x5a, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x46, 0x6f,
	0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x73, 0x41, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64,
	0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x22, 0x54, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61,
	0x73, 0x74, 0x73, 0x41, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x35, 0x0a, 0x09, 0x66, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x76, 0x33, 0x2e, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x73, 0x52, 0x09,
	0x66, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x73, 0x22, 0x6c, 0x0a, 0x28, 0x47, 0x65, 0x74,
	0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x42, 0x79, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64,
	0x12, 0x25, 0x0a, 0x0e, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x6f, 0x0a, 0x29, 0x47, 0x65, 0x74, 0x57, 0x6f,
	0x72, 0x6b, 0x65, 0x72, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x42, 0x79, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x10, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x69,
	0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x33, 0x2e, 0x49, 0x6e,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x0f, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x49,
	0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x22, 0x46, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x57,
	0x6f, 0x72, 0x6b, 0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4a, 0x04,
	0x08, 0x01, 0x10, 0x02, 0x52, 0x0a, 0x6c, 0x69, 0x62, 0x70, 0x32, 0x70, 0x5f, 0x6b, 0x65, 0x79,
	0x22, 0x54, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x4e, 0x6f, 0x64,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a,
	0x09, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x33, 0x2e,
	0x4f, 0x66, 0x66, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x08, 0x6e, 0x6f,
	0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x47, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70,
	0x75, 0x74, 0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4a, 0x04, 0x08,
	0x01, 0x10, 0x02, 0x52, 0x0a, 0x6c, 0x69, 0x62, 0x70, 0x32, 0x70, 0x5f, 0x6b, 0x65, 0x79, 0x22,
	0x55, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x4e, 0x6f, 0x64,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a,
	0x09, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x33, 0x2e,
	0x4f, 0x66, 0x66, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x08, 0x6e, 0x6f,
	0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x9e, 0x01, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x4e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x41,
	0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x12, 0x3d, 0x0a, 0x1b, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x69, 0x6e,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x18, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x4c, 0x61, 0x73, 0x74, 0x49, 0x6e,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x4a, 0x04, 0x08, 0x03, 0x10, 0x04, 0x52, 0x18, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x6c, 0x61, 0x73, 0x74,
	0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x22, 0x3e, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x4c, 0x61,
	0x74, 0x65, 0x73, 0x74, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07,
	0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x22, 0x47, 0x0a, 0x2a, 0x47, 0x65, 0x74, 0x4c, 0x61,
	0x74, 0x65, 0x73, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64,
	0x22, 0x5f, 0x0a, 0x1f, 0x49, 0x73, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x4e, 0x6f, 0x6e, 0x63,
	0x65, 0x55, 0x6e, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x12, 0x21,
	0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x22, 0x61, 0x0a, 0x20, 0x49, 0x73, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x4e, 0x6f, 0x6e,
	0x63, 0x65, 0x55, 0x6e, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x1b, 0x69, 0x73, 0x5f, 0x77, 0x6f, 0x72, 0x6b,
	0x65, 0x72, 0x5f, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x5f, 0x75, 0x6e, 0x66, 0x75, 0x6c, 0x66, 0x69,
	0x6c, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x18, 0x69, 0x73, 0x57, 0x6f,
	0x72, 0x6b, 0x65, 0x72, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x55, 0x6e, 0x66, 0x75, 0x6c, 0x66, 0x69,
	0x6c, 0x6c, 0x65, 0x64, 0x22, 0x3f, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x55, 0x6e, 0x66, 0x75, 0x6c,
	0x66, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x4e, 0x6f, 0x6e,
	0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f,
	0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x6f,
	0x70, 0x69, 0x63, 0x49, 0x64, 0x22, 0x61, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x55, 0x6e, 0x66, 0x75,
	0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x4e, 0x6f,
	0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x06,
	0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x33, 0x2e, 0x52, 0x65, 0x70, 0x75,
	0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x73,
	0x52, 0x06, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x73, 0x22, 0x3e, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x55,
	0x6e, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72,
	0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x22, 0x52, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x55,
	0x6e, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72,
	0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c,
	0x0a, 0x06, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x33, 0x2e, 0x4e, 0x6f,
	0x6e, 0x63, 0x65, 0x73, 0x52, 0x06, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x73, 0x22, 0x56, 0x0a, 0x1e,
	0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x72, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x52, 0x65, 0x67, 0x72, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19,
	0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x63, 0x74,
	0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x74,
	0x6f, 0x72, 0x49, 0x64, 0x22, 0x59, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x65, 0x72,
	0x65, 0x72, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x67, 0x72, 0x65, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x72, 0x65,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x33, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x65, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x72, 0x65, 0x67, 0x72, 0x65, 0x74, 0x22,
	0x56, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x65, 0x72,
	0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x67, 0x72, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x22, 0x5c, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x46, 0x6f,
	0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52,
	0x65, 0x67, 0x72, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a,
	0x06, 0x72, 0x65, 0x67, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x33, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x72,
	0x65, 0x67, 0x72, 0x65, 0x74, 0x22, 0x7d, 0x0a, 0x26, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x65, 0x49,
	0x6e, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x52, 0x65, 0x67, 0x72, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x6f,
	0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x66, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x6e,
	0x66, 0x65, 0x72, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x6e, 0x66,
	0x65, 0x72, 0x65, 0x72, 0x22, 0x61, 0x0a, 0x27, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x65, 0x49, 0x6e,
	0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x52, 0x65, 0x67, 0x72, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x36, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x33, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x06, 0x72, 0x65, 0x67, 0x72, 0x65, 0x74, 0x22, 0x60, 0x0a, 0x20, 0x49, 0x73, 0x52, 0x65, 0x70,
	0x75, 0x74, 0x65, 0x72, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x55, 0x6e, 0x66, 0x75, 0x6c, 0x66, 0x69,
	0x6c, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74,
	0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74,
	0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f,
	0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x64, 0x0a, 0x21, 0x49, 0x73, 0x52,
	0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x55, 0x6e, 0x66, 0x75, 0x6c,
	0x66, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f,
	0x0a, 0x1c, 0x69, 0x73, 0x5f, 0x72, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x6f, 0x6e,
	0x63, 0x65, 0x5f, 0x75, 0x6e, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x19, 0x69, 0x73, 0x52, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x4e,
	0x6f, 0x6e, 0x63, 0x65, 0x55, 0x6e, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x22,
	0x6f, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x41, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x12, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x5f, 0x69, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76,
	0x33, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x11, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73,
	0x22, 0xf0, 0x04, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x4e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x12, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x5f, 0x69, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x76, 0x33, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x11,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x73, 0x12, 0x4b, 0x0a, 0x0f, 0x69, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x72, 0x5f, 0x77, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x33, 0x2e, 0x52, 0x65, 0x67, 0x72, 0x65, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x64, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x52, 0x0e,
	0x69, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x72, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x73, 0x12, 0x51,
	0x0a, 0x12, 0x66, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x77, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x33, 0x2e, 0x52, 0x65, 0x67, 0x72, 0x65, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x64, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x52, 0x11,
	0x66, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x73, 0x12, 0x34, 0x0a, 0x16, 0x69, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x14, 0x69, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x6c, 0x6f, 0x73, 0x73, 0x5f,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0f, 0x6c, 0x6f, 0x73, 0x73, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x12, 0x86, 0x01, 0x0a, 0x23, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x64, 0x65, 0x6e,
	0x63, 0x65, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x5f, 0x72, 0x61, 0x77, 0x5f,
	0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28,
	0x09, 0x42, 0x37, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x6c, 0x6c, 0x6f, 0x72, 0x61, 0x2d, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x61, 0x6c, 0x6c, 0x6f, 0x72, 0x61, 0x2d, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x2f, 0x6d, 0x61, 0x74, 0x68, 0x2e, 0x44, 0x65, 0x63, 0x52, 0x20, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x52, 0x61,
	0x77, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x75, 0x0a, 0x1a,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x76, 0x61, 0x6c, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09,
	0x42, 0x37, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x6c, 0x6c, 0x6f, 0x72, 0x61, 0x2d, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x2f, 0x61, 0x6c, 0x6c, 0x6f, 0x72, 0x61, 0x2d, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x2f, 0x6d, 0x61, 0x74, 0x68, 0x2e, 0x44, 0x65, 0x63, 0x52, 0x18, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x64, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x22, 0xf9, 0x04, 0x0a, 0x2b, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73,
	0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x12, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69,
	0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x33, 0x2e, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x11, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x4b, 0x0a,
	0x0f, 0x69, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x72, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x76, 0x33, 0x2e, 0x52, 0x65, 0x67, 0x72, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x72, 0x6d, 0x65, 0x64, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x52, 0x0e, 0x69, 0x6e, 0x66, 0x65,
	0x72, 0x65, 0x72, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x73, 0x12, 0x51, 0x0a, 0x12, 0x66, 0x6f,
	0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x76, 0x33, 0x2e, 0x52, 0x65, 0x67, 0x72, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x72, 0x6d, 0x65, 0x64, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x52, 0x11, 0x66, 0x6f, 0x72, 0x65,
	0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x73, 0x12, 0x34, 0x0a,
	0x16, 0x69, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x14, 0x69,
	0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x6c, 0x6f, 0x73, 0x73, 0x5f, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f,
	0x6c, 0x6f, 0x73, 0x73, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12,
	0x86, 0x01, 0x0a, 0x23, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x5f, 0x72, 0x61, 0x77, 0x5f, 0x70, 0x65, 0x72, 0x63,
	0x65, 0x6e, 0x74, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x42, 0x37, 0xc8,
	0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x61, 0x6c, 0x6c, 0x6f, 0x72, 0x61, 0x2d, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x2f, 0x61, 0x6c, 0x6c, 0x6f, 0x72, 0x61, 0x2d, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x6d, 0x61,
	0x74, 0x68, 0x2e, 0x44, 0x65, 0x63, 0x52, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x64, 0x65, 0x6e,
	0x63, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x52, 0x61, 0x77, 0x50, 0x65, 0x72,
	0x63, 0x65, 0x6e, 0x74, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x75, 0x0a, 0x1a, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x5f,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x42, 0x37, 0xc8, 0xde,
	0x1f, 0x00, 0xda, 0xde, 0x1f, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x61, 0x6c, 0x6c, 0x6f, 0x72, 0x61, 0x2d, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f,
	0x61, 0x6c, 0x6c, 0x6f, 0x72, 0x61, 0x2d, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x6d, 0x61, 0x74,
	0x68, 0x2e, 0x44, 0x65, 0x63, 0x52, 0x18, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x64, 0x65, 0x6e, 0x63,
	0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22,
	0x59, 0x0a, 0x22, 0x49, 0x73, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x65, 0x64, 0x49, 0x6e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x4a, 0x0a, 0x23, 0x49, 0x73,
	0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64,
	0x49, 0x6e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x73, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x22, 0x5a, 0x0a, 0x23, 0x49, 0x73, 0x52, 0x65, 0x70, 0x75,
	0x74, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x49, 0x6e, 0x54,
	0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x22, 0x4b, 0x0a, 0x24, 0x49, 0x73, 0x52, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x49, 0x6e, 0x54, 0x6f, 0x70, 0x69, 0x63,
	0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x73,
	0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0c, 0x69, 0x73, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x22,
	0x33, 0x0a, 0x17, 0x49, 0x73, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x22, 0x35, 0x0a, 0x18, 0x49, 0x73, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c,
	0x69, 0x73, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x22, 0x48, 0x0a, 0x23, 0x47,
	0x65, 0x74, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x61, 0x6c, 0x73, 0x55,
	0x70, 0x55, 0x6e, 0x74, 0x69, 0x6c, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x62, 0x0a, 0x24, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x6b,
	0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x61, 0x6c, 0x73, 0x55, 0x70, 0x55, 0x6e, 0x74, 0x69, 0x6c,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a,
	0x08, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x61, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x33, 0x2e, 0x53,
	0x74, 0x61, 0x6b, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x08, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x61, 0x6c, 0x73, 0x22, 0x50, 0x0a, 0x2b, 0x47, 0x65, 0x74,
	0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x61, 0x6c, 0x73, 0x55, 0x70, 0x55, 0x6e, 0x74, 0x69, 0x6c, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x72, 0x0a, 0x2c, 0x47,
	0x65, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x61, 0x6c, 0x73, 0x55, 0x70, 0x55, 0x6e, 0x74, 0x69, 0x6c, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x08, 0x72,
	0x65, 0x6d, 0x6f, 0x76, 0x61, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e,
	0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x33, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x67, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x61,
	0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x61, 0x6c, 0x73, 0x22,
	0x51, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x70, 0x75,
	0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x70, 0x75, 0x74,
	0x65, 0x72, 0x22, 0x57, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x38, 0x0a, 0x07, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76,
	0x33, 0x2e, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x61, 0x6c, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x07, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x61, 0x6c, 0x22, 0x77, 0x0a, 0x22, 0x47,
	0x65, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65,
	0x70, 0x75, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x70,
	0x75, 0x74, 0x65, 0x72, 0x22, 0x67, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x67,
	0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x61, 0x6c, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x07, 0x72,
	0x65, 0x6d, 0x6f, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x65,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x33, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x67, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x61, 0x6c,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x61, 0x6c, 0x22, 0x40, 0x0a,
	0x23, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x4c, 0x61, 0x73, 0x74, 0x57, 0x6f, 0x72,
	0x6b, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x22,
	0x6c, 0x0a, 0x24, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x4c, 0x61, 0x73, 0x74, 0x57,
	0x6f, 0x72, 0x6b, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x5f,
	0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x33, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x65, 0x64, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x4e, 0x6f, 0x6e, 0x63,
	0x65, 0x52, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x22, 0x41, 0x0a,
	0x24, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x4c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x70,
	0x75, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64,
	0x22, 0x6d, 0x0a, 0x25, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x4c, 0x61, 0x73, 0x74,
	0x52, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x0b, 0x6c, 0x61, 0x73,
	0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x33, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x65, 0x64, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x4e, 0x6f,
	0x6e, 0x63, 0x65, 0x52, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x22,
	0x37, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x22, 0x33, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x54,
	0x6f, 0x70, 0x69, 0x63, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x22, 0x63, 0x0a,
	0x23, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x4c, 0x6f, 0x73, 0x73, 0x42,
	0x75, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x41, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x12,
	0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x22, 0x6c, 0x0a, 0x24, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72,
	0x4c, 0x6f, 0x73, 0x73, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x41, 0x74, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x0c, 0x6c, 0x6f,
	0x73, 0x73, 0x5f, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x33, 0x2e,
	0x52, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x75, 0x6e, 0x64,
	0x6c, 0x65, 0x73, 0x52, 0x0b, 0x6c, 0x6f, 0x73, 0x73, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x73,
	0x22, 0x56, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x52, 0x65, 0x70, 0x75,
	0x74, 0x65, 0x72, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x72, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x72, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x22, 0x72, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x53,
	0x74, 0x61, 0x6b, 0x65, 0x52, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x41, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x09,
	0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x30, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x15, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73,
	0x64, 0x6b, 0x2e, 0x69, 0x6f, 0x2f, 0x6d, 0x61, 0x74, 0x68, 0x2e, 0x49, 0x6e, 0x74, 0xd2, 0xb4,
	0x2d, 0x0a, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0xa8, 0xe7, 0xb0, 0x2a,
	0x01, 0x52, 0x09, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x22, 0x73, 0x0a, 0x20,
	0x47, 0x65, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x6b, 0x65,
	0x50, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x64,
	0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x22, 0x67, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65,
	0x53, 0x74, 0x61, 0x6b, 0x65, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x0e, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61,
	0x74, 0x6f, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x33, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0d, 0x64, 0x65, 0x6c,
	0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x57, 0x0a, 0x22, 0x47, 0x65,
	0x74, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x55, 0x70,
	0x6f, 0x6e, 0x52, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x22, 0x6d, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61,
	0x74, 0x65, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x55, 0x70, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x75, 0x74,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x05, 0x73, 0x74,
	0x61, 0x6b, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x30, 0xc8, 0xde, 0x1f, 0x00, 0xda,
	0xde, 0x1f, 0x15, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73, 0x64, 0x6b, 0x2e, 0x69, 0x6f, 0x2f,
	0x6d, 0x61, 0x74, 0x68, 0x2e, 0x49, 0x6e, 0x74, 0xd2, 0xb4, 0x2d, 0x0a, 0x63, 0x6f, 0x73, 0x6d,
	0x6f, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0xa8, 0xe7, 0xb0, 0x2a, 0x01, 0x52, 0x05, 0x73, 0x74, 0x61,
	0x6b, 0x65, 0x22, 0x57, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x50, 0x65, 0x72, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x22, 0x86, 0x01, 0x0a, 0x21,
	0x47, 0x65, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x50, 0x65, 0x72, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x61, 0x0a, 0x10, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x70, 0x65, 0x72, 0x5f,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x37, 0xc8, 0xde, 0x1f,
	0x00, 0xda, 0xde, 0x1f, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x61, 0x6c, 0x6c, 0x6f, 0x72, 0x61, 0x2d, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x61,
	0x6c, 0x6c, 0x6f, 0x72, 0x61, 0x2d, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x6d, 0x61, 0x74, 0x68,
	0x2e, 0x44, 0x65, 0x63, 0x52, 0x0e, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x50, 0x65, 0x72, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x22, 0x61, 0x0a, 0x2a, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x6b, 0x65,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x61, 0x6c, 0x46, 0x6f, 0x72, 0x52, 0x65, 0x70, 0x75, 0x74, 0x65,
	0x72, 0x41, 0x6e, 0x64, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08,
	0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07,
	0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x22, 0x7b, 0x0a, 0x2b, 0x47, 0x65, 0x74, 0x53, 0x74,
	0x61, 0x6b, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x61, 0x6c, 0x46, 0x6f, 0x72, 0x52, 0x65, 0x70,
	0x75, 0x74, 0x65, 0x72, 0x41, 0x6e, 0x64, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x12, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x5f,
	0x72, 0x65, 0x6d, 0x6f, 0x76, 0x61, 0x6c, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76,
	0x33, 0x2e, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x61, 0x6c, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x10, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x61, 0x6c,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0x96, 0x01, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x6c, 0x65,
	0x67, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x61, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f,
	0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x6f,
	0x70, 0x69, 0x63, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74,
	0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61,
	0x74, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x22, 0x77, 0x0a,
	0x1f, 0x47, 0x65, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x6b,
	0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x54, 0x0a, 0x12, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x61,
	0x6c, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x65,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x33, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x67, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x61, 0x6c,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x10, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x3a, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x50, 0x72, 0x65,
	0x76, 0x69, 0x6f, 0x75, 0x73, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63,
	0x49, 0x64, 0x22, 0x8e, 0x01, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x65, 0x76, 0x69, 0x6f,
	0x75, 0x73, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x37, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x2f, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x6c, 0x6c, 0x6f, 0x72, 0x61,
	0x2d, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x61, 0x6c, 0x6c, 0x6f, 0x72, 0x61, 0x2d,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x6d, 0x61, 0x74, 0x68, 0x2e, 0x44, 0x65, 0x63, 0x52, 0x06,
	0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x6f, 0x74, 0x5f, 0x66, 0x6f,
	0x75, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x6e, 0x6f, 0x74, 0x46, 0x6f,
	0x75, 0x6e, 0x64, 0x22, 0x28, 0x0a, 0x26, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x53,
	0x75, 0x6d, 0x50, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x57,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x7a, 0x0a,
	0x27, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x75, 0x6d, 0x50, 0x72, 0x65, 0x76,
	0x69, 0x6f, 0x75, 0x73, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x37, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde,
	0x1f, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x6c, 0x6c,
	0x6f, 0x72, 0x61, 0x2d, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x61, 0x6c, 0x6c, 0x6f,
	0x72, 0x61, 0x2d, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x6d, 0x61, 0x74, 0x68, 0x2e, 0x44, 0x65,
	0x63, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x2f, 0x0a, 0x12, 0x54, 0x6f, 0x70,
	0x69, 0x63, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x22, 0x2d, 0x0a, 0x13, 0x54, 0x6f,
	0x70, 0x69, 0x63, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x78, 0x69, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x65, 0x78, 0x69, 0x73, 0x74, 0x73, 0x22, 0x31, 0x0a, 0x14, 0x49, 0x73, 0x54,
	0x6f, 0x70, 0x69, 0x63, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x22, 0x34, 0x0a, 0x15,
	0x49, 0x73, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x22, 0x36, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x46, 0x65,
	0x65, 0x52, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x22, 0x6f, 0x0a, 0x1a, 0x47, 0x65,
	0x74, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x46, 0x65, 0x65, 0x52, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x0b, 0x66, 0x65, 0x65, 0x5f,
	0x72, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x30, 0xc8,
	0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x15, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73, 0x64, 0x6b,
	0x2e, 0x69, 0x6f, 0x2f, 0x6d, 0x61, 0x74, 0x68, 0x2e, 0x49, 0x6e, 0x74, 0xd2, 0xb4, 0x2d, 0x0a,
	0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0xa8, 0xe7, 0xb0, 0x2a, 0x01, 0x52,
	0x0a, 0x66, 0x65, 0x65, 0x52, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x22, 0x50, 0x0a, 0x19, 0x47,
	0x65, 0x74, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x72, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x45, 0x6d,
	0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69,
	0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69,
	0x63, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x72, 0x22, 0x47, 0x0a,
	0x1a, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x72, 0x53, 0x63, 0x6f, 0x72, 0x65,
	0x45, 0x6d, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x05, 0x73,
	0x63, 0x6f, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x65, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x33, 0x2e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52,
	0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x22, 0x59, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x46, 0x6f, 0x72,
	0x65, 0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x45, 0x6d, 0x61, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49,
	0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x22, 0x4a, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x45, 0x6d, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x29, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x33,
	0x2e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x22, 0x50, 0x0a,
	0x19, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x53, 0x63, 0x6f, 0x72, 0x65,
	0x45, 0x6d, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f,
	0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x6f,
	0x70, 0x69, 0x63, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x22,
	0x47, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x45, 0x6d, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a,
	0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x65,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x33, 0x2e, 0x53, 0x63, 0x6f, 0x72,
	0x65, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x22, 0x63, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x49,
	0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x55, 0x6e,
	0x74, 0x69, 0x6c, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x53, 0x0a,
	0x24, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x73, 0x55, 0x6e, 0x74, 0x69, 0x6c, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x06, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x76, 0x33, 0x2e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x06, 0x73, 0x63, 0x6f, 0x72,
	0x65, 0x73, 0x22, 0x4e, 0x0a, 0x31, 0x47, 0x65, 0x74, 0x50, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75,
	0x73, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x6c, 0x65, 0x46, 0x6f,
	0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x45, 0x6d, 0x61,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63,
	0x49, 0x64, 0x22, 0x83, 0x01, 0x0a, 0x32, 0x47, 0x65, 0x74, 0x50, 0x72, 0x65, 0x76, 0x69, 0x6f,
	0x75, 0x73, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x6c, 0x65, 0x46,
	0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x45, 0x6d,
	0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x37, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde,
	0x1f, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x6c, 0x6c,
	0x6f, 0x72, 0x61, 0x2d, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x61, 0x6c, 0x6c, 0x6f,
	0x72, 0x61, 0x2d, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x6d, 0x61, 0x74, 0x68, 0x2e, 0x44, 0x65,
	0x63, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x4b, 0x0a, 0x2e, 0x47, 0x65, 0x74, 0x50,
	0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x51, 0x75, 0x61, 0x6e,
	0x74, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x72, 0x53, 0x63, 0x6f, 0x72, 0x65,
	0x45, 0x6d, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f,
	0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x6f,
	0x70, 0x69, 0x63, 0x49, 0x64, 0x22, 0x80, 0x01, 0x0a, 0x2f, 0x47, 0x65, 0x74, 0x50, 0x72, 0x65,
	0x76, 0x69, 0x6f, 0x75, 0x73, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69,
	0x6c, 0x65, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x72, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x45, 0x6d,
	0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x37, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde,
	0x1f, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x6c, 0x6c,
	0x6f, 0x72, 0x61, 0x2d, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x61, 0x6c, 0x6c, 0x6f,
	0x72, 0x61, 0x2d, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x6d, 0x61, 0x74, 0x68, 0x2e, 0x44, 0x65,
	0x63, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x4b, 0x0a, 0x2e, 0x47, 0x65, 0x74, 0x50,
	0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x51, 0x75, 0x61, 0x6e,
	0x74, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x53, 0x63, 0x6f, 0x72, 0x65,
	0x45, 0x6d, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f,
	0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x6f,
	0x70, 0x69, 0x63, 0x49, 0x64, 0x22, 0x80, 0x01, 0x0a, 0x2f, 0x47, 0x65, 0x74, 0x50, 0x72, 0x65,
	0x76, 0x69, 0x6f, 0x75, 0x73, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69,
	0x6c, 0x65, 0x52, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x45, 0x6d,
	0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x37, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde,
	0x1f, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x6c, 0x6c,
	0x6f, 0x72, 0x61, 0x2d, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x61, 0x6c, 0x6c, 0x6f,
	0x72, 0x61, 0x2d, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x6d, 0x61, 0x74, 0x68, 0x2e, 0x44, 0x65,
	0x63, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x66, 0x0a, 0x26, 0x47, 0x65, 0x74, 0x57,
	0x6f, 0x72, 0x6b, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x73, 0x41, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x12, 0x21, 0x0a,
	0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x22, 0x57, 0x0a, 0x27, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x41, 0x74, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x06, 0x73,
	0x63, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x65, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x33, 0x2e, 0x53, 0x63, 0x6f, 0x72, 0x65,
	0x73, 0x52, 0x06, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x22, 0x40, 0x0a, 0x23, 0x47, 0x65, 0x74,
	0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x77, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x66,
	0x65, 0x72, 0x65, 0x72, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x22, 0x51, 0x0a, 0x24, 0x47,
	0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x77, 0x65, 0x73, 0x74, 0x49,
	0x6e, 0x66, 0x65, 0x72, 0x65, 0x72, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76,
	0x33, 0x2e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x22, 0x62,
	0x0a, 0x22, 0x47, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x73, 0x55, 0x6e, 0x74, 0x69, 0x6c, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x12,
	0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x22, 0x52, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73,
	0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x55, 0x6e, 0x74, 0x69, 0x6c, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x06, 0x73, 0x63, 0x6f,
	0x72, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x65, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x33, 0x2e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x06,
	0x73, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x22, 0x65, 0x0a, 0x25, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72,
	0x6b, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65,
	0x73, 0x41, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x56, 0x0a,
	0x26, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61,
	0x73, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x41, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x06, 0x73, 0x63, 0x6f, 0x72, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x33, 0x2e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x52, 0x06, 0x73,
	0x63, 0x6f, 0x72, 0x65, 0x73, 0x22, 0x43, 0x0a, 0x26, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x77, 0x65, 0x73, 0x74, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x22, 0x54, 0x0a, 0x27, 0x47, 0x65,
	0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x77, 0x65, 0x73, 0x74, 0x46, 0x6f,
	0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x76, 0x33, 0x2e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65,
	0x22, 0x5f, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x73, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x73, 0x41, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x12, 0x21,
	0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x22, 0x50, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x73,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x41, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x06, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x76, 0x33, 0x2e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x52, 0x06, 0x73, 0x63, 0x6f,
	0x72, 0x65, 0x73, 0x22, 0x40, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x4c, 0x6f, 0x77, 0x65, 0x73, 0x74, 0x52, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f,
	0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x6f,
	0x70, 0x69, 0x63, 0x49, 0x64, 0x22, 0x51, 0x0a, 0x24, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x77, 0x65, 0x73, 0x74, 0x52, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a,
	0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x65,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x33, 0x2e, 0x53, 0x63, 0x6f, 0x72,
	0x65, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x22, 0x55, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x65, 0x66, 0x66, 0x69, 0x63, 0x69,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f,
	0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x6f,
	0x70, 0x69, 0x63, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x22,
	0x7a, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x43,
	0x6f, 0x65, 0x66, 0x66, 0x69, 0x63, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x57, 0x0a, 0x15, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x5f,
	0x63, 0x6f, 0x65, 0x66, 0x66, 0x69, 0x63, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x33,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x65, 0x66, 0x66, 0x69,
	0x63, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x14, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x69, 0x6e, 0x67,
	0x43, 0x6f, 0x65, 0x66, 0x66, 0x69, 0x63, 0x69, 0x65, 0x6e, 0x74, 0x22, 0x5e, 0x0a, 0x27, 0x47,
	0x65, 0x74, 0x50, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x52, 0x65, 0x70, 0x75, 0x74, 0x65,
	0x72, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x46, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x22, 0xa9, 0x01, 0x0a, 0x28,
	0x47, 0x65, 0x74, 0x50, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x52, 0x65, 0x70, 0x75, 0x74,
	0x65, 0x72, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x46, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x60, 0x0a, 0x0f, 0x72, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x5f, 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x37, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x6c, 0x6c, 0x6f, 0x72, 0x61, 0x2d, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x61, 0x6c, 0x6c, 0x6f, 0x72, 0x61, 0x2d, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x2f, 0x6d, 0x61, 0x74, 0x68, 0x2e, 0x44, 0x65, 0x63, 0x52, 0x0e, 0x72, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x46, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x6f,
	0x74, 0x5f, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x6e,
	0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x22, 0x5e, 0x0a, 0x29, 0x47, 0x65, 0x74, 0x50, 0x72,
	0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x46, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x22, 0xab, 0x01, 0x0a, 0x2a, 0x47, 0x65, 0x74, 0x50,
	0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x46, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x60, 0x0a, 0x0f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x5f, 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x37, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x6c, 0x6c, 0x6f, 0x72, 0x61, 0x2d, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x2f, 0x61, 0x6c, 0x6c, 0x6f, 0x72, 0x61, 0x2d, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f,
	0x6d, 0x61, 0x74, 0x68, 0x2e, 0x44, 0x65, 0x63, 0x52, 0x0e, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x46, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x6f, 0x74, 0x5f,
	0x66, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x6e, 0x6f, 0x74,
	0x46, 0x6f, 0x75, 0x6e, 0x64, 0x22, 0x5d, 0x0a, 0x28, 0x47, 0x65, 0x74, 0x50, 0x72, 0x65, 0x76,
	0x69, 0x6f, 0x75, 0x73, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x46, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x77, 0x6f,
	0x72, 0x6b, 0x65, 0x72, 0x22, 0xaa, 0x01, 0x0a, 0x29, 0x47, 0x65, 0x74, 0x50, 0x72, 0x65, 0x76,
	0x69, 0x6f, 0x75, 0x73, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x46, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x60, 0x0a, 0x0f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x66, 0x72, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x37, 0xc8, 0xde, 0x1f,
	0x00, 0xda, 0xde, 0x1f, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x61, 0x6c, 0x6c, 0x6f, 0x72, 0x61, 0x2d, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x61,
	0x6c, 0x6c, 0x6f, 0x72, 0x61, 0x2d, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x6d, 0x61, 0x74, 0x68,
	0x2e, 0x44, 0x65, 0x63, 0x52, 0x0e, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x46, 0x72, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x6f, 0x74, 0x5f, 0x66, 0x6f, 0x75, 0x6e,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x6e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e,
	0x64, 0x22, 0x34, 0x0a, 0x32, 0x47, 0x65, 0x74, 0x50, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73,
	0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x54, 0x6f, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x64, 0x52, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x9b, 0x01, 0x0a, 0x33, 0x47, 0x65, 0x74, 0x50,
	0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x54, 0x6f, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x64, 0x52,
	0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x64, 0x0a, 0x11, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x37, 0xc8, 0xde, 0x1f, 0x00,
	0xda, 0xde, 0x1f, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61,
	0x6c, 0x6c, 0x6f, 0x72, 0x61, 0x2d, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x61, 0x6c,
	0x6c, 0x6f, 0x72, 0x61, 0x2d, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x6d, 0x61, 0x74, 0x68, 0x2e,
	0x44, 0x65, 0x63, 0x52, 0x10, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x22, 0x23, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x74, 0x61,
	0x6c, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x54, 0x6f, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x80, 0x01, 0x0a, 0x22, 0x47,
	0x65, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x54, 0x6f, 0x44,
	0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x5a, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x37, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f,
	0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x6c, 0x6c, 0x6f,
	0x72, 0x61, 0x2d, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x61, 0x6c, 0x6c, 0x6f, 0x72,
	0x61, 0x2d, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x6d, 0x61, 0x74, 0x68, 0x2e, 0x44, 0x65, 0x63,
	0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x22, 0x42, 0x0a,
	0x1d, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x73,
	0x41, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21,
	0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x22, 0x9b, 0x01, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54,
	0x6f, 0x70, 0x69, 0x63, 0x73, 0x41, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x06, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x76, 0x33, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x06, 0x74, 0x6f, 0x70, 0x69, 0x63,
	0x73, 0x12, 0x4c, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x76, 0x33, 0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x43, 0x75, 0x72, 0x73, 0x6f,
	0x72, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x41, 0x0a, 0x24, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x78, 0x74, 0x43, 0x68, 0x75, 0x72, 0x6e, 0x69,
	0x6e, 0x67, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x42, 0x79, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63,
	0x49, 0x64, 0x22, 0x4a, 0x0a, 0x25, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x78, 0x74, 0x43, 0x68, 0x75,
	0x72, 0x6e, 0x69, 0x6e, 0x67, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x42, 0x79, 0x54, 0x6f, 0x70, 0x69,
	0x63, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x3d,
	0x0a, 0x20, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x52, 0x65, 0x70, 0x75, 0x74,
	0x65, 0x72, 0x73, 0x46, 0x6f, 0x72, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x22, 0x3f, 0x0a,
	0x21, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x52, 0x65, 0x70, 0x75, 0x74, 0x65,
	0x72, 0x73, 0x46, 0x6f, 0x72, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x73, 0x22, 0x40,
	0x0a, 0x23, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x46, 0x6f, 0x72, 0x65, 0x63,
	0x61, 0x73, 0x74, 0x65, 0x72, 0x73, 0x46, 0x6f, 0x72, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64,
	0x22, 0x48, 0x0a, 0x24, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x46, 0x6f, 0x72,
	0x65, 0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x73, 0x46, 0x6f, 0x72, 0x54, 0x6f, 0x70, 0x69, 0x63,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x66, 0x6f, 0x72, 0x65,
	0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x66,
	0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x73, 0x22, 0x3d, 0x0a, 0x20, 0x47, 0x65,
	0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x72, 0x73, 0x46,
	0x6f, 0x72, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19,
	0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x22, 0x3f, 0x0a, 0x21, 0x47, 0x65, 0x74,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x72, 0x73, 0x46, 0x6f,
	0x72, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x69, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x08, 0x69, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x72, 0x73, 0x32, 0xcb, 0x80, 0x01, 0x0a, 0x0c,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x6a, 0x0a, 0x09,
	0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x1e, 0x2e, 0x65, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x65, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x16, 0x12, 0x14, 0x2f, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76,
	0x35, 0x2f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x85, 0x01, 0x0a, 0x0e, 0x47, 0x65, 0x74,
	0x4e, 0x65, 0x78, 0x74, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x12, 0x23, 0x2e, 0x65, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x65,
	0x78, 0x74, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x24, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e,
	0x47, 0x65, 0x74, 0x4e, 0x65, 0x78, 0x74, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x28, 0x88, 0xe7, 0xb0, 0x2a, 0x01, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x1d, 0x12, 0x1b, 0x2f, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f,
	0x76, 0x35, 0x2f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64,
	0x12, 0x77, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x1d, 0x2e, 0x65,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65, 0x74, 0x54,
	0x6f, 0x70, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x65, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f,
	0x70, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2c, 0x88, 0xe7, 0xb0,
	0x2a, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x12, 0x1f, 0x2f, 0x65, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x35, 0x2f, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x2f, 0x7b,
	0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0xec, 0x01, 0x0a, 0x21, 0x47, 0x65,
	0x74, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x42, 0x79, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x12,
	0x36, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47,
	0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x49, 0x6e,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x42, 0x79, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72,
	0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x42,
	0x79, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x56, 0x88, 0xe7, 0xb0, 0x2a, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x4b, 0x12, 0x49, 0x2f,
	0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x35, 0x2f, 0x74, 0x6f, 0x70,
	0x69, 0x63, 0x73, 0x2f, 0x7b, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x77,
	0x6f, 0x72, 0x6b, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x7d, 0x2f, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x69,
	0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0xae, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74,
	0x49, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x41, 0x74, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x12, 0x29, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35,
	0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x41, 0x74,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x65,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65, 0x74, 0x49,
	0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x41, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3f, 0x88, 0xe7, 0xb0, 0x2a, 0x01, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x34, 0x12, 0x32, 0x2f, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x2f, 0x76, 0x35, 0x2f, 0x69, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x2f,
	0x7b, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x7b, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x7d, 0x12, 0xb2, 0x01, 0x0a, 0x18, 0x47, 0x65,
	0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x2d, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x54,
	0x6f, 0x70, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x54, 0x6f,
	0x70, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x37, 0x88, 0xe7, 0xb0, 0x2a, 0x01, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x2c, 0x12, 0x2a, 0x2f, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76,
	0x35, 0x2f, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x73, 0x2f, 0x7b, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0xaa,
	0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x73, 0x41,
	0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x28, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73,
	0x74, 0x73, 0x41, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x29, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e,
	0x47, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x73, 0x41, 0x74, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3e, 0x88, 0xe7, 0xb0,
	0x2a, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x33, 0x12, 0x31, 0x2f, 0x65, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x35, 0x2f, 0x66, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74,
	0x73, 0x2f, 0x7b, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x7b, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x7d, 0x12, 0xc5, 0x01, 0x0a, 0x1b,
	0x47, 0x65, 0x74, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4c, 0x6f, 0x73, 0x73, 0x42, 0x75,
	0x6e, 0x64, 0x6c, 0x65, 0x41, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x30, 0x2e, 0x65, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4c, 0x6f, 0x73, 0x73, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x41,
	0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e,
	0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65, 0x74,
	0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4c, 0x6f, 0x73, 0x73, 0x42, 0x75, 0x6e, 0x64, 0x6c,
	0x65, 0x41, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x41, 0x88, 0xe7, 0xb0, 0x2a, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x36, 0x12, 0x34, 0x2f,
	0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x35, 0x2f, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x6c, 0x6f, 0x73, 0x73, 0x2f, 0x7b, 0x74, 0x6f, 0x70, 0x69, 0x63,
	0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x7b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x7d, 0x12, 0x80, 0x01, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x53, 0x74, 0x61, 0x6b, 0x65, 0x12, 0x22, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x74, 0x61,
	0x6b, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x65, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x74, 0x61,
	0x6c, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x26,
	0x88, 0xe7, 0xb0, 0x2a, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x12, 0x19, 0x2f, 0x65, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x35, 0x2f, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x5f, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x12, 0xb2, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x70, 0x75, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x49, 0x6e, 0x54, 0x6f, 0x70, 0x69,
	0x63, 0x12, 0x2b, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35,
	0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x6b, 0x65,
	0x49, 0x6e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c,
	0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x49, 0x6e, 0x54,
	0x6f, 0x70, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3d, 0x88, 0xe7,
	0xb0, 0x2a, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x32, 0x12, 0x30, 0x2f, 0x65, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x35, 0x2f, 0x72, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72,
	0x5f, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x2f, 0x7b, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x7d,
	0x2f, 0x7b, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0xb9, 0x01, 0x0a, 0x1b,
	0x47, 0x65, 0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x52, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x53,
	0x74, 0x61, 0x6b, 0x65, 0x49, 0x6e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x30, 0x2e, 0x65, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x75,
	0x6c, 0x74, 0x69, 0x52, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x49,
	0x6e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e,
	0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65, 0x74,
	0x4d, 0x75, 0x6c, 0x74, 0x69, 0x52, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x6b,
	0x65, 0x49, 0x6e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x35, 0x88, 0xe7, 0xb0, 0x2a, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2a, 0x12, 0x28, 0x2f,
	0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x35, 0x2f, 0x72, 0x65, 0x70,
	0x75, 0x74, 0x65, 0x72, 0x73, 0x5f, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x73, 0x2f, 0x7b, 0x74, 0x6f,
	0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0xdd, 0x01, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x53,
	0x74, 0x61, 0x6b, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x49,
	0x6e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x6e, 0x53, 0x65, 0x6c, 0x66, 0x12, 0x35, 0x2e, 0x65,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65, 0x74, 0x53,
	0x74, 0x61, 0x6b, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x49,
	0x6e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x6e, 0x53, 0x65, 0x6c, 0x66, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x76, 0x35, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x52,
	0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x6e, 0x53,
	0x65, 0x6c, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4a, 0x88, 0xe7, 0xb0,
	0x2a, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3f, 0x12, 0x3d, 0x2f, 0x65, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x35, 0x2f, 0x72, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x5f,
	0x73, 0x74, 0x61, 0x6b, 0x65, 0x5f, 0x73, 0x65, 0x6c, 0x66, 0x2f, 0x7b, 0x72, 0x65, 0x70, 0x75,
	0x74, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x7d, 0x2f, 0x7b, 0x74, 0x6f,
	0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0xe1, 0x01, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x44,
	0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x49, 0x6e, 0x54, 0x6f,
	0x70, 0x69, 0x63, 0x49, 0x6e, 0x52, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x12, 0x35, 0x2e, 0x65,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65, 0x74, 0x44,
	0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x49, 0x6e, 0x54, 0x6f,
	0x70, 0x69, 0x63, 0x49, 0x6e, 0x52, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x76, 0x35, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x53, 0x74,
	0x61, 0x6b, 0x65, 0x49, 0x6e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x6e, 0x52, 0x65, 0x70, 0x75,
	0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4e, 0x88, 0xe7, 0xb0,
	0x2a, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x43, 0x12, 0x41, 0x2f, 0x65, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x35, 0x2f, 0x72, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x5f,
	0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x2f, 0x7b,
	0x72, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x7d,
	0x2f, 0x7b, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0xfc, 0x01, 0x0a, 0x25,
	0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x44, 0x65, 0x6c, 0x65,
	0x67, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x6e, 0x52, 0x65,
	0x70, 0x75, 0x74, 0x65, 0x72, 0x12, 0x3a, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x46, 0x72, 0x6f,
	0x6d, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x54, 0x6f, 0x70, 0x69,
	0x63, 0x49, 0x6e, 0x52, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x3b, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35,
	0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x44, 0x65, 0x6c,
	0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x6e, 0x52,
	0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5a,
	0x88, 0xe7, 0xb0, 0x2a, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x4f, 0x12, 0x4d, 0x2f, 0x65, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x35, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x67,
	0x61, 0x74, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x2f, 0x7b, 0x64, 0x65, 0x6c, 0x65, 0x67,
	0x61, 0x74, 0x6f, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x7d, 0x2f, 0x7b, 0x72,
	0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x7d, 0x2f,
	0x7b, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0xcf, 0x01, 0x0a, 0x1c, 0x47,
	0x65, 0x74, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x44, 0x65, 0x6c, 0x65, 0x67,
	0x61, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x31, 0x2e, 0x65, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74,
	0x61, 0x6b, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72,
	0x49, 0x6e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32,
	0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65,
	0x74, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61,
	0x74, 0x6f, 0x72, 0x49, 0x6e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x48, 0x88, 0xe7, 0xb0, 0x2a, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3d, 0x12,
	0x3b, 0x2f, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x35, 0x2f, 0x64,
	0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x2f, 0x7b, 0x64,
	0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x7d, 0x2f, 0x7b, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0x85, 0x01, 0x0a,
	0x0d, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x12, 0x22,
	0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65,
	0x74, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x23, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76,
	0x35, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2b, 0x88, 0xe7, 0xb0, 0x2a, 0x01, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x20, 0x12, 0x1e, 0x2f, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x2f, 0x76, 0x35, 0x2f, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x2f, 0x7b, 0x74, 0x6f, 0x70, 0x69, 0x63,
	0x5f, 0x69, 0x64, 0x7d, 0x12, 0xbf, 0x01, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x6b,
	0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x61, 0x6c, 0x73, 0x55, 0x70, 0x55, 0x6e, 0x74, 0x69, 0x6c,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x31, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x61, 0x6c, 0x73, 0x55, 0x70, 0x55, 0x6e, 0x74, 0x69, 0x6c, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x6b, 0x65,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x61, 0x6c, 0x73, 0x55, 0x70, 0x55, 0x6e, 0x74, 0x69, 0x6c, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x38, 0x88, 0xe7,
	0xb0, 0x2a, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2d, 0x12, 0x2b, 0x2f, 0x65, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x35, 0x2f, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x5f, 0x72,
	0x65, 0x6d, 0x6f, 0x76, 0x61, 0x6c, 0x73, 0x2f, 0x7b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x7d, 0x12, 0xe0, 0x01, 0x0a, 0x24, 0x47, 0x65, 0x74, 0x44, 0x65,
	0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x61, 0x6c, 0x73, 0x55, 0x70, 0x55, 0x6e, 0x74, 0x69, 0x6c, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12,
	0x39, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47,
	0x65, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x61, 0x6c, 0x73, 0x55, 0x70, 0x55, 0x6e, 0x74, 0x69, 0x6c, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x65, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x6c,
	0x65, 0x67, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x61,
	0x6c, 0x73, 0x55, 0x70, 0x55, 0x6e, 0x74, 0x69, 0x6c, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x41, 0x88, 0xe7, 0xb0, 0x2a, 0x01, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x36, 0x12, 0x34, 0x2f, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f,
	0x76, 0x35, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x6b,
	0x65, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x61, 0x6c, 0x73, 0x2f, 0x7b, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x7d, 0x12, 0xa9, 0x01, 0x0a, 0x13, 0x47, 0x65,
	0x74, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x61, 0x6c, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x28, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35,
	0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x61, 0x6c,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x65, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74,
	0x61, 0x6b, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3d, 0x88, 0xe7, 0xb0, 0x2a, 0x01, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x32, 0x12, 0x30, 0x2f, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f,
	0x76, 0x35, 0x2f, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x61, 0x6c,
	0x2f, 0x7b, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x7b, 0x72, 0x65, 0x70,
	0x75, 0x74, 0x65, 0x72, 0x7d, 0x12, 0xd6, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x44, 0x65, 0x6c,
	0x65, 0x67, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x61,
	0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x30, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65,
	0x53, 0x74, 0x61, 0x6b, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61,
	0x74, 0x65, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x61, 0x6c, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x52, 0x88, 0xe7, 0xb0, 0x2a,
	0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x47, 0x12, 0x45, 0x2f, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x35, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x5f,
	0x73, 0x74, 0x61, 0x6b, 0x65, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x61, 0x6c, 0x2f, 0x7b, 0x74,
	0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x7b, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61,
	0x74, 0x6f, 0x72, 0x7d, 0x2f, 0x7b, 0x72, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x7d, 0x12, 0x91,
	0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x26, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x4e, 0x6f, 0x64,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x65,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65, 0x74, 0x57,
	0x6f, 0x72, 0x6b, 0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2b, 0x88, 0xe7, 0xb0, 0x2a, 0x01, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x20, 0x12, 0x1e, 0x2f, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76,
	0x35, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x2f, 0x7b, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x7d, 0x12, 0x95, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x75, 0x74, 0x65,
	0x72, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x27, 0x2e, 0x65, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x75,
	0x74, 0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x28, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76,
	0x35, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2c, 0x88, 0xe7,
	0xb0, 0x2a, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x12, 0x1f, 0x2f, 0x65, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x35, 0x2f, 0x72, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72,
	0x2f, 0x7b, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x7d, 0x12, 0xc5, 0x01, 0x0a, 0x1b, 0x49,
	0x73, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65,
	0x64, 0x49, 0x6e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x12, 0x30, 0x2e, 0x65, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x49, 0x73, 0x57, 0x6f, 0x72, 0x6b,
	0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x49, 0x6e, 0x54, 0x6f,
	0x70, 0x69, 0x63, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x65,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x49, 0x73, 0x57, 0x6f,
	0x72, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x49, 0x6e,
	0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x41, 0x88, 0xe7, 0xb0, 0x2a, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x36, 0x12, 0x34, 0x2f, 0x65,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x35, 0x2f, 0x77, 0x6f, 0x72, 0x6b,
	0x65, 0x72, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x2f, 0x7b, 0x74,
	0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x7b, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x7d, 0x12, 0xc9, 0x01, 0x0a, 0x1c, 0x49, 0x73, 0x52, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x49, 0x6e, 0x54, 0x6f, 0x70, 0x69,
	0x63, 0x49, 0x64, 0x12, 0x31, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x76, 0x35, 0x2e, 0x49, 0x73, 0x52, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x49, 0x6e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x49, 0x73, 0x52, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x49, 0x6e, 0x54, 0x6f, 0x70, 0x69, 0x63,
	0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x42, 0x88, 0xe7, 0xb0, 0x2a,
	0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x37, 0x12, 0x35, 0x2f, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x35, 0x2f, 0x72, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x5f, 0x72,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x2f, 0x7b, 0x74, 0x6f, 0x70, 0x69, 0x63,
	0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x7b, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x7d, 0x12, 0xe9,
	0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x41, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x30,
	0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65,
	0x74, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x73, 0x41, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x31, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e,
	0x47, 0x65, 0x74, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x73, 0x41, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x65, 0x88, 0xe7, 0xb0, 0x2a, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x5a,
	0x12, 0x58, 0x2f, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x35, 0x2f,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x73, 0x2f, 0x7b, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x6c, 0x61,
	0x73, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x2f, 0x7b, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x5f,
	0x69, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x7d, 0x12, 0xc0, 0x01, 0x0a, 0x1a, 0x47,
	0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49,
	0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x2f, 0x2e, 0x65, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65,
	0x73, 0x74, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x65, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74,
	0x65, 0x73, 0x74, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3f, 0x88, 0xe7,
	0xb0, 0x2a, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x34, 0x12, 0x32, 0x2f, 0x65, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x35, 0x2f, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x5f,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x73, 0x2f, 0x7b, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0xe5, 0x01,
	0x0a, 0x23, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c,
	0x61, 0x62, 0x6c, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x38, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x41, 0x76,
	0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x6e,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x39, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47,
	0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c,
	0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x49, 0x88, 0xe7, 0xb0, 0x2a,
	0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3e, 0x12, 0x3c, 0x2f, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x35, 0x2f, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x61, 0x76,
	0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f,
	0x69, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x2f, 0x7b, 0x74, 0x6f, 0x70, 0x69,
	0x63, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0xcb, 0x01, 0x0a, 0x18, 0x49, 0x73, 0x57, 0x6f, 0x72, 0x6b,
	0x65, 0x72, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x55, 0x6e, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c,
	0x65, 0x64, 0x12, 0x2d, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76,
	0x35, 0x2e, 0x49, 0x73, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x55,
	0x6e, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2e, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35,
	0x2e, 0x49, 0x73, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x55, 0x6e,
	0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x50, 0x88, 0xe7, 0xb0, 0x2a, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x45, 0x12, 0x43,
	0x2f, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x35, 0x2f, 0x69, 0x73,
	0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x5f, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x5f, 0x75, 0x6e,
	0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x2f, 0x7b, 0x74, 0x6f, 0x70, 0x69, 0x63,
	0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x7b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x7d, 0x12, 0xcf, 0x01, 0x0a, 0x19, 0x49, 0x73, 0x52, 0x65, 0x70, 0x75, 0x74, 0x65,
	0x72, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x55, 0x6e, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x65,
	0x64, 0x12, 0x2e, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35,
	0x2e, 0x49, 0x73, 0x52, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x55,
	0x6e, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2f, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35,
	0x2e, 0x49, 0x73, 0x52, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x55,
	0x6e, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x51, 0x88, 0xe7, 0xb0, 0x2a, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x46, 0x12,
	0x44, 0x2f, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x35, 0x2f, 0x69,
	0x73, 0x5f, 0x72, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x5f,
	0x75, 0x6e, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x2f, 0x7b, 0x74, 0x6f, 0x70,
	0x69, 0x63, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x7b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x7d, 0x12, 0xc0, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x55, 0x6e, 0x66,
	0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x4e, 0x6f,
	0x6e, 0x63, 0x65, 0x73, 0x12, 0x2f, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x6e, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c,
	0x65, 0x64, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x6e, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c,
	0x6c, 0x65, 0x64, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3f, 0x88, 0xe7, 0xb0, 0x2a, 0x01, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x34, 0x12, 0x32, 0x2f, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x2f, 0x76, 0x35, 0x2f, 0x75, 0x6e, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x5f,
	0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x5f, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x73, 0x2f, 0x7b, 0x74,
	0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0xc4, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74,
	0x55, 0x6e, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x70, 0x75, 0x74,
	0x65, 0x72, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x30, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x6e, 0x66, 0x75, 0x6c,
	0x66, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x4e, 0x6f, 0x6e,
	0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x65, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x6e, 0x66,
	0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x4e,
	0x6f, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x40, 0x88,
	0xe7, 0xb0, 0x2a, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x35, 0x12, 0x33, 0x2f, 0x65, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x35, 0x2f, 0x75, 0x6e, 0x66, 0x75, 0x6c, 0x66,
	0x69, 0x6c, 0x6c, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x6f,
	0x6e, 0x63, 0x65, 0x73, 0x2f, 0x7b, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x7d, 0x12,
	0xbf, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x72, 0x4e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x67, 0x72, 0x65, 0x74, 0x12, 0x2c, 0x2e, 0x65, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e,
	0x66, 0x65, 0x72, 0x65, 0x72, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x67, 0x72,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x65, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x65,
	0x72, 0x65, 0x72, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x67, 0x72, 0x65, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x47, 0x88, 0xe7, 0xb0, 0x2a, 0x01, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x3c, 0x12, 0x3a, 0x2f, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x2f, 0x76, 0x35, 0x2f, 0x69, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x72, 0x5f, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x72, 0x65, 0x67, 0x72, 0x65, 0x74, 0x2f, 0x7b, 0x74, 0x6f, 0x70,
	0x69, 0x63, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x7b, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64,
	0x7d, 0x12, 0xc9, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x67, 0x72, 0x65, 0x74,
	0x12, 0x2f, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e,
	0x47, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x67, 0x72, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x30, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35,
	0x2e, 0x47, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x67, 0x72, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x48, 0x88, 0xe7, 0xb0, 0x2a, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3d,
	0x12, 0x3b, 0x2f, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x35, 0x2f,
	0x66, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x5f, 0x72, 0x65, 0x67, 0x72, 0x65, 0x74, 0x2f, 0x7b, 0x74, 0x6f, 0x70, 0x69, 0x63,
	0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x7b, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x7d, 0x12, 0xed, 0x01,
	0x0a, 0x1f, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x65, 0x49, 0x6e, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61,
	0x73, 0x74, 0x65, 0x72, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x67, 0x72, 0x65,
	0x74, 0x12, 0x34, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35,
	0x2e, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x65, 0x49, 0x6e, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x67, 0x72, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x65, 0x49, 0x6e, 0x46,
	0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x52, 0x65, 0x67, 0x72, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5d,
	0x88, 0xe7, 0xb0, 0x2a, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x52, 0x12, 0x50, 0x2f, 0x65, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x35, 0x2f, 0x6f, 0x6e, 0x65, 0x5f, 0x69,
	0x6e, 0x5f, 0x66, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x72, 0x65, 0x67, 0x72, 0x65, 0x74, 0x2f, 0x7b, 0x74, 0x6f, 0x70,
	0x69, 0x63, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x7b, 0x66, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x7d, 0x2f, 0x7b, 0x69, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x72, 0x7d, 0x12, 0x92, 0x01,
	0x0a, 0x10, 0x49, 0x73, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x12, 0x25, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76,
	0x35, 0x2e, 0x49, 0x73, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x65, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x49, 0x73, 0x57, 0x68, 0x69, 0x74, 0x65,
	0x6c, 0x69, 0x73, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x2f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29, 0x12, 0x27, 0x2f, 0x65, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x35, 0x2f, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69,
	0x73, 0x74, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x7b, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x7d, 0x12, 0xca, 0x01, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x4c,
	0x61, 0x73, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x31, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x76, 0x35, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x4c, 0x61, 0x73, 0x74, 0x57,
	0x6f, 0x72, 0x6b, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x4c, 0x61,
	0x73, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x43, 0x88, 0xe7, 0xb0, 0x2a,
	0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x38, 0x12, 0x36, 0x2f, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x35, 0x2f, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x6c, 0x61, 0x73,
	0x74, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x2f, 0x7b, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x7d, 0x12,
	0xce, 0x01, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x4c, 0x61, 0x73, 0x74,
	0x52, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x32, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35,
	0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x4c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x70,
	0x75, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x4c, 0x61, 0x73,
	0x74, 0x52, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x44, 0x88, 0xe7, 0xb0, 0x2a,
	0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x39, 0x12, 0x37, 0x2f, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x35, 0x2f, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x6c, 0x61, 0x73,
	0x74, 0x5f, 0x72, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x2f, 0x7b, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x7d,
	0x12, 0xa4, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x28, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x69, 0x63,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x29, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76,
	0x35, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x38, 0x88,
	0xe7, 0xb0, 0x2a, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2d, 0x12, 0x2b, 0x2f, 0x65, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x35, 0x2f, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f,
	0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x2f, 0x7b, 0x74, 0x6f,
	0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0xd0, 0x01, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x4c, 0x6f, 0x73, 0x73, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65,
	0x73, 0x41, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x31, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x75, 0x74,
	0x65, 0x72, 0x4c, 0x6f, 0x73, 0x73, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x41, 0x74, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x65, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x70, 0x75, 0x74, 0x65, 0x72, 0x4c, 0x6f, 0x73, 0x73, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x73,
	0x41, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x49, 0x88, 0xe7, 0xb0, 0x2a, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3e, 0x12, 0x3c, 0x2f, 0x65,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x35, 0x2f, 0x72, 0x65, 0x70, 0x75,
	0x74, 0x65, 0x72, 0x5f, 0x6c, 0x6f, 0x73, 0x73, 0x5f, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x73,
	0x2f, 0x7b, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x7b, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x7d, 0x12, 0xc2, 0x01, 0x0a, 0x18, 0x47,
	0x65, 0x74, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x52, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x41, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x2d, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x52,
	0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x52, 0x65,
	0x70, 0x75, 0x74, 0x65, 0x72, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x47, 0x88, 0xe7, 0xb0, 0x2a, 0x01, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x3c, 0x12, 0x3a, 0x2f, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f,
	0x76, 0x35, 0x2f, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x5f, 0x72, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72,
	0x5f, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x2f, 0x7b, 0x74, 0x6f, 0x70, 0x69,
	0x63, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x7b, 0x72, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x7d, 0x12,
	0xd1, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x53,
	0x74, 0x61, 0x6b, 0x65, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2e, 0x2e,
	0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65, 0x74,
	0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x50, 0x6c, 0x61,
	0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e,
	0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65, 0x74,
	0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x50, 0x6c, 0x61,
	0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x53,
	0x88, 0xe7, 0xb0, 0x2a, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x48, 0x12, 0x46, 0x2f, 0x65, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x35, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x67,
	0x61, 0x74, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x5f, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x2f, 0x7b, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x7b,
	0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x7d, 0x2f, 0x7b, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x7d, 0x12, 0xce, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x67,
	0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x55, 0x70, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x75,
	0x74, 0x65, 0x72, 0x12, 0x30, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x76, 0x35, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x53, 0x74,
	0x61, 0x6b, 0x65, 0x55, 0x70, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65,
	0x53, 0x74, 0x61, 0x6b, 0x65, 0x55, 0x70, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4a, 0x88, 0xe7, 0xb0, 0x2a, 0x01, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x3f, 0x12, 0x3d, 0x2f, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x2f, 0x76, 0x35, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x74,
	0x61, 0x6b, 0x65, 0x5f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72,
	0x2f, 0x7b, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x7b, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x7d, 0x12, 0xc7, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x44, 0x65, 0x6c, 0x65,
	0x67, 0x61, 0x74, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x50, 0x65, 0x72, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x12, 0x2e, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76,
	0x35, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x50, 0x65, 0x72, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76,
	0x35, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x50, 0x65, 0x72, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x49, 0x88, 0xe7, 0xb0, 0x2a, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3e,
	0x12, 0x3c, 0x2f, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x35, 0x2f,
	0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f,
	0x70, 0x65, 0x72, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2f, 0x7b, 0x74, 0x6f, 0x70, 0x69, 0x63,
	0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x7b, 0x72, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x7d, 0x12, 0xd9,
	0x01, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x61, 0x6c, 0x46, 0x6f, 0x72, 0x52, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x41, 0x6e, 0x64, 0x54,
	0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x12, 0x38, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x61, 0x6c, 0x46, 0x6f, 0x72, 0x52, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x41,
	0x6e, 0x64, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x39, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e,
	0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x61, 0x6c, 0x46,
	0x6f, 0x72, 0x52, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x41, 0x6e, 0x64, 0x54, 0x6f, 0x70, 0x69,
	0x63, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3d, 0x88, 0xe7, 0xb0,
	0x2a, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x32, 0x12, 0x30, 0x2f, 0x65, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x35, 0x2f, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x5f, 0x72, 0x65,
	0x6d, 0x6f, 0x76, 0x61, 0x6c, 0x2f, 0x7b, 0x72, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x7d, 0x2f,
	0x7b, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0xd9, 0x01, 0x0a, 0x17, 0x47,
	0x65, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x61, 0x6c, 0x12, 0x2c, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74,
	0x65, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x61, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x53,
	0x74, 0x61, 0x6b, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x61, 0x88, 0xe7, 0xb0, 0x2a, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x56,
	0x12, 0x54, 0x2f, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x35, 0x2f,
	0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x5f, 0x72,
	0x65, 0x6d, 0x6f, 0x76, 0x61, 0x6c, 0x2f, 0x7b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x7d, 0x2f, 0x7b, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x7d,
	0x2f, 0x7b, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x7d, 0x2f, 0x7b, 0x72, 0x65,
	0x70, 0x75, 0x74, 0x65, 0x72, 0x7d, 0x12, 0xb0, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x50, 0x72,
	0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x57, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x12, 0x2b, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35,
	0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x54, 0x6f, 0x70, 0x69,
	0x63, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c,
	0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65,
	0x74, 0x50, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x57, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3b, 0x88, 0xe7,
	0xb0, 0x2a, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x30, 0x12, 0x2e, 0x2f, 0x65, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x35, 0x2f, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75,
	0x73, 0x5f, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x2f, 0x7b,
	0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0xca, 0x01, 0x0a, 0x1f, 0x47, 0x65,
	0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x75, 0x6d, 0x50, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75,
	0x73, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x73, 0x12, 0x34, 0x2e,
	0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65, 0x74,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x75, 0x6d, 0x50, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73,
	0x54, 0x6f, 0x70, 0x69, 0x63, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x76, 0x35, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x75, 0x6d, 0x50, 0x72,
	0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x57, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3a, 0x88, 0xe7, 0xb0, 0x2a,
	0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2f, 0x12, 0x2d, 0x2f, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x35, 0x2f, 0x73, 0x75, 0x6d, 0x5f, 0x70, 0x72, 0x65, 0x76, 0x69,
	0x6f, 0x75, 0x73, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f,
	0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x86, 0x01, 0x0a, 0x0b, 0x54, 0x6f, 0x70, 0x69, 0x63,
	0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x12, 0x20, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x45, 0x78, 0x69, 0x73, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x45, 0x78, 0x69,
	0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x32, 0x88, 0xe7, 0xb0,
	0x2a, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x27, 0x12, 0x25, 0x2f, 0x65, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x35, 0x2f, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x65, 0x78,
	0x69, 0x73, 0x74, 0x73, 0x2f, 0x7b, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x7d, 0x12,
	0x8f, 0x01, 0x0a, 0x0d, 0x49, 0x73, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x12, 0x22, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35,
	0x2e, 0x49, 0x73, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x76, 0x35, 0x2e, 0x49, 0x73, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x35, 0x88, 0xe7, 0xb0, 0x2a,
	0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2a, 0x12, 0x28, 0x2f, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x35, 0x2f, 0x69, 0x73, 0x5f, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x2f, 0x7b, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64,
	0x7d, 0x12, 0xa0, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x46, 0x65,
	0x65, 0x52, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x12, 0x27, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x69, 0x63,
	0x46, 0x65, 0x65, 0x52, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x28, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35,
	0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x46, 0x65, 0x65, 0x52, 0x65, 0x76, 0x65,
	0x6e, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x37, 0x88, 0xe7, 0xb0,
	0x2a, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2c, 0x12, 0x2a, 0x2f, 0x65, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x35, 0x2f, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x66, 0x65,
	0x65, 0x5f, 0x72, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x2f, 0x7b, 0x74, 0x6f, 0x70, 0x69, 0x63,
	0x5f, 0x69, 0x64, 0x7d, 0x12, 0xaa, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x65,
	0x72, 0x65, 0x72, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x45, 0x6d, 0x61, 0x12, 0x27, 0x2e, 0x65, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e,
	0x66, 0x65, 0x72, 0x65, 0x72, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x45, 0x6d, 0x61, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x72, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x45, 0x6d, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x41,
	0x88, 0xe7, 0xb0, 0x2a, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x36, 0x12, 0x34, 0x2f, 0x65, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x35, 0x2f, 0x69, 0x6e, 0x66, 0x65, 0x72,
	0x65, 0x72, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x65, 0x6d, 0x61, 0x2f, 0x7b, 0x74, 0x6f,
	0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x7b, 0x69, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x72,
	0x7d, 0x12, 0xb9, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x45, 0x6d, 0x61, 0x12, 0x2a, 0x2e, 0x65, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x6f,
	0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x45, 0x6d, 0x61,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61,
	0x73, 0x74, 0x65, 0x72, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x45, 0x6d, 0x61, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x47, 0x88, 0xe7, 0xb0, 0x2a, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x3c, 0x12, 0x3a, 0x2f, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x35,
	0x2f, 0x66, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x63, 0x6f, 0x72,
	0x65, 0x5f, 0x65, 0x6d, 0x61, 0x2f, 0x7b, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x7d,
	0x2f, 0x7b, 0x66, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x7d, 0x12, 0xaa, 0x01,
	0x0a, 0x12, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x53, 0x63, 0x6f, 0x72,
	0x65, 0x45, 0x6d, 0x61, 0x12, 0x27, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x45, 0x6d, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e,
	0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x45, 0x6d, 0x61, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x41, 0x88, 0xe7, 0xb0, 0x2a, 0x01, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x36, 0x12, 0x34, 0x2f, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x2f, 0x76, 0x35, 0x2f, 0x72, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x63, 0x6f, 0x72,
	0x65, 0x5f, 0x65, 0x6d, 0x61, 0x2f, 0x7b, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x7d,
	0x2f, 0x7b, 0x72, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x7d, 0x12, 0xd8, 0x01, 0x0a, 0x1c, 0x47,
	0x65, 0x74, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65,
	0x73, 0x55, 0x6e, 0x74, 0x69, 0x6c, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x31, 0x2e, 0x65, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x55, 0x6e, 0x74,
	0x69, 0x6c, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32,
	0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65,
	0x74, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73,
	0x55, 0x6e, 0x74, 0x69, 0x6c, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x51, 0x88, 0xe7, 0xb0, 0x2a, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x46, 0x12,
	0x44, 0x2f, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x35, 0x2f, 0x69,
	0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x5f,
	0x75, 0x6e, 0x74, 0x69, 0x6c, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2f, 0x7b, 0x74, 0x6f, 0x70,
	0x69, 0x63, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x7b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x7d, 0x12, 0xfa, 0x01, 0x0a, 0x2a, 0x47, 0x65, 0x74, 0x50, 0x72, 0x65,
	0x76, 0x69, 0x6f, 0x75, 0x73, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69,
	0x6c, 0x65, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x53, 0x63, 0x6f, 0x72,
	0x65, 0x45, 0x6d, 0x61, 0x12, 0x3f, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x54,
	0x6f, 0x70, 0x69, 0x63, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x6c, 0x65, 0x46, 0x6f, 0x72, 0x65,
	0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x45, 0x6d, 0x61, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x40, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73,
	0x54, 0x6f, 0x70, 0x69, 0x63, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x6c, 0x65, 0x46, 0x6f, 0x72,
	0x65, 0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x45, 0x6d, 0x61, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x49, 0x88, 0xe7, 0xb0, 0x2a, 0x01, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x3e, 0x12, 0x3c, 0x2f, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x2f, 0x76, 0x35, 0x2f, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69,
	0x6c, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x63,
	0x6f, 0x72, 0x65, 0x5f, 0x65, 0x6d, 0x61, 0x2f, 0x7b, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69,
	0x64, 0x7d, 0x12, 0xee, 0x01, 0x0a, 0x27, 0x47, 0x65, 0x74, 0x50, 0x72, 0x65, 0x76, 0x69, 0x6f,
	0x75, 0x73, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x6c, 0x65, 0x49,
	0x6e, 0x66, 0x65, 0x72, 0x65, 0x72, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x45, 0x6d, 0x61, 0x12, 0x3c,
	0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65,
	0x74, 0x50, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x51, 0x75,
	0x61, 0x6e, 0x74, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x72, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x45, 0x6d, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3d, 0x2e, 0x65,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65, 0x74, 0x50,
	0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x51, 0x75, 0x61, 0x6e,
	0x74, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x72, 0x53, 0x63, 0x6f, 0x72, 0x65,
	0x45, 0x6d, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x46, 0x88, 0xe7, 0xb0,
	0x2a, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3b, 0x12, 0x39, 0x2f, 0x65, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x35, 0x2f, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x71, 0x75,
	0x61, 0x6e, 0x74, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x72, 0x5f, 0x73,
	0x63, 0x6f, 0x72, 0x65, 0x5f, 0x65, 0x6d, 0x61, 0x2f, 0x7b, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f,
	0x69, 0x64, 0x7d, 0x12, 0xee, 0x01, 0x0a, 0x27, 0x47, 0x65, 0x74, 0x50, 0x72, 0x65, 0x76, 0x69,
	0x6f, 0x75, 0x73, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x6c, 0x65,
	0x52, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x45, 0x6d, 0x61, 0x12,
	0x3c, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47,
	0x65, 0x74, 0x50, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x51,
	0x75, 0x61, 0x6e, 0x74, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x45, 0x6d, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3d, 0x2e,
	0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65, 0x74,
	0x50, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x51, 0x75, 0x61,
	0x6e, 0x74, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x53, 0x63, 0x6f, 0x72,
	0x65, 0x45, 0x6d, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x46, 0x88, 0xe7,
	0xb0, 0x2a, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3b, 0x12, 0x39, 0x2f, 0x65, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x35, 0x2f, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x71,
	0x75, 0x61, 0x6e, 0x74, 0x69, 0x6c, 0x65, 0x5f, 0x72, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x5f,
	0x73, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x65, 0x6d, 0x61, 0x2f, 0x7b, 0x74, 0x6f, 0x70, 0x69, 0x63,
	0x5f, 0x69, 0x64, 0x7d, 0x12, 0xe5, 0x01, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65,
	0x73, 0x41, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x34, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73,
	0x41, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35,
	0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65,
	0x74, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x41, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x55, 0x88, 0xe7, 0xb0, 0x2a, 0x01, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x4a, 0x12, 0x48, 0x2f, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76,
	0x35, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x5f, 0x61, 0x74, 0x5f, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x2f, 0x7b, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x7b, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x7d, 0x12, 0xc9, 0x01, 0x0a,
	0x1c, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x77, 0x65, 0x73,
	0x74, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x72, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x31, 0x2e,
	0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65, 0x74,
	0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x77, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x66,
	0x65, 0x72, 0x65, 0x72, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x32, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e,
	0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x77, 0x65, 0x73, 0x74,
	0x49, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x72, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x42, 0x88, 0xe7, 0xb0, 0x2a, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x37, 0x12, 0x35, 0x2f, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x35,
	0x2f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x6f, 0x77, 0x65, 0x73, 0x74, 0x5f,
	0x69, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x72, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x7b, 0x74,
	0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0xd4, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74,
	0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x55, 0x6e,
	0x74, 0x69, 0x6c, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x30, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x65, 0x63,
	0x61, 0x73, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x55, 0x6e, 0x74, 0x69, 0x6c, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x65, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x6f, 0x72,
	0x65, 0x63, 0x61, 0x73, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x55, 0x6e, 0x74, 0x69, 0x6c,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x50, 0x88,
	0xe7, 0xb0, 0x2a, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x45, 0x12, 0x43, 0x2f, 0x65, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x35, 0x2f, 0x66, 0x6f, 0x72, 0x65, 0x63, 0x61,
	0x73, 0x74, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x5f, 0x75, 0x6e, 0x74, 0x69, 0x6c, 0x5f,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2f, 0x7b, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x7d,
	0x2f, 0x7b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x7d, 0x12,
	0xe1, 0x01, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x46, 0x6f, 0x72,
	0x65, 0x63, 0x61, 0x73, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x41, 0x74, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x12, 0x33, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76,
	0x35, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x65, 0x63,
	0x61, 0x73, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x41, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72,
	0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x41, 0x74,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x54, 0x88,
	0xe7, 0xb0, 0x2a, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x49, 0x12, 0x47, 0x2f, 0x65, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x35, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72,
	0x5f, 0x66, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x73,
	0x5f, 0x61, 0x74, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2f, 0x7b, 0x74, 0x6f, 0x70, 0x69, 0x63,
	0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x7b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x7d, 0x12, 0xd5, 0x01, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x4c, 0x6f, 0x77, 0x65, 0x73, 0x74, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x34, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x4c, 0x6f, 0x77, 0x65, 0x73, 0x74, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e,
	0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65, 0x74,
	0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x77, 0x65, 0x73, 0x74, 0x46, 0x6f, 0x72,
	0x65, 0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x45, 0x88, 0xe7, 0xb0, 0x2a, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x3a, 0x12, 0x38, 0x2f, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x35,
	0x2f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x6f, 0x77, 0x65, 0x73, 0x74, 0x5f,
	0x66, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65,
	0x2f, 0x7b, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0xc8, 0x01, 0x0a, 0x18,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x73, 0x53, 0x63, 0x6f, 0x72, 0x65,
	0x73, 0x41, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x2d, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x75, 0x74,
	0x65, 0x72, 0x73, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x41, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x75, 0x74, 0x65,
	0x72, 0x73, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x41, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4d, 0x88, 0xe7, 0xb0, 0x2a, 0x01, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x42, 0x12, 0x40, 0x2f, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x2f, 0x76, 0x35, 0x2f, 0x72, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x73, 0x5f, 0x73, 0x63, 0x6f,
	0x72, 0x65, 0x73, 0x5f, 0x61, 0x74, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2f, 0x7b, 0x74, 0x6f,
	0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x7b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x7d, 0x12, 0xc9, 0x01, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x43, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x77, 0x65, 0x73, 0x74, 0x52, 0x65, 0x70, 0x75, 0x74,
	0x65, 0x72, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x31, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x4c, 0x6f, 0x77, 0x65, 0x73, 0x74, 0x52, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x65, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x77, 0x65, 0x73, 0x74, 0x52, 0x65, 0x70, 0x75, 0x74, 0x65,
	0x72, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x42,
	0x88, 0xe7, 0xb0, 0x2a, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x37, 0x12, 0x35, 0x2f, 0x65, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x35, 0x2f, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x5f, 0x6c, 0x6f, 0x77, 0x65, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x70, 0x75, 0x74, 0x65,
	0x72, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x7b, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69,
	0x64, 0x7d, 0x12, 0xbd, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e,
	0x69, 0x6e, 0x67, 0x43, 0x6f, 0x65, 0x66, 0x66, 0x69, 0x63, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x2c,
	0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x65, 0x66, 0x66, 0x69,
	0x63, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x65,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x65, 0x66, 0x66, 0x69, 0x63, 0x69,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x45, 0x88, 0xe7, 0xb0,
	0x2a, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3a, 0x12, 0x38, 0x2f, 0x65, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x35, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x69, 0x6e,
	0x67, 0x5f, 0x63, 0x6f, 0x65, 0x66, 0x66, 0x69, 0x63, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x7b, 0x74,
	0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x7b, 0x72, 0x65, 0x70, 0x75, 0x74, 0x65,
	0x72, 0x7d, 0x12, 0xe3, 0x01, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x50, 0x72, 0x65, 0x76, 0x69, 0x6f,
	0x75, 0x73, 0x52, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x46,
	0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x35, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x65, 0x76, 0x69, 0x6f,
	0x75, 0x73, 0x52, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x46,
	0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36,
	0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65,
	0x74, 0x50, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x52, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x46, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x50, 0x88, 0xe7, 0xb0, 0x2a, 0x01, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x45, 0x12, 0x43, 0x2f, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f,
	0x76, 0x35, 0x2f, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x5f, 0x72, 0x65, 0x70, 0x75,
	0x74, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x66, 0x72, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x2f, 0x7b, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x7b,
	0x72, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x7d, 0x12, 0xea, 0x01, 0x0a, 0x22, 0x47, 0x65, 0x74,
	0x50, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x46, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x37, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47,
	0x65, 0x74, 0x50, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x46, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x65, 0x76, 0x69,
	0x6f, 0x75, 0x73, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x46, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x51, 0x88, 0xe7, 0xb0, 0x2a, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x46, 0x12,
	0x44, 0x2f, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x35, 0x2f, 0x70,
	0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x5f, 0x69, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x2f, 0x7b, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x7b, 0x77, 0x6f,
	0x72, 0x6b, 0x65, 0x72, 0x7d, 0x12, 0xe6, 0x01, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x50, 0x72, 0x65,
	0x76, 0x69, 0x6f, 0x75, 0x73, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x46, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x36, 0x2e, 0x65, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72,
	0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x46, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x76, 0x35, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x46, 0x6f,
	0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x46, 0x72, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x50, 0x88, 0xe7,
	0xb0, 0x2a, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x45, 0x12, 0x43, 0x2f, 0x65, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x35, 0x2f, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75,
	0x73, 0x5f, 0x66, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x5f, 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x7b, 0x74, 0x6f, 0x70, 0x69,
	0x63, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x7b, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x7d, 0x12, 0xfc,
	0x01, 0x0a, 0x2b, 0x47, 0x65, 0x74, 0x50, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x50, 0x65,
	0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x54, 0x6f,
	0x53, 0x74, 0x61, 0x6b, 0x65, 0x64, 0x52, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x73, 0x12, 0x40,
	0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65,
	0x74, 0x50, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x54, 0x6f, 0x53, 0x74, 0x61, 0x6b, 0x65,
	0x64, 0x52, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x41, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e,
	0x47, 0x65, 0x74, 0x50, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x50, 0x65, 0x72, 0x63, 0x65,
	0x6e, 0x74, 0x61, 0x67, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x54, 0x6f, 0x53, 0x74, 0x61,
	0x6b, 0x65, 0x64, 0x52, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x48, 0x88, 0xe7, 0xb0, 0x2a, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3d,
	0x12, 0x3b, 0x2f, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x35, 0x2f,
	0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74,
	0x61, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x74, 0x6f, 0x5f, 0x73, 0x74,
	0x61, 0x6b, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x73, 0x12, 0xb6, 0x01,
	0x0a, 0x1a, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x54, 0x6f, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x2f, 0x2e, 0x65,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65, 0x74, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x54, 0x6f, 0x44, 0x69, 0x73, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e,
	0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65, 0x74,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x54, 0x6f, 0x44, 0x69, 0x73,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x35, 0x88, 0xe7, 0xb0, 0x2a, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2a, 0x12, 0x28, 0x2f, 0x65,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x35, 0x2f, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x74, 0x6f, 0x5f, 0x64, 0x69, 0x73, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0xbf, 0x01, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x4e, 0x61,
	0x69, 0x76, 0x65, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x72, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x52, 0x65, 0x67, 0x72, 0x65, 0x74, 0x12, 0x31, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x61, 0x69, 0x76, 0x65, 0x49,
	0x6e, 0x66, 0x65, 0x72, 0x65, 0x72, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x67,
	0x72, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x65, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x61, 0x69,
	0x76, 0x65, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x72, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x52, 0x65, 0x67, 0x72, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x38,
	0x88, 0xe7, 0xb0, 0x2a, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2d, 0x12, 0x2b, 0x2f, 0x65, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x35, 0x2f, 0x6e, 0x61, 0x74, 0x69, 0x76,
	0x65, 0x5f, 0x69, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x72, 0x5f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x5f, 0x72, 0x65, 0x67, 0x72, 0x65, 0x74, 0x12, 0xe0, 0x01, 0x0a, 0x24, 0x47, 0x65, 0x74,
	0x4f, 0x6e, 0x65, 0x4f, 0x75, 0x74, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x65, 0x72, 0x65, 0x72, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x67, 0x72, 0x65,
	0x74, 0x12, 0x39, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35,
	0x2e, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x65, 0x4f, 0x75, 0x74, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x72, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52,
	0x65, 0x67, 0x72, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x65,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65, 0x74, 0x4f,
	0x6e, 0x65, 0x4f, 0x75, 0x74, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x65,
	0x72, 0x65, 0x72, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x67, 0x72, 0x65, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x41, 0x88, 0xe7, 0xb0, 0x2a, 0x01, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x36, 0x12, 0x34, 0x2f, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x2f, 0x76, 0x35, 0x2f, 0x6f, 0x6e, 0x65, 0x5f, 0x6f, 0x75, 0x74, 0x5f, 0x69, 0x6e, 0x66,
	0x65, 0x72, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x72, 0x5f, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x72, 0x65, 0x67, 0x72, 0x65, 0x74, 0x12, 0xec, 0x01, 0x0a, 0x27,
	0x47, 0x65, 0x74, 0x4f, 0x6e, 0x65, 0x4f, 0x75, 0x74, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x72,
	0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x52, 0x65, 0x67, 0x72, 0x65, 0x74, 0x12, 0x3c, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x65, 0x4f, 0x75, 0x74,
	0x49, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x67, 0x72, 0x65, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3d, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x65, 0x4f, 0x75, 0x74, 0x49, 0x6e,
	0x66, 0x65, 0x72, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x4e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x67, 0x72, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x44, 0x88, 0xe7, 0xb0, 0x2a, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x39, 0x12, 0x37, 0x2f, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x35,
	0x2f, 0x6f, 0x6e, 0x65, 0x5f, 0x6f, 0x75, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x72,
	0x5f, 0x66, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x5f, 0x72, 0x65, 0x67, 0x72, 0x65, 0x74, 0x12, 0xec, 0x01, 0x0a, 0x27, 0x47,
	0x65, 0x74, 0x4f, 0x6e, 0x65, 0x4f, 0x75, 0x74, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x72, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x52, 0x65, 0x67, 0x72, 0x65, 0x74, 0x12, 0x3c, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x65, 0x4f, 0x75, 0x74, 0x46,
	0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x72,
	0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x67, 0x72, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x3d, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x65, 0x4f, 0x75, 0x74, 0x46, 0x6f, 0x72,
	0x65, 0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x72, 0x4e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x67, 0x72, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x44, 0x88, 0xe7, 0xb0, 0x2a, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x39,
	0x12, 0x37, 0x2f, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x35, 0x2f,
	0x6f, 0x6e, 0x65, 0x5f, 0x6f, 0x75, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x72, 0x5f, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x5f, 0x72, 0x65, 0x67, 0x72, 0x65, 0x74, 0x12, 0xf8, 0x01, 0x0a, 0x2a, 0x47, 0x65,
	0x74, 0x4f, 0x6e, 0x65, 0x4f, 0x75, 0x74, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x52, 0x65, 0x67, 0x72, 0x65, 0x74, 0x12, 0x3f, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x65, 0x4f, 0x75,
	0x74, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x65, 0x63,
	0x61, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x67, 0x72,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x40, 0x2e, 0x65, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x65, 0x4f,
	0x75, 0x74, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x65,
	0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x67,
	0x72, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x47, 0x88, 0xe7, 0xb0,
	0x2a, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3c, 0x12, 0x3a, 0x2f, 0x65, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x35, 0x2f, 0x6f, 0x6e, 0x65, 0x5f, 0x6f, 0x75, 0x74, 0x5f,
	0x66, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x66, 0x6f, 0x72, 0x65, 0x63,
	0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x72, 0x65,
	0x67, 0x72, 0x65, 0x74, 0x12, 0xb5, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x41, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12,
	0x2b, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47,
	0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x41, 0x74,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x65,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65, 0x74, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x41, 0x74, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x40, 0x88, 0xe7, 0xb0, 0x2a,
	0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x35, 0x12, 0x33, 0x2f, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x35, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x74, 0x6f,
	0x70, 0x69, 0x63, 0x73, 0x5f, 0x61, 0x74, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2f, 0x7b, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x7d, 0x12, 0xcf, 0x01, 0x0a,
	0x1d, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x78, 0x74, 0x43, 0x68, 0x75, 0x72, 0x6e, 0x69, 0x6e, 0x67,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x42, 0x79, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x12, 0x32,
	0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65,
	0x74, 0x4e, 0x65, 0x78, 0x74, 0x43, 0x68, 0x75, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x42, 0x79, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x33, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76,
	0x35, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x78, 0x74, 0x43, 0x68, 0x75, 0x72, 0x6e, 0x69, 0x6e,
	0x67, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x42, 0x79, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x45, 0x88, 0xe7, 0xb0, 0x2a, 0x01, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x3a, 0x12, 0x38, 0x2f, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x2f, 0x76, 0x35, 0x2f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x68, 0x75, 0x72, 0x6e, 0x69, 0x6e,
	0x67, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x62, 0x79, 0x5f, 0x74, 0x6f, 0x70, 0x69, 0x63,
	0x5f, 0x69, 0x64, 0x2f, 0x7b, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0xe4,
	0x01, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x65, 0x72,
	0x65, 0x72, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x54, 0x6f,
	0x70, 0x69, 0x63, 0x12, 0x35, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x76, 0x35, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x65, 0x72,
	0x65, 0x72, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x54, 0x6f,
	0x70, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x65, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x72, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x51, 0x88, 0xe7, 0xb0, 0x2a, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x46, 0x12,
	0x44, 0x2f, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x35, 0x2f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x63,
	0x6c, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x69, 0x6e, 0x5f, 0x74, 0x6f, 0x70, 0x69, 0x63,
	0x2f, 0x7b, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x7b, 0x69, 0x6e, 0x66,
	0x65, 0x72, 0x65, 0x72, 0x7d, 0x12, 0xf3, 0x01, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x63, 0x6c,
	0x75, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x38, 0x2e,
	0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x49,
	0x6e, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x54, 0x6f, 0x70, 0x69, 0x63,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x46,
	0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x57, 0x88, 0xe7, 0xb0, 0x2a, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x4c, 0x12,
	0x4a, 0x2f, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x35, 0x2f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f,
	0x69, 0x6e, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x69, 0x6e, 0x5f, 0x74, 0x6f,
	0x70, 0x69, 0x63, 0x2f, 0x7b, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x7b,
	0x66, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x7d, 0x12, 0xb3, 0x01, 0x0a, 0x19,
	0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x52, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72,
	0x73, 0x46, 0x6f, 0x72, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x2e, 0x2e, 0x65, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x52, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x73, 0x46, 0x6f, 0x72, 0x54, 0x6f, 0x70,
	0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x65, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x52, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x73, 0x46, 0x6f, 0x72, 0x54, 0x6f, 0x70,
	0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x35, 0x88, 0xe7, 0xb0, 0x2a,
	0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2a, 0x12, 0x28, 0x2f, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x35, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x72, 0x65,
	0x70, 0x75, 0x74, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64,
	0x7d, 0x12, 0xbf, 0x01, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x46,
	0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x73, 0x46, 0x6f, 0x72, 0x54, 0x6f, 0x70,
	0x69, 0x63, 0x12, 0x31, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76,
	0x35, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x46, 0x6f, 0x72, 0x65, 0x63,
	0x61, 0x73, 0x74, 0x65, 0x72, 0x73, 0x46, 0x6f, 0x72, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x76, 0x35, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x46, 0x6f,
	0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x73, 0x46, 0x6f, 0x72, 0x54, 0x6f, 0x70, 0x69,
	0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x38, 0x88, 0xe7, 0xb0, 0x2a, 0x01,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2d, 0x12, 0x2b, 0x2f, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x2f, 0x76, 0x35, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x66, 0x6f, 0x72,
	0x65, 0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f,
	0x69, 0x64, 0x7d, 0x12, 0xb3, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x72, 0x73, 0x46, 0x6f, 0x72, 0x54, 0x6f, 0x70, 0x69,
	0x63, 0x12, 0x2e, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35,
	0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x65,
	0x72, 0x73, 0x46, 0x6f, 0x72, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2f, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35,
	0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x65,
	0x72, 0x73, 0x46, 0x6f, 0x72, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x35, 0x88, 0xe7, 0xb0, 0x2a, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2a, 0x12,
	0x28, 0x2f, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x35, 0x2f, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x72, 0x73, 0x2f, 0x7b,
	0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x7d, 0x42, 0xc0, 0x01, 0x0a, 0x10, 0x63, 0x6f,
	0x6d, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x42, 0x0a,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x4f, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x6c, 0x6c, 0x6f, 0x72, 0x61, 0x2d,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x61, 0x6c, 0x6c, 0x6f, 0x72, 0x61, 0x2d, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x2f, 0x78, 0x2f, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76,
	0x35, 0x3b, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x76, 0x35, 0xa2, 0x02, 0x03,
	0x45, 0x58, 0x58, 0xaa, 0x02, 0x0c, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x56, 0x35, 0xca, 0x02, 0x0c, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x5c, 0x56,
	0x35, 0xe2, 0x02, 0x18, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x5c, 0x56, 0x35,
	0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0d, 0x45,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x3a, 0x3a, 0x56, 0x35, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_emissions_v5_query_proto_rawDescOnce sync.Once
	file_emissions_v5_query_proto_rawDescData = file_emissions_v5_query_proto_rawDesc
)

func file_emissions_v5_query_proto_rawDescGZIP() []byte {
	file_emissions_v5_query_proto_rawDescOnce.Do(func() {
		file_emissions_v5_query_proto_rawDescData = protoimpl.X.CompressGZIP(file_emissions_v5_query_proto_rawDescData)
	})
	return file_emissions_v5_query_proto_rawDescData
}

var file_emissions_v5_query_proto_msgTypes = make([]protoimpl.MessageInfo, 166)
var file_emissions_v5_query_proto_goTypes = []interface{}{
	(*GetCountInfererInclusionsInTopicRequest)(nil),             // 0: emissions.v5.GetCountInfererInclusionsInTopicRequest
	(*GetCountInfererInclusionsInTopicResponse)(nil),            // 1: emissions.v5.GetCountInfererInclusionsInTopicResponse
	(*GetCountForecasterInclusionsInTopicRequest)(nil),          // 2: emissions.v5.GetCountForecasterInclusionsInTopicRequest
	(*GetCountForecasterInclusionsInTopicResponse)(nil),         // 3: emissions.v5.GetCountForecasterInclusionsInTopicResponse
	(*GetNaiveInfererNetworkRegretRequest)(nil),                 // 4: emissions.v5.GetNaiveInfererNetworkRegretRequest
	(*GetNaiveInfererNetworkRegretResponse)(nil),                // 5: emissions.v5.GetNaiveInfererNetworkRegretResponse
	(*GetOneOutInfererInfererNetworkRegretRequest)(nil),         // 6: emissions.v5.GetOneOutInfererInfererNetworkRegretRequest
	(*GetOneOutInfererInfererNetworkRegretResponse)(nil),        // 7: emissions.v5.GetOneOutInfererInfererNetworkRegretResponse
	(*GetOneOutInfererForecasterNetworkRegretRequest)(nil),      // 8: emissions.v5.GetOneOutInfererForecasterNetworkRegretRequest
	(*GetOneOutInfererForecasterNetworkRegretResponse)(nil),     // 9: emissions.v5.GetOneOutInfererForecasterNetworkRegretResponse
	(*GetOneOutForecasterInfererNetworkRegretRequest)(nil),      // 10: emissions.v5.GetOneOutForecasterInfererNetworkRegretRequest
	(*GetOneOutForecasterInfererNetworkRegretResponse)(nil),     // 11: emissions.v5.GetOneOutForecasterInfererNetworkRegretResponse
	(*GetOneOutForecasterForecasterNetworkRegretRequest)(nil),   // 12: emissions.v5.GetOneOutForecasterForecasterNetworkRegretRequest
	(*GetOneOutForecasterForecasterNetworkRegretResponse)(nil),  // 13: emissions.v5.GetOneOutForecasterForecasterNetworkRegretResponse
	(*GetParamsRequest)(nil),                                    // 14: emissions.v5.GetParamsRequest
	(*GetParamsResponse)(nil),                                   // 15: emissions.v5.GetParamsResponse
	(*GetTotalStakeRequest)(nil),                                // 16: emissions.v5.GetTotalStakeRequest
	(*GetTotalStakeResponse)(nil),                               // 17: emissions.v5.GetTotalStakeResponse
	(*GetReputerStakeInTopicRequest)(nil),                       // 18: emissions.v5.GetReputerStakeInTopicRequest
	(*GetReputerStakeInTopicResponse)(nil),                      // 19: emissions.v5.GetReputerStakeInTopicResponse
	(*GetMultiReputerStakeInTopicRequest)(nil),                  // 20: emissions.v5.GetMultiReputerStakeInTopicRequest
	(*GetMultiReputerStakeInTopicResponse)(nil),                 // 21: emissions.v5.GetMultiReputerStakeInTopicResponse
	(*GetStakeFromReputerInTopicInSelfRequest)(nil),             // 22: emissions.v5.GetStakeFromReputerInTopicInSelfRequest
	(*GetStakeFromReputerInTopicInSelfResponse)(nil),            // 23: emissions.v5.GetStakeFromReputerInTopicInSelfResponse
	(*GetDelegateStakeInTopicInReputerRequest)(nil),             // 24: emissions.v5.GetDelegateStakeInTopicInReputerRequest
	(*GetDelegateStakeInTopicInReputerResponse)(nil),            // 25: emissions.v5.GetDelegateStakeInTopicInReputerResponse
	(*GetStakeFromDelegatorInTopicInReputerRequest)(nil),        // 26: emissions.v5.GetStakeFromDelegatorInTopicInReputerRequest
	(*GetStakeFromDelegatorInTopicInReputerResponse)(nil),       // 27: emissions.v5.GetStakeFromDelegatorInTopicInReputerResponse
	(*GetStakeFromDelegatorInTopicRequest)(nil),                 // 28: emissions.v5.GetStakeFromDelegatorInTopicRequest
	(*GetStakeFromDelegatorInTopicResponse)(nil),                // 29: emissions.v5.GetStakeFromDelegatorInTopicResponse
	(*GetTopicStakeRequest)(nil),                                // 30: emissions.v5.GetTopicStakeRequest
	(*GetTopicStakeResponse)(nil),                               // 31: emissions.v5.GetTopicStakeResponse
	(*GetNetworkLossBundleAtBlockRequest)(nil),                  // 32: emissions.v5.GetNetworkLossBundleAtBlockRequest
	(*GetNetworkLossBundleAtBlockResponse)(nil),                 // 33: emissions.v5.GetNetworkLossBundleAtBlockResponse
	(*GetNextTopicIdRequest)(nil),                               // 34: emissions.v5.GetNextTopicIdRequest
	(*GetNextTopicIdResponse)(nil),                              // 35: emissions.v5.GetNextTopicIdResponse
	(*GetTopicRequest)(nil),                                     // 36: emissions.v5.GetTopicRequest
	(*GetTopicResponse)(nil),                                    // 37: emissions.v5.GetTopicResponse
	(*GetActiveTopicsRequest)(nil),                              // 38: emissions.v5.GetActiveTopicsRequest
	(*GetActiveTopicsResponse)(nil),                             // 39: emissions.v5.GetActiveTopicsResponse
	(*GetInferencesAtBlockRequest)(nil),                         // 40: emissions.v5.GetInferencesAtBlockRequest
	(*GetInferencesAtBlockResponse)(nil),                        // 41: emissions.v5.GetInferencesAtBlockResponse
	(*GetLatestTopicInferencesRequest)(nil),                     // 42: emissions.v5.GetLatestTopicInferencesRequest
	(*GetLatestTopicInferencesResponse)(nil),                    // 43: emissions.v5.GetLatestTopicInferencesResponse
	(*GetForecastsAtBlockRequest)(nil),                          // 44: emissions.v5.GetForecastsAtBlockRequest
	(*GetForecastsAtBlockResponse)(nil),                         // 45: emissions.v5.GetForecastsAtBlockResponse
	(*GetWorkerLatestInferenceByTopicIdRequest)(nil),            // 46: emissions.v5.GetWorkerLatestInferenceByTopicIdRequest
	(*GetWorkerLatestInferenceByTopicIdResponse)(nil),           // 47: emissions.v5.GetWorkerLatestInferenceByTopicIdResponse
	(*GetWorkerNodeInfoRequest)(nil),                            // 48: emissions.v5.GetWorkerNodeInfoRequest
	(*GetWorkerNodeInfoResponse)(nil),                           // 49: emissions.v5.GetWorkerNodeInfoResponse
	(*GetReputerNodeInfoRequest)(nil),                           // 50: emissions.v5.GetReputerNodeInfoRequest
	(*GetReputerNodeInfoResponse)(nil),                          // 51: emissions.v5.GetReputerNodeInfoResponse
	(*GetNetworkInferencesAtBlockRequest)(nil),                  // 52: emissions.v5.GetNetworkInferencesAtBlockRequest
	(*GetLatestNetworkInferencesRequest)(nil),                   // 53: emissions.v5.GetLatestNetworkInferencesRequest
	(*GetLatestAvailableNetworkInferencesRequest)(nil),          // 54: emissions.v5.GetLatestAvailableNetworkInferencesRequest
	(*IsWorkerNonceUnfulfilledRequest)(nil),                     // 55: emissions.v5.IsWorkerNonceUnfulfilledRequest
	(*IsWorkerNonceUnfulfilledResponse)(nil),                    // 56: emissions.v5.IsWorkerNonceUnfulfilledResponse
	(*GetUnfulfilledReputerNoncesRequest)(nil),                  // 57: emissions.v5.GetUnfulfilledReputerNoncesRequest
	(*GetUnfulfilledReputerNoncesResponse)(nil),                 // 58: emissions.v5.GetUnfulfilledReputerNoncesResponse
	(*GetUnfulfilledWorkerNoncesRequest)(nil),                   // 59: emissions.v5.GetUnfulfilledWorkerNoncesRequest
	(*GetUnfulfilledWorkerNoncesResponse)(nil),                  // 60: emissions.v5.GetUnfulfilledWorkerNoncesResponse
	(*GetInfererNetworkRegretRequest)(nil),                      // 61: emissions.v5.GetInfererNetworkRegretRequest
	(*GetInfererNetworkRegretResponse)(nil),                     // 62: emissions.v5.GetInfererNetworkRegretResponse
	(*GetForecasterNetworkRegretRequest)(nil),                   // 63: emissions.v5.GetForecasterNetworkRegretRequest
	(*GetForecasterNetworkRegretResponse)(nil),                  // 64: emissions.v5.GetForecasterNetworkRegretResponse
	(*GetOneInForecasterNetworkRegretRequest)(nil),              // 65: emissions.v5.GetOneInForecasterNetworkRegretRequest
	(*GetOneInForecasterNetworkRegretResponse)(nil),             // 66: emissions.v5.GetOneInForecasterNetworkRegretResponse
	(*IsReputerNonceUnfulfilledRequest)(nil),                    // 67: emissions.v5.IsReputerNonceUnfulfilledRequest
	(*IsReputerNonceUnfulfilledResponse)(nil),                   // 68: emissions.v5.IsReputerNonceUnfulfilledResponse
	(*GetNetworkInferencesAtBlockResponse)(nil),                 // 69: emissions.v5.GetNetworkInferencesAtBlockResponse
	(*GetLatestNetworkInferencesResponse)(nil),                  // 70: emissions.v5.GetLatestNetworkInferencesResponse
	(*GetLatestAvailableNetworkInferencesResponse)(nil),         // 71: emissions.v5.GetLatestAvailableNetworkInferencesResponse
	(*IsWorkerRegisteredInTopicIdRequest)(nil),                  // 72: emissions.v5.IsWorkerRegisteredInTopicIdRequest
	(*IsWorkerRegisteredInTopicIdResponse)(nil),                 // 73: emissions.v5.IsWorkerRegisteredInTopicIdResponse
	(*IsReputerRegisteredInTopicIdRequest)(nil),                 // 74: emissions.v5.IsReputerRegisteredInTopicIdRequest
	(*IsReputerRegisteredInTopicIdResponse)(nil),                // 75: emissions.v5.IsReputerRegisteredInTopicIdResponse
	(*IsWhitelistAdminRequest)(nil),                             // 76: emissions.v5.IsWhitelistAdminRequest
	(*IsWhitelistAdminResponse)(nil),                            // 77: emissions.v5.IsWhitelistAdminResponse
	(*GetStakeRemovalsUpUntilBlockRequest)(nil),                 // 78: emissions.v5.GetStakeRemovalsUpUntilBlockRequest
	(*GetStakeRemovalsUpUntilBlockResponse)(nil),                // 79: emissions.v5.GetStakeRemovalsUpUntilBlockResponse
	(*GetDelegateStakeRemovalsUpUntilBlockRequest)(nil),         // 80: emissions.v5.GetDelegateStakeRemovalsUpUntilBlockRequest
	(*GetDelegateStakeRemovalsUpUntilBlockResponse)(nil),        // 81: emissions.v5.GetDelegateStakeRemovalsUpUntilBlockResponse
	(*GetStakeRemovalInfoRequest)(nil),                          // 82: emissions.v5.GetStakeRemovalInfoRequest
	(*GetStakeRemovalInfoResponse)(nil),                         // 83: emissions.v5.GetStakeRemovalInfoResponse
	(*GetDelegateStakeRemovalInfoRequest)(nil),                  // 84: emissions.v5.GetDelegateStakeRemovalInfoRequest
	(*GetDelegateStakeRemovalInfoResponse)(nil),                 // 85: emissions.v5.GetDelegateStakeRemovalInfoResponse
	(*GetTopicLastWorkerCommitInfoRequest)(nil),                 // 86: emissions.v5.GetTopicLastWorkerCommitInfoRequest
	(*GetTopicLastWorkerCommitInfoResponse)(nil),                // 87: emissions.v5.GetTopicLastWorkerCommitInfoResponse
	(*GetTopicLastReputerCommitInfoRequest)(nil),                // 88: emissions.v5.GetTopicLastReputerCommitInfoRequest
	(*GetTopicLastReputerCommitInfoResponse)(nil),               // 89: emissions.v5.GetTopicLastReputerCommitInfoResponse
	(*GetTopicRewardNonceRequest)(nil),                          // 90: emissions.v5.GetTopicRewardNonceRequest
	(*GetTopicRewardNonceResponse)(nil),                         // 91: emissions.v5.GetTopicRewardNonceResponse
	(*GetReputerLossBundlesAtBlockRequest)(nil),                 // 92: emissions.v5.GetReputerLossBundlesAtBlockRequest
	(*GetReputerLossBundlesAtBlockResponse)(nil),                // 93: emissions.v5.GetReputerLossBundlesAtBlockResponse
	(*GetStakeReputerAuthorityRequest)(nil),                     // 94: emissions.v5.GetStakeReputerAuthorityRequest
	(*GetStakeReputerAuthorityResponse)(nil),                    // 95: emissions.v5.GetStakeReputerAuthorityResponse
	(*GetDelegateStakePlacementRequest)(nil),                    // 96: emissions.v5.GetDelegateStakePlacementRequest
	(*GetDelegateStakePlacementResponse)(nil),                   // 97: emissions.v5.GetDelegateStakePlacementResponse
	(*GetDelegateStakeUponReputerRequest)(nil),                  // 98: emissions.v5.GetDelegateStakeUponReputerRequest
	(*GetDelegateStakeUponReputerResponse)(nil),                 // 99: emissions.v5.GetDelegateStakeUponReputerResponse
	(*GetDelegateRewardPerShareRequest)(nil),                    // 100: emissions.v5.GetDelegateRewardPerShareRequest
	(*GetDelegateRewardPerShareResponse)(nil),                   // 101: emissions.v5.GetDelegateRewardPerShareResponse
	(*GetStakeRemovalForReputerAndTopicIdRequest)(nil),          // 102: emissions.v5.GetStakeRemovalForReputerAndTopicIdRequest
	(*GetStakeRemovalForReputerAndTopicIdResponse)(nil),         // 103: emissions.v5.GetStakeRemovalForReputerAndTopicIdResponse
	(*GetDelegateStakeRemovalRequest)(nil),                      // 104: emissions.v5.GetDelegateStakeRemovalRequest
	(*GetDelegateStakeRemovalResponse)(nil),                     // 105: emissions.v5.GetDelegateStakeRemovalResponse
	(*GetPreviousTopicWeightRequest)(nil),                       // 106: emissions.v5.GetPreviousTopicWeightRequest
	(*GetPreviousTopicWeightResponse)(nil),                      // 107: emissions.v5.GetPreviousTopicWeightResponse
	(*GetTotalSumPreviousTopicWeightsRequest)(nil),              // 108: emissions.v5.GetTotalSumPreviousTopicWeightsRequest
	(*GetTotalSumPreviousTopicWeightsResponse)(nil),             // 109: emissions.v5.GetTotalSumPreviousTopicWeightsResponse
	(*TopicExistsRequest)(nil),                                  // 110: emissions.v5.TopicExistsRequest
	(*TopicExistsResponse)(nil),                                 // 111: emissions.v5.TopicExistsResponse
	(*IsTopicActiveRequest)(nil),                                // 112: emissions.v5.IsTopicActiveRequest
	(*IsTopicActiveResponse)(nil),                               // 113: emissions.v5.IsTopicActiveResponse
	(*GetTopicFeeRevenueRequest)(nil),                           // 114: emissions.v5.GetTopicFeeRevenueRequest
	(*GetTopicFeeRevenueResponse)(nil),                          // 115: emissions.v5.GetTopicFeeRevenueResponse
	(*GetInfererScoreEmaRequest)(nil),                           // 116: emissions.v5.GetInfererScoreEmaRequest
	(*GetInfererScoreEmaResponse)(nil),                          // 117: emissions.v5.GetInfererScoreEmaResponse
	(*GetForecasterScoreEmaRequest)(nil),                        // 118: emissions.v5.GetForecasterScoreEmaRequest
	(*GetForecasterScoreEmaResponse)(nil),                       // 119: emissions.v5.GetForecasterScoreEmaResponse
	(*GetReputerScoreEmaRequest)(nil),                           // 120: emissions.v5.GetReputerScoreEmaRequest
	(*GetReputerScoreEmaResponse)(nil),                          // 121: emissions.v5.GetReputerScoreEmaResponse
	(*GetInferenceScoresUntilBlockRequest)(nil),                 // 122: emissions.v5.GetInferenceScoresUntilBlockRequest
	(*GetInferenceScoresUntilBlockResponse)(nil),                // 123: emissions.v5.GetInferenceScoresUntilBlockResponse
	(*GetPreviousTopicQuantileForecasterScoreEmaRequest)(nil),   // 124: emissions.v5.GetPreviousTopicQuantileForecasterScoreEmaRequest
	(*GetPreviousTopicQuantileForecasterScoreEmaResponse)(nil),  // 125: emissions.v5.GetPreviousTopicQuantileForecasterScoreEmaResponse
	(*GetPreviousTopicQuantileInfererScoreEmaRequest)(nil),      // 126: emissions.v5.GetPreviousTopicQuantileInfererScoreEmaRequest
	(*GetPreviousTopicQuantileInfererScoreEmaResponse)(nil),     // 127: emissions.v5.GetPreviousTopicQuantileInfererScoreEmaResponse
	(*GetPreviousTopicQuantileReputerScoreEmaRequest)(nil),      // 128: emissions.v5.GetPreviousTopicQuantileReputerScoreEmaRequest
	(*GetPreviousTopicQuantileReputerScoreEmaResponse)(nil),     // 129: emissions.v5.GetPreviousTopicQuantileReputerScoreEmaResponse
	(*GetWorkerInferenceScoresAtBlockRequest)(nil),              // 130: emissions.v5.GetWorkerInferenceScoresAtBlockRequest
	(*GetWorkerInferenceScoresAtBlockResponse)(nil),             // 131: emissions.v5.GetWorkerInferenceScoresAtBlockResponse
	(*GetCurrentLowestInfererScoreRequest)(nil),                 // 132: emissions.v5.GetCurrentLowestInfererScoreRequest
	(*GetCurrentLowestInfererScoreResponse)(nil),                // 133: emissions.v5.GetCurrentLowestInfererScoreResponse
	(*GetForecastScoresUntilBlockRequest)(nil),                  // 134: emissions.v5.GetForecastScoresUntilBlockRequest
	(*GetForecastScoresUntilBlockResponse)(nil),                 // 135: emissions.v5.GetForecastScoresUntilBlockResponse
	(*GetWorkerForecastScoresAtBlockRequest)(nil),               // 136: emissions.v5.GetWorkerForecastScoresAtBlockRequest
	(*GetWorkerForecastScoresAtBlockResponse)(nil),              // 137: emissions.v5.GetWorkerForecastScoresAtBlockResponse
	(*GetCurrentLowestForecasterScoreRequest)(nil),              // 138: emissions.v5.GetCurrentLowestForecasterScoreRequest
	(*GetCurrentLowestForecasterScoreResponse)(nil),             // 139: emissions.v5.GetCurrentLowestForecasterScoreResponse
	(*GetReputersScoresAtBlockRequest)(nil),                     // 140: emissions.v5.GetReputersScoresAtBlockRequest
	(*GetReputersScoresAtBlockResponse)(nil),                    // 141: emissions.v5.GetReputersScoresAtBlockResponse
	(*GetCurrentLowestReputerScoreRequest)(nil),                 // 142: emissions.v5.GetCurrentLowestReputerScoreRequest
	(*GetCurrentLowestReputerScoreResponse)(nil),                // 143: emissions.v5.GetCurrentLowestReputerScoreResponse
	(*GetListeningCoefficientRequest)(nil),                      // 144: emissions.v5.GetListeningCoefficientRequest
	(*GetListeningCoefficientResponse)(nil),                     // 145: emissions.v5.GetListeningCoefficientResponse
	(*GetPreviousReputerRewardFractionRequest)(nil),             // 146: emissions.v5.GetPreviousReputerRewardFractionRequest
	(*GetPreviousReputerRewardFractionResponse)(nil),            // 147: emissions.v5.GetPreviousReputerRewardFractionResponse
	(*GetPreviousInferenceRewardFractionRequest)(nil),           // 148: emissions.v5.GetPreviousInferenceRewardFractionRequest
	(*GetPreviousInferenceRewardFractionResponse)(nil),          // 149: emissions.v5.GetPreviousInferenceRewardFractionResponse
	(*GetPreviousForecastRewardFractionRequest)(nil),            // 150: emissions.v5.GetPreviousForecastRewardFractionRequest
	(*GetPreviousForecastRewardFractionResponse)(nil),           // 151: emissions.v5.GetPreviousForecastRewardFractionResponse
	(*GetPreviousPercentageRewardToStakedReputersRequest)(nil),  // 152: emissions.v5.GetPreviousPercentageRewardToStakedReputersRequest
	(*GetPreviousPercentageRewardToStakedReputersResponse)(nil), // 153: emissions.v5.GetPreviousPercentageRewardToStakedReputersResponse
	(*GetTotalRewardToDistributeRequest)(nil),                   // 154: emissions.v5.GetTotalRewardToDistributeRequest
	(*GetTotalRewardToDistributeResponse)(nil),                  // 155: emissions.v5.GetTotalRewardToDistributeResponse
	(*GetActiveTopicsAtBlockRequest)(nil),                       // 156: emissions.v5.GetActiveTopicsAtBlockRequest
	(*GetActiveTopicsAtBlockResponse)(nil),                      // 157: emissions.v5.GetActiveTopicsAtBlockResponse
	(*GetNextChurningBlockByTopicIdRequest)(nil),                // 158: emissions.v5.GetNextChurningBlockByTopicIdRequest
	(*GetNextChurningBlockByTopicIdResponse)(nil),               // 159: emissions.v5.GetNextChurningBlockByTopicIdResponse
	(*GetActiveReputersForTopicRequest)(nil),                    // 160: emissions.v5.GetActiveReputersForTopicRequest
	(*GetActiveReputersForTopicResponse)(nil),                   // 161: emissions.v5.GetActiveReputersForTopicResponse
	(*GetActiveForecastersForTopicRequest)(nil),                 // 162: emissions.v5.GetActiveForecastersForTopicRequest
	(*GetActiveForecastersForTopicResponse)(nil),                // 163: emissions.v5.GetActiveForecastersForTopicResponse
	(*GetActiveInferersForTopicRequest)(nil),                    // 164: emissions.v5.GetActiveInferersForTopicRequest
	(*GetActiveInferersForTopicResponse)(nil),                   // 165: emissions.v5.GetActiveInferersForTopicResponse
	(*v3.TimestampedValue)(nil),                                 // 166: emissions.v3.TimestampedValue
	(*Params)(nil),                                              // 167: emissions.v5.Params
	(*v3.StakeInfo)(nil),                                        // 168: emissions.v3.StakeInfo
	(*v3.ValueBundle)(nil),                                      // 169: emissions.v3.ValueBundle
	(*v3.Topic)(nil),                                            // 170: emissions.v3.Topic
	(*v3.SimpleCursorPaginationRequest)(nil),                    // 171: emissions.v3.SimpleCursorPaginationRequest
	(*v3.SimpleCursorPaginationResponse)(nil),                   // 172: emissions.v3.SimpleCursorPaginationResponse
	(*v3.Inferences)(nil),                                       // 173: emissions.v3.Inferences
	(*v3.Forecasts)(nil),                                        // 174: emissions.v3.Forecasts
	(*v3.Inference)(nil),                                        // 175: emissions.v3.Inference
	(*v3.OffchainNode)(nil),                                     // 176: emissions.v3.OffchainNode
	(*v3.ReputerRequestNonces)(nil),                             // 177: emissions.v3.ReputerRequestNonces
	(*v3.Nonces)(nil),                                           // 178: emissions.v3.Nonces
	(*v3.RegretInformedWeight)(nil),                             // 179: emissions.v3.RegretInformedWeight
	(*v3.StakeRemovalInfo)(nil),                                 // 180: emissions.v3.StakeRemovalInfo
	(*v3.DelegateStakeRemovalInfo)(nil),                         // 181: emissions.v3.DelegateStakeRemovalInfo
	(*v3.TimestampedActorNonce)(nil),                            // 182: emissions.v3.TimestampedActorNonce
	(*v3.ReputerValueBundles)(nil),                              // 183: emissions.v3.ReputerValueBundles
	(*v3.DelegatorInfo)(nil),                                    // 184: emissions.v3.DelegatorInfo
	(*v3.Score)(nil),                                            // 185: emissions.v3.Score
	(*v3.Scores)(nil),                                           // 186: emissions.v3.Scores
	(*v3.ListeningCoefficient)(nil),                             // 187: emissions.v3.ListeningCoefficient
}
var file_emissions_v5_query_proto_depIdxs = []int32{
	166, // 0: emissions.v5.GetNaiveInfererNetworkRegretResponse.regret:type_name -> emissions.v3.TimestampedValue
	166, // 1: emissions.v5.GetOneOutInfererInfererNetworkRegretResponse.regret:type_name -> emissions.v3.TimestampedValue
	166, // 2: emissions.v5.GetOneOutInfererForecasterNetworkRegretResponse.regret:type_name -> emissions.v3.TimestampedValue
	166, // 3: emissions.v5.GetOneOutForecasterInfererNetworkRegretResponse.regret:type_name -> emissions.v3.TimestampedValue
	166, // 4: emissions.v5.GetOneOutForecasterForecasterNetworkRegretResponse.regret:type_name -> emissions.v3.TimestampedValue
	167, // 5: emissions.v5.GetParamsResponse.params:type_name -> emissions.v5.Params
	168, // 6: emissions.v5.GetMultiReputerStakeInTopicResponse.amounts:type_name -> emissions.v3.StakeInfo
	169, // 7: emissions.v5.GetNetworkLossBundleAtBlockResponse.loss_bundle:type_name -> emissions.v3.ValueBundle
	170, // 8: emissions.v5.GetTopicResponse.topic:type_name -> emissions.v3.Topic
	171, // 9: emissions.v5.GetActiveTopicsRequest.pagination:type_name -> emissions.v3.SimpleCursorPaginationRequest
	170, // 10: emissions.v5.GetActiveTopicsResponse.topics:type_name -> emissions.v3.Topic
	172, // 11: emissions.v5.GetActiveTopicsResponse.pagination:type_name -> emissions.v3.SimpleCursorPaginationResponse
	173, // 12: emissions.v5.GetInferencesAtBlockResponse.inferences:type_name -> emissions.v3.Inferences
	173, // 13: emissions.v5.GetLatestTopicInferencesResponse.inferences:type_name -> emissions.v3.Inferences
	174, // 14: emissions.v5.GetForecastsAtBlockResponse.forecasts:type_name -> emissions.v3.Forecasts
	175, // 15: emissions.v5.GetWorkerLatestInferenceByTopicIdResponse.latest_inference:type_name -> emissions.v3.Inference
	176, // 16: emissions.v5.GetWorkerNodeInfoResponse.node_info:type_name -> emissions.v3.OffchainNode
	176, // 17: emissions.v5.GetReputerNodeInfoResponse.node_info:type_name -> emissions.v3.OffchainNode
	177, // 18: emissions.v5.GetUnfulfilledReputerNoncesResponse.nonces:type_name -> emissions.v3.ReputerRequestNonces
	178, // 19: emissions.v5.GetUnfulfilledWorkerNoncesResponse.nonces:type_name -> emissions.v3.Nonces
	166, // 20: emissions.v5.GetInfererNetworkRegretResponse.regret:type_name -> emissions.v3.TimestampedValue
	166, // 21: emissions.v5.GetForecasterNetworkRegretResponse.regret:type_name -> emissions.v3.TimestampedValue
	166, // 22: emissions.v5.GetOneInForecasterNetworkRegretResponse.regret:type_name -> emissions.v3.TimestampedValue
	169, // 23: emissions.v5.GetNetworkInferencesAtBlockResponse.network_inferences:type_name -> emissions.v3.ValueBundle
	169, // 24: emissions.v5.GetLatestNetworkInferencesResponse.network_inferences:type_name -> emissions.v3.ValueBundle
	179, // 25: emissions.v5.GetLatestNetworkInferencesResponse.inferer_weights:type_name -> emissions.v3.RegretInformedWeight
	179, // 26: emissions.v5.GetLatestNetworkInferencesResponse.forecaster_weights:type_name -> emissions.v3.RegretInformedWeight
	169, // 27: emissions.v5.GetLatestAvailableNetworkInferencesResponse.network_inferences:type_name -> emissions.v3.ValueBundle
	179, // 28: emissions.v5.GetLatestAvailableNetworkInferencesResponse.inferer_weights:type_name -> emissions.v3.RegretInformedWeight
	179, // 29: emissions.v5.GetLatestAvailableNetworkInferencesResponse.forecaster_weights:type_name -> emissions.v3.RegretInformedWeight
	180, // 30: emissions.v5.GetStakeRemovalsUpUntilBlockResponse.removals:type_name -> emissions.v3.StakeRemovalInfo
	181, // 31: emissions.v5.GetDelegateStakeRemovalsUpUntilBlockResponse.removals:type_name -> emissions.v3.DelegateStakeRemovalInfo
	180, // 32: emissions.v5.GetStakeRemovalInfoResponse.removal:type_name -> emissions.v3.StakeRemovalInfo
	181, // 33: emissions.v5.GetDelegateStakeRemovalInfoResponse.removal:type_name -> emissions.v3.DelegateStakeRemovalInfo
	182, // 34: emissions.v5.GetTopicLastWorkerCommitInfoResponse.last_commit:type_name -> emissions.v3.TimestampedActorNonce
	182, // 35: emissions.v5.GetTopicLastReputerCommitInfoResponse.last_commit:type_name -> emissions.v3.TimestampedActorNonce
	183, // 36: emissions.v5.GetReputerLossBundlesAtBlockResponse.loss_bundles:type_name -> emissions.v3.ReputerValueBundles
	184, // 37: emissions.v5.GetDelegateStakePlacementResponse.delegator_info:type_name -> emissions.v3.DelegatorInfo
	180, // 38: emissions.v5.GetStakeRemovalForReputerAndTopicIdResponse.stake_removal_info:type_name -> emissions.v3.StakeRemovalInfo
	181, // 39: emissions.v5.GetDelegateStakeRemovalResponse.stake_removal_info:type_name -> emissions.v3.DelegateStakeRemovalInfo
	185, // 40: emissions.v5.GetInfererScoreEmaResponse.score:type_name -> emissions.v3.Score
	185, // 41: emissions.v5.GetForecasterScoreEmaResponse.score:type_name -> emissions.v3.Score
	185, // 42: emissions.v5.GetReputerScoreEmaResponse.score:type_name -> emissions.v3.Score
	185, // 43: emissions.v5.GetInferenceScoresUntilBlockResponse.scores:type_name -> emissions.v3.Score
	186, // 44: emissions.v5.GetWorkerInferenceScoresAtBlockResponse.scores:type_name -> emissions.v3.Scores
	185, // 45: emissions.v5.GetCurrentLowestInfererScoreResponse.score:type_name -> emissions.v3.Score
	185, // 46: emissions.v5.GetForecastScoresUntilBlockResponse.scores:type_name -> emissions.v3.Score
	186, // 47: emissions.v5.GetWorkerForecastScoresAtBlockResponse.scores:type_name -> emissions.v3.Scores
	185, // 48: emissions.v5.GetCurrentLowestForecasterScoreResponse.score:type_name -> emissions.v3.Score
	186, // 49: emissions.v5.GetReputersScoresAtBlockResponse.scores:type_name -> emissions.v3.Scores
	185, // 50: emissions.v5.GetCurrentLowestReputerScoreResponse.score:type_name -> emissions.v3.Score
	187, // 51: emissions.v5.GetListeningCoefficientResponse.listening_coefficient:type_name -> emissions.v3.ListeningCoefficient
	170, // 52: emissions.v5.GetActiveTopicsAtBlockResponse.topics:type_name -> emissions.v3.Topic
	172, // 53: emissions.v5.GetActiveTopicsAtBlockResponse.pagination:type_name -> emissions.v3.SimpleCursorPaginationResponse
	14,  // 54: emissions.v5.QueryService.GetParams:input_type -> emissions.v5.GetParamsRequest
	34,  // 55: emissions.v5.QueryService.GetNextTopicId:input_type -> emissions.v5.GetNextTopicIdRequest
	36,  // 56: emissions.v5.QueryService.GetTopic:input_type -> emissions.v5.GetTopicRequest
	46,  // 57: emissions.v5.QueryService.GetWorkerLatestInferenceByTopicId:input_type -> emissions.v5.GetWorkerLatestInferenceByTopicIdRequest
	40,  // 58: emissions.v5.QueryService.GetInferencesAtBlock:input_type -> emissions.v5.GetInferencesAtBlockRequest
	42,  // 59: emissions.v5.QueryService.GetLatestTopicInferences:input_type -> emissions.v5.GetLatestTopicInferencesRequest
	44,  // 60: emissions.v5.QueryService.GetForecastsAtBlock:input_type -> emissions.v5.GetForecastsAtBlockRequest
	32,  // 61: emissions.v5.QueryService.GetNetworkLossBundleAtBlock:input_type -> emissions.v5.GetNetworkLossBundleAtBlockRequest
	16,  // 62: emissions.v5.QueryService.GetTotalStake:input_type -> emissions.v5.GetTotalStakeRequest
	18,  // 63: emissions.v5.QueryService.GetReputerStakeInTopic:input_type -> emissions.v5.GetReputerStakeInTopicRequest
	20,  // 64: emissions.v5.QueryService.GetMultiReputerStakeInTopic:input_type -> emissions.v5.GetMultiReputerStakeInTopicRequest
	22,  // 65: emissions.v5.QueryService.GetStakeFromReputerInTopicInSelf:input_type -> emissions.v5.GetStakeFromReputerInTopicInSelfRequest
	24,  // 66: emissions.v5.QueryService.GetDelegateStakeInTopicInReputer:input_type -> emissions.v5.GetDelegateStakeInTopicInReputerRequest
	26,  // 67: emissions.v5.QueryService.GetStakeFromDelegatorInTopicInReputer:input_type -> emissions.v5.GetStakeFromDelegatorInTopicInReputerRequest
	28,  // 68: emissions.v5.QueryService.GetStakeFromDelegatorInTopic:input_type -> emissions.v5.GetStakeFromDelegatorInTopicRequest
	30,  // 69: emissions.v5.QueryService.GetTopicStake:input_type -> emissions.v5.GetTopicStakeRequest
	78,  // 70: emissions.v5.QueryService.GetStakeRemovalsUpUntilBlock:input_type -> emissions.v5.GetStakeRemovalsUpUntilBlockRequest
	80,  // 71: emissions.v5.QueryService.GetDelegateStakeRemovalsUpUntilBlock:input_type -> emissions.v5.GetDelegateStakeRemovalsUpUntilBlockRequest
	82,  // 72: emissions.v5.QueryService.GetStakeRemovalInfo:input_type -> emissions.v5.GetStakeRemovalInfoRequest
	84,  // 73: emissions.v5.QueryService.GetDelegateStakeRemovalInfo:input_type -> emissions.v5.GetDelegateStakeRemovalInfoRequest
	48,  // 74: emissions.v5.QueryService.GetWorkerNodeInfo:input_type -> emissions.v5.GetWorkerNodeInfoRequest
	50,  // 75: emissions.v5.QueryService.GetReputerNodeInfo:input_type -> emissions.v5.GetReputerNodeInfoRequest
	72,  // 76: emissions.v5.QueryService.IsWorkerRegisteredInTopicId:input_type -> emissions.v5.IsWorkerRegisteredInTopicIdRequest
	74,  // 77: emissions.v5.QueryService.IsReputerRegisteredInTopicId:input_type -> emissions.v5.IsReputerRegisteredInTopicIdRequest
	52,  // 78: emissions.v5.QueryService.GetNetworkInferencesAtBlock:input_type -> emissions.v5.GetNetworkInferencesAtBlockRequest
	53,  // 79: emissions.v5.QueryService.GetLatestNetworkInferences:input_type -> emissions.v5.GetLatestNetworkInferencesRequest
	54,  // 80: emissions.v5.QueryService.GetLatestAvailableNetworkInferences:input_type -> emissions.v5.GetLatestAvailableNetworkInferencesRequest
	55,  // 81: emissions.v5.QueryService.IsWorkerNonceUnfulfilled:input_type -> emissions.v5.IsWorkerNonceUnfulfilledRequest
	67,  // 82: emissions.v5.QueryService.IsReputerNonceUnfulfilled:input_type -> emissions.v5.IsReputerNonceUnfulfilledRequest
	59,  // 83: emissions.v5.QueryService.GetUnfulfilledWorkerNonces:input_type -> emissions.v5.GetUnfulfilledWorkerNoncesRequest
	57,  // 84: emissions.v5.QueryService.GetUnfulfilledReputerNonces:input_type -> emissions.v5.GetUnfulfilledReputerNoncesRequest
	61,  // 85: emissions.v5.QueryService.GetInfererNetworkRegret:input_type -> emissions.v5.GetInfererNetworkRegretRequest
	63,  // 86: emissions.v5.QueryService.GetForecasterNetworkRegret:input_type -> emissions.v5.GetForecasterNetworkRegretRequest
	65,  // 87: emissions.v5.QueryService.GetOneInForecasterNetworkRegret:input_type -> emissions.v5.GetOneInForecasterNetworkRegretRequest
	76,  // 88: emissions.v5.QueryService.IsWhitelistAdmin:input_type -> emissions.v5.IsWhitelistAdminRequest
	86,  // 89: emissions.v5.QueryService.GetTopicLastWorkerCommitInfo:input_type -> emissions.v5.GetTopicLastWorkerCommitInfoRequest
	88,  // 90: emissions.v5.QueryService.GetTopicLastReputerCommitInfo:input_type -> emissions.v5.GetTopicLastReputerCommitInfoRequest
	90,  // 91: emissions.v5.QueryService.GetTopicRewardNonce:input_type -> emissions.v5.GetTopicRewardNonceRequest
	92,  // 92: emissions.v5.QueryService.GetReputerLossBundlesAtBlock:input_type -> emissions.v5.GetReputerLossBundlesAtBlockRequest
	94,  // 93: emissions.v5.QueryService.GetStakeReputerAuthority:input_type -> emissions.v5.GetStakeReputerAuthorityRequest
	96,  // 94: emissions.v5.QueryService.GetDelegateStakePlacement:input_type -> emissions.v5.GetDelegateStakePlacementRequest
	98,  // 95: emissions.v5.QueryService.GetDelegateStakeUponReputer:input_type -> emissions.v5.GetDelegateStakeUponReputerRequest
	100, // 96: emissions.v5.QueryService.GetDelegateRewardPerShare:input_type -> emissions.v5.GetDelegateRewardPerShareRequest
	102, // 97: emissions.v5.QueryService.GetStakeRemovalForReputerAndTopicId:input_type -> emissions.v5.GetStakeRemovalForReputerAndTopicIdRequest
	104, // 98: emissions.v5.QueryService.GetDelegateStakeRemoval:input_type -> emissions.v5.GetDelegateStakeRemovalRequest
	106, // 99: emissions.v5.QueryService.GetPreviousTopicWeight:input_type -> emissions.v5.GetPreviousTopicWeightRequest
	108, // 100: emissions.v5.QueryService.GetTotalSumPreviousTopicWeights:input_type -> emissions.v5.GetTotalSumPreviousTopicWeightsRequest
	110, // 101: emissions.v5.QueryService.TopicExists:input_type -> emissions.v5.TopicExistsRequest
	112, // 102: emissions.v5.QueryService.IsTopicActive:input_type -> emissions.v5.IsTopicActiveRequest
	114, // 103: emissions.v5.QueryService.GetTopicFeeRevenue:input_type -> emissions.v5.GetTopicFeeRevenueRequest
	116, // 104: emissions.v5.QueryService.GetInfererScoreEma:input_type -> emissions.v5.GetInfererScoreEmaRequest
	118, // 105: emissions.v5.QueryService.GetForecasterScoreEma:input_type -> emissions.v5.GetForecasterScoreEmaRequest
	120, // 106: emissions.v5.QueryService.GetReputerScoreEma:input_type -> emissions.v5.GetReputerScoreEmaRequest
	122, // 107: emissions.v5.QueryService.GetInferenceScoresUntilBlock:input_type -> emissions.v5.GetInferenceScoresUntilBlockRequest
	124, // 108: emissions.v5.QueryService.GetPreviousTopicQuantileForecasterScoreEma:input_type -> emissions.v5.GetPreviousTopicQuantileForecasterScoreEmaRequest
	126, // 109: emissions.v5.QueryService.GetPreviousTopicQuantileInfererScoreEma:input_type -> emissions.v5.GetPreviousTopicQuantileInfererScoreEmaRequest
	128, // 110: emissions.v5.QueryService.GetPreviousTopicQuantileReputerScoreEma:input_type -> emissions.v5.GetPreviousTopicQuantileReputerScoreEmaRequest
	130, // 111: emissions.v5.QueryService.GetWorkerInferenceScoresAtBlock:input_type -> emissions.v5.GetWorkerInferenceScoresAtBlockRequest
	132, // 112: emissions.v5.QueryService.GetCurrentLowestInfererScore:input_type -> emissions.v5.GetCurrentLowestInfererScoreRequest
	134, // 113: emissions.v5.QueryService.GetForecastScoresUntilBlock:input_type -> emissions.v5.GetForecastScoresUntilBlockRequest
	136, // 114: emissions.v5.QueryService.GetWorkerForecastScoresAtBlock:input_type -> emissions.v5.GetWorkerForecastScoresAtBlockRequest
	138, // 115: emissions.v5.QueryService.GetCurrentLowestForecasterScore:input_type -> emissions.v5.GetCurrentLowestForecasterScoreRequest
	140, // 116: emissions.v5.QueryService.GetReputersScoresAtBlock:input_type -> emissions.v5.GetReputersScoresAtBlockRequest
	142, // 117: emissions.v5.QueryService.GetCurrentLowestReputerScore:input_type -> emissions.v5.GetCurrentLowestReputerScoreRequest
	144, // 118: emissions.v5.QueryService.GetListeningCoefficient:input_type -> emissions.v5.GetListeningCoefficientRequest
	146, // 119: emissions.v5.QueryService.GetPreviousReputerRewardFraction:input_type -> emissions.v5.GetPreviousReputerRewardFractionRequest
	148, // 120: emissions.v5.QueryService.GetPreviousInferenceRewardFraction:input_type -> emissions.v5.GetPreviousInferenceRewardFractionRequest
	150, // 121: emissions.v5.QueryService.GetPreviousForecastRewardFraction:input_type -> emissions.v5.GetPreviousForecastRewardFractionRequest
	152, // 122: emissions.v5.QueryService.GetPreviousPercentageRewardToStakedReputers:input_type -> emissions.v5.GetPreviousPercentageRewardToStakedReputersRequest
	154, // 123: emissions.v5.QueryService.GetTotalRewardToDistribute:input_type -> emissions.v5.GetTotalRewardToDistributeRequest
	4,   // 124: emissions.v5.QueryService.GetNaiveInfererNetworkRegret:input_type -> emissions.v5.GetNaiveInfererNetworkRegretRequest
	6,   // 125: emissions.v5.QueryService.GetOneOutInfererInfererNetworkRegret:input_type -> emissions.v5.GetOneOutInfererInfererNetworkRegretRequest
	8,   // 126: emissions.v5.QueryService.GetOneOutInfererForecasterNetworkRegret:input_type -> emissions.v5.GetOneOutInfererForecasterNetworkRegretRequest
	10,  // 127: emissions.v5.QueryService.GetOneOutForecasterInfererNetworkRegret:input_type -> emissions.v5.GetOneOutForecasterInfererNetworkRegretRequest
	12,  // 128: emissions.v5.QueryService.GetOneOutForecasterForecasterNetworkRegret:input_type -> emissions.v5.GetOneOutForecasterForecasterNetworkRegretRequest
	156, // 129: emissions.v5.QueryService.GetActiveTopicsAtBlock:input_type -> emissions.v5.GetActiveTopicsAtBlockRequest
	158, // 130: emissions.v5.QueryService.GetNextChurningBlockByTopicId:input_type -> emissions.v5.GetNextChurningBlockByTopicIdRequest
	0,   // 131: emissions.v5.QueryService.GetCountInfererInclusionsInTopic:input_type -> emissions.v5.GetCountInfererInclusionsInTopicRequest
	2,   // 132: emissions.v5.QueryService.GetCountForecasterInclusionsInTopic:input_type -> emissions.v5.GetCountForecasterInclusionsInTopicRequest
	160, // 133: emissions.v5.QueryService.GetActiveReputersForTopic:input_type -> emissions.v5.GetActiveReputersForTopicRequest
	162, // 134: emissions.v5.QueryService.GetActiveForecastersForTopic:input_type -> emissions.v5.GetActiveForecastersForTopicRequest
	164, // 135: emissions.v5.QueryService.GetActiveInferersForTopic:input_type -> emissions.v5.GetActiveInferersForTopicRequest
	15,  // 136: emissions.v5.QueryService.GetParams:output_type -> emissions.v5.GetParamsResponse
	35,  // 137: emissions.v5.QueryService.GetNextTopicId:output_type -> emissions.v5.GetNextTopicIdResponse
	37,  // 138: emissions.v5.QueryService.GetTopic:output_type -> emissions.v5.GetTopicResponse
	47,  // 139: emissions.v5.QueryService.GetWorkerLatestInferenceByTopicId:output_type -> emissions.v5.GetWorkerLatestInferenceByTopicIdResponse
	41,  // 140: emissions.v5.QueryService.GetInferencesAtBlock:output_type -> emissions.v5.GetInferencesAtBlockResponse
	43,  // 141: emissions.v5.QueryService.GetLatestTopicInferences:output_type -> emissions.v5.GetLatestTopicInferencesResponse
	45,  // 142: emissions.v5.QueryService.GetForecastsAtBlock:output_type -> emissions.v5.GetForecastsAtBlockResponse
	33,  // 143: emissions.v5.QueryService.GetNetworkLossBundleAtBlock:output_type -> emissions.v5.GetNetworkLossBundleAtBlockResponse
	17,  // 144: emissions.v5.QueryService.GetTotalStake:output_type -> emissions.v5.GetTotalStakeResponse
	19,  // 145: emissions.v5.QueryService.GetReputerStakeInTopic:output_type -> emissions.v5.GetReputerStakeInTopicResponse
	21,  // 146: emissions.v5.QueryService.GetMultiReputerStakeInTopic:output_type -> emissions.v5.GetMultiReputerStakeInTopicResponse
	23,  // 147: emissions.v5.QueryService.GetStakeFromReputerInTopicInSelf:output_type -> emissions.v5.GetStakeFromReputerInTopicInSelfResponse
	25,  // 148: emissions.v5.QueryService.GetDelegateStakeInTopicInReputer:output_type -> emissions.v5.GetDelegateStakeInTopicInReputerResponse
	27,  // 149: emissions.v5.QueryService.GetStakeFromDelegatorInTopicInReputer:output_type -> emissions.v5.GetStakeFromDelegatorInTopicInReputerResponse
	29,  // 150: emissions.v5.QueryService.GetStakeFromDelegatorInTopic:output_type -> emissions.v5.GetStakeFromDelegatorInTopicResponse
	31,  // 151: emissions.v5.QueryService.GetTopicStake:output_type -> emissions.v5.GetTopicStakeResponse
	79,  // 152: emissions.v5.QueryService.GetStakeRemovalsUpUntilBlock:output_type -> emissions.v5.GetStakeRemovalsUpUntilBlockResponse
	81,  // 153: emissions.v5.QueryService.GetDelegateStakeRemovalsUpUntilBlock:output_type -> emissions.v5.GetDelegateStakeRemovalsUpUntilBlockResponse
	83,  // 154: emissions.v5.QueryService.GetStakeRemovalInfo:output_type -> emissions.v5.GetStakeRemovalInfoResponse
	85,  // 155: emissions.v5.QueryService.GetDelegateStakeRemovalInfo:output_type -> emissions.v5.GetDelegateStakeRemovalInfoResponse
	49,  // 156: emissions.v5.QueryService.GetWorkerNodeInfo:output_type -> emissions.v5.GetWorkerNodeInfoResponse
	51,  // 157: emissions.v5.QueryService.GetReputerNodeInfo:output_type -> emissions.v5.GetReputerNodeInfoResponse
	73,  // 158: emissions.v5.QueryService.IsWorkerRegisteredInTopicId:output_type -> emissions.v5.IsWorkerRegisteredInTopicIdResponse
	75,  // 159: emissions.v5.QueryService.IsReputerRegisteredInTopicId:output_type -> emissions.v5.IsReputerRegisteredInTopicIdResponse
	69,  // 160: emissions.v5.QueryService.GetNetworkInferencesAtBlock:output_type -> emissions.v5.GetNetworkInferencesAtBlockResponse
	70,  // 161: emissions.v5.QueryService.GetLatestNetworkInferences:output_type -> emissions.v5.GetLatestNetworkInferencesResponse
	71,  // 162: emissions.v5.QueryService.GetLatestAvailableNetworkInferences:output_type -> emissions.v5.GetLatestAvailableNetworkInferencesResponse
	56,  // 163: emissions.v5.QueryService.IsWorkerNonceUnfulfilled:output_type -> emissions.v5.IsWorkerNonceUnfulfilledResponse
	68,  // 164: emissions.v5.QueryService.IsReputerNonceUnfulfilled:output_type -> emissions.v5.IsReputerNonceUnfulfilledResponse
	60,  // 165: emissions.v5.QueryService.GetUnfulfilledWorkerNonces:output_type -> emissions.v5.GetUnfulfilledWorkerNoncesResponse
	58,  // 166: emissions.v5.QueryService.GetUnfulfilledReputerNonces:output_type -> emissions.v5.GetUnfulfilledReputerNoncesResponse
	62,  // 167: emissions.v5.QueryService.GetInfererNetworkRegret:output_type -> emissions.v5.GetInfererNetworkRegretResponse
	64,  // 168: emissions.v5.QueryService.GetForecasterNetworkRegret:output_type -> emissions.v5.GetForecasterNetworkRegretResponse
	66,  // 169: emissions.v5.QueryService.GetOneInForecasterNetworkRegret:output_type -> emissions.v5.GetOneInForecasterNetworkRegretResponse
	77,  // 170: emissions.v5.QueryService.IsWhitelistAdmin:output_type -> emissions.v5.IsWhitelistAdminResponse
	87,  // 171: emissions.v5.QueryService.GetTopicLastWorkerCommitInfo:output_type -> emissions.v5.GetTopicLastWorkerCommitInfoResponse
	89,  // 172: emissions.v5.QueryService.GetTopicLastReputerCommitInfo:output_type -> emissions.v5.GetTopicLastReputerCommitInfoResponse
	91,  // 173: emissions.v5.QueryService.GetTopicRewardNonce:output_type -> emissions.v5.GetTopicRewardNonceResponse
	93,  // 174: emissions.v5.QueryService.GetReputerLossBundlesAtBlock:output_type -> emissions.v5.GetReputerLossBundlesAtBlockResponse
	95,  // 175: emissions.v5.QueryService.GetStakeReputerAuthority:output_type -> emissions.v5.GetStakeReputerAuthorityResponse
	97,  // 176: emissions.v5.QueryService.GetDelegateStakePlacement:output_type -> emissions.v5.GetDelegateStakePlacementResponse
	99,  // 177: emissions.v5.QueryService.GetDelegateStakeUponReputer:output_type -> emissions.v5.GetDelegateStakeUponReputerResponse
	101, // 178: emissions.v5.QueryService.GetDelegateRewardPerShare:output_type -> emissions.v5.GetDelegateRewardPerShareResponse
	103, // 179: emissions.v5.QueryService.GetStakeRemovalForReputerAndTopicId:output_type -> emissions.v5.GetStakeRemovalForReputerAndTopicIdResponse
	105, // 180: emissions.v5.QueryService.GetDelegateStakeRemoval:output_type -> emissions.v5.GetDelegateStakeRemovalResponse
	107, // 181: emissions.v5.QueryService.GetPreviousTopicWeight:output_type -> emissions.v5.GetPreviousTopicWeightResponse
	109, // 182: emissions.v5.QueryService.GetTotalSumPreviousTopicWeights:output_type -> emissions.v5.GetTotalSumPreviousTopicWeightsResponse
	111, // 183: emissions.v5.QueryService.TopicExists:output_type -> emissions.v5.TopicExistsResponse
	113, // 184: emissions.v5.QueryService.IsTopicActive:output_type -> emissions.v5.IsTopicActiveResponse
	115, // 185: emissions.v5.QueryService.GetTopicFeeRevenue:output_type -> emissions.v5.GetTopicFeeRevenueResponse
	117, // 186: emissions.v5.QueryService.GetInfererScoreEma:output_type -> emissions.v5.GetInfererScoreEmaResponse
	119, // 187: emissions.v5.QueryService.GetForecasterScoreEma:output_type -> emissions.v5.GetForecasterScoreEmaResponse
	121, // 188: emissions.v5.QueryService.GetReputerScoreEma:output_type -> emissions.v5.GetReputerScoreEmaResponse
	123, // 189: emissions.v5.QueryService.GetInferenceScoresUntilBlock:output_type -> emissions.v5.GetInferenceScoresUntilBlockResponse
	125, // 190: emissions.v5.QueryService.GetPreviousTopicQuantileForecasterScoreEma:output_type -> emissions.v5.GetPreviousTopicQuantileForecasterScoreEmaResponse
	127, // 191: emissions.v5.QueryService.GetPreviousTopicQuantileInfererScoreEma:output_type -> emissions.v5.GetPreviousTopicQuantileInfererScoreEmaResponse
	129, // 192: emissions.v5.QueryService.GetPreviousTopicQuantileReputerScoreEma:output_type -> emissions.v5.GetPreviousTopicQuantileReputerScoreEmaResponse
	131, // 193: emissions.v5.QueryService.GetWorkerInferenceScoresAtBlock:output_type -> emissions.v5.GetWorkerInferenceScoresAtBlockResponse
	133, // 194: emissions.v5.QueryService.GetCurrentLowestInfererScore:output_type -> emissions.v5.GetCurrentLowestInfererScoreResponse
	135, // 195: emissions.v5.QueryService.GetForecastScoresUntilBlock:output_type -> emissions.v5.GetForecastScoresUntilBlockResponse
	137, // 196: emissions.v5.QueryService.GetWorkerForecastScoresAtBlock:output_type -> emissions.v5.GetWorkerForecastScoresAtBlockResponse
	139, // 197: emissions.v5.QueryService.GetCurrentLowestForecasterScore:output_type -> emissions.v5.GetCurrentLowestForecasterScoreResponse
	141, // 198: emissions.v5.QueryService.GetReputersScoresAtBlock:output_type -> emissions.v5.GetReputersScoresAtBlockResponse
	143, // 199: emissions.v5.QueryService.GetCurrentLowestReputerScore:output_type -> emissions.v5.GetCurrentLowestReputerScoreResponse
	145, // 200: emissions.v5.QueryService.GetListeningCoefficient:output_type -> emissions.v5.GetListeningCoefficientResponse
	147, // 201: emissions.v5.QueryService.GetPreviousReputerRewardFraction:output_type -> emissions.v5.GetPreviousReputerRewardFractionResponse
	149, // 202: emissions.v5.QueryService.GetPreviousInferenceRewardFraction:output_type -> emissions.v5.GetPreviousInferenceRewardFractionResponse
	151, // 203: emissions.v5.QueryService.GetPreviousForecastRewardFraction:output_type -> emissions.v5.GetPreviousForecastRewardFractionResponse
	153, // 204: emissions.v5.QueryService.GetPreviousPercentageRewardToStakedReputers:output_type -> emissions.v5.GetPreviousPercentageRewardToStakedReputersResponse
	155, // 205: emissions.v5.QueryService.GetTotalRewardToDistribute:output_type -> emissions.v5.GetTotalRewardToDistributeResponse
	5,   // 206: emissions.v5.QueryService.GetNaiveInfererNetworkRegret:output_type -> emissions.v5.GetNaiveInfererNetworkRegretResponse
	7,   // 207: emissions.v5.QueryService.GetOneOutInfererInfererNetworkRegret:output_type -> emissions.v5.GetOneOutInfererInfererNetworkRegretResponse
	9,   // 208: emissions.v5.QueryService.GetOneOutInfererForecasterNetworkRegret:output_type -> emissions.v5.GetOneOutInfererForecasterNetworkRegretResponse
	11,  // 209: emissions.v5.QueryService.GetOneOutForecasterInfererNetworkRegret:output_type -> emissions.v5.GetOneOutForecasterInfererNetworkRegretResponse
	13,  // 210: emissions.v5.QueryService.GetOneOutForecasterForecasterNetworkRegret:output_type -> emissions.v5.GetOneOutForecasterForecasterNetworkRegretResponse
	157, // 211: emissions.v5.QueryService.GetActiveTopicsAtBlock:output_type -> emissions.v5.GetActiveTopicsAtBlockResponse
	159, // 212: emissions.v5.QueryService.GetNextChurningBlockByTopicId:output_type -> emissions.v5.GetNextChurningBlockByTopicIdResponse
	1,   // 213: emissions.v5.QueryService.GetCountInfererInclusionsInTopic:output_type -> emissions.v5.GetCountInfererInclusionsInTopicResponse
	3,   // 214: emissions.v5.QueryService.GetCountForecasterInclusionsInTopic:output_type -> emissions.v5.GetCountForecasterInclusionsInTopicResponse
	161, // 215: emissions.v5.QueryService.GetActiveReputersForTopic:output_type -> emissions.v5.GetActiveReputersForTopicResponse
	163, // 216: emissions.v5.QueryService.GetActiveForecastersForTopic:output_type -> emissions.v5.GetActiveForecastersForTopicResponse
	165, // 217: emissions.v5.QueryService.GetActiveInferersForTopic:output_type -> emissions.v5.GetActiveInferersForTopicResponse
	136, // [136:218] is the sub-list for method output_type
	54,  // [54:136] is the sub-list for method input_type
	54,  // [54:54] is the sub-list for extension type_name
	54,  // [54:54] is the sub-list for extension extendee
	0,   // [0:54] is the sub-list for field type_name
}

func init() { file_emissions_v5_query_proto_init() }
func file_emissions_v5_query_proto_init() {
	if File_emissions_v5_query_proto != nil {
		return
	}
	file_emissions_v5_params_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_emissions_v5_query_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCountInfererInclusionsInTopicRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCountInfererInclusionsInTopicResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCountForecasterInclusionsInTopicRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCountForecasterInclusionsInTopicResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNaiveInfererNetworkRegretRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNaiveInfererNetworkRegretResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOneOutInfererInfererNetworkRegretRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOneOutInfererInfererNetworkRegretResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOneOutInfererForecasterNetworkRegretRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOneOutInfererForecasterNetworkRegretResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOneOutForecasterInfererNetworkRegretRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOneOutForecasterInfererNetworkRegretResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOneOutForecasterForecasterNetworkRegretRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOneOutForecasterForecasterNetworkRegretResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetParamsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetParamsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTotalStakeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTotalStakeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReputerStakeInTopicRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReputerStakeInTopicResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMultiReputerStakeInTopicRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMultiReputerStakeInTopicResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStakeFromReputerInTopicInSelfRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStakeFromReputerInTopicInSelfResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDelegateStakeInTopicInReputerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDelegateStakeInTopicInReputerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStakeFromDelegatorInTopicInReputerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStakeFromDelegatorInTopicInReputerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStakeFromDelegatorInTopicRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStakeFromDelegatorInTopicResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTopicStakeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTopicStakeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNetworkLossBundleAtBlockRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNetworkLossBundleAtBlockResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNextTopicIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNextTopicIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTopicRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTopicResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetActiveTopicsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetActiveTopicsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInferencesAtBlockRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInferencesAtBlockResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLatestTopicInferencesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLatestTopicInferencesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetForecastsAtBlockRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetForecastsAtBlockResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWorkerLatestInferenceByTopicIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWorkerLatestInferenceByTopicIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWorkerNodeInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWorkerNodeInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReputerNodeInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReputerNodeInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNetworkInferencesAtBlockRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLatestNetworkInferencesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLatestAvailableNetworkInferencesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsWorkerNonceUnfulfilledRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsWorkerNonceUnfulfilledResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUnfulfilledReputerNoncesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUnfulfilledReputerNoncesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUnfulfilledWorkerNoncesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUnfulfilledWorkerNoncesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInfererNetworkRegretRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInfererNetworkRegretResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetForecasterNetworkRegretRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetForecasterNetworkRegretResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOneInForecasterNetworkRegretRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOneInForecasterNetworkRegretResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsReputerNonceUnfulfilledRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsReputerNonceUnfulfilledResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNetworkInferencesAtBlockResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLatestNetworkInferencesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLatestAvailableNetworkInferencesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsWorkerRegisteredInTopicIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsWorkerRegisteredInTopicIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsReputerRegisteredInTopicIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsReputerRegisteredInTopicIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsWhitelistAdminRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsWhitelistAdminResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStakeRemovalsUpUntilBlockRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStakeRemovalsUpUntilBlockResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDelegateStakeRemovalsUpUntilBlockRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDelegateStakeRemovalsUpUntilBlockResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStakeRemovalInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStakeRemovalInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDelegateStakeRemovalInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDelegateStakeRemovalInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTopicLastWorkerCommitInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTopicLastWorkerCommitInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTopicLastReputerCommitInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTopicLastReputerCommitInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTopicRewardNonceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTopicRewardNonceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReputerLossBundlesAtBlockRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReputerLossBundlesAtBlockResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStakeReputerAuthorityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStakeReputerAuthorityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDelegateStakePlacementRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDelegateStakePlacementResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDelegateStakeUponReputerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDelegateStakeUponReputerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDelegateRewardPerShareRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDelegateRewardPerShareResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStakeRemovalForReputerAndTopicIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStakeRemovalForReputerAndTopicIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDelegateStakeRemovalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[105].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDelegateStakeRemovalResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[106].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPreviousTopicWeightRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[107].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPreviousTopicWeightResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[108].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTotalSumPreviousTopicWeightsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[109].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTotalSumPreviousTopicWeightsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[110].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopicExistsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[111].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopicExistsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[112].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsTopicActiveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[113].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsTopicActiveResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[114].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTopicFeeRevenueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[115].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTopicFeeRevenueResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[116].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInfererScoreEmaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[117].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInfererScoreEmaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[118].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetForecasterScoreEmaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[119].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetForecasterScoreEmaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[120].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReputerScoreEmaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[121].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReputerScoreEmaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[122].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInferenceScoresUntilBlockRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[123].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInferenceScoresUntilBlockResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[124].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPreviousTopicQuantileForecasterScoreEmaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[125].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPreviousTopicQuantileForecasterScoreEmaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[126].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPreviousTopicQuantileInfererScoreEmaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[127].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPreviousTopicQuantileInfererScoreEmaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[128].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPreviousTopicQuantileReputerScoreEmaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[129].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPreviousTopicQuantileReputerScoreEmaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[130].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWorkerInferenceScoresAtBlockRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[131].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWorkerInferenceScoresAtBlockResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[132].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCurrentLowestInfererScoreRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[133].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCurrentLowestInfererScoreResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[134].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetForecastScoresUntilBlockRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[135].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetForecastScoresUntilBlockResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[136].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWorkerForecastScoresAtBlockRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[137].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWorkerForecastScoresAtBlockResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[138].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCurrentLowestForecasterScoreRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[139].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCurrentLowestForecasterScoreResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[140].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReputersScoresAtBlockRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[141].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReputersScoresAtBlockResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[142].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCurrentLowestReputerScoreRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[143].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCurrentLowestReputerScoreResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[144].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListeningCoefficientRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[145].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListeningCoefficientResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[146].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPreviousReputerRewardFractionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[147].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPreviousReputerRewardFractionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[148].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPreviousInferenceRewardFractionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[149].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPreviousInferenceRewardFractionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[150].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPreviousForecastRewardFractionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[151].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPreviousForecastRewardFractionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[152].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPreviousPercentageRewardToStakedReputersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[153].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPreviousPercentageRewardToStakedReputersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[154].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTotalRewardToDistributeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[155].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTotalRewardToDistributeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[156].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetActiveTopicsAtBlockRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[157].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetActiveTopicsAtBlockResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[158].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNextChurningBlockByTopicIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[159].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNextChurningBlockByTopicIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[160].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetActiveReputersForTopicRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[161].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetActiveReputersForTopicResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[162].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetActiveForecastersForTopicRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[163].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetActiveForecastersForTopicResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[164].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetActiveInferersForTopicRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_query_proto_msgTypes[165].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetActiveInferersForTopicResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_emissions_v5_query_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   166,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_emissions_v5_query_proto_goTypes,
		DependencyIndexes: file_emissions_v5_query_proto_depIdxs,
		MessageInfos:      file_emissions_v5_query_proto_msgTypes,
	}.Build()
	File_emissions_v5_query_proto = out.File
	file_emissions_v5_query_proto_rawDesc = nil
	file_emissions_v5_query_proto_goTypes = nil
	file_emissions_v5_query_proto_depIdxs = nil
}

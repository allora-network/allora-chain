// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package emissionsv5

import (
	fmt "fmt"
	v3 "github.com/allora-network/allora-chain/x/emissions/api/emissions/v3"
	_ "github.com/cosmos/cosmos-proto"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	_ "github.com/cosmos/cosmos-sdk/types/tx/amino"
	_ "github.com/cosmos/gogoproto/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	io "io"
	reflect "reflect"
	sync "sync"
)

var _ protoreflect.List = (*_GenesisState_4_list)(nil)

type _GenesisState_4_list struct {
	list *[]*TopicIdAndTopic
}

func (x *_GenesisState_4_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_4_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GenesisState_4_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TopicIdAndTopic)
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_4_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TopicIdAndTopic)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_4_list) AppendMutable() protoreflect.Value {
	v := new(TopicIdAndTopic)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_4_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_4_list) NewElement() protoreflect.Value {
	v := new(TopicIdAndTopic)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_4_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GenesisState_5_list)(nil)

type _GenesisState_5_list struct {
	list *[]uint64
}

func (x *_GenesisState_5_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_5_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfUint64((*x.list)[i])
}

func (x *_GenesisState_5_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Uint()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_5_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Uint()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_5_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message GenesisState at list field ActiveTopics as it is not of Message kind"))
}

func (x *_GenesisState_5_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_5_list) NewElement() protoreflect.Value {
	v := uint64(0)
	return protoreflect.ValueOfUint64(v)
}

func (x *_GenesisState_5_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GenesisState_6_list)(nil)

type _GenesisState_6_list struct {
	list *[]uint64
}

func (x *_GenesisState_6_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_6_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfUint64((*x.list)[i])
}

func (x *_GenesisState_6_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Uint()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_6_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Uint()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_6_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message GenesisState at list field RewardableTopics as it is not of Message kind"))
}

func (x *_GenesisState_6_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_6_list) NewElement() protoreflect.Value {
	v := uint64(0)
	return protoreflect.ValueOfUint64(v)
}

func (x *_GenesisState_6_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GenesisState_7_list)(nil)

type _GenesisState_7_list struct {
	list *[]*TopicAndActorId
}

func (x *_GenesisState_7_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_7_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GenesisState_7_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TopicAndActorId)
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_7_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TopicAndActorId)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_7_list) AppendMutable() protoreflect.Value {
	v := new(TopicAndActorId)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_7_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_7_list) NewElement() protoreflect.Value {
	v := new(TopicAndActorId)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_7_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GenesisState_8_list)(nil)

type _GenesisState_8_list struct {
	list *[]*TopicAndActorId
}

func (x *_GenesisState_8_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_8_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GenesisState_8_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TopicAndActorId)
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_8_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TopicAndActorId)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_8_list) AppendMutable() protoreflect.Value {
	v := new(TopicAndActorId)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_8_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_8_list) NewElement() protoreflect.Value {
	v := new(TopicAndActorId)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_8_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GenesisState_9_list)(nil)

type _GenesisState_9_list struct {
	list *[]*TopicIdAndBlockHeight
}

func (x *_GenesisState_9_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_9_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GenesisState_9_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TopicIdAndBlockHeight)
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_9_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TopicIdAndBlockHeight)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_9_list) AppendMutable() protoreflect.Value {
	v := new(TopicIdAndBlockHeight)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_9_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_9_list) NewElement() protoreflect.Value {
	v := new(TopicIdAndBlockHeight)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_9_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GenesisState_10_list)(nil)

type _GenesisState_10_list struct {
	list *[]*TopicIdBlockHeightScores
}

func (x *_GenesisState_10_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_10_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GenesisState_10_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TopicIdBlockHeightScores)
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_10_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TopicIdBlockHeightScores)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_10_list) AppendMutable() protoreflect.Value {
	v := new(TopicIdBlockHeightScores)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_10_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_10_list) NewElement() protoreflect.Value {
	v := new(TopicIdBlockHeightScores)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_10_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GenesisState_11_list)(nil)

type _GenesisState_11_list struct {
	list *[]*TopicIdBlockHeightScores
}

func (x *_GenesisState_11_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_11_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GenesisState_11_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TopicIdBlockHeightScores)
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_11_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TopicIdBlockHeightScores)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_11_list) AppendMutable() protoreflect.Value {
	v := new(TopicIdBlockHeightScores)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_11_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_11_list) NewElement() protoreflect.Value {
	v := new(TopicIdBlockHeightScores)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_11_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GenesisState_12_list)(nil)

type _GenesisState_12_list struct {
	list *[]*TopicIdBlockHeightScores
}

func (x *_GenesisState_12_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_12_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GenesisState_12_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TopicIdBlockHeightScores)
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_12_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TopicIdBlockHeightScores)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_12_list) AppendMutable() protoreflect.Value {
	v := new(TopicIdBlockHeightScores)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_12_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_12_list) NewElement() protoreflect.Value {
	v := new(TopicIdBlockHeightScores)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_12_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GenesisState_60_list)(nil)

type _GenesisState_60_list struct {
	list *[]*TopicIdActorIdScore
}

func (x *_GenesisState_60_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_60_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GenesisState_60_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TopicIdActorIdScore)
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_60_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TopicIdActorIdScore)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_60_list) AppendMutable() protoreflect.Value {
	v := new(TopicIdActorIdScore)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_60_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_60_list) NewElement() protoreflect.Value {
	v := new(TopicIdActorIdScore)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_60_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GenesisState_61_list)(nil)

type _GenesisState_61_list struct {
	list *[]*TopicIdActorIdScore
}

func (x *_GenesisState_61_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_61_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GenesisState_61_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TopicIdActorIdScore)
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_61_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TopicIdActorIdScore)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_61_list) AppendMutable() protoreflect.Value {
	v := new(TopicIdActorIdScore)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_61_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_61_list) NewElement() protoreflect.Value {
	v := new(TopicIdActorIdScore)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_61_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GenesisState_62_list)(nil)

type _GenesisState_62_list struct {
	list *[]*TopicIdActorIdScore
}

func (x *_GenesisState_62_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_62_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GenesisState_62_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TopicIdActorIdScore)
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_62_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TopicIdActorIdScore)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_62_list) AppendMutable() protoreflect.Value {
	v := new(TopicIdActorIdScore)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_62_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_62_list) NewElement() protoreflect.Value {
	v := new(TopicIdActorIdScore)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_62_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GenesisState_16_list)(nil)

type _GenesisState_16_list struct {
	list *[]*TopicIdActorIdListeningCoefficient
}

func (x *_GenesisState_16_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_16_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GenesisState_16_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TopicIdActorIdListeningCoefficient)
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_16_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TopicIdActorIdListeningCoefficient)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_16_list) AppendMutable() protoreflect.Value {
	v := new(TopicIdActorIdListeningCoefficient)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_16_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_16_list) NewElement() protoreflect.Value {
	v := new(TopicIdActorIdListeningCoefficient)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_16_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GenesisState_17_list)(nil)

type _GenesisState_17_list struct {
	list *[]*TopicIdActorIdDec
}

func (x *_GenesisState_17_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_17_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GenesisState_17_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TopicIdActorIdDec)
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_17_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TopicIdActorIdDec)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_17_list) AppendMutable() protoreflect.Value {
	v := new(TopicIdActorIdDec)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_17_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_17_list) NewElement() protoreflect.Value {
	v := new(TopicIdActorIdDec)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_17_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GenesisState_18_list)(nil)

type _GenesisState_18_list struct {
	list *[]*TopicIdActorIdDec
}

func (x *_GenesisState_18_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_18_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GenesisState_18_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TopicIdActorIdDec)
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_18_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TopicIdActorIdDec)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_18_list) AppendMutable() protoreflect.Value {
	v := new(TopicIdActorIdDec)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_18_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_18_list) NewElement() protoreflect.Value {
	v := new(TopicIdActorIdDec)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_18_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GenesisState_19_list)(nil)

type _GenesisState_19_list struct {
	list *[]*TopicIdActorIdDec
}

func (x *_GenesisState_19_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_19_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GenesisState_19_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TopicIdActorIdDec)
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_19_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TopicIdActorIdDec)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_19_list) AppendMutable() protoreflect.Value {
	v := new(TopicIdActorIdDec)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_19_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_19_list) NewElement() protoreflect.Value {
	v := new(TopicIdActorIdDec)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_19_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GenesisState_20_list)(nil)

type _GenesisState_20_list struct {
	list *[]*TopicIdAndDec
}

func (x *_GenesisState_20_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_20_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GenesisState_20_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TopicIdAndDec)
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_20_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TopicIdAndDec)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_20_list) AppendMutable() protoreflect.Value {
	v := new(TopicIdAndDec)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_20_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_20_list) NewElement() protoreflect.Value {
	v := new(TopicIdAndDec)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_20_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GenesisState_22_list)(nil)

type _GenesisState_22_list struct {
	list *[]*TopicIdAndInt
}

func (x *_GenesisState_22_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_22_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GenesisState_22_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TopicIdAndInt)
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_22_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TopicIdAndInt)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_22_list) AppendMutable() protoreflect.Value {
	v := new(TopicIdAndInt)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_22_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_22_list) NewElement() protoreflect.Value {
	v := new(TopicIdAndInt)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_22_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GenesisState_23_list)(nil)

type _GenesisState_23_list struct {
	list *[]*TopicIdActorIdInt
}

func (x *_GenesisState_23_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_23_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GenesisState_23_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TopicIdActorIdInt)
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_23_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TopicIdActorIdInt)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_23_list) AppendMutable() protoreflect.Value {
	v := new(TopicIdActorIdInt)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_23_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_23_list) NewElement() protoreflect.Value {
	v := new(TopicIdActorIdInt)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_23_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GenesisState_24_list)(nil)

type _GenesisState_24_list struct {
	list *[]*TopicIdActorIdInt
}

func (x *_GenesisState_24_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_24_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GenesisState_24_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TopicIdActorIdInt)
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_24_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TopicIdActorIdInt)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_24_list) AppendMutable() protoreflect.Value {
	v := new(TopicIdActorIdInt)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_24_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_24_list) NewElement() protoreflect.Value {
	v := new(TopicIdActorIdInt)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_24_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GenesisState_25_list)(nil)

type _GenesisState_25_list struct {
	list *[]*TopicIdDelegatorReputerDelegatorInfo
}

func (x *_GenesisState_25_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_25_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GenesisState_25_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TopicIdDelegatorReputerDelegatorInfo)
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_25_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TopicIdDelegatorReputerDelegatorInfo)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_25_list) AppendMutable() protoreflect.Value {
	v := new(TopicIdDelegatorReputerDelegatorInfo)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_25_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_25_list) NewElement() protoreflect.Value {
	v := new(TopicIdDelegatorReputerDelegatorInfo)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_25_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GenesisState_26_list)(nil)

type _GenesisState_26_list struct {
	list *[]*TopicIdActorIdInt
}

func (x *_GenesisState_26_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_26_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GenesisState_26_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TopicIdActorIdInt)
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_26_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TopicIdActorIdInt)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_26_list) AppendMutable() protoreflect.Value {
	v := new(TopicIdActorIdInt)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_26_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_26_list) NewElement() protoreflect.Value {
	v := new(TopicIdActorIdInt)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_26_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GenesisState_27_list)(nil)

type _GenesisState_27_list struct {
	list *[]*TopicIdActorIdDec
}

func (x *_GenesisState_27_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_27_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GenesisState_27_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TopicIdActorIdDec)
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_27_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TopicIdActorIdDec)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_27_list) AppendMutable() protoreflect.Value {
	v := new(TopicIdActorIdDec)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_27_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_27_list) NewElement() protoreflect.Value {
	v := new(TopicIdActorIdDec)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_27_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GenesisState_28_list)(nil)

type _GenesisState_28_list struct {
	list *[]*BlockHeightTopicIdReputerStakeRemovalInfo
}

func (x *_GenesisState_28_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_28_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GenesisState_28_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*BlockHeightTopicIdReputerStakeRemovalInfo)
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_28_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*BlockHeightTopicIdReputerStakeRemovalInfo)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_28_list) AppendMutable() protoreflect.Value {
	v := new(BlockHeightTopicIdReputerStakeRemovalInfo)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_28_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_28_list) NewElement() protoreflect.Value {
	v := new(BlockHeightTopicIdReputerStakeRemovalInfo)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_28_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GenesisState_29_list)(nil)

type _GenesisState_29_list struct {
	list *[]*ActorIdTopicIdBlockHeight
}

func (x *_GenesisState_29_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_29_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GenesisState_29_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*ActorIdTopicIdBlockHeight)
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_29_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*ActorIdTopicIdBlockHeight)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_29_list) AppendMutable() protoreflect.Value {
	v := new(ActorIdTopicIdBlockHeight)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_29_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_29_list) NewElement() protoreflect.Value {
	v := new(ActorIdTopicIdBlockHeight)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_29_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GenesisState_30_list)(nil)

type _GenesisState_30_list struct {
	list *[]*BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo
}

func (x *_GenesisState_30_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_30_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GenesisState_30_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo)
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_30_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_30_list) AppendMutable() protoreflect.Value {
	v := new(BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_30_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_30_list) NewElement() protoreflect.Value {
	v := new(BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_30_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GenesisState_31_list)(nil)

type _GenesisState_31_list struct {
	list *[]*DelegatorReputerTopicIdBlockHeight
}

func (x *_GenesisState_31_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_31_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GenesisState_31_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*DelegatorReputerTopicIdBlockHeight)
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_31_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*DelegatorReputerTopicIdBlockHeight)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_31_list) AppendMutable() protoreflect.Value {
	v := new(DelegatorReputerTopicIdBlockHeight)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_31_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_31_list) NewElement() protoreflect.Value {
	v := new(DelegatorReputerTopicIdBlockHeight)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_31_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GenesisState_32_list)(nil)

type _GenesisState_32_list struct {
	list *[]*TopicIdActorIdInference
}

func (x *_GenesisState_32_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_32_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GenesisState_32_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TopicIdActorIdInference)
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_32_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TopicIdActorIdInference)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_32_list) AppendMutable() protoreflect.Value {
	v := new(TopicIdActorIdInference)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_32_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_32_list) NewElement() protoreflect.Value {
	v := new(TopicIdActorIdInference)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_32_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GenesisState_33_list)(nil)

type _GenesisState_33_list struct {
	list *[]*TopicIdActorIdForecast
}

func (x *_GenesisState_33_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_33_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GenesisState_33_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TopicIdActorIdForecast)
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_33_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TopicIdActorIdForecast)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_33_list) AppendMutable() protoreflect.Value {
	v := new(TopicIdActorIdForecast)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_33_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_33_list) NewElement() protoreflect.Value {
	v := new(TopicIdActorIdForecast)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_33_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GenesisState_34_list)(nil)

type _GenesisState_34_list struct {
	list *[]*LibP2PKeyAndOffchainNode
}

func (x *_GenesisState_34_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_34_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GenesisState_34_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*LibP2PKeyAndOffchainNode)
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_34_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*LibP2PKeyAndOffchainNode)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_34_list) AppendMutable() protoreflect.Value {
	v := new(LibP2PKeyAndOffchainNode)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_34_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_34_list) NewElement() protoreflect.Value {
	v := new(LibP2PKeyAndOffchainNode)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_34_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GenesisState_35_list)(nil)

type _GenesisState_35_list struct {
	list *[]*LibP2PKeyAndOffchainNode
}

func (x *_GenesisState_35_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_35_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GenesisState_35_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*LibP2PKeyAndOffchainNode)
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_35_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*LibP2PKeyAndOffchainNode)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_35_list) AppendMutable() protoreflect.Value {
	v := new(LibP2PKeyAndOffchainNode)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_35_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_35_list) NewElement() protoreflect.Value {
	v := new(LibP2PKeyAndOffchainNode)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_35_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GenesisState_36_list)(nil)

type _GenesisState_36_list struct {
	list *[]*TopicIdAndInt
}

func (x *_GenesisState_36_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_36_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GenesisState_36_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TopicIdAndInt)
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_36_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TopicIdAndInt)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_36_list) AppendMutable() protoreflect.Value {
	v := new(TopicIdAndInt)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_36_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_36_list) NewElement() protoreflect.Value {
	v := new(TopicIdAndInt)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_36_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GenesisState_37_list)(nil)

type _GenesisState_37_list struct {
	list *[]*TopicIdAndDec
}

func (x *_GenesisState_37_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_37_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GenesisState_37_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TopicIdAndDec)
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_37_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TopicIdAndDec)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_37_list) AppendMutable() protoreflect.Value {
	v := new(TopicIdAndDec)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_37_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_37_list) NewElement() protoreflect.Value {
	v := new(TopicIdAndDec)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_37_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GenesisState_38_list)(nil)

type _GenesisState_38_list struct {
	list *[]*TopicIdBlockHeightInferences
}

func (x *_GenesisState_38_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_38_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GenesisState_38_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TopicIdBlockHeightInferences)
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_38_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TopicIdBlockHeightInferences)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_38_list) AppendMutable() protoreflect.Value {
	v := new(TopicIdBlockHeightInferences)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_38_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_38_list) NewElement() protoreflect.Value {
	v := new(TopicIdBlockHeightInferences)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_38_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GenesisState_39_list)(nil)

type _GenesisState_39_list struct {
	list *[]*TopicIdBlockHeightForecasts
}

func (x *_GenesisState_39_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_39_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GenesisState_39_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TopicIdBlockHeightForecasts)
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_39_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TopicIdBlockHeightForecasts)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_39_list) AppendMutable() protoreflect.Value {
	v := new(TopicIdBlockHeightForecasts)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_39_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_39_list) NewElement() protoreflect.Value {
	v := new(TopicIdBlockHeightForecasts)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_39_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GenesisState_40_list)(nil)

type _GenesisState_40_list struct {
	list *[]*TopicIdBlockHeightReputerValueBundles
}

func (x *_GenesisState_40_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_40_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GenesisState_40_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TopicIdBlockHeightReputerValueBundles)
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_40_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TopicIdBlockHeightReputerValueBundles)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_40_list) AppendMutable() protoreflect.Value {
	v := new(TopicIdBlockHeightReputerValueBundles)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_40_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_40_list) NewElement() protoreflect.Value {
	v := new(TopicIdBlockHeightReputerValueBundles)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_40_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GenesisState_41_list)(nil)

type _GenesisState_41_list struct {
	list *[]*TopicIdBlockHeightValueBundles
}

func (x *_GenesisState_41_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_41_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GenesisState_41_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TopicIdBlockHeightValueBundles)
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_41_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TopicIdBlockHeightValueBundles)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_41_list) AppendMutable() protoreflect.Value {
	v := new(TopicIdBlockHeightValueBundles)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_41_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_41_list) NewElement() protoreflect.Value {
	v := new(TopicIdBlockHeightValueBundles)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_41_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GenesisState_55_list)(nil)

type _GenesisState_55_list struct {
	list *[]*BlockHeightAndTopicIds
}

func (x *_GenesisState_55_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_55_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GenesisState_55_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*BlockHeightAndTopicIds)
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_55_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*BlockHeightAndTopicIds)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_55_list) AppendMutable() protoreflect.Value {
	v := new(BlockHeightAndTopicIds)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_55_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_55_list) NewElement() protoreflect.Value {
	v := new(BlockHeightAndTopicIds)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_55_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GenesisState_43_list)(nil)

type _GenesisState_43_list struct {
	list *[]*TopicIdAndNonces
}

func (x *_GenesisState_43_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_43_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GenesisState_43_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TopicIdAndNonces)
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_43_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TopicIdAndNonces)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_43_list) AppendMutable() protoreflect.Value {
	v := new(TopicIdAndNonces)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_43_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_43_list) NewElement() protoreflect.Value {
	v := new(TopicIdAndNonces)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_43_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GenesisState_44_list)(nil)

type _GenesisState_44_list struct {
	list *[]*TopicIdAndReputerRequestNonces
}

func (x *_GenesisState_44_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_44_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GenesisState_44_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TopicIdAndReputerRequestNonces)
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_44_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TopicIdAndReputerRequestNonces)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_44_list) AppendMutable() protoreflect.Value {
	v := new(TopicIdAndReputerRequestNonces)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_44_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_44_list) NewElement() protoreflect.Value {
	v := new(TopicIdAndReputerRequestNonces)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_44_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GenesisState_56_list)(nil)

type _GenesisState_56_list struct {
	list *[]*TopicIdAndBlockHeight
}

func (x *_GenesisState_56_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_56_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GenesisState_56_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TopicIdAndBlockHeight)
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_56_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TopicIdAndBlockHeight)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_56_list) AppendMutable() protoreflect.Value {
	v := new(TopicIdAndBlockHeight)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_56_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_56_list) NewElement() protoreflect.Value {
	v := new(TopicIdAndBlockHeight)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_56_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GenesisState_45_list)(nil)

type _GenesisState_45_list struct {
	list *[]*TopicIdActorIdTimeStampedValue
}

func (x *_GenesisState_45_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_45_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GenesisState_45_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TopicIdActorIdTimeStampedValue)
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_45_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TopicIdActorIdTimeStampedValue)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_45_list) AppendMutable() protoreflect.Value {
	v := new(TopicIdActorIdTimeStampedValue)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_45_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_45_list) NewElement() protoreflect.Value {
	v := new(TopicIdActorIdTimeStampedValue)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_45_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GenesisState_46_list)(nil)

type _GenesisState_46_list struct {
	list *[]*TopicIdActorIdTimeStampedValue
}

func (x *_GenesisState_46_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_46_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GenesisState_46_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TopicIdActorIdTimeStampedValue)
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_46_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TopicIdActorIdTimeStampedValue)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_46_list) AppendMutable() protoreflect.Value {
	v := new(TopicIdActorIdTimeStampedValue)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_46_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_46_list) NewElement() protoreflect.Value {
	v := new(TopicIdActorIdTimeStampedValue)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_46_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GenesisState_47_list)(nil)

type _GenesisState_47_list struct {
	list *[]*TopicIdActorIdActorIdTimeStampedValue
}

func (x *_GenesisState_47_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_47_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GenesisState_47_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TopicIdActorIdActorIdTimeStampedValue)
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_47_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TopicIdActorIdActorIdTimeStampedValue)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_47_list) AppendMutable() protoreflect.Value {
	v := new(TopicIdActorIdActorIdTimeStampedValue)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_47_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_47_list) NewElement() protoreflect.Value {
	v := new(TopicIdActorIdActorIdTimeStampedValue)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_47_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GenesisState_48_list)(nil)

type _GenesisState_48_list struct {
	list *[]*TopicIdActorIdTimeStampedValue
}

func (x *_GenesisState_48_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_48_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GenesisState_48_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TopicIdActorIdTimeStampedValue)
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_48_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TopicIdActorIdTimeStampedValue)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_48_list) AppendMutable() protoreflect.Value {
	v := new(TopicIdActorIdTimeStampedValue)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_48_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_48_list) NewElement() protoreflect.Value {
	v := new(TopicIdActorIdTimeStampedValue)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_48_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GenesisState_49_list)(nil)

type _GenesisState_49_list struct {
	list *[]*TopicIdActorIdActorIdTimeStampedValue
}

func (x *_GenesisState_49_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_49_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GenesisState_49_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TopicIdActorIdActorIdTimeStampedValue)
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_49_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TopicIdActorIdActorIdTimeStampedValue)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_49_list) AppendMutable() protoreflect.Value {
	v := new(TopicIdActorIdActorIdTimeStampedValue)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_49_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_49_list) NewElement() protoreflect.Value {
	v := new(TopicIdActorIdActorIdTimeStampedValue)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_49_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GenesisState_50_list)(nil)

type _GenesisState_50_list struct {
	list *[]*TopicIdActorIdActorIdTimeStampedValue
}

func (x *_GenesisState_50_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_50_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GenesisState_50_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TopicIdActorIdActorIdTimeStampedValue)
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_50_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TopicIdActorIdActorIdTimeStampedValue)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_50_list) AppendMutable() protoreflect.Value {
	v := new(TopicIdActorIdActorIdTimeStampedValue)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_50_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_50_list) NewElement() protoreflect.Value {
	v := new(TopicIdActorIdActorIdTimeStampedValue)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_50_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GenesisState_51_list)(nil)

type _GenesisState_51_list struct {
	list *[]*TopicIdActorIdActorIdTimeStampedValue
}

func (x *_GenesisState_51_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_51_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GenesisState_51_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TopicIdActorIdActorIdTimeStampedValue)
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_51_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TopicIdActorIdActorIdTimeStampedValue)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_51_list) AppendMutable() protoreflect.Value {
	v := new(TopicIdActorIdActorIdTimeStampedValue)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_51_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_51_list) NewElement() protoreflect.Value {
	v := new(TopicIdActorIdActorIdTimeStampedValue)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_51_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GenesisState_52_list)(nil)

type _GenesisState_52_list struct {
	list *[]*TopicIdActorIdActorIdTimeStampedValue
}

func (x *_GenesisState_52_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_52_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GenesisState_52_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TopicIdActorIdActorIdTimeStampedValue)
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_52_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TopicIdActorIdActorIdTimeStampedValue)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_52_list) AppendMutable() protoreflect.Value {
	v := new(TopicIdActorIdActorIdTimeStampedValue)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_52_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_52_list) NewElement() protoreflect.Value {
	v := new(TopicIdActorIdActorIdTimeStampedValue)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_52_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GenesisState_2_list)(nil)

type _GenesisState_2_list struct {
	list *[]string
}

func (x *_GenesisState_2_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_2_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfString((*x.list)[i])
}

func (x *_GenesisState_2_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_2_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_2_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message GenesisState at list field CoreTeamAddresses as it is not of Message kind"))
}

func (x *_GenesisState_2_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_2_list) NewElement() protoreflect.Value {
	v := ""
	return protoreflect.ValueOfString(v)
}

func (x *_GenesisState_2_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GenesisState_53_list)(nil)

type _GenesisState_53_list struct {
	list *[]*TopicIdTimestampedActorNonce
}

func (x *_GenesisState_53_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_53_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GenesisState_53_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TopicIdTimestampedActorNonce)
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_53_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TopicIdTimestampedActorNonce)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_53_list) AppendMutable() protoreflect.Value {
	v := new(TopicIdTimestampedActorNonce)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_53_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_53_list) NewElement() protoreflect.Value {
	v := new(TopicIdTimestampedActorNonce)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_53_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GenesisState_54_list)(nil)

type _GenesisState_54_list struct {
	list *[]*TopicIdTimestampedActorNonce
}

func (x *_GenesisState_54_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_54_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GenesisState_54_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TopicIdTimestampedActorNonce)
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_54_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TopicIdTimestampedActorNonce)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_54_list) AppendMutable() protoreflect.Value {
	v := new(TopicIdTimestampedActorNonce)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_54_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_54_list) NewElement() protoreflect.Value {
	v := new(TopicIdTimestampedActorNonce)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_54_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GenesisState_57_list)(nil)

type _GenesisState_57_list struct {
	list *[]*TopicIdAndBlockHeight
}

func (x *_GenesisState_57_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_57_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GenesisState_57_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TopicIdAndBlockHeight)
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_57_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TopicIdAndBlockHeight)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_57_list) AppendMutable() protoreflect.Value {
	v := new(TopicIdAndBlockHeight)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_57_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_57_list) NewElement() protoreflect.Value {
	v := new(TopicIdAndBlockHeight)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_57_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GenesisState_58_list)(nil)

type _GenesisState_58_list struct {
	list *[]*BlockHeightTopicIds
}

func (x *_GenesisState_58_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_58_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GenesisState_58_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*BlockHeightTopicIds)
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_58_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*BlockHeightTopicIds)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_58_list) AppendMutable() protoreflect.Value {
	v := new(BlockHeightTopicIds)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_58_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_58_list) NewElement() protoreflect.Value {
	v := new(BlockHeightTopicIds)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_58_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GenesisState_59_list)(nil)

type _GenesisState_59_list struct {
	list *[]*BlockHeightTopicIdWeightPair
}

func (x *_GenesisState_59_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_59_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GenesisState_59_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*BlockHeightTopicIdWeightPair)
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_59_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*BlockHeightTopicIdWeightPair)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_59_list) AppendMutable() protoreflect.Value {
	v := new(BlockHeightTopicIdWeightPair)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_59_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_59_list) NewElement() protoreflect.Value {
	v := new(BlockHeightTopicIdWeightPair)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_59_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GenesisState_63_list)(nil)

type _GenesisState_63_list struct {
	list *[]*TopicIdAndDec
}

func (x *_GenesisState_63_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_63_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GenesisState_63_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TopicIdAndDec)
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_63_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TopicIdAndDec)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_63_list) AppendMutable() protoreflect.Value {
	v := new(TopicIdAndDec)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_63_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_63_list) NewElement() protoreflect.Value {
	v := new(TopicIdAndDec)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_63_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GenesisState_64_list)(nil)

type _GenesisState_64_list struct {
	list *[]*TopicIdAndDec
}

func (x *_GenesisState_64_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_64_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GenesisState_64_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TopicIdAndDec)
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_64_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TopicIdAndDec)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_64_list) AppendMutable() protoreflect.Value {
	v := new(TopicIdAndDec)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_64_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_64_list) NewElement() protoreflect.Value {
	v := new(TopicIdAndDec)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_64_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GenesisState_65_list)(nil)

type _GenesisState_65_list struct {
	list *[]*TopicIdAndDec
}

func (x *_GenesisState_65_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_65_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GenesisState_65_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TopicIdAndDec)
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_65_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TopicIdAndDec)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_65_list) AppendMutable() protoreflect.Value {
	v := new(TopicIdAndDec)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_65_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_65_list) NewElement() protoreflect.Value {
	v := new(TopicIdAndDec)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_65_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GenesisState_66_list)(nil)

type _GenesisState_66_list struct {
	list *[]*TopicIdActorIdUint64
}

func (x *_GenesisState_66_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_66_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GenesisState_66_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TopicIdActorIdUint64)
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_66_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TopicIdActorIdUint64)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_66_list) AppendMutable() protoreflect.Value {
	v := new(TopicIdActorIdUint64)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_66_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_66_list) NewElement() protoreflect.Value {
	v := new(TopicIdActorIdUint64)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_66_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GenesisState_67_list)(nil)

type _GenesisState_67_list struct {
	list *[]*TopicIdActorIdUint64
}

func (x *_GenesisState_67_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_67_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GenesisState_67_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TopicIdActorIdUint64)
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_67_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TopicIdActorIdUint64)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_67_list) AppendMutable() protoreflect.Value {
	v := new(TopicIdActorIdUint64)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_67_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_67_list) NewElement() protoreflect.Value {
	v := new(TopicIdActorIdUint64)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_67_list) IsValid() bool {
	return x.list != nil
}

var (
	md_GenesisState                                                      protoreflect.MessageDescriptor
	fd_GenesisState_params                                               protoreflect.FieldDescriptor
	fd_GenesisState_next_topic_id                                        protoreflect.FieldDescriptor
	fd_GenesisState_topics                                               protoreflect.FieldDescriptor
	fd_GenesisState_active_topics                                        protoreflect.FieldDescriptor
	fd_GenesisState_rewardable_topics                                    protoreflect.FieldDescriptor
	fd_GenesisState_topic_workers                                        protoreflect.FieldDescriptor
	fd_GenesisState_topic_reputers                                       protoreflect.FieldDescriptor
	fd_GenesisState_topic_reward_nonce                                   protoreflect.FieldDescriptor
	fd_GenesisState_inferer_scores_by_block                              protoreflect.FieldDescriptor
	fd_GenesisState_forecaster_scores_by_block                           protoreflect.FieldDescriptor
	fd_GenesisState_reputer_scores_by_block                              protoreflect.FieldDescriptor
	fd_GenesisState_inferer_score_emas                                   protoreflect.FieldDescriptor
	fd_GenesisState_forecaster_score_emas                                protoreflect.FieldDescriptor
	fd_GenesisState_reputer_score_emas                                   protoreflect.FieldDescriptor
	fd_GenesisState_reputer_listening_coefficient                        protoreflect.FieldDescriptor
	fd_GenesisState_previous_reputer_reward_fraction                     protoreflect.FieldDescriptor
	fd_GenesisState_previous_inference_reward_fraction                   protoreflect.FieldDescriptor
	fd_GenesisState_previous_forecast_reward_fraction                    protoreflect.FieldDescriptor
	fd_GenesisState_previous_forecaster_score_ratio                      protoreflect.FieldDescriptor
	fd_GenesisState_total_stake                                          protoreflect.FieldDescriptor
	fd_GenesisState_topic_stake                                          protoreflect.FieldDescriptor
	fd_GenesisState_stake_reputer_authority                              protoreflect.FieldDescriptor
	fd_GenesisState_stake_sum_from_delegator                             protoreflect.FieldDescriptor
	fd_GenesisState_delegated_stakes                                     protoreflect.FieldDescriptor
	fd_GenesisState_stake_from_delegators_upon_reputer                   protoreflect.FieldDescriptor
	fd_GenesisState_delegate_reward_per_share                            protoreflect.FieldDescriptor
	fd_GenesisState_stake_removals_by_block                              protoreflect.FieldDescriptor
	fd_GenesisState_stake_removals_by_actor                              protoreflect.FieldDescriptor
	fd_GenesisState_delegate_stake_removals_by_block                     protoreflect.FieldDescriptor
	fd_GenesisState_delegate_stake_removals_by_actor                     protoreflect.FieldDescriptor
	fd_GenesisState_inferences                                           protoreflect.FieldDescriptor
	fd_GenesisState_forecasts                                            protoreflect.FieldDescriptor
	fd_GenesisState_workers                                              protoreflect.FieldDescriptor
	fd_GenesisState_reputers                                             protoreflect.FieldDescriptor
	fd_GenesisState_topic_fee_revenue                                    protoreflect.FieldDescriptor
	fd_GenesisState_previous_topic_weight                                protoreflect.FieldDescriptor
	fd_GenesisState_all_inferences                                       protoreflect.FieldDescriptor
	fd_GenesisState_all_forecasts                                        protoreflect.FieldDescriptor
	fd_GenesisState_all_loss_bundles                                     protoreflect.FieldDescriptor
	fd_GenesisState_network_loss_bundles                                 protoreflect.FieldDescriptor
	fd_GenesisState_previous_percentage_reward_to_staked_reputers        protoreflect.FieldDescriptor
	fd_GenesisState_open_worker_windows                                  protoreflect.FieldDescriptor
	fd_GenesisState_unfulfilled_worker_nonces                            protoreflect.FieldDescriptor
	fd_GenesisState_unfulfilled_reputer_nonces                           protoreflect.FieldDescriptor
	fd_GenesisState_last_drip_block                                      protoreflect.FieldDescriptor
	fd_GenesisState_latest_inferer_network_regrets                       protoreflect.FieldDescriptor
	fd_GenesisState_latest_forecaster_network_regrets                    protoreflect.FieldDescriptor
	fd_GenesisState_latest_one_in_forecaster_network_regrets             protoreflect.FieldDescriptor
	fd_GenesisState_latest_naive_inferer_network_regrets                 protoreflect.FieldDescriptor
	fd_GenesisState_latest_one_out_inferer_inferer_network_regrets       protoreflect.FieldDescriptor
	fd_GenesisState_latest_one_out_inferer_forecaster_network_regrets    protoreflect.FieldDescriptor
	fd_GenesisState_latest_one_out_forecaster_inferer_network_regrets    protoreflect.FieldDescriptor
	fd_GenesisState_latest_one_out_forecaster_forecaster_network_regrets protoreflect.FieldDescriptor
	fd_GenesisState_core_team_addresses                                  protoreflect.FieldDescriptor
	fd_GenesisState_topic_last_worker_commit                             protoreflect.FieldDescriptor
	fd_GenesisState_topic_last_reputer_commit                            protoreflect.FieldDescriptor
	fd_GenesisState_topic_to_next_possible_churning_block                protoreflect.FieldDescriptor
	fd_GenesisState_block_to_active_topics                               protoreflect.FieldDescriptor
	fd_GenesisState_block_to_lowest_active_topic_weight                  protoreflect.FieldDescriptor
	fd_GenesisState_previous_topic_quantile_inferer_score_ema            protoreflect.FieldDescriptor
	fd_GenesisState_previous_topic_quantile_forecaster_score_ema         protoreflect.FieldDescriptor
	fd_GenesisState_previous_topic_quantile_reputer_score_ema            protoreflect.FieldDescriptor
	fd_GenesisState_count_inferer_inclusions_in_topic_active_set         protoreflect.FieldDescriptor
	fd_GenesisState_count_forecaster_inclusions_in_topic_active_set      protoreflect.FieldDescriptor
	fd_GenesisState_total_sum_previous_topic_weights                     protoreflect.FieldDescriptor
	fd_GenesisState_reward_current_block_emission                        protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_genesis_proto_init()
	md_GenesisState = File_emissions_v5_genesis_proto.Messages().ByName("GenesisState")
	fd_GenesisState_params = md_GenesisState.Fields().ByName("params")
	fd_GenesisState_next_topic_id = md_GenesisState.Fields().ByName("next_topic_id")
	fd_GenesisState_topics = md_GenesisState.Fields().ByName("topics")
	fd_GenesisState_active_topics = md_GenesisState.Fields().ByName("active_topics")
	fd_GenesisState_rewardable_topics = md_GenesisState.Fields().ByName("rewardable_topics")
	fd_GenesisState_topic_workers = md_GenesisState.Fields().ByName("topic_workers")
	fd_GenesisState_topic_reputers = md_GenesisState.Fields().ByName("topic_reputers")
	fd_GenesisState_topic_reward_nonce = md_GenesisState.Fields().ByName("topic_reward_nonce")
	fd_GenesisState_inferer_scores_by_block = md_GenesisState.Fields().ByName("inferer_scores_by_block")
	fd_GenesisState_forecaster_scores_by_block = md_GenesisState.Fields().ByName("forecaster_scores_by_block")
	fd_GenesisState_reputer_scores_by_block = md_GenesisState.Fields().ByName("reputer_scores_by_block")
	fd_GenesisState_inferer_score_emas = md_GenesisState.Fields().ByName("inferer_score_emas")
	fd_GenesisState_forecaster_score_emas = md_GenesisState.Fields().ByName("forecaster_score_emas")
	fd_GenesisState_reputer_score_emas = md_GenesisState.Fields().ByName("reputer_score_emas")
	fd_GenesisState_reputer_listening_coefficient = md_GenesisState.Fields().ByName("reputer_listening_coefficient")
	fd_GenesisState_previous_reputer_reward_fraction = md_GenesisState.Fields().ByName("previous_reputer_reward_fraction")
	fd_GenesisState_previous_inference_reward_fraction = md_GenesisState.Fields().ByName("previous_inference_reward_fraction")
	fd_GenesisState_previous_forecast_reward_fraction = md_GenesisState.Fields().ByName("previous_forecast_reward_fraction")
	fd_GenesisState_previous_forecaster_score_ratio = md_GenesisState.Fields().ByName("previous_forecaster_score_ratio")
	fd_GenesisState_total_stake = md_GenesisState.Fields().ByName("total_stake")
	fd_GenesisState_topic_stake = md_GenesisState.Fields().ByName("topic_stake")
	fd_GenesisState_stake_reputer_authority = md_GenesisState.Fields().ByName("stake_reputer_authority")
	fd_GenesisState_stake_sum_from_delegator = md_GenesisState.Fields().ByName("stake_sum_from_delegator")
	fd_GenesisState_delegated_stakes = md_GenesisState.Fields().ByName("delegated_stakes")
	fd_GenesisState_stake_from_delegators_upon_reputer = md_GenesisState.Fields().ByName("stake_from_delegators_upon_reputer")
	fd_GenesisState_delegate_reward_per_share = md_GenesisState.Fields().ByName("delegate_reward_per_share")
	fd_GenesisState_stake_removals_by_block = md_GenesisState.Fields().ByName("stake_removals_by_block")
	fd_GenesisState_stake_removals_by_actor = md_GenesisState.Fields().ByName("stake_removals_by_actor")
	fd_GenesisState_delegate_stake_removals_by_block = md_GenesisState.Fields().ByName("delegate_stake_removals_by_block")
	fd_GenesisState_delegate_stake_removals_by_actor = md_GenesisState.Fields().ByName("delegate_stake_removals_by_actor")
	fd_GenesisState_inferences = md_GenesisState.Fields().ByName("inferences")
	fd_GenesisState_forecasts = md_GenesisState.Fields().ByName("forecasts")
	fd_GenesisState_workers = md_GenesisState.Fields().ByName("workers")
	fd_GenesisState_reputers = md_GenesisState.Fields().ByName("reputers")
	fd_GenesisState_topic_fee_revenue = md_GenesisState.Fields().ByName("topic_fee_revenue")
	fd_GenesisState_previous_topic_weight = md_GenesisState.Fields().ByName("previous_topic_weight")
	fd_GenesisState_all_inferences = md_GenesisState.Fields().ByName("all_inferences")
	fd_GenesisState_all_forecasts = md_GenesisState.Fields().ByName("all_forecasts")
	fd_GenesisState_all_loss_bundles = md_GenesisState.Fields().ByName("all_loss_bundles")
	fd_GenesisState_network_loss_bundles = md_GenesisState.Fields().ByName("network_loss_bundles")
	fd_GenesisState_previous_percentage_reward_to_staked_reputers = md_GenesisState.Fields().ByName("previous_percentage_reward_to_staked_reputers")
	fd_GenesisState_open_worker_windows = md_GenesisState.Fields().ByName("open_worker_windows")
	fd_GenesisState_unfulfilled_worker_nonces = md_GenesisState.Fields().ByName("unfulfilled_worker_nonces")
	fd_GenesisState_unfulfilled_reputer_nonces = md_GenesisState.Fields().ByName("unfulfilled_reputer_nonces")
	fd_GenesisState_last_drip_block = md_GenesisState.Fields().ByName("last_drip_block")
	fd_GenesisState_latest_inferer_network_regrets = md_GenesisState.Fields().ByName("latest_inferer_network_regrets")
	fd_GenesisState_latest_forecaster_network_regrets = md_GenesisState.Fields().ByName("latest_forecaster_network_regrets")
	fd_GenesisState_latest_one_in_forecaster_network_regrets = md_GenesisState.Fields().ByName("latest_one_in_forecaster_network_regrets")
	fd_GenesisState_latest_naive_inferer_network_regrets = md_GenesisState.Fields().ByName("latest_naive_inferer_network_regrets")
	fd_GenesisState_latest_one_out_inferer_inferer_network_regrets = md_GenesisState.Fields().ByName("latest_one_out_inferer_inferer_network_regrets")
	fd_GenesisState_latest_one_out_inferer_forecaster_network_regrets = md_GenesisState.Fields().ByName("latest_one_out_inferer_forecaster_network_regrets")
	fd_GenesisState_latest_one_out_forecaster_inferer_network_regrets = md_GenesisState.Fields().ByName("latest_one_out_forecaster_inferer_network_regrets")
	fd_GenesisState_latest_one_out_forecaster_forecaster_network_regrets = md_GenesisState.Fields().ByName("latest_one_out_forecaster_forecaster_network_regrets")
	fd_GenesisState_core_team_addresses = md_GenesisState.Fields().ByName("core_team_addresses")
	fd_GenesisState_topic_last_worker_commit = md_GenesisState.Fields().ByName("topic_last_worker_commit")
	fd_GenesisState_topic_last_reputer_commit = md_GenesisState.Fields().ByName("topic_last_reputer_commit")
	fd_GenesisState_topic_to_next_possible_churning_block = md_GenesisState.Fields().ByName("topic_to_next_possible_churning_block")
	fd_GenesisState_block_to_active_topics = md_GenesisState.Fields().ByName("block_to_active_topics")
	fd_GenesisState_block_to_lowest_active_topic_weight = md_GenesisState.Fields().ByName("block_to_lowest_active_topic_weight")
	fd_GenesisState_previous_topic_quantile_inferer_score_ema = md_GenesisState.Fields().ByName("previous_topic_quantile_inferer_score_ema")
	fd_GenesisState_previous_topic_quantile_forecaster_score_ema = md_GenesisState.Fields().ByName("previous_topic_quantile_forecaster_score_ema")
	fd_GenesisState_previous_topic_quantile_reputer_score_ema = md_GenesisState.Fields().ByName("previous_topic_quantile_reputer_score_ema")
	fd_GenesisState_count_inferer_inclusions_in_topic_active_set = md_GenesisState.Fields().ByName("count_inferer_inclusions_in_topic_active_set")
	fd_GenesisState_count_forecaster_inclusions_in_topic_active_set = md_GenesisState.Fields().ByName("count_forecaster_inclusions_in_topic_active_set")
	fd_GenesisState_total_sum_previous_topic_weights = md_GenesisState.Fields().ByName("total_sum_previous_topic_weights")
	fd_GenesisState_reward_current_block_emission = md_GenesisState.Fields().ByName("reward_current_block_emission")
}

var _ protoreflect.Message = (*fastReflection_GenesisState)(nil)

type fastReflection_GenesisState GenesisState

func (x *GenesisState) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GenesisState)(x)
}

func (x *GenesisState) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_genesis_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GenesisState_messageType fastReflection_GenesisState_messageType
var _ protoreflect.MessageType = fastReflection_GenesisState_messageType{}

type fastReflection_GenesisState_messageType struct{}

func (x fastReflection_GenesisState_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GenesisState)(nil)
}
func (x fastReflection_GenesisState_messageType) New() protoreflect.Message {
	return new(fastReflection_GenesisState)
}
func (x fastReflection_GenesisState_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GenesisState
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GenesisState) Descriptor() protoreflect.MessageDescriptor {
	return md_GenesisState
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GenesisState) Type() protoreflect.MessageType {
	return _fastReflection_GenesisState_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GenesisState) New() protoreflect.Message {
	return new(fastReflection_GenesisState)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GenesisState) Interface() protoreflect.ProtoMessage {
	return (*GenesisState)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GenesisState) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Params != nil {
		value := protoreflect.ValueOfMessage(x.Params.ProtoReflect())
		if !f(fd_GenesisState_params, value) {
			return
		}
	}
	if x.NextTopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.NextTopicId)
		if !f(fd_GenesisState_next_topic_id, value) {
			return
		}
	}
	if len(x.Topics) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_4_list{list: &x.Topics})
		if !f(fd_GenesisState_topics, value) {
			return
		}
	}
	if len(x.ActiveTopics) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_5_list{list: &x.ActiveTopics})
		if !f(fd_GenesisState_active_topics, value) {
			return
		}
	}
	if len(x.RewardableTopics) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_6_list{list: &x.RewardableTopics})
		if !f(fd_GenesisState_rewardable_topics, value) {
			return
		}
	}
	if len(x.TopicWorkers) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_7_list{list: &x.TopicWorkers})
		if !f(fd_GenesisState_topic_workers, value) {
			return
		}
	}
	if len(x.TopicReputers) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_8_list{list: &x.TopicReputers})
		if !f(fd_GenesisState_topic_reputers, value) {
			return
		}
	}
	if len(x.TopicRewardNonce) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_9_list{list: &x.TopicRewardNonce})
		if !f(fd_GenesisState_topic_reward_nonce, value) {
			return
		}
	}
	if len(x.InfererScoresByBlock) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_10_list{list: &x.InfererScoresByBlock})
		if !f(fd_GenesisState_inferer_scores_by_block, value) {
			return
		}
	}
	if len(x.ForecasterScoresByBlock) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_11_list{list: &x.ForecasterScoresByBlock})
		if !f(fd_GenesisState_forecaster_scores_by_block, value) {
			return
		}
	}
	if len(x.ReputerScoresByBlock) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_12_list{list: &x.ReputerScoresByBlock})
		if !f(fd_GenesisState_reputer_scores_by_block, value) {
			return
		}
	}
	if len(x.InfererScoreEmas) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_60_list{list: &x.InfererScoreEmas})
		if !f(fd_GenesisState_inferer_score_emas, value) {
			return
		}
	}
	if len(x.ForecasterScoreEmas) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_61_list{list: &x.ForecasterScoreEmas})
		if !f(fd_GenesisState_forecaster_score_emas, value) {
			return
		}
	}
	if len(x.ReputerScoreEmas) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_62_list{list: &x.ReputerScoreEmas})
		if !f(fd_GenesisState_reputer_score_emas, value) {
			return
		}
	}
	if len(x.ReputerListeningCoefficient) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_16_list{list: &x.ReputerListeningCoefficient})
		if !f(fd_GenesisState_reputer_listening_coefficient, value) {
			return
		}
	}
	if len(x.PreviousReputerRewardFraction) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_17_list{list: &x.PreviousReputerRewardFraction})
		if !f(fd_GenesisState_previous_reputer_reward_fraction, value) {
			return
		}
	}
	if len(x.PreviousInferenceRewardFraction) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_18_list{list: &x.PreviousInferenceRewardFraction})
		if !f(fd_GenesisState_previous_inference_reward_fraction, value) {
			return
		}
	}
	if len(x.PreviousForecastRewardFraction) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_19_list{list: &x.PreviousForecastRewardFraction})
		if !f(fd_GenesisState_previous_forecast_reward_fraction, value) {
			return
		}
	}
	if len(x.PreviousForecasterScoreRatio) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_20_list{list: &x.PreviousForecasterScoreRatio})
		if !f(fd_GenesisState_previous_forecaster_score_ratio, value) {
			return
		}
	}
	if x.TotalStake != "" {
		value := protoreflect.ValueOfString(x.TotalStake)
		if !f(fd_GenesisState_total_stake, value) {
			return
		}
	}
	if len(x.TopicStake) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_22_list{list: &x.TopicStake})
		if !f(fd_GenesisState_topic_stake, value) {
			return
		}
	}
	if len(x.StakeReputerAuthority) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_23_list{list: &x.StakeReputerAuthority})
		if !f(fd_GenesisState_stake_reputer_authority, value) {
			return
		}
	}
	if len(x.StakeSumFromDelegator) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_24_list{list: &x.StakeSumFromDelegator})
		if !f(fd_GenesisState_stake_sum_from_delegator, value) {
			return
		}
	}
	if len(x.DelegatedStakes) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_25_list{list: &x.DelegatedStakes})
		if !f(fd_GenesisState_delegated_stakes, value) {
			return
		}
	}
	if len(x.StakeFromDelegatorsUponReputer) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_26_list{list: &x.StakeFromDelegatorsUponReputer})
		if !f(fd_GenesisState_stake_from_delegators_upon_reputer, value) {
			return
		}
	}
	if len(x.DelegateRewardPerShare) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_27_list{list: &x.DelegateRewardPerShare})
		if !f(fd_GenesisState_delegate_reward_per_share, value) {
			return
		}
	}
	if len(x.StakeRemovalsByBlock) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_28_list{list: &x.StakeRemovalsByBlock})
		if !f(fd_GenesisState_stake_removals_by_block, value) {
			return
		}
	}
	if len(x.StakeRemovalsByActor) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_29_list{list: &x.StakeRemovalsByActor})
		if !f(fd_GenesisState_stake_removals_by_actor, value) {
			return
		}
	}
	if len(x.DelegateStakeRemovalsByBlock) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_30_list{list: &x.DelegateStakeRemovalsByBlock})
		if !f(fd_GenesisState_delegate_stake_removals_by_block, value) {
			return
		}
	}
	if len(x.DelegateStakeRemovalsByActor) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_31_list{list: &x.DelegateStakeRemovalsByActor})
		if !f(fd_GenesisState_delegate_stake_removals_by_actor, value) {
			return
		}
	}
	if len(x.Inferences) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_32_list{list: &x.Inferences})
		if !f(fd_GenesisState_inferences, value) {
			return
		}
	}
	if len(x.Forecasts) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_33_list{list: &x.Forecasts})
		if !f(fd_GenesisState_forecasts, value) {
			return
		}
	}
	if len(x.Workers) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_34_list{list: &x.Workers})
		if !f(fd_GenesisState_workers, value) {
			return
		}
	}
	if len(x.Reputers) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_35_list{list: &x.Reputers})
		if !f(fd_GenesisState_reputers, value) {
			return
		}
	}
	if len(x.TopicFeeRevenue) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_36_list{list: &x.TopicFeeRevenue})
		if !f(fd_GenesisState_topic_fee_revenue, value) {
			return
		}
	}
	if len(x.PreviousTopicWeight) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_37_list{list: &x.PreviousTopicWeight})
		if !f(fd_GenesisState_previous_topic_weight, value) {
			return
		}
	}
	if len(x.AllInferences) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_38_list{list: &x.AllInferences})
		if !f(fd_GenesisState_all_inferences, value) {
			return
		}
	}
	if len(x.AllForecasts) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_39_list{list: &x.AllForecasts})
		if !f(fd_GenesisState_all_forecasts, value) {
			return
		}
	}
	if len(x.AllLossBundles) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_40_list{list: &x.AllLossBundles})
		if !f(fd_GenesisState_all_loss_bundles, value) {
			return
		}
	}
	if len(x.NetworkLossBundles) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_41_list{list: &x.NetworkLossBundles})
		if !f(fd_GenesisState_network_loss_bundles, value) {
			return
		}
	}
	if x.PreviousPercentageRewardToStakedReputers != "" {
		value := protoreflect.ValueOfString(x.PreviousPercentageRewardToStakedReputers)
		if !f(fd_GenesisState_previous_percentage_reward_to_staked_reputers, value) {
			return
		}
	}
	if len(x.OpenWorkerWindows) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_55_list{list: &x.OpenWorkerWindows})
		if !f(fd_GenesisState_open_worker_windows, value) {
			return
		}
	}
	if len(x.UnfulfilledWorkerNonces) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_43_list{list: &x.UnfulfilledWorkerNonces})
		if !f(fd_GenesisState_unfulfilled_worker_nonces, value) {
			return
		}
	}
	if len(x.UnfulfilledReputerNonces) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_44_list{list: &x.UnfulfilledReputerNonces})
		if !f(fd_GenesisState_unfulfilled_reputer_nonces, value) {
			return
		}
	}
	if len(x.LastDripBlock) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_56_list{list: &x.LastDripBlock})
		if !f(fd_GenesisState_last_drip_block, value) {
			return
		}
	}
	if len(x.LatestInfererNetworkRegrets) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_45_list{list: &x.LatestInfererNetworkRegrets})
		if !f(fd_GenesisState_latest_inferer_network_regrets, value) {
			return
		}
	}
	if len(x.LatestForecasterNetworkRegrets) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_46_list{list: &x.LatestForecasterNetworkRegrets})
		if !f(fd_GenesisState_latest_forecaster_network_regrets, value) {
			return
		}
	}
	if len(x.LatestOneInForecasterNetworkRegrets) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_47_list{list: &x.LatestOneInForecasterNetworkRegrets})
		if !f(fd_GenesisState_latest_one_in_forecaster_network_regrets, value) {
			return
		}
	}
	if len(x.LatestNaiveInfererNetworkRegrets) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_48_list{list: &x.LatestNaiveInfererNetworkRegrets})
		if !f(fd_GenesisState_latest_naive_inferer_network_regrets, value) {
			return
		}
	}
	if len(x.LatestOneOutInfererInfererNetworkRegrets) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_49_list{list: &x.LatestOneOutInfererInfererNetworkRegrets})
		if !f(fd_GenesisState_latest_one_out_inferer_inferer_network_regrets, value) {
			return
		}
	}
	if len(x.LatestOneOutInfererForecasterNetworkRegrets) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_50_list{list: &x.LatestOneOutInfererForecasterNetworkRegrets})
		if !f(fd_GenesisState_latest_one_out_inferer_forecaster_network_regrets, value) {
			return
		}
	}
	if len(x.LatestOneOutForecasterInfererNetworkRegrets) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_51_list{list: &x.LatestOneOutForecasterInfererNetworkRegrets})
		if !f(fd_GenesisState_latest_one_out_forecaster_inferer_network_regrets, value) {
			return
		}
	}
	if len(x.LatestOneOutForecasterForecasterNetworkRegrets) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_52_list{list: &x.LatestOneOutForecasterForecasterNetworkRegrets})
		if !f(fd_GenesisState_latest_one_out_forecaster_forecaster_network_regrets, value) {
			return
		}
	}
	if len(x.CoreTeamAddresses) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_2_list{list: &x.CoreTeamAddresses})
		if !f(fd_GenesisState_core_team_addresses, value) {
			return
		}
	}
	if len(x.TopicLastWorkerCommit) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_53_list{list: &x.TopicLastWorkerCommit})
		if !f(fd_GenesisState_topic_last_worker_commit, value) {
			return
		}
	}
	if len(x.TopicLastReputerCommit) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_54_list{list: &x.TopicLastReputerCommit})
		if !f(fd_GenesisState_topic_last_reputer_commit, value) {
			return
		}
	}
	if len(x.TopicToNextPossibleChurningBlock) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_57_list{list: &x.TopicToNextPossibleChurningBlock})
		if !f(fd_GenesisState_topic_to_next_possible_churning_block, value) {
			return
		}
	}
	if len(x.BlockToActiveTopics) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_58_list{list: &x.BlockToActiveTopics})
		if !f(fd_GenesisState_block_to_active_topics, value) {
			return
		}
	}
	if len(x.BlockToLowestActiveTopicWeight) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_59_list{list: &x.BlockToLowestActiveTopicWeight})
		if !f(fd_GenesisState_block_to_lowest_active_topic_weight, value) {
			return
		}
	}
	if len(x.PreviousTopicQuantileInfererScoreEma) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_63_list{list: &x.PreviousTopicQuantileInfererScoreEma})
		if !f(fd_GenesisState_previous_topic_quantile_inferer_score_ema, value) {
			return
		}
	}
	if len(x.PreviousTopicQuantileForecasterScoreEma) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_64_list{list: &x.PreviousTopicQuantileForecasterScoreEma})
		if !f(fd_GenesisState_previous_topic_quantile_forecaster_score_ema, value) {
			return
		}
	}
	if len(x.PreviousTopicQuantileReputerScoreEma) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_65_list{list: &x.PreviousTopicQuantileReputerScoreEma})
		if !f(fd_GenesisState_previous_topic_quantile_reputer_score_ema, value) {
			return
		}
	}
	if len(x.CountInfererInclusionsInTopicActiveSet) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_66_list{list: &x.CountInfererInclusionsInTopicActiveSet})
		if !f(fd_GenesisState_count_inferer_inclusions_in_topic_active_set, value) {
			return
		}
	}
	if len(x.CountForecasterInclusionsInTopicActiveSet) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_67_list{list: &x.CountForecasterInclusionsInTopicActiveSet})
		if !f(fd_GenesisState_count_forecaster_inclusions_in_topic_active_set, value) {
			return
		}
	}
	if x.TotalSumPreviousTopicWeights != "" {
		value := protoreflect.ValueOfString(x.TotalSumPreviousTopicWeights)
		if !f(fd_GenesisState_total_sum_previous_topic_weights, value) {
			return
		}
	}
	if x.RewardCurrentBlockEmission != "" {
		value := protoreflect.ValueOfString(x.RewardCurrentBlockEmission)
		if !f(fd_GenesisState_reward_current_block_emission, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GenesisState) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.GenesisState.params":
		return x.Params != nil
	case "emissions.v5.GenesisState.next_topic_id":
		return x.NextTopicId != uint64(0)
	case "emissions.v5.GenesisState.topics":
		return len(x.Topics) != 0
	case "emissions.v5.GenesisState.active_topics":
		return len(x.ActiveTopics) != 0
	case "emissions.v5.GenesisState.rewardable_topics":
		return len(x.RewardableTopics) != 0
	case "emissions.v5.GenesisState.topic_workers":
		return len(x.TopicWorkers) != 0
	case "emissions.v5.GenesisState.topic_reputers":
		return len(x.TopicReputers) != 0
	case "emissions.v5.GenesisState.topic_reward_nonce":
		return len(x.TopicRewardNonce) != 0
	case "emissions.v5.GenesisState.inferer_scores_by_block":
		return len(x.InfererScoresByBlock) != 0
	case "emissions.v5.GenesisState.forecaster_scores_by_block":
		return len(x.ForecasterScoresByBlock) != 0
	case "emissions.v5.GenesisState.reputer_scores_by_block":
		return len(x.ReputerScoresByBlock) != 0
	case "emissions.v5.GenesisState.inferer_score_emas":
		return len(x.InfererScoreEmas) != 0
	case "emissions.v5.GenesisState.forecaster_score_emas":
		return len(x.ForecasterScoreEmas) != 0
	case "emissions.v5.GenesisState.reputer_score_emas":
		return len(x.ReputerScoreEmas) != 0
	case "emissions.v5.GenesisState.reputer_listening_coefficient":
		return len(x.ReputerListeningCoefficient) != 0
	case "emissions.v5.GenesisState.previous_reputer_reward_fraction":
		return len(x.PreviousReputerRewardFraction) != 0
	case "emissions.v5.GenesisState.previous_inference_reward_fraction":
		return len(x.PreviousInferenceRewardFraction) != 0
	case "emissions.v5.GenesisState.previous_forecast_reward_fraction":
		return len(x.PreviousForecastRewardFraction) != 0
	case "emissions.v5.GenesisState.previous_forecaster_score_ratio":
		return len(x.PreviousForecasterScoreRatio) != 0
	case "emissions.v5.GenesisState.total_stake":
		return x.TotalStake != ""
	case "emissions.v5.GenesisState.topic_stake":
		return len(x.TopicStake) != 0
	case "emissions.v5.GenesisState.stake_reputer_authority":
		return len(x.StakeReputerAuthority) != 0
	case "emissions.v5.GenesisState.stake_sum_from_delegator":
		return len(x.StakeSumFromDelegator) != 0
	case "emissions.v5.GenesisState.delegated_stakes":
		return len(x.DelegatedStakes) != 0
	case "emissions.v5.GenesisState.stake_from_delegators_upon_reputer":
		return len(x.StakeFromDelegatorsUponReputer) != 0
	case "emissions.v5.GenesisState.delegate_reward_per_share":
		return len(x.DelegateRewardPerShare) != 0
	case "emissions.v5.GenesisState.stake_removals_by_block":
		return len(x.StakeRemovalsByBlock) != 0
	case "emissions.v5.GenesisState.stake_removals_by_actor":
		return len(x.StakeRemovalsByActor) != 0
	case "emissions.v5.GenesisState.delegate_stake_removals_by_block":
		return len(x.DelegateStakeRemovalsByBlock) != 0
	case "emissions.v5.GenesisState.delegate_stake_removals_by_actor":
		return len(x.DelegateStakeRemovalsByActor) != 0
	case "emissions.v5.GenesisState.inferences":
		return len(x.Inferences) != 0
	case "emissions.v5.GenesisState.forecasts":
		return len(x.Forecasts) != 0
	case "emissions.v5.GenesisState.workers":
		return len(x.Workers) != 0
	case "emissions.v5.GenesisState.reputers":
		return len(x.Reputers) != 0
	case "emissions.v5.GenesisState.topic_fee_revenue":
		return len(x.TopicFeeRevenue) != 0
	case "emissions.v5.GenesisState.previous_topic_weight":
		return len(x.PreviousTopicWeight) != 0
	case "emissions.v5.GenesisState.all_inferences":
		return len(x.AllInferences) != 0
	case "emissions.v5.GenesisState.all_forecasts":
		return len(x.AllForecasts) != 0
	case "emissions.v5.GenesisState.all_loss_bundles":
		return len(x.AllLossBundles) != 0
	case "emissions.v5.GenesisState.network_loss_bundles":
		return len(x.NetworkLossBundles) != 0
	case "emissions.v5.GenesisState.previous_percentage_reward_to_staked_reputers":
		return x.PreviousPercentageRewardToStakedReputers != ""
	case "emissions.v5.GenesisState.open_worker_windows":
		return len(x.OpenWorkerWindows) != 0
	case "emissions.v5.GenesisState.unfulfilled_worker_nonces":
		return len(x.UnfulfilledWorkerNonces) != 0
	case "emissions.v5.GenesisState.unfulfilled_reputer_nonces":
		return len(x.UnfulfilledReputerNonces) != 0
	case "emissions.v5.GenesisState.last_drip_block":
		return len(x.LastDripBlock) != 0
	case "emissions.v5.GenesisState.latest_inferer_network_regrets":
		return len(x.LatestInfererNetworkRegrets) != 0
	case "emissions.v5.GenesisState.latest_forecaster_network_regrets":
		return len(x.LatestForecasterNetworkRegrets) != 0
	case "emissions.v5.GenesisState.latest_one_in_forecaster_network_regrets":
		return len(x.LatestOneInForecasterNetworkRegrets) != 0
	case "emissions.v5.GenesisState.latest_naive_inferer_network_regrets":
		return len(x.LatestNaiveInfererNetworkRegrets) != 0
	case "emissions.v5.GenesisState.latest_one_out_inferer_inferer_network_regrets":
		return len(x.LatestOneOutInfererInfererNetworkRegrets) != 0
	case "emissions.v5.GenesisState.latest_one_out_inferer_forecaster_network_regrets":
		return len(x.LatestOneOutInfererForecasterNetworkRegrets) != 0
	case "emissions.v5.GenesisState.latest_one_out_forecaster_inferer_network_regrets":
		return len(x.LatestOneOutForecasterInfererNetworkRegrets) != 0
	case "emissions.v5.GenesisState.latest_one_out_forecaster_forecaster_network_regrets":
		return len(x.LatestOneOutForecasterForecasterNetworkRegrets) != 0
	case "emissions.v5.GenesisState.core_team_addresses":
		return len(x.CoreTeamAddresses) != 0
	case "emissions.v5.GenesisState.topic_last_worker_commit":
		return len(x.TopicLastWorkerCommit) != 0
	case "emissions.v5.GenesisState.topic_last_reputer_commit":
		return len(x.TopicLastReputerCommit) != 0
	case "emissions.v5.GenesisState.topic_to_next_possible_churning_block":
		return len(x.TopicToNextPossibleChurningBlock) != 0
	case "emissions.v5.GenesisState.block_to_active_topics":
		return len(x.BlockToActiveTopics) != 0
	case "emissions.v5.GenesisState.block_to_lowest_active_topic_weight":
		return len(x.BlockToLowestActiveTopicWeight) != 0
	case "emissions.v5.GenesisState.previous_topic_quantile_inferer_score_ema":
		return len(x.PreviousTopicQuantileInfererScoreEma) != 0
	case "emissions.v5.GenesisState.previous_topic_quantile_forecaster_score_ema":
		return len(x.PreviousTopicQuantileForecasterScoreEma) != 0
	case "emissions.v5.GenesisState.previous_topic_quantile_reputer_score_ema":
		return len(x.PreviousTopicQuantileReputerScoreEma) != 0
	case "emissions.v5.GenesisState.count_inferer_inclusions_in_topic_active_set":
		return len(x.CountInfererInclusionsInTopicActiveSet) != 0
	case "emissions.v5.GenesisState.count_forecaster_inclusions_in_topic_active_set":
		return len(x.CountForecasterInclusionsInTopicActiveSet) != 0
	case "emissions.v5.GenesisState.total_sum_previous_topic_weights":
		return x.TotalSumPreviousTopicWeights != ""
	case "emissions.v5.GenesisState.reward_current_block_emission":
		return x.RewardCurrentBlockEmission != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GenesisState"))
		}
		panic(fmt.Errorf("message emissions.v5.GenesisState does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GenesisState) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.GenesisState.params":
		x.Params = nil
	case "emissions.v5.GenesisState.next_topic_id":
		x.NextTopicId = uint64(0)
	case "emissions.v5.GenesisState.topics":
		x.Topics = nil
	case "emissions.v5.GenesisState.active_topics":
		x.ActiveTopics = nil
	case "emissions.v5.GenesisState.rewardable_topics":
		x.RewardableTopics = nil
	case "emissions.v5.GenesisState.topic_workers":
		x.TopicWorkers = nil
	case "emissions.v5.GenesisState.topic_reputers":
		x.TopicReputers = nil
	case "emissions.v5.GenesisState.topic_reward_nonce":
		x.TopicRewardNonce = nil
	case "emissions.v5.GenesisState.inferer_scores_by_block":
		x.InfererScoresByBlock = nil
	case "emissions.v5.GenesisState.forecaster_scores_by_block":
		x.ForecasterScoresByBlock = nil
	case "emissions.v5.GenesisState.reputer_scores_by_block":
		x.ReputerScoresByBlock = nil
	case "emissions.v5.GenesisState.inferer_score_emas":
		x.InfererScoreEmas = nil
	case "emissions.v5.GenesisState.forecaster_score_emas":
		x.ForecasterScoreEmas = nil
	case "emissions.v5.GenesisState.reputer_score_emas":
		x.ReputerScoreEmas = nil
	case "emissions.v5.GenesisState.reputer_listening_coefficient":
		x.ReputerListeningCoefficient = nil
	case "emissions.v5.GenesisState.previous_reputer_reward_fraction":
		x.PreviousReputerRewardFraction = nil
	case "emissions.v5.GenesisState.previous_inference_reward_fraction":
		x.PreviousInferenceRewardFraction = nil
	case "emissions.v5.GenesisState.previous_forecast_reward_fraction":
		x.PreviousForecastRewardFraction = nil
	case "emissions.v5.GenesisState.previous_forecaster_score_ratio":
		x.PreviousForecasterScoreRatio = nil
	case "emissions.v5.GenesisState.total_stake":
		x.TotalStake = ""
	case "emissions.v5.GenesisState.topic_stake":
		x.TopicStake = nil
	case "emissions.v5.GenesisState.stake_reputer_authority":
		x.StakeReputerAuthority = nil
	case "emissions.v5.GenesisState.stake_sum_from_delegator":
		x.StakeSumFromDelegator = nil
	case "emissions.v5.GenesisState.delegated_stakes":
		x.DelegatedStakes = nil
	case "emissions.v5.GenesisState.stake_from_delegators_upon_reputer":
		x.StakeFromDelegatorsUponReputer = nil
	case "emissions.v5.GenesisState.delegate_reward_per_share":
		x.DelegateRewardPerShare = nil
	case "emissions.v5.GenesisState.stake_removals_by_block":
		x.StakeRemovalsByBlock = nil
	case "emissions.v5.GenesisState.stake_removals_by_actor":
		x.StakeRemovalsByActor = nil
	case "emissions.v5.GenesisState.delegate_stake_removals_by_block":
		x.DelegateStakeRemovalsByBlock = nil
	case "emissions.v5.GenesisState.delegate_stake_removals_by_actor":
		x.DelegateStakeRemovalsByActor = nil
	case "emissions.v5.GenesisState.inferences":
		x.Inferences = nil
	case "emissions.v5.GenesisState.forecasts":
		x.Forecasts = nil
	case "emissions.v5.GenesisState.workers":
		x.Workers = nil
	case "emissions.v5.GenesisState.reputers":
		x.Reputers = nil
	case "emissions.v5.GenesisState.topic_fee_revenue":
		x.TopicFeeRevenue = nil
	case "emissions.v5.GenesisState.previous_topic_weight":
		x.PreviousTopicWeight = nil
	case "emissions.v5.GenesisState.all_inferences":
		x.AllInferences = nil
	case "emissions.v5.GenesisState.all_forecasts":
		x.AllForecasts = nil
	case "emissions.v5.GenesisState.all_loss_bundles":
		x.AllLossBundles = nil
	case "emissions.v5.GenesisState.network_loss_bundles":
		x.NetworkLossBundles = nil
	case "emissions.v5.GenesisState.previous_percentage_reward_to_staked_reputers":
		x.PreviousPercentageRewardToStakedReputers = ""
	case "emissions.v5.GenesisState.open_worker_windows":
		x.OpenWorkerWindows = nil
	case "emissions.v5.GenesisState.unfulfilled_worker_nonces":
		x.UnfulfilledWorkerNonces = nil
	case "emissions.v5.GenesisState.unfulfilled_reputer_nonces":
		x.UnfulfilledReputerNonces = nil
	case "emissions.v5.GenesisState.last_drip_block":
		x.LastDripBlock = nil
	case "emissions.v5.GenesisState.latest_inferer_network_regrets":
		x.LatestInfererNetworkRegrets = nil
	case "emissions.v5.GenesisState.latest_forecaster_network_regrets":
		x.LatestForecasterNetworkRegrets = nil
	case "emissions.v5.GenesisState.latest_one_in_forecaster_network_regrets":
		x.LatestOneInForecasterNetworkRegrets = nil
	case "emissions.v5.GenesisState.latest_naive_inferer_network_regrets":
		x.LatestNaiveInfererNetworkRegrets = nil
	case "emissions.v5.GenesisState.latest_one_out_inferer_inferer_network_regrets":
		x.LatestOneOutInfererInfererNetworkRegrets = nil
	case "emissions.v5.GenesisState.latest_one_out_inferer_forecaster_network_regrets":
		x.LatestOneOutInfererForecasterNetworkRegrets = nil
	case "emissions.v5.GenesisState.latest_one_out_forecaster_inferer_network_regrets":
		x.LatestOneOutForecasterInfererNetworkRegrets = nil
	case "emissions.v5.GenesisState.latest_one_out_forecaster_forecaster_network_regrets":
		x.LatestOneOutForecasterForecasterNetworkRegrets = nil
	case "emissions.v5.GenesisState.core_team_addresses":
		x.CoreTeamAddresses = nil
	case "emissions.v5.GenesisState.topic_last_worker_commit":
		x.TopicLastWorkerCommit = nil
	case "emissions.v5.GenesisState.topic_last_reputer_commit":
		x.TopicLastReputerCommit = nil
	case "emissions.v5.GenesisState.topic_to_next_possible_churning_block":
		x.TopicToNextPossibleChurningBlock = nil
	case "emissions.v5.GenesisState.block_to_active_topics":
		x.BlockToActiveTopics = nil
	case "emissions.v5.GenesisState.block_to_lowest_active_topic_weight":
		x.BlockToLowestActiveTopicWeight = nil
	case "emissions.v5.GenesisState.previous_topic_quantile_inferer_score_ema":
		x.PreviousTopicQuantileInfererScoreEma = nil
	case "emissions.v5.GenesisState.previous_topic_quantile_forecaster_score_ema":
		x.PreviousTopicQuantileForecasterScoreEma = nil
	case "emissions.v5.GenesisState.previous_topic_quantile_reputer_score_ema":
		x.PreviousTopicQuantileReputerScoreEma = nil
	case "emissions.v5.GenesisState.count_inferer_inclusions_in_topic_active_set":
		x.CountInfererInclusionsInTopicActiveSet = nil
	case "emissions.v5.GenesisState.count_forecaster_inclusions_in_topic_active_set":
		x.CountForecasterInclusionsInTopicActiveSet = nil
	case "emissions.v5.GenesisState.total_sum_previous_topic_weights":
		x.TotalSumPreviousTopicWeights = ""
	case "emissions.v5.GenesisState.reward_current_block_emission":
		x.RewardCurrentBlockEmission = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GenesisState"))
		}
		panic(fmt.Errorf("message emissions.v5.GenesisState does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GenesisState) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.GenesisState.params":
		value := x.Params
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "emissions.v5.GenesisState.next_topic_id":
		value := x.NextTopicId
		return protoreflect.ValueOfUint64(value)
	case "emissions.v5.GenesisState.topics":
		if len(x.Topics) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_4_list{})
		}
		listValue := &_GenesisState_4_list{list: &x.Topics}
		return protoreflect.ValueOfList(listValue)
	case "emissions.v5.GenesisState.active_topics":
		if len(x.ActiveTopics) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_5_list{})
		}
		listValue := &_GenesisState_5_list{list: &x.ActiveTopics}
		return protoreflect.ValueOfList(listValue)
	case "emissions.v5.GenesisState.rewardable_topics":
		if len(x.RewardableTopics) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_6_list{})
		}
		listValue := &_GenesisState_6_list{list: &x.RewardableTopics}
		return protoreflect.ValueOfList(listValue)
	case "emissions.v5.GenesisState.topic_workers":
		if len(x.TopicWorkers) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_7_list{})
		}
		listValue := &_GenesisState_7_list{list: &x.TopicWorkers}
		return protoreflect.ValueOfList(listValue)
	case "emissions.v5.GenesisState.topic_reputers":
		if len(x.TopicReputers) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_8_list{})
		}
		listValue := &_GenesisState_8_list{list: &x.TopicReputers}
		return protoreflect.ValueOfList(listValue)
	case "emissions.v5.GenesisState.topic_reward_nonce":
		if len(x.TopicRewardNonce) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_9_list{})
		}
		listValue := &_GenesisState_9_list{list: &x.TopicRewardNonce}
		return protoreflect.ValueOfList(listValue)
	case "emissions.v5.GenesisState.inferer_scores_by_block":
		if len(x.InfererScoresByBlock) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_10_list{})
		}
		listValue := &_GenesisState_10_list{list: &x.InfererScoresByBlock}
		return protoreflect.ValueOfList(listValue)
	case "emissions.v5.GenesisState.forecaster_scores_by_block":
		if len(x.ForecasterScoresByBlock) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_11_list{})
		}
		listValue := &_GenesisState_11_list{list: &x.ForecasterScoresByBlock}
		return protoreflect.ValueOfList(listValue)
	case "emissions.v5.GenesisState.reputer_scores_by_block":
		if len(x.ReputerScoresByBlock) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_12_list{})
		}
		listValue := &_GenesisState_12_list{list: &x.ReputerScoresByBlock}
		return protoreflect.ValueOfList(listValue)
	case "emissions.v5.GenesisState.inferer_score_emas":
		if len(x.InfererScoreEmas) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_60_list{})
		}
		listValue := &_GenesisState_60_list{list: &x.InfererScoreEmas}
		return protoreflect.ValueOfList(listValue)
	case "emissions.v5.GenesisState.forecaster_score_emas":
		if len(x.ForecasterScoreEmas) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_61_list{})
		}
		listValue := &_GenesisState_61_list{list: &x.ForecasterScoreEmas}
		return protoreflect.ValueOfList(listValue)
	case "emissions.v5.GenesisState.reputer_score_emas":
		if len(x.ReputerScoreEmas) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_62_list{})
		}
		listValue := &_GenesisState_62_list{list: &x.ReputerScoreEmas}
		return protoreflect.ValueOfList(listValue)
	case "emissions.v5.GenesisState.reputer_listening_coefficient":
		if len(x.ReputerListeningCoefficient) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_16_list{})
		}
		listValue := &_GenesisState_16_list{list: &x.ReputerListeningCoefficient}
		return protoreflect.ValueOfList(listValue)
	case "emissions.v5.GenesisState.previous_reputer_reward_fraction":
		if len(x.PreviousReputerRewardFraction) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_17_list{})
		}
		listValue := &_GenesisState_17_list{list: &x.PreviousReputerRewardFraction}
		return protoreflect.ValueOfList(listValue)
	case "emissions.v5.GenesisState.previous_inference_reward_fraction":
		if len(x.PreviousInferenceRewardFraction) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_18_list{})
		}
		listValue := &_GenesisState_18_list{list: &x.PreviousInferenceRewardFraction}
		return protoreflect.ValueOfList(listValue)
	case "emissions.v5.GenesisState.previous_forecast_reward_fraction":
		if len(x.PreviousForecastRewardFraction) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_19_list{})
		}
		listValue := &_GenesisState_19_list{list: &x.PreviousForecastRewardFraction}
		return protoreflect.ValueOfList(listValue)
	case "emissions.v5.GenesisState.previous_forecaster_score_ratio":
		if len(x.PreviousForecasterScoreRatio) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_20_list{})
		}
		listValue := &_GenesisState_20_list{list: &x.PreviousForecasterScoreRatio}
		return protoreflect.ValueOfList(listValue)
	case "emissions.v5.GenesisState.total_stake":
		value := x.TotalStake
		return protoreflect.ValueOfString(value)
	case "emissions.v5.GenesisState.topic_stake":
		if len(x.TopicStake) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_22_list{})
		}
		listValue := &_GenesisState_22_list{list: &x.TopicStake}
		return protoreflect.ValueOfList(listValue)
	case "emissions.v5.GenesisState.stake_reputer_authority":
		if len(x.StakeReputerAuthority) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_23_list{})
		}
		listValue := &_GenesisState_23_list{list: &x.StakeReputerAuthority}
		return protoreflect.ValueOfList(listValue)
	case "emissions.v5.GenesisState.stake_sum_from_delegator":
		if len(x.StakeSumFromDelegator) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_24_list{})
		}
		listValue := &_GenesisState_24_list{list: &x.StakeSumFromDelegator}
		return protoreflect.ValueOfList(listValue)
	case "emissions.v5.GenesisState.delegated_stakes":
		if len(x.DelegatedStakes) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_25_list{})
		}
		listValue := &_GenesisState_25_list{list: &x.DelegatedStakes}
		return protoreflect.ValueOfList(listValue)
	case "emissions.v5.GenesisState.stake_from_delegators_upon_reputer":
		if len(x.StakeFromDelegatorsUponReputer) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_26_list{})
		}
		listValue := &_GenesisState_26_list{list: &x.StakeFromDelegatorsUponReputer}
		return protoreflect.ValueOfList(listValue)
	case "emissions.v5.GenesisState.delegate_reward_per_share":
		if len(x.DelegateRewardPerShare) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_27_list{})
		}
		listValue := &_GenesisState_27_list{list: &x.DelegateRewardPerShare}
		return protoreflect.ValueOfList(listValue)
	case "emissions.v5.GenesisState.stake_removals_by_block":
		if len(x.StakeRemovalsByBlock) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_28_list{})
		}
		listValue := &_GenesisState_28_list{list: &x.StakeRemovalsByBlock}
		return protoreflect.ValueOfList(listValue)
	case "emissions.v5.GenesisState.stake_removals_by_actor":
		if len(x.StakeRemovalsByActor) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_29_list{})
		}
		listValue := &_GenesisState_29_list{list: &x.StakeRemovalsByActor}
		return protoreflect.ValueOfList(listValue)
	case "emissions.v5.GenesisState.delegate_stake_removals_by_block":
		if len(x.DelegateStakeRemovalsByBlock) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_30_list{})
		}
		listValue := &_GenesisState_30_list{list: &x.DelegateStakeRemovalsByBlock}
		return protoreflect.ValueOfList(listValue)
	case "emissions.v5.GenesisState.delegate_stake_removals_by_actor":
		if len(x.DelegateStakeRemovalsByActor) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_31_list{})
		}
		listValue := &_GenesisState_31_list{list: &x.DelegateStakeRemovalsByActor}
		return protoreflect.ValueOfList(listValue)
	case "emissions.v5.GenesisState.inferences":
		if len(x.Inferences) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_32_list{})
		}
		listValue := &_GenesisState_32_list{list: &x.Inferences}
		return protoreflect.ValueOfList(listValue)
	case "emissions.v5.GenesisState.forecasts":
		if len(x.Forecasts) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_33_list{})
		}
		listValue := &_GenesisState_33_list{list: &x.Forecasts}
		return protoreflect.ValueOfList(listValue)
	case "emissions.v5.GenesisState.workers":
		if len(x.Workers) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_34_list{})
		}
		listValue := &_GenesisState_34_list{list: &x.Workers}
		return protoreflect.ValueOfList(listValue)
	case "emissions.v5.GenesisState.reputers":
		if len(x.Reputers) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_35_list{})
		}
		listValue := &_GenesisState_35_list{list: &x.Reputers}
		return protoreflect.ValueOfList(listValue)
	case "emissions.v5.GenesisState.topic_fee_revenue":
		if len(x.TopicFeeRevenue) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_36_list{})
		}
		listValue := &_GenesisState_36_list{list: &x.TopicFeeRevenue}
		return protoreflect.ValueOfList(listValue)
	case "emissions.v5.GenesisState.previous_topic_weight":
		if len(x.PreviousTopicWeight) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_37_list{})
		}
		listValue := &_GenesisState_37_list{list: &x.PreviousTopicWeight}
		return protoreflect.ValueOfList(listValue)
	case "emissions.v5.GenesisState.all_inferences":
		if len(x.AllInferences) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_38_list{})
		}
		listValue := &_GenesisState_38_list{list: &x.AllInferences}
		return protoreflect.ValueOfList(listValue)
	case "emissions.v5.GenesisState.all_forecasts":
		if len(x.AllForecasts) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_39_list{})
		}
		listValue := &_GenesisState_39_list{list: &x.AllForecasts}
		return protoreflect.ValueOfList(listValue)
	case "emissions.v5.GenesisState.all_loss_bundles":
		if len(x.AllLossBundles) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_40_list{})
		}
		listValue := &_GenesisState_40_list{list: &x.AllLossBundles}
		return protoreflect.ValueOfList(listValue)
	case "emissions.v5.GenesisState.network_loss_bundles":
		if len(x.NetworkLossBundles) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_41_list{})
		}
		listValue := &_GenesisState_41_list{list: &x.NetworkLossBundles}
		return protoreflect.ValueOfList(listValue)
	case "emissions.v5.GenesisState.previous_percentage_reward_to_staked_reputers":
		value := x.PreviousPercentageRewardToStakedReputers
		return protoreflect.ValueOfString(value)
	case "emissions.v5.GenesisState.open_worker_windows":
		if len(x.OpenWorkerWindows) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_55_list{})
		}
		listValue := &_GenesisState_55_list{list: &x.OpenWorkerWindows}
		return protoreflect.ValueOfList(listValue)
	case "emissions.v5.GenesisState.unfulfilled_worker_nonces":
		if len(x.UnfulfilledWorkerNonces) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_43_list{})
		}
		listValue := &_GenesisState_43_list{list: &x.UnfulfilledWorkerNonces}
		return protoreflect.ValueOfList(listValue)
	case "emissions.v5.GenesisState.unfulfilled_reputer_nonces":
		if len(x.UnfulfilledReputerNonces) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_44_list{})
		}
		listValue := &_GenesisState_44_list{list: &x.UnfulfilledReputerNonces}
		return protoreflect.ValueOfList(listValue)
	case "emissions.v5.GenesisState.last_drip_block":
		if len(x.LastDripBlock) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_56_list{})
		}
		listValue := &_GenesisState_56_list{list: &x.LastDripBlock}
		return protoreflect.ValueOfList(listValue)
	case "emissions.v5.GenesisState.latest_inferer_network_regrets":
		if len(x.LatestInfererNetworkRegrets) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_45_list{})
		}
		listValue := &_GenesisState_45_list{list: &x.LatestInfererNetworkRegrets}
		return protoreflect.ValueOfList(listValue)
	case "emissions.v5.GenesisState.latest_forecaster_network_regrets":
		if len(x.LatestForecasterNetworkRegrets) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_46_list{})
		}
		listValue := &_GenesisState_46_list{list: &x.LatestForecasterNetworkRegrets}
		return protoreflect.ValueOfList(listValue)
	case "emissions.v5.GenesisState.latest_one_in_forecaster_network_regrets":
		if len(x.LatestOneInForecasterNetworkRegrets) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_47_list{})
		}
		listValue := &_GenesisState_47_list{list: &x.LatestOneInForecasterNetworkRegrets}
		return protoreflect.ValueOfList(listValue)
	case "emissions.v5.GenesisState.latest_naive_inferer_network_regrets":
		if len(x.LatestNaiveInfererNetworkRegrets) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_48_list{})
		}
		listValue := &_GenesisState_48_list{list: &x.LatestNaiveInfererNetworkRegrets}
		return protoreflect.ValueOfList(listValue)
	case "emissions.v5.GenesisState.latest_one_out_inferer_inferer_network_regrets":
		if len(x.LatestOneOutInfererInfererNetworkRegrets) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_49_list{})
		}
		listValue := &_GenesisState_49_list{list: &x.LatestOneOutInfererInfererNetworkRegrets}
		return protoreflect.ValueOfList(listValue)
	case "emissions.v5.GenesisState.latest_one_out_inferer_forecaster_network_regrets":
		if len(x.LatestOneOutInfererForecasterNetworkRegrets) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_50_list{})
		}
		listValue := &_GenesisState_50_list{list: &x.LatestOneOutInfererForecasterNetworkRegrets}
		return protoreflect.ValueOfList(listValue)
	case "emissions.v5.GenesisState.latest_one_out_forecaster_inferer_network_regrets":
		if len(x.LatestOneOutForecasterInfererNetworkRegrets) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_51_list{})
		}
		listValue := &_GenesisState_51_list{list: &x.LatestOneOutForecasterInfererNetworkRegrets}
		return protoreflect.ValueOfList(listValue)
	case "emissions.v5.GenesisState.latest_one_out_forecaster_forecaster_network_regrets":
		if len(x.LatestOneOutForecasterForecasterNetworkRegrets) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_52_list{})
		}
		listValue := &_GenesisState_52_list{list: &x.LatestOneOutForecasterForecasterNetworkRegrets}
		return protoreflect.ValueOfList(listValue)
	case "emissions.v5.GenesisState.core_team_addresses":
		if len(x.CoreTeamAddresses) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_2_list{})
		}
		listValue := &_GenesisState_2_list{list: &x.CoreTeamAddresses}
		return protoreflect.ValueOfList(listValue)
	case "emissions.v5.GenesisState.topic_last_worker_commit":
		if len(x.TopicLastWorkerCommit) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_53_list{})
		}
		listValue := &_GenesisState_53_list{list: &x.TopicLastWorkerCommit}
		return protoreflect.ValueOfList(listValue)
	case "emissions.v5.GenesisState.topic_last_reputer_commit":
		if len(x.TopicLastReputerCommit) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_54_list{})
		}
		listValue := &_GenesisState_54_list{list: &x.TopicLastReputerCommit}
		return protoreflect.ValueOfList(listValue)
	case "emissions.v5.GenesisState.topic_to_next_possible_churning_block":
		if len(x.TopicToNextPossibleChurningBlock) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_57_list{})
		}
		listValue := &_GenesisState_57_list{list: &x.TopicToNextPossibleChurningBlock}
		return protoreflect.ValueOfList(listValue)
	case "emissions.v5.GenesisState.block_to_active_topics":
		if len(x.BlockToActiveTopics) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_58_list{})
		}
		listValue := &_GenesisState_58_list{list: &x.BlockToActiveTopics}
		return protoreflect.ValueOfList(listValue)
	case "emissions.v5.GenesisState.block_to_lowest_active_topic_weight":
		if len(x.BlockToLowestActiveTopicWeight) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_59_list{})
		}
		listValue := &_GenesisState_59_list{list: &x.BlockToLowestActiveTopicWeight}
		return protoreflect.ValueOfList(listValue)
	case "emissions.v5.GenesisState.previous_topic_quantile_inferer_score_ema":
		if len(x.PreviousTopicQuantileInfererScoreEma) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_63_list{})
		}
		listValue := &_GenesisState_63_list{list: &x.PreviousTopicQuantileInfererScoreEma}
		return protoreflect.ValueOfList(listValue)
	case "emissions.v5.GenesisState.previous_topic_quantile_forecaster_score_ema":
		if len(x.PreviousTopicQuantileForecasterScoreEma) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_64_list{})
		}
		listValue := &_GenesisState_64_list{list: &x.PreviousTopicQuantileForecasterScoreEma}
		return protoreflect.ValueOfList(listValue)
	case "emissions.v5.GenesisState.previous_topic_quantile_reputer_score_ema":
		if len(x.PreviousTopicQuantileReputerScoreEma) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_65_list{})
		}
		listValue := &_GenesisState_65_list{list: &x.PreviousTopicQuantileReputerScoreEma}
		return protoreflect.ValueOfList(listValue)
	case "emissions.v5.GenesisState.count_inferer_inclusions_in_topic_active_set":
		if len(x.CountInfererInclusionsInTopicActiveSet) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_66_list{})
		}
		listValue := &_GenesisState_66_list{list: &x.CountInfererInclusionsInTopicActiveSet}
		return protoreflect.ValueOfList(listValue)
	case "emissions.v5.GenesisState.count_forecaster_inclusions_in_topic_active_set":
		if len(x.CountForecasterInclusionsInTopicActiveSet) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_67_list{})
		}
		listValue := &_GenesisState_67_list{list: &x.CountForecasterInclusionsInTopicActiveSet}
		return protoreflect.ValueOfList(listValue)
	case "emissions.v5.GenesisState.total_sum_previous_topic_weights":
		value := x.TotalSumPreviousTopicWeights
		return protoreflect.ValueOfString(value)
	case "emissions.v5.GenesisState.reward_current_block_emission":
		value := x.RewardCurrentBlockEmission
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GenesisState"))
		}
		panic(fmt.Errorf("message emissions.v5.GenesisState does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GenesisState) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.GenesisState.params":
		x.Params = value.Message().Interface().(*v3.Params)
	case "emissions.v5.GenesisState.next_topic_id":
		x.NextTopicId = value.Uint()
	case "emissions.v5.GenesisState.topics":
		lv := value.List()
		clv := lv.(*_GenesisState_4_list)
		x.Topics = *clv.list
	case "emissions.v5.GenesisState.active_topics":
		lv := value.List()
		clv := lv.(*_GenesisState_5_list)
		x.ActiveTopics = *clv.list
	case "emissions.v5.GenesisState.rewardable_topics":
		lv := value.List()
		clv := lv.(*_GenesisState_6_list)
		x.RewardableTopics = *clv.list
	case "emissions.v5.GenesisState.topic_workers":
		lv := value.List()
		clv := lv.(*_GenesisState_7_list)
		x.TopicWorkers = *clv.list
	case "emissions.v5.GenesisState.topic_reputers":
		lv := value.List()
		clv := lv.(*_GenesisState_8_list)
		x.TopicReputers = *clv.list
	case "emissions.v5.GenesisState.topic_reward_nonce":
		lv := value.List()
		clv := lv.(*_GenesisState_9_list)
		x.TopicRewardNonce = *clv.list
	case "emissions.v5.GenesisState.inferer_scores_by_block":
		lv := value.List()
		clv := lv.(*_GenesisState_10_list)
		x.InfererScoresByBlock = *clv.list
	case "emissions.v5.GenesisState.forecaster_scores_by_block":
		lv := value.List()
		clv := lv.(*_GenesisState_11_list)
		x.ForecasterScoresByBlock = *clv.list
	case "emissions.v5.GenesisState.reputer_scores_by_block":
		lv := value.List()
		clv := lv.(*_GenesisState_12_list)
		x.ReputerScoresByBlock = *clv.list
	case "emissions.v5.GenesisState.inferer_score_emas":
		lv := value.List()
		clv := lv.(*_GenesisState_60_list)
		x.InfererScoreEmas = *clv.list
	case "emissions.v5.GenesisState.forecaster_score_emas":
		lv := value.List()
		clv := lv.(*_GenesisState_61_list)
		x.ForecasterScoreEmas = *clv.list
	case "emissions.v5.GenesisState.reputer_score_emas":
		lv := value.List()
		clv := lv.(*_GenesisState_62_list)
		x.ReputerScoreEmas = *clv.list
	case "emissions.v5.GenesisState.reputer_listening_coefficient":
		lv := value.List()
		clv := lv.(*_GenesisState_16_list)
		x.ReputerListeningCoefficient = *clv.list
	case "emissions.v5.GenesisState.previous_reputer_reward_fraction":
		lv := value.List()
		clv := lv.(*_GenesisState_17_list)
		x.PreviousReputerRewardFraction = *clv.list
	case "emissions.v5.GenesisState.previous_inference_reward_fraction":
		lv := value.List()
		clv := lv.(*_GenesisState_18_list)
		x.PreviousInferenceRewardFraction = *clv.list
	case "emissions.v5.GenesisState.previous_forecast_reward_fraction":
		lv := value.List()
		clv := lv.(*_GenesisState_19_list)
		x.PreviousForecastRewardFraction = *clv.list
	case "emissions.v5.GenesisState.previous_forecaster_score_ratio":
		lv := value.List()
		clv := lv.(*_GenesisState_20_list)
		x.PreviousForecasterScoreRatio = *clv.list
	case "emissions.v5.GenesisState.total_stake":
		x.TotalStake = value.Interface().(string)
	case "emissions.v5.GenesisState.topic_stake":
		lv := value.List()
		clv := lv.(*_GenesisState_22_list)
		x.TopicStake = *clv.list
	case "emissions.v5.GenesisState.stake_reputer_authority":
		lv := value.List()
		clv := lv.(*_GenesisState_23_list)
		x.StakeReputerAuthority = *clv.list
	case "emissions.v5.GenesisState.stake_sum_from_delegator":
		lv := value.List()
		clv := lv.(*_GenesisState_24_list)
		x.StakeSumFromDelegator = *clv.list
	case "emissions.v5.GenesisState.delegated_stakes":
		lv := value.List()
		clv := lv.(*_GenesisState_25_list)
		x.DelegatedStakes = *clv.list
	case "emissions.v5.GenesisState.stake_from_delegators_upon_reputer":
		lv := value.List()
		clv := lv.(*_GenesisState_26_list)
		x.StakeFromDelegatorsUponReputer = *clv.list
	case "emissions.v5.GenesisState.delegate_reward_per_share":
		lv := value.List()
		clv := lv.(*_GenesisState_27_list)
		x.DelegateRewardPerShare = *clv.list
	case "emissions.v5.GenesisState.stake_removals_by_block":
		lv := value.List()
		clv := lv.(*_GenesisState_28_list)
		x.StakeRemovalsByBlock = *clv.list
	case "emissions.v5.GenesisState.stake_removals_by_actor":
		lv := value.List()
		clv := lv.(*_GenesisState_29_list)
		x.StakeRemovalsByActor = *clv.list
	case "emissions.v5.GenesisState.delegate_stake_removals_by_block":
		lv := value.List()
		clv := lv.(*_GenesisState_30_list)
		x.DelegateStakeRemovalsByBlock = *clv.list
	case "emissions.v5.GenesisState.delegate_stake_removals_by_actor":
		lv := value.List()
		clv := lv.(*_GenesisState_31_list)
		x.DelegateStakeRemovalsByActor = *clv.list
	case "emissions.v5.GenesisState.inferences":
		lv := value.List()
		clv := lv.(*_GenesisState_32_list)
		x.Inferences = *clv.list
	case "emissions.v5.GenesisState.forecasts":
		lv := value.List()
		clv := lv.(*_GenesisState_33_list)
		x.Forecasts = *clv.list
	case "emissions.v5.GenesisState.workers":
		lv := value.List()
		clv := lv.(*_GenesisState_34_list)
		x.Workers = *clv.list
	case "emissions.v5.GenesisState.reputers":
		lv := value.List()
		clv := lv.(*_GenesisState_35_list)
		x.Reputers = *clv.list
	case "emissions.v5.GenesisState.topic_fee_revenue":
		lv := value.List()
		clv := lv.(*_GenesisState_36_list)
		x.TopicFeeRevenue = *clv.list
	case "emissions.v5.GenesisState.previous_topic_weight":
		lv := value.List()
		clv := lv.(*_GenesisState_37_list)
		x.PreviousTopicWeight = *clv.list
	case "emissions.v5.GenesisState.all_inferences":
		lv := value.List()
		clv := lv.(*_GenesisState_38_list)
		x.AllInferences = *clv.list
	case "emissions.v5.GenesisState.all_forecasts":
		lv := value.List()
		clv := lv.(*_GenesisState_39_list)
		x.AllForecasts = *clv.list
	case "emissions.v5.GenesisState.all_loss_bundles":
		lv := value.List()
		clv := lv.(*_GenesisState_40_list)
		x.AllLossBundles = *clv.list
	case "emissions.v5.GenesisState.network_loss_bundles":
		lv := value.List()
		clv := lv.(*_GenesisState_41_list)
		x.NetworkLossBundles = *clv.list
	case "emissions.v5.GenesisState.previous_percentage_reward_to_staked_reputers":
		x.PreviousPercentageRewardToStakedReputers = value.Interface().(string)
	case "emissions.v5.GenesisState.open_worker_windows":
		lv := value.List()
		clv := lv.(*_GenesisState_55_list)
		x.OpenWorkerWindows = *clv.list
	case "emissions.v5.GenesisState.unfulfilled_worker_nonces":
		lv := value.List()
		clv := lv.(*_GenesisState_43_list)
		x.UnfulfilledWorkerNonces = *clv.list
	case "emissions.v5.GenesisState.unfulfilled_reputer_nonces":
		lv := value.List()
		clv := lv.(*_GenesisState_44_list)
		x.UnfulfilledReputerNonces = *clv.list
	case "emissions.v5.GenesisState.last_drip_block":
		lv := value.List()
		clv := lv.(*_GenesisState_56_list)
		x.LastDripBlock = *clv.list
	case "emissions.v5.GenesisState.latest_inferer_network_regrets":
		lv := value.List()
		clv := lv.(*_GenesisState_45_list)
		x.LatestInfererNetworkRegrets = *clv.list
	case "emissions.v5.GenesisState.latest_forecaster_network_regrets":
		lv := value.List()
		clv := lv.(*_GenesisState_46_list)
		x.LatestForecasterNetworkRegrets = *clv.list
	case "emissions.v5.GenesisState.latest_one_in_forecaster_network_regrets":
		lv := value.List()
		clv := lv.(*_GenesisState_47_list)
		x.LatestOneInForecasterNetworkRegrets = *clv.list
	case "emissions.v5.GenesisState.latest_naive_inferer_network_regrets":
		lv := value.List()
		clv := lv.(*_GenesisState_48_list)
		x.LatestNaiveInfererNetworkRegrets = *clv.list
	case "emissions.v5.GenesisState.latest_one_out_inferer_inferer_network_regrets":
		lv := value.List()
		clv := lv.(*_GenesisState_49_list)
		x.LatestOneOutInfererInfererNetworkRegrets = *clv.list
	case "emissions.v5.GenesisState.latest_one_out_inferer_forecaster_network_regrets":
		lv := value.List()
		clv := lv.(*_GenesisState_50_list)
		x.LatestOneOutInfererForecasterNetworkRegrets = *clv.list
	case "emissions.v5.GenesisState.latest_one_out_forecaster_inferer_network_regrets":
		lv := value.List()
		clv := lv.(*_GenesisState_51_list)
		x.LatestOneOutForecasterInfererNetworkRegrets = *clv.list
	case "emissions.v5.GenesisState.latest_one_out_forecaster_forecaster_network_regrets":
		lv := value.List()
		clv := lv.(*_GenesisState_52_list)
		x.LatestOneOutForecasterForecasterNetworkRegrets = *clv.list
	case "emissions.v5.GenesisState.core_team_addresses":
		lv := value.List()
		clv := lv.(*_GenesisState_2_list)
		x.CoreTeamAddresses = *clv.list
	case "emissions.v5.GenesisState.topic_last_worker_commit":
		lv := value.List()
		clv := lv.(*_GenesisState_53_list)
		x.TopicLastWorkerCommit = *clv.list
	case "emissions.v5.GenesisState.topic_last_reputer_commit":
		lv := value.List()
		clv := lv.(*_GenesisState_54_list)
		x.TopicLastReputerCommit = *clv.list
	case "emissions.v5.GenesisState.topic_to_next_possible_churning_block":
		lv := value.List()
		clv := lv.(*_GenesisState_57_list)
		x.TopicToNextPossibleChurningBlock = *clv.list
	case "emissions.v5.GenesisState.block_to_active_topics":
		lv := value.List()
		clv := lv.(*_GenesisState_58_list)
		x.BlockToActiveTopics = *clv.list
	case "emissions.v5.GenesisState.block_to_lowest_active_topic_weight":
		lv := value.List()
		clv := lv.(*_GenesisState_59_list)
		x.BlockToLowestActiveTopicWeight = *clv.list
	case "emissions.v5.GenesisState.previous_topic_quantile_inferer_score_ema":
		lv := value.List()
		clv := lv.(*_GenesisState_63_list)
		x.PreviousTopicQuantileInfererScoreEma = *clv.list
	case "emissions.v5.GenesisState.previous_topic_quantile_forecaster_score_ema":
		lv := value.List()
		clv := lv.(*_GenesisState_64_list)
		x.PreviousTopicQuantileForecasterScoreEma = *clv.list
	case "emissions.v5.GenesisState.previous_topic_quantile_reputer_score_ema":
		lv := value.List()
		clv := lv.(*_GenesisState_65_list)
		x.PreviousTopicQuantileReputerScoreEma = *clv.list
	case "emissions.v5.GenesisState.count_inferer_inclusions_in_topic_active_set":
		lv := value.List()
		clv := lv.(*_GenesisState_66_list)
		x.CountInfererInclusionsInTopicActiveSet = *clv.list
	case "emissions.v5.GenesisState.count_forecaster_inclusions_in_topic_active_set":
		lv := value.List()
		clv := lv.(*_GenesisState_67_list)
		x.CountForecasterInclusionsInTopicActiveSet = *clv.list
	case "emissions.v5.GenesisState.total_sum_previous_topic_weights":
		x.TotalSumPreviousTopicWeights = value.Interface().(string)
	case "emissions.v5.GenesisState.reward_current_block_emission":
		x.RewardCurrentBlockEmission = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GenesisState"))
		}
		panic(fmt.Errorf("message emissions.v5.GenesisState does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GenesisState) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GenesisState.params":
		if x.Params == nil {
			x.Params = new(v3.Params)
		}
		return protoreflect.ValueOfMessage(x.Params.ProtoReflect())
	case "emissions.v5.GenesisState.topics":
		if x.Topics == nil {
			x.Topics = []*TopicIdAndTopic{}
		}
		value := &_GenesisState_4_list{list: &x.Topics}
		return protoreflect.ValueOfList(value)
	case "emissions.v5.GenesisState.active_topics":
		if x.ActiveTopics == nil {
			x.ActiveTopics = []uint64{}
		}
		value := &_GenesisState_5_list{list: &x.ActiveTopics}
		return protoreflect.ValueOfList(value)
	case "emissions.v5.GenesisState.rewardable_topics":
		if x.RewardableTopics == nil {
			x.RewardableTopics = []uint64{}
		}
		value := &_GenesisState_6_list{list: &x.RewardableTopics}
		return protoreflect.ValueOfList(value)
	case "emissions.v5.GenesisState.topic_workers":
		if x.TopicWorkers == nil {
			x.TopicWorkers = []*TopicAndActorId{}
		}
		value := &_GenesisState_7_list{list: &x.TopicWorkers}
		return protoreflect.ValueOfList(value)
	case "emissions.v5.GenesisState.topic_reputers":
		if x.TopicReputers == nil {
			x.TopicReputers = []*TopicAndActorId{}
		}
		value := &_GenesisState_8_list{list: &x.TopicReputers}
		return protoreflect.ValueOfList(value)
	case "emissions.v5.GenesisState.topic_reward_nonce":
		if x.TopicRewardNonce == nil {
			x.TopicRewardNonce = []*TopicIdAndBlockHeight{}
		}
		value := &_GenesisState_9_list{list: &x.TopicRewardNonce}
		return protoreflect.ValueOfList(value)
	case "emissions.v5.GenesisState.inferer_scores_by_block":
		if x.InfererScoresByBlock == nil {
			x.InfererScoresByBlock = []*TopicIdBlockHeightScores{}
		}
		value := &_GenesisState_10_list{list: &x.InfererScoresByBlock}
		return protoreflect.ValueOfList(value)
	case "emissions.v5.GenesisState.forecaster_scores_by_block":
		if x.ForecasterScoresByBlock == nil {
			x.ForecasterScoresByBlock = []*TopicIdBlockHeightScores{}
		}
		value := &_GenesisState_11_list{list: &x.ForecasterScoresByBlock}
		return protoreflect.ValueOfList(value)
	case "emissions.v5.GenesisState.reputer_scores_by_block":
		if x.ReputerScoresByBlock == nil {
			x.ReputerScoresByBlock = []*TopicIdBlockHeightScores{}
		}
		value := &_GenesisState_12_list{list: &x.ReputerScoresByBlock}
		return protoreflect.ValueOfList(value)
	case "emissions.v5.GenesisState.inferer_score_emas":
		if x.InfererScoreEmas == nil {
			x.InfererScoreEmas = []*TopicIdActorIdScore{}
		}
		value := &_GenesisState_60_list{list: &x.InfererScoreEmas}
		return protoreflect.ValueOfList(value)
	case "emissions.v5.GenesisState.forecaster_score_emas":
		if x.ForecasterScoreEmas == nil {
			x.ForecasterScoreEmas = []*TopicIdActorIdScore{}
		}
		value := &_GenesisState_61_list{list: &x.ForecasterScoreEmas}
		return protoreflect.ValueOfList(value)
	case "emissions.v5.GenesisState.reputer_score_emas":
		if x.ReputerScoreEmas == nil {
			x.ReputerScoreEmas = []*TopicIdActorIdScore{}
		}
		value := &_GenesisState_62_list{list: &x.ReputerScoreEmas}
		return protoreflect.ValueOfList(value)
	case "emissions.v5.GenesisState.reputer_listening_coefficient":
		if x.ReputerListeningCoefficient == nil {
			x.ReputerListeningCoefficient = []*TopicIdActorIdListeningCoefficient{}
		}
		value := &_GenesisState_16_list{list: &x.ReputerListeningCoefficient}
		return protoreflect.ValueOfList(value)
	case "emissions.v5.GenesisState.previous_reputer_reward_fraction":
		if x.PreviousReputerRewardFraction == nil {
			x.PreviousReputerRewardFraction = []*TopicIdActorIdDec{}
		}
		value := &_GenesisState_17_list{list: &x.PreviousReputerRewardFraction}
		return protoreflect.ValueOfList(value)
	case "emissions.v5.GenesisState.previous_inference_reward_fraction":
		if x.PreviousInferenceRewardFraction == nil {
			x.PreviousInferenceRewardFraction = []*TopicIdActorIdDec{}
		}
		value := &_GenesisState_18_list{list: &x.PreviousInferenceRewardFraction}
		return protoreflect.ValueOfList(value)
	case "emissions.v5.GenesisState.previous_forecast_reward_fraction":
		if x.PreviousForecastRewardFraction == nil {
			x.PreviousForecastRewardFraction = []*TopicIdActorIdDec{}
		}
		value := &_GenesisState_19_list{list: &x.PreviousForecastRewardFraction}
		return protoreflect.ValueOfList(value)
	case "emissions.v5.GenesisState.previous_forecaster_score_ratio":
		if x.PreviousForecasterScoreRatio == nil {
			x.PreviousForecasterScoreRatio = []*TopicIdAndDec{}
		}
		value := &_GenesisState_20_list{list: &x.PreviousForecasterScoreRatio}
		return protoreflect.ValueOfList(value)
	case "emissions.v5.GenesisState.topic_stake":
		if x.TopicStake == nil {
			x.TopicStake = []*TopicIdAndInt{}
		}
		value := &_GenesisState_22_list{list: &x.TopicStake}
		return protoreflect.ValueOfList(value)
	case "emissions.v5.GenesisState.stake_reputer_authority":
		if x.StakeReputerAuthority == nil {
			x.StakeReputerAuthority = []*TopicIdActorIdInt{}
		}
		value := &_GenesisState_23_list{list: &x.StakeReputerAuthority}
		return protoreflect.ValueOfList(value)
	case "emissions.v5.GenesisState.stake_sum_from_delegator":
		if x.StakeSumFromDelegator == nil {
			x.StakeSumFromDelegator = []*TopicIdActorIdInt{}
		}
		value := &_GenesisState_24_list{list: &x.StakeSumFromDelegator}
		return protoreflect.ValueOfList(value)
	case "emissions.v5.GenesisState.delegated_stakes":
		if x.DelegatedStakes == nil {
			x.DelegatedStakes = []*TopicIdDelegatorReputerDelegatorInfo{}
		}
		value := &_GenesisState_25_list{list: &x.DelegatedStakes}
		return protoreflect.ValueOfList(value)
	case "emissions.v5.GenesisState.stake_from_delegators_upon_reputer":
		if x.StakeFromDelegatorsUponReputer == nil {
			x.StakeFromDelegatorsUponReputer = []*TopicIdActorIdInt{}
		}
		value := &_GenesisState_26_list{list: &x.StakeFromDelegatorsUponReputer}
		return protoreflect.ValueOfList(value)
	case "emissions.v5.GenesisState.delegate_reward_per_share":
		if x.DelegateRewardPerShare == nil {
			x.DelegateRewardPerShare = []*TopicIdActorIdDec{}
		}
		value := &_GenesisState_27_list{list: &x.DelegateRewardPerShare}
		return protoreflect.ValueOfList(value)
	case "emissions.v5.GenesisState.stake_removals_by_block":
		if x.StakeRemovalsByBlock == nil {
			x.StakeRemovalsByBlock = []*BlockHeightTopicIdReputerStakeRemovalInfo{}
		}
		value := &_GenesisState_28_list{list: &x.StakeRemovalsByBlock}
		return protoreflect.ValueOfList(value)
	case "emissions.v5.GenesisState.stake_removals_by_actor":
		if x.StakeRemovalsByActor == nil {
			x.StakeRemovalsByActor = []*ActorIdTopicIdBlockHeight{}
		}
		value := &_GenesisState_29_list{list: &x.StakeRemovalsByActor}
		return protoreflect.ValueOfList(value)
	case "emissions.v5.GenesisState.delegate_stake_removals_by_block":
		if x.DelegateStakeRemovalsByBlock == nil {
			x.DelegateStakeRemovalsByBlock = []*BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo{}
		}
		value := &_GenesisState_30_list{list: &x.DelegateStakeRemovalsByBlock}
		return protoreflect.ValueOfList(value)
	case "emissions.v5.GenesisState.delegate_stake_removals_by_actor":
		if x.DelegateStakeRemovalsByActor == nil {
			x.DelegateStakeRemovalsByActor = []*DelegatorReputerTopicIdBlockHeight{}
		}
		value := &_GenesisState_31_list{list: &x.DelegateStakeRemovalsByActor}
		return protoreflect.ValueOfList(value)
	case "emissions.v5.GenesisState.inferences":
		if x.Inferences == nil {
			x.Inferences = []*TopicIdActorIdInference{}
		}
		value := &_GenesisState_32_list{list: &x.Inferences}
		return protoreflect.ValueOfList(value)
	case "emissions.v5.GenesisState.forecasts":
		if x.Forecasts == nil {
			x.Forecasts = []*TopicIdActorIdForecast{}
		}
		value := &_GenesisState_33_list{list: &x.Forecasts}
		return protoreflect.ValueOfList(value)
	case "emissions.v5.GenesisState.workers":
		if x.Workers == nil {
			x.Workers = []*LibP2PKeyAndOffchainNode{}
		}
		value := &_GenesisState_34_list{list: &x.Workers}
		return protoreflect.ValueOfList(value)
	case "emissions.v5.GenesisState.reputers":
		if x.Reputers == nil {
			x.Reputers = []*LibP2PKeyAndOffchainNode{}
		}
		value := &_GenesisState_35_list{list: &x.Reputers}
		return protoreflect.ValueOfList(value)
	case "emissions.v5.GenesisState.topic_fee_revenue":
		if x.TopicFeeRevenue == nil {
			x.TopicFeeRevenue = []*TopicIdAndInt{}
		}
		value := &_GenesisState_36_list{list: &x.TopicFeeRevenue}
		return protoreflect.ValueOfList(value)
	case "emissions.v5.GenesisState.previous_topic_weight":
		if x.PreviousTopicWeight == nil {
			x.PreviousTopicWeight = []*TopicIdAndDec{}
		}
		value := &_GenesisState_37_list{list: &x.PreviousTopicWeight}
		return protoreflect.ValueOfList(value)
	case "emissions.v5.GenesisState.all_inferences":
		if x.AllInferences == nil {
			x.AllInferences = []*TopicIdBlockHeightInferences{}
		}
		value := &_GenesisState_38_list{list: &x.AllInferences}
		return protoreflect.ValueOfList(value)
	case "emissions.v5.GenesisState.all_forecasts":
		if x.AllForecasts == nil {
			x.AllForecasts = []*TopicIdBlockHeightForecasts{}
		}
		value := &_GenesisState_39_list{list: &x.AllForecasts}
		return protoreflect.ValueOfList(value)
	case "emissions.v5.GenesisState.all_loss_bundles":
		if x.AllLossBundles == nil {
			x.AllLossBundles = []*TopicIdBlockHeightReputerValueBundles{}
		}
		value := &_GenesisState_40_list{list: &x.AllLossBundles}
		return protoreflect.ValueOfList(value)
	case "emissions.v5.GenesisState.network_loss_bundles":
		if x.NetworkLossBundles == nil {
			x.NetworkLossBundles = []*TopicIdBlockHeightValueBundles{}
		}
		value := &_GenesisState_41_list{list: &x.NetworkLossBundles}
		return protoreflect.ValueOfList(value)
	case "emissions.v5.GenesisState.open_worker_windows":
		if x.OpenWorkerWindows == nil {
			x.OpenWorkerWindows = []*BlockHeightAndTopicIds{}
		}
		value := &_GenesisState_55_list{list: &x.OpenWorkerWindows}
		return protoreflect.ValueOfList(value)
	case "emissions.v5.GenesisState.unfulfilled_worker_nonces":
		if x.UnfulfilledWorkerNonces == nil {
			x.UnfulfilledWorkerNonces = []*TopicIdAndNonces{}
		}
		value := &_GenesisState_43_list{list: &x.UnfulfilledWorkerNonces}
		return protoreflect.ValueOfList(value)
	case "emissions.v5.GenesisState.unfulfilled_reputer_nonces":
		if x.UnfulfilledReputerNonces == nil {
			x.UnfulfilledReputerNonces = []*TopicIdAndReputerRequestNonces{}
		}
		value := &_GenesisState_44_list{list: &x.UnfulfilledReputerNonces}
		return protoreflect.ValueOfList(value)
	case "emissions.v5.GenesisState.last_drip_block":
		if x.LastDripBlock == nil {
			x.LastDripBlock = []*TopicIdAndBlockHeight{}
		}
		value := &_GenesisState_56_list{list: &x.LastDripBlock}
		return protoreflect.ValueOfList(value)
	case "emissions.v5.GenesisState.latest_inferer_network_regrets":
		if x.LatestInfererNetworkRegrets == nil {
			x.LatestInfererNetworkRegrets = []*TopicIdActorIdTimeStampedValue{}
		}
		value := &_GenesisState_45_list{list: &x.LatestInfererNetworkRegrets}
		return protoreflect.ValueOfList(value)
	case "emissions.v5.GenesisState.latest_forecaster_network_regrets":
		if x.LatestForecasterNetworkRegrets == nil {
			x.LatestForecasterNetworkRegrets = []*TopicIdActorIdTimeStampedValue{}
		}
		value := &_GenesisState_46_list{list: &x.LatestForecasterNetworkRegrets}
		return protoreflect.ValueOfList(value)
	case "emissions.v5.GenesisState.latest_one_in_forecaster_network_regrets":
		if x.LatestOneInForecasterNetworkRegrets == nil {
			x.LatestOneInForecasterNetworkRegrets = []*TopicIdActorIdActorIdTimeStampedValue{}
		}
		value := &_GenesisState_47_list{list: &x.LatestOneInForecasterNetworkRegrets}
		return protoreflect.ValueOfList(value)
	case "emissions.v5.GenesisState.latest_naive_inferer_network_regrets":
		if x.LatestNaiveInfererNetworkRegrets == nil {
			x.LatestNaiveInfererNetworkRegrets = []*TopicIdActorIdTimeStampedValue{}
		}
		value := &_GenesisState_48_list{list: &x.LatestNaiveInfererNetworkRegrets}
		return protoreflect.ValueOfList(value)
	case "emissions.v5.GenesisState.latest_one_out_inferer_inferer_network_regrets":
		if x.LatestOneOutInfererInfererNetworkRegrets == nil {
			x.LatestOneOutInfererInfererNetworkRegrets = []*TopicIdActorIdActorIdTimeStampedValue{}
		}
		value := &_GenesisState_49_list{list: &x.LatestOneOutInfererInfererNetworkRegrets}
		return protoreflect.ValueOfList(value)
	case "emissions.v5.GenesisState.latest_one_out_inferer_forecaster_network_regrets":
		if x.LatestOneOutInfererForecasterNetworkRegrets == nil {
			x.LatestOneOutInfererForecasterNetworkRegrets = []*TopicIdActorIdActorIdTimeStampedValue{}
		}
		value := &_GenesisState_50_list{list: &x.LatestOneOutInfererForecasterNetworkRegrets}
		return protoreflect.ValueOfList(value)
	case "emissions.v5.GenesisState.latest_one_out_forecaster_inferer_network_regrets":
		if x.LatestOneOutForecasterInfererNetworkRegrets == nil {
			x.LatestOneOutForecasterInfererNetworkRegrets = []*TopicIdActorIdActorIdTimeStampedValue{}
		}
		value := &_GenesisState_51_list{list: &x.LatestOneOutForecasterInfererNetworkRegrets}
		return protoreflect.ValueOfList(value)
	case "emissions.v5.GenesisState.latest_one_out_forecaster_forecaster_network_regrets":
		if x.LatestOneOutForecasterForecasterNetworkRegrets == nil {
			x.LatestOneOutForecasterForecasterNetworkRegrets = []*TopicIdActorIdActorIdTimeStampedValue{}
		}
		value := &_GenesisState_52_list{list: &x.LatestOneOutForecasterForecasterNetworkRegrets}
		return protoreflect.ValueOfList(value)
	case "emissions.v5.GenesisState.core_team_addresses":
		if x.CoreTeamAddresses == nil {
			x.CoreTeamAddresses = []string{}
		}
		value := &_GenesisState_2_list{list: &x.CoreTeamAddresses}
		return protoreflect.ValueOfList(value)
	case "emissions.v5.GenesisState.topic_last_worker_commit":
		if x.TopicLastWorkerCommit == nil {
			x.TopicLastWorkerCommit = []*TopicIdTimestampedActorNonce{}
		}
		value := &_GenesisState_53_list{list: &x.TopicLastWorkerCommit}
		return protoreflect.ValueOfList(value)
	case "emissions.v5.GenesisState.topic_last_reputer_commit":
		if x.TopicLastReputerCommit == nil {
			x.TopicLastReputerCommit = []*TopicIdTimestampedActorNonce{}
		}
		value := &_GenesisState_54_list{list: &x.TopicLastReputerCommit}
		return protoreflect.ValueOfList(value)
	case "emissions.v5.GenesisState.topic_to_next_possible_churning_block":
		if x.TopicToNextPossibleChurningBlock == nil {
			x.TopicToNextPossibleChurningBlock = []*TopicIdAndBlockHeight{}
		}
		value := &_GenesisState_57_list{list: &x.TopicToNextPossibleChurningBlock}
		return protoreflect.ValueOfList(value)
	case "emissions.v5.GenesisState.block_to_active_topics":
		if x.BlockToActiveTopics == nil {
			x.BlockToActiveTopics = []*BlockHeightTopicIds{}
		}
		value := &_GenesisState_58_list{list: &x.BlockToActiveTopics}
		return protoreflect.ValueOfList(value)
	case "emissions.v5.GenesisState.block_to_lowest_active_topic_weight":
		if x.BlockToLowestActiveTopicWeight == nil {
			x.BlockToLowestActiveTopicWeight = []*BlockHeightTopicIdWeightPair{}
		}
		value := &_GenesisState_59_list{list: &x.BlockToLowestActiveTopicWeight}
		return protoreflect.ValueOfList(value)
	case "emissions.v5.GenesisState.previous_topic_quantile_inferer_score_ema":
		if x.PreviousTopicQuantileInfererScoreEma == nil {
			x.PreviousTopicQuantileInfererScoreEma = []*TopicIdAndDec{}
		}
		value := &_GenesisState_63_list{list: &x.PreviousTopicQuantileInfererScoreEma}
		return protoreflect.ValueOfList(value)
	case "emissions.v5.GenesisState.previous_topic_quantile_forecaster_score_ema":
		if x.PreviousTopicQuantileForecasterScoreEma == nil {
			x.PreviousTopicQuantileForecasterScoreEma = []*TopicIdAndDec{}
		}
		value := &_GenesisState_64_list{list: &x.PreviousTopicQuantileForecasterScoreEma}
		return protoreflect.ValueOfList(value)
	case "emissions.v5.GenesisState.previous_topic_quantile_reputer_score_ema":
		if x.PreviousTopicQuantileReputerScoreEma == nil {
			x.PreviousTopicQuantileReputerScoreEma = []*TopicIdAndDec{}
		}
		value := &_GenesisState_65_list{list: &x.PreviousTopicQuantileReputerScoreEma}
		return protoreflect.ValueOfList(value)
	case "emissions.v5.GenesisState.count_inferer_inclusions_in_topic_active_set":
		if x.CountInfererInclusionsInTopicActiveSet == nil {
			x.CountInfererInclusionsInTopicActiveSet = []*TopicIdActorIdUint64{}
		}
		value := &_GenesisState_66_list{list: &x.CountInfererInclusionsInTopicActiveSet}
		return protoreflect.ValueOfList(value)
	case "emissions.v5.GenesisState.count_forecaster_inclusions_in_topic_active_set":
		if x.CountForecasterInclusionsInTopicActiveSet == nil {
			x.CountForecasterInclusionsInTopicActiveSet = []*TopicIdActorIdUint64{}
		}
		value := &_GenesisState_67_list{list: &x.CountForecasterInclusionsInTopicActiveSet}
		return protoreflect.ValueOfList(value)
	case "emissions.v5.GenesisState.next_topic_id":
		panic(fmt.Errorf("field next_topic_id of message emissions.v5.GenesisState is not mutable"))
	case "emissions.v5.GenesisState.total_stake":
		panic(fmt.Errorf("field total_stake of message emissions.v5.GenesisState is not mutable"))
	case "emissions.v5.GenesisState.previous_percentage_reward_to_staked_reputers":
		panic(fmt.Errorf("field previous_percentage_reward_to_staked_reputers of message emissions.v5.GenesisState is not mutable"))
	case "emissions.v5.GenesisState.total_sum_previous_topic_weights":
		panic(fmt.Errorf("field total_sum_previous_topic_weights of message emissions.v5.GenesisState is not mutable"))
	case "emissions.v5.GenesisState.reward_current_block_emission":
		panic(fmt.Errorf("field reward_current_block_emission of message emissions.v5.GenesisState is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GenesisState"))
		}
		panic(fmt.Errorf("message emissions.v5.GenesisState does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GenesisState) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.GenesisState.params":
		m := new(v3.Params)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "emissions.v5.GenesisState.next_topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "emissions.v5.GenesisState.topics":
		list := []*TopicIdAndTopic{}
		return protoreflect.ValueOfList(&_GenesisState_4_list{list: &list})
	case "emissions.v5.GenesisState.active_topics":
		list := []uint64{}
		return protoreflect.ValueOfList(&_GenesisState_5_list{list: &list})
	case "emissions.v5.GenesisState.rewardable_topics":
		list := []uint64{}
		return protoreflect.ValueOfList(&_GenesisState_6_list{list: &list})
	case "emissions.v5.GenesisState.topic_workers":
		list := []*TopicAndActorId{}
		return protoreflect.ValueOfList(&_GenesisState_7_list{list: &list})
	case "emissions.v5.GenesisState.topic_reputers":
		list := []*TopicAndActorId{}
		return protoreflect.ValueOfList(&_GenesisState_8_list{list: &list})
	case "emissions.v5.GenesisState.topic_reward_nonce":
		list := []*TopicIdAndBlockHeight{}
		return protoreflect.ValueOfList(&_GenesisState_9_list{list: &list})
	case "emissions.v5.GenesisState.inferer_scores_by_block":
		list := []*TopicIdBlockHeightScores{}
		return protoreflect.ValueOfList(&_GenesisState_10_list{list: &list})
	case "emissions.v5.GenesisState.forecaster_scores_by_block":
		list := []*TopicIdBlockHeightScores{}
		return protoreflect.ValueOfList(&_GenesisState_11_list{list: &list})
	case "emissions.v5.GenesisState.reputer_scores_by_block":
		list := []*TopicIdBlockHeightScores{}
		return protoreflect.ValueOfList(&_GenesisState_12_list{list: &list})
	case "emissions.v5.GenesisState.inferer_score_emas":
		list := []*TopicIdActorIdScore{}
		return protoreflect.ValueOfList(&_GenesisState_60_list{list: &list})
	case "emissions.v5.GenesisState.forecaster_score_emas":
		list := []*TopicIdActorIdScore{}
		return protoreflect.ValueOfList(&_GenesisState_61_list{list: &list})
	case "emissions.v5.GenesisState.reputer_score_emas":
		list := []*TopicIdActorIdScore{}
		return protoreflect.ValueOfList(&_GenesisState_62_list{list: &list})
	case "emissions.v5.GenesisState.reputer_listening_coefficient":
		list := []*TopicIdActorIdListeningCoefficient{}
		return protoreflect.ValueOfList(&_GenesisState_16_list{list: &list})
	case "emissions.v5.GenesisState.previous_reputer_reward_fraction":
		list := []*TopicIdActorIdDec{}
		return protoreflect.ValueOfList(&_GenesisState_17_list{list: &list})
	case "emissions.v5.GenesisState.previous_inference_reward_fraction":
		list := []*TopicIdActorIdDec{}
		return protoreflect.ValueOfList(&_GenesisState_18_list{list: &list})
	case "emissions.v5.GenesisState.previous_forecast_reward_fraction":
		list := []*TopicIdActorIdDec{}
		return protoreflect.ValueOfList(&_GenesisState_19_list{list: &list})
	case "emissions.v5.GenesisState.previous_forecaster_score_ratio":
		list := []*TopicIdAndDec{}
		return protoreflect.ValueOfList(&_GenesisState_20_list{list: &list})
	case "emissions.v5.GenesisState.total_stake":
		return protoreflect.ValueOfString("")
	case "emissions.v5.GenesisState.topic_stake":
		list := []*TopicIdAndInt{}
		return protoreflect.ValueOfList(&_GenesisState_22_list{list: &list})
	case "emissions.v5.GenesisState.stake_reputer_authority":
		list := []*TopicIdActorIdInt{}
		return protoreflect.ValueOfList(&_GenesisState_23_list{list: &list})
	case "emissions.v5.GenesisState.stake_sum_from_delegator":
		list := []*TopicIdActorIdInt{}
		return protoreflect.ValueOfList(&_GenesisState_24_list{list: &list})
	case "emissions.v5.GenesisState.delegated_stakes":
		list := []*TopicIdDelegatorReputerDelegatorInfo{}
		return protoreflect.ValueOfList(&_GenesisState_25_list{list: &list})
	case "emissions.v5.GenesisState.stake_from_delegators_upon_reputer":
		list := []*TopicIdActorIdInt{}
		return protoreflect.ValueOfList(&_GenesisState_26_list{list: &list})
	case "emissions.v5.GenesisState.delegate_reward_per_share":
		list := []*TopicIdActorIdDec{}
		return protoreflect.ValueOfList(&_GenesisState_27_list{list: &list})
	case "emissions.v5.GenesisState.stake_removals_by_block":
		list := []*BlockHeightTopicIdReputerStakeRemovalInfo{}
		return protoreflect.ValueOfList(&_GenesisState_28_list{list: &list})
	case "emissions.v5.GenesisState.stake_removals_by_actor":
		list := []*ActorIdTopicIdBlockHeight{}
		return protoreflect.ValueOfList(&_GenesisState_29_list{list: &list})
	case "emissions.v5.GenesisState.delegate_stake_removals_by_block":
		list := []*BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo{}
		return protoreflect.ValueOfList(&_GenesisState_30_list{list: &list})
	case "emissions.v5.GenesisState.delegate_stake_removals_by_actor":
		list := []*DelegatorReputerTopicIdBlockHeight{}
		return protoreflect.ValueOfList(&_GenesisState_31_list{list: &list})
	case "emissions.v5.GenesisState.inferences":
		list := []*TopicIdActorIdInference{}
		return protoreflect.ValueOfList(&_GenesisState_32_list{list: &list})
	case "emissions.v5.GenesisState.forecasts":
		list := []*TopicIdActorIdForecast{}
		return protoreflect.ValueOfList(&_GenesisState_33_list{list: &list})
	case "emissions.v5.GenesisState.workers":
		list := []*LibP2PKeyAndOffchainNode{}
		return protoreflect.ValueOfList(&_GenesisState_34_list{list: &list})
	case "emissions.v5.GenesisState.reputers":
		list := []*LibP2PKeyAndOffchainNode{}
		return protoreflect.ValueOfList(&_GenesisState_35_list{list: &list})
	case "emissions.v5.GenesisState.topic_fee_revenue":
		list := []*TopicIdAndInt{}
		return protoreflect.ValueOfList(&_GenesisState_36_list{list: &list})
	case "emissions.v5.GenesisState.previous_topic_weight":
		list := []*TopicIdAndDec{}
		return protoreflect.ValueOfList(&_GenesisState_37_list{list: &list})
	case "emissions.v5.GenesisState.all_inferences":
		list := []*TopicIdBlockHeightInferences{}
		return protoreflect.ValueOfList(&_GenesisState_38_list{list: &list})
	case "emissions.v5.GenesisState.all_forecasts":
		list := []*TopicIdBlockHeightForecasts{}
		return protoreflect.ValueOfList(&_GenesisState_39_list{list: &list})
	case "emissions.v5.GenesisState.all_loss_bundles":
		list := []*TopicIdBlockHeightReputerValueBundles{}
		return protoreflect.ValueOfList(&_GenesisState_40_list{list: &list})
	case "emissions.v5.GenesisState.network_loss_bundles":
		list := []*TopicIdBlockHeightValueBundles{}
		return protoreflect.ValueOfList(&_GenesisState_41_list{list: &list})
	case "emissions.v5.GenesisState.previous_percentage_reward_to_staked_reputers":
		return protoreflect.ValueOfString("")
	case "emissions.v5.GenesisState.open_worker_windows":
		list := []*BlockHeightAndTopicIds{}
		return protoreflect.ValueOfList(&_GenesisState_55_list{list: &list})
	case "emissions.v5.GenesisState.unfulfilled_worker_nonces":
		list := []*TopicIdAndNonces{}
		return protoreflect.ValueOfList(&_GenesisState_43_list{list: &list})
	case "emissions.v5.GenesisState.unfulfilled_reputer_nonces":
		list := []*TopicIdAndReputerRequestNonces{}
		return protoreflect.ValueOfList(&_GenesisState_44_list{list: &list})
	case "emissions.v5.GenesisState.last_drip_block":
		list := []*TopicIdAndBlockHeight{}
		return protoreflect.ValueOfList(&_GenesisState_56_list{list: &list})
	case "emissions.v5.GenesisState.latest_inferer_network_regrets":
		list := []*TopicIdActorIdTimeStampedValue{}
		return protoreflect.ValueOfList(&_GenesisState_45_list{list: &list})
	case "emissions.v5.GenesisState.latest_forecaster_network_regrets":
		list := []*TopicIdActorIdTimeStampedValue{}
		return protoreflect.ValueOfList(&_GenesisState_46_list{list: &list})
	case "emissions.v5.GenesisState.latest_one_in_forecaster_network_regrets":
		list := []*TopicIdActorIdActorIdTimeStampedValue{}
		return protoreflect.ValueOfList(&_GenesisState_47_list{list: &list})
	case "emissions.v5.GenesisState.latest_naive_inferer_network_regrets":
		list := []*TopicIdActorIdTimeStampedValue{}
		return protoreflect.ValueOfList(&_GenesisState_48_list{list: &list})
	case "emissions.v5.GenesisState.latest_one_out_inferer_inferer_network_regrets":
		list := []*TopicIdActorIdActorIdTimeStampedValue{}
		return protoreflect.ValueOfList(&_GenesisState_49_list{list: &list})
	case "emissions.v5.GenesisState.latest_one_out_inferer_forecaster_network_regrets":
		list := []*TopicIdActorIdActorIdTimeStampedValue{}
		return protoreflect.ValueOfList(&_GenesisState_50_list{list: &list})
	case "emissions.v5.GenesisState.latest_one_out_forecaster_inferer_network_regrets":
		list := []*TopicIdActorIdActorIdTimeStampedValue{}
		return protoreflect.ValueOfList(&_GenesisState_51_list{list: &list})
	case "emissions.v5.GenesisState.latest_one_out_forecaster_forecaster_network_regrets":
		list := []*TopicIdActorIdActorIdTimeStampedValue{}
		return protoreflect.ValueOfList(&_GenesisState_52_list{list: &list})
	case "emissions.v5.GenesisState.core_team_addresses":
		list := []string{}
		return protoreflect.ValueOfList(&_GenesisState_2_list{list: &list})
	case "emissions.v5.GenesisState.topic_last_worker_commit":
		list := []*TopicIdTimestampedActorNonce{}
		return protoreflect.ValueOfList(&_GenesisState_53_list{list: &list})
	case "emissions.v5.GenesisState.topic_last_reputer_commit":
		list := []*TopicIdTimestampedActorNonce{}
		return protoreflect.ValueOfList(&_GenesisState_54_list{list: &list})
	case "emissions.v5.GenesisState.topic_to_next_possible_churning_block":
		list := []*TopicIdAndBlockHeight{}
		return protoreflect.ValueOfList(&_GenesisState_57_list{list: &list})
	case "emissions.v5.GenesisState.block_to_active_topics":
		list := []*BlockHeightTopicIds{}
		return protoreflect.ValueOfList(&_GenesisState_58_list{list: &list})
	case "emissions.v5.GenesisState.block_to_lowest_active_topic_weight":
		list := []*BlockHeightTopicIdWeightPair{}
		return protoreflect.ValueOfList(&_GenesisState_59_list{list: &list})
	case "emissions.v5.GenesisState.previous_topic_quantile_inferer_score_ema":
		list := []*TopicIdAndDec{}
		return protoreflect.ValueOfList(&_GenesisState_63_list{list: &list})
	case "emissions.v5.GenesisState.previous_topic_quantile_forecaster_score_ema":
		list := []*TopicIdAndDec{}
		return protoreflect.ValueOfList(&_GenesisState_64_list{list: &list})
	case "emissions.v5.GenesisState.previous_topic_quantile_reputer_score_ema":
		list := []*TopicIdAndDec{}
		return protoreflect.ValueOfList(&_GenesisState_65_list{list: &list})
	case "emissions.v5.GenesisState.count_inferer_inclusions_in_topic_active_set":
		list := []*TopicIdActorIdUint64{}
		return protoreflect.ValueOfList(&_GenesisState_66_list{list: &list})
	case "emissions.v5.GenesisState.count_forecaster_inclusions_in_topic_active_set":
		list := []*TopicIdActorIdUint64{}
		return protoreflect.ValueOfList(&_GenesisState_67_list{list: &list})
	case "emissions.v5.GenesisState.total_sum_previous_topic_weights":
		return protoreflect.ValueOfString("")
	case "emissions.v5.GenesisState.reward_current_block_emission":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.GenesisState"))
		}
		panic(fmt.Errorf("message emissions.v5.GenesisState does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GenesisState) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.GenesisState", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GenesisState) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GenesisState) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GenesisState) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GenesisState) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GenesisState)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Params != nil {
			l = options.Size(x.Params)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.NextTopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.NextTopicId))
		}
		if len(x.Topics) > 0 {
			for _, e := range x.Topics {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.ActiveTopics) > 0 {
			l = 0
			for _, e := range x.ActiveTopics {
				l += runtime.Sov(uint64(e))
			}
			n += 1 + runtime.Sov(uint64(l)) + l
		}
		if len(x.RewardableTopics) > 0 {
			l = 0
			for _, e := range x.RewardableTopics {
				l += runtime.Sov(uint64(e))
			}
			n += 1 + runtime.Sov(uint64(l)) + l
		}
		if len(x.TopicWorkers) > 0 {
			for _, e := range x.TopicWorkers {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.TopicReputers) > 0 {
			for _, e := range x.TopicReputers {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.TopicRewardNonce) > 0 {
			for _, e := range x.TopicRewardNonce {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.InfererScoresByBlock) > 0 {
			for _, e := range x.InfererScoresByBlock {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.ForecasterScoresByBlock) > 0 {
			for _, e := range x.ForecasterScoresByBlock {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.ReputerScoresByBlock) > 0 {
			for _, e := range x.ReputerScoresByBlock {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.InfererScoreEmas) > 0 {
			for _, e := range x.InfererScoreEmas {
				l = options.Size(e)
				n += 2 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.ForecasterScoreEmas) > 0 {
			for _, e := range x.ForecasterScoreEmas {
				l = options.Size(e)
				n += 2 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.ReputerScoreEmas) > 0 {
			for _, e := range x.ReputerScoreEmas {
				l = options.Size(e)
				n += 2 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.ReputerListeningCoefficient) > 0 {
			for _, e := range x.ReputerListeningCoefficient {
				l = options.Size(e)
				n += 2 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.PreviousReputerRewardFraction) > 0 {
			for _, e := range x.PreviousReputerRewardFraction {
				l = options.Size(e)
				n += 2 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.PreviousInferenceRewardFraction) > 0 {
			for _, e := range x.PreviousInferenceRewardFraction {
				l = options.Size(e)
				n += 2 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.PreviousForecastRewardFraction) > 0 {
			for _, e := range x.PreviousForecastRewardFraction {
				l = options.Size(e)
				n += 2 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.PreviousForecasterScoreRatio) > 0 {
			for _, e := range x.PreviousForecasterScoreRatio {
				l = options.Size(e)
				n += 2 + l + runtime.Sov(uint64(l))
			}
		}
		l = len(x.TotalStake)
		if l > 0 {
			n += 2 + l + runtime.Sov(uint64(l))
		}
		if len(x.TopicStake) > 0 {
			for _, e := range x.TopicStake {
				l = options.Size(e)
				n += 2 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.StakeReputerAuthority) > 0 {
			for _, e := range x.StakeReputerAuthority {
				l = options.Size(e)
				n += 2 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.StakeSumFromDelegator) > 0 {
			for _, e := range x.StakeSumFromDelegator {
				l = options.Size(e)
				n += 2 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.DelegatedStakes) > 0 {
			for _, e := range x.DelegatedStakes {
				l = options.Size(e)
				n += 2 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.StakeFromDelegatorsUponReputer) > 0 {
			for _, e := range x.StakeFromDelegatorsUponReputer {
				l = options.Size(e)
				n += 2 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.DelegateRewardPerShare) > 0 {
			for _, e := range x.DelegateRewardPerShare {
				l = options.Size(e)
				n += 2 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.StakeRemovalsByBlock) > 0 {
			for _, e := range x.StakeRemovalsByBlock {
				l = options.Size(e)
				n += 2 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.StakeRemovalsByActor) > 0 {
			for _, e := range x.StakeRemovalsByActor {
				l = options.Size(e)
				n += 2 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.DelegateStakeRemovalsByBlock) > 0 {
			for _, e := range x.DelegateStakeRemovalsByBlock {
				l = options.Size(e)
				n += 2 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.DelegateStakeRemovalsByActor) > 0 {
			for _, e := range x.DelegateStakeRemovalsByActor {
				l = options.Size(e)
				n += 2 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.Inferences) > 0 {
			for _, e := range x.Inferences {
				l = options.Size(e)
				n += 2 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.Forecasts) > 0 {
			for _, e := range x.Forecasts {
				l = options.Size(e)
				n += 2 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.Workers) > 0 {
			for _, e := range x.Workers {
				l = options.Size(e)
				n += 2 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.Reputers) > 0 {
			for _, e := range x.Reputers {
				l = options.Size(e)
				n += 2 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.TopicFeeRevenue) > 0 {
			for _, e := range x.TopicFeeRevenue {
				l = options.Size(e)
				n += 2 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.PreviousTopicWeight) > 0 {
			for _, e := range x.PreviousTopicWeight {
				l = options.Size(e)
				n += 2 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.AllInferences) > 0 {
			for _, e := range x.AllInferences {
				l = options.Size(e)
				n += 2 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.AllForecasts) > 0 {
			for _, e := range x.AllForecasts {
				l = options.Size(e)
				n += 2 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.AllLossBundles) > 0 {
			for _, e := range x.AllLossBundles {
				l = options.Size(e)
				n += 2 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.NetworkLossBundles) > 0 {
			for _, e := range x.NetworkLossBundles {
				l = options.Size(e)
				n += 2 + l + runtime.Sov(uint64(l))
			}
		}
		l = len(x.PreviousPercentageRewardToStakedReputers)
		if l > 0 {
			n += 2 + l + runtime.Sov(uint64(l))
		}
		if len(x.OpenWorkerWindows) > 0 {
			for _, e := range x.OpenWorkerWindows {
				l = options.Size(e)
				n += 2 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.UnfulfilledWorkerNonces) > 0 {
			for _, e := range x.UnfulfilledWorkerNonces {
				l = options.Size(e)
				n += 2 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.UnfulfilledReputerNonces) > 0 {
			for _, e := range x.UnfulfilledReputerNonces {
				l = options.Size(e)
				n += 2 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.LastDripBlock) > 0 {
			for _, e := range x.LastDripBlock {
				l = options.Size(e)
				n += 2 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.LatestInfererNetworkRegrets) > 0 {
			for _, e := range x.LatestInfererNetworkRegrets {
				l = options.Size(e)
				n += 2 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.LatestForecasterNetworkRegrets) > 0 {
			for _, e := range x.LatestForecasterNetworkRegrets {
				l = options.Size(e)
				n += 2 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.LatestOneInForecasterNetworkRegrets) > 0 {
			for _, e := range x.LatestOneInForecasterNetworkRegrets {
				l = options.Size(e)
				n += 2 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.LatestNaiveInfererNetworkRegrets) > 0 {
			for _, e := range x.LatestNaiveInfererNetworkRegrets {
				l = options.Size(e)
				n += 2 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.LatestOneOutInfererInfererNetworkRegrets) > 0 {
			for _, e := range x.LatestOneOutInfererInfererNetworkRegrets {
				l = options.Size(e)
				n += 2 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.LatestOneOutInfererForecasterNetworkRegrets) > 0 {
			for _, e := range x.LatestOneOutInfererForecasterNetworkRegrets {
				l = options.Size(e)
				n += 2 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.LatestOneOutForecasterInfererNetworkRegrets) > 0 {
			for _, e := range x.LatestOneOutForecasterInfererNetworkRegrets {
				l = options.Size(e)
				n += 2 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.LatestOneOutForecasterForecasterNetworkRegrets) > 0 {
			for _, e := range x.LatestOneOutForecasterForecasterNetworkRegrets {
				l = options.Size(e)
				n += 2 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.CoreTeamAddresses) > 0 {
			for _, s := range x.CoreTeamAddresses {
				l = len(s)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.TopicLastWorkerCommit) > 0 {
			for _, e := range x.TopicLastWorkerCommit {
				l = options.Size(e)
				n += 2 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.TopicLastReputerCommit) > 0 {
			for _, e := range x.TopicLastReputerCommit {
				l = options.Size(e)
				n += 2 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.TopicToNextPossibleChurningBlock) > 0 {
			for _, e := range x.TopicToNextPossibleChurningBlock {
				l = options.Size(e)
				n += 2 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.BlockToActiveTopics) > 0 {
			for _, e := range x.BlockToActiveTopics {
				l = options.Size(e)
				n += 2 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.BlockToLowestActiveTopicWeight) > 0 {
			for _, e := range x.BlockToLowestActiveTopicWeight {
				l = options.Size(e)
				n += 2 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.PreviousTopicQuantileInfererScoreEma) > 0 {
			for _, e := range x.PreviousTopicQuantileInfererScoreEma {
				l = options.Size(e)
				n += 2 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.PreviousTopicQuantileForecasterScoreEma) > 0 {
			for _, e := range x.PreviousTopicQuantileForecasterScoreEma {
				l = options.Size(e)
				n += 2 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.PreviousTopicQuantileReputerScoreEma) > 0 {
			for _, e := range x.PreviousTopicQuantileReputerScoreEma {
				l = options.Size(e)
				n += 2 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.CountInfererInclusionsInTopicActiveSet) > 0 {
			for _, e := range x.CountInfererInclusionsInTopicActiveSet {
				l = options.Size(e)
				n += 2 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.CountForecasterInclusionsInTopicActiveSet) > 0 {
			for _, e := range x.CountForecasterInclusionsInTopicActiveSet {
				l = options.Size(e)
				n += 2 + l + runtime.Sov(uint64(l))
			}
		}
		l = len(x.TotalSumPreviousTopicWeights)
		if l > 0 {
			n += 2 + l + runtime.Sov(uint64(l))
		}
		l = len(x.RewardCurrentBlockEmission)
		if l > 0 {
			n += 2 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GenesisState)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.RewardCurrentBlockEmission) > 0 {
			i -= len(x.RewardCurrentBlockEmission)
			copy(dAtA[i:], x.RewardCurrentBlockEmission)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.RewardCurrentBlockEmission)))
			i--
			dAtA[i] = 0x4
			i--
			dAtA[i] = 0xaa
		}
		if len(x.TotalSumPreviousTopicWeights) > 0 {
			i -= len(x.TotalSumPreviousTopicWeights)
			copy(dAtA[i:], x.TotalSumPreviousTopicWeights)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.TotalSumPreviousTopicWeights)))
			i--
			dAtA[i] = 0x4
			i--
			dAtA[i] = 0xa2
		}
		if len(x.CountForecasterInclusionsInTopicActiveSet) > 0 {
			for iNdEx := len(x.CountForecasterInclusionsInTopicActiveSet) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.CountForecasterInclusionsInTopicActiveSet[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x4
				i--
				dAtA[i] = 0x9a
			}
		}
		if len(x.CountInfererInclusionsInTopicActiveSet) > 0 {
			for iNdEx := len(x.CountInfererInclusionsInTopicActiveSet) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.CountInfererInclusionsInTopicActiveSet[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x4
				i--
				dAtA[i] = 0x92
			}
		}
		if len(x.PreviousTopicQuantileReputerScoreEma) > 0 {
			for iNdEx := len(x.PreviousTopicQuantileReputerScoreEma) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.PreviousTopicQuantileReputerScoreEma[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x4
				i--
				dAtA[i] = 0x8a
			}
		}
		if len(x.PreviousTopicQuantileForecasterScoreEma) > 0 {
			for iNdEx := len(x.PreviousTopicQuantileForecasterScoreEma) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.PreviousTopicQuantileForecasterScoreEma[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x4
				i--
				dAtA[i] = 0x82
			}
		}
		if len(x.PreviousTopicQuantileInfererScoreEma) > 0 {
			for iNdEx := len(x.PreviousTopicQuantileInfererScoreEma) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.PreviousTopicQuantileInfererScoreEma[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x3
				i--
				dAtA[i] = 0xfa
			}
		}
		if len(x.ReputerScoreEmas) > 0 {
			for iNdEx := len(x.ReputerScoreEmas) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.ReputerScoreEmas[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x3
				i--
				dAtA[i] = 0xf2
			}
		}
		if len(x.ForecasterScoreEmas) > 0 {
			for iNdEx := len(x.ForecasterScoreEmas) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.ForecasterScoreEmas[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x3
				i--
				dAtA[i] = 0xea
			}
		}
		if len(x.InfererScoreEmas) > 0 {
			for iNdEx := len(x.InfererScoreEmas) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.InfererScoreEmas[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x3
				i--
				dAtA[i] = 0xe2
			}
		}
		if len(x.BlockToLowestActiveTopicWeight) > 0 {
			for iNdEx := len(x.BlockToLowestActiveTopicWeight) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.BlockToLowestActiveTopicWeight[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x3
				i--
				dAtA[i] = 0xda
			}
		}
		if len(x.BlockToActiveTopics) > 0 {
			for iNdEx := len(x.BlockToActiveTopics) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.BlockToActiveTopics[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x3
				i--
				dAtA[i] = 0xd2
			}
		}
		if len(x.TopicToNextPossibleChurningBlock) > 0 {
			for iNdEx := len(x.TopicToNextPossibleChurningBlock) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.TopicToNextPossibleChurningBlock[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x3
				i--
				dAtA[i] = 0xca
			}
		}
		if len(x.LastDripBlock) > 0 {
			for iNdEx := len(x.LastDripBlock) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.LastDripBlock[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x3
				i--
				dAtA[i] = 0xc2
			}
		}
		if len(x.OpenWorkerWindows) > 0 {
			for iNdEx := len(x.OpenWorkerWindows) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.OpenWorkerWindows[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x3
				i--
				dAtA[i] = 0xba
			}
		}
		if len(x.TopicLastReputerCommit) > 0 {
			for iNdEx := len(x.TopicLastReputerCommit) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.TopicLastReputerCommit[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x3
				i--
				dAtA[i] = 0xb2
			}
		}
		if len(x.TopicLastWorkerCommit) > 0 {
			for iNdEx := len(x.TopicLastWorkerCommit) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.TopicLastWorkerCommit[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x3
				i--
				dAtA[i] = 0xaa
			}
		}
		if len(x.LatestOneOutForecasterForecasterNetworkRegrets) > 0 {
			for iNdEx := len(x.LatestOneOutForecasterForecasterNetworkRegrets) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.LatestOneOutForecasterForecasterNetworkRegrets[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x3
				i--
				dAtA[i] = 0xa2
			}
		}
		if len(x.LatestOneOutForecasterInfererNetworkRegrets) > 0 {
			for iNdEx := len(x.LatestOneOutForecasterInfererNetworkRegrets) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.LatestOneOutForecasterInfererNetworkRegrets[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x3
				i--
				dAtA[i] = 0x9a
			}
		}
		if len(x.LatestOneOutInfererForecasterNetworkRegrets) > 0 {
			for iNdEx := len(x.LatestOneOutInfererForecasterNetworkRegrets) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.LatestOneOutInfererForecasterNetworkRegrets[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x3
				i--
				dAtA[i] = 0x92
			}
		}
		if len(x.LatestOneOutInfererInfererNetworkRegrets) > 0 {
			for iNdEx := len(x.LatestOneOutInfererInfererNetworkRegrets) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.LatestOneOutInfererInfererNetworkRegrets[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x3
				i--
				dAtA[i] = 0x8a
			}
		}
		if len(x.LatestNaiveInfererNetworkRegrets) > 0 {
			for iNdEx := len(x.LatestNaiveInfererNetworkRegrets) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.LatestNaiveInfererNetworkRegrets[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x3
				i--
				dAtA[i] = 0x82
			}
		}
		if len(x.LatestOneInForecasterNetworkRegrets) > 0 {
			for iNdEx := len(x.LatestOneInForecasterNetworkRegrets) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.LatestOneInForecasterNetworkRegrets[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x2
				i--
				dAtA[i] = 0xfa
			}
		}
		if len(x.LatestForecasterNetworkRegrets) > 0 {
			for iNdEx := len(x.LatestForecasterNetworkRegrets) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.LatestForecasterNetworkRegrets[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x2
				i--
				dAtA[i] = 0xf2
			}
		}
		if len(x.LatestInfererNetworkRegrets) > 0 {
			for iNdEx := len(x.LatestInfererNetworkRegrets) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.LatestInfererNetworkRegrets[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x2
				i--
				dAtA[i] = 0xea
			}
		}
		if len(x.UnfulfilledReputerNonces) > 0 {
			for iNdEx := len(x.UnfulfilledReputerNonces) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.UnfulfilledReputerNonces[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x2
				i--
				dAtA[i] = 0xe2
			}
		}
		if len(x.UnfulfilledWorkerNonces) > 0 {
			for iNdEx := len(x.UnfulfilledWorkerNonces) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.UnfulfilledWorkerNonces[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x2
				i--
				dAtA[i] = 0xda
			}
		}
		if len(x.PreviousPercentageRewardToStakedReputers) > 0 {
			i -= len(x.PreviousPercentageRewardToStakedReputers)
			copy(dAtA[i:], x.PreviousPercentageRewardToStakedReputers)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.PreviousPercentageRewardToStakedReputers)))
			i--
			dAtA[i] = 0x2
			i--
			dAtA[i] = 0xd2
		}
		if len(x.NetworkLossBundles) > 0 {
			for iNdEx := len(x.NetworkLossBundles) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.NetworkLossBundles[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x2
				i--
				dAtA[i] = 0xca
			}
		}
		if len(x.AllLossBundles) > 0 {
			for iNdEx := len(x.AllLossBundles) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.AllLossBundles[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x2
				i--
				dAtA[i] = 0xc2
			}
		}
		if len(x.AllForecasts) > 0 {
			for iNdEx := len(x.AllForecasts) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.AllForecasts[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x2
				i--
				dAtA[i] = 0xba
			}
		}
		if len(x.AllInferences) > 0 {
			for iNdEx := len(x.AllInferences) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.AllInferences[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x2
				i--
				dAtA[i] = 0xb2
			}
		}
		if len(x.PreviousTopicWeight) > 0 {
			for iNdEx := len(x.PreviousTopicWeight) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.PreviousTopicWeight[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x2
				i--
				dAtA[i] = 0xaa
			}
		}
		if len(x.TopicFeeRevenue) > 0 {
			for iNdEx := len(x.TopicFeeRevenue) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.TopicFeeRevenue[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x2
				i--
				dAtA[i] = 0xa2
			}
		}
		if len(x.Reputers) > 0 {
			for iNdEx := len(x.Reputers) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.Reputers[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x2
				i--
				dAtA[i] = 0x9a
			}
		}
		if len(x.Workers) > 0 {
			for iNdEx := len(x.Workers) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.Workers[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x2
				i--
				dAtA[i] = 0x92
			}
		}
		if len(x.Forecasts) > 0 {
			for iNdEx := len(x.Forecasts) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.Forecasts[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x2
				i--
				dAtA[i] = 0x8a
			}
		}
		if len(x.Inferences) > 0 {
			for iNdEx := len(x.Inferences) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.Inferences[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x2
				i--
				dAtA[i] = 0x82
			}
		}
		if len(x.DelegateStakeRemovalsByActor) > 0 {
			for iNdEx := len(x.DelegateStakeRemovalsByActor) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.DelegateStakeRemovalsByActor[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x1
				i--
				dAtA[i] = 0xfa
			}
		}
		if len(x.DelegateStakeRemovalsByBlock) > 0 {
			for iNdEx := len(x.DelegateStakeRemovalsByBlock) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.DelegateStakeRemovalsByBlock[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x1
				i--
				dAtA[i] = 0xf2
			}
		}
		if len(x.StakeRemovalsByActor) > 0 {
			for iNdEx := len(x.StakeRemovalsByActor) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.StakeRemovalsByActor[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x1
				i--
				dAtA[i] = 0xea
			}
		}
		if len(x.StakeRemovalsByBlock) > 0 {
			for iNdEx := len(x.StakeRemovalsByBlock) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.StakeRemovalsByBlock[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x1
				i--
				dAtA[i] = 0xe2
			}
		}
		if len(x.DelegateRewardPerShare) > 0 {
			for iNdEx := len(x.DelegateRewardPerShare) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.DelegateRewardPerShare[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x1
				i--
				dAtA[i] = 0xda
			}
		}
		if len(x.StakeFromDelegatorsUponReputer) > 0 {
			for iNdEx := len(x.StakeFromDelegatorsUponReputer) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.StakeFromDelegatorsUponReputer[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x1
				i--
				dAtA[i] = 0xd2
			}
		}
		if len(x.DelegatedStakes) > 0 {
			for iNdEx := len(x.DelegatedStakes) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.DelegatedStakes[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x1
				i--
				dAtA[i] = 0xca
			}
		}
		if len(x.StakeSumFromDelegator) > 0 {
			for iNdEx := len(x.StakeSumFromDelegator) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.StakeSumFromDelegator[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x1
				i--
				dAtA[i] = 0xc2
			}
		}
		if len(x.StakeReputerAuthority) > 0 {
			for iNdEx := len(x.StakeReputerAuthority) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.StakeReputerAuthority[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x1
				i--
				dAtA[i] = 0xba
			}
		}
		if len(x.TopicStake) > 0 {
			for iNdEx := len(x.TopicStake) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.TopicStake[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x1
				i--
				dAtA[i] = 0xb2
			}
		}
		if len(x.TotalStake) > 0 {
			i -= len(x.TotalStake)
			copy(dAtA[i:], x.TotalStake)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.TotalStake)))
			i--
			dAtA[i] = 0x1
			i--
			dAtA[i] = 0xaa
		}
		if len(x.PreviousForecasterScoreRatio) > 0 {
			for iNdEx := len(x.PreviousForecasterScoreRatio) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.PreviousForecasterScoreRatio[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x1
				i--
				dAtA[i] = 0xa2
			}
		}
		if len(x.PreviousForecastRewardFraction) > 0 {
			for iNdEx := len(x.PreviousForecastRewardFraction) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.PreviousForecastRewardFraction[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x1
				i--
				dAtA[i] = 0x9a
			}
		}
		if len(x.PreviousInferenceRewardFraction) > 0 {
			for iNdEx := len(x.PreviousInferenceRewardFraction) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.PreviousInferenceRewardFraction[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x1
				i--
				dAtA[i] = 0x92
			}
		}
		if len(x.PreviousReputerRewardFraction) > 0 {
			for iNdEx := len(x.PreviousReputerRewardFraction) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.PreviousReputerRewardFraction[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x1
				i--
				dAtA[i] = 0x8a
			}
		}
		if len(x.ReputerListeningCoefficient) > 0 {
			for iNdEx := len(x.ReputerListeningCoefficient) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.ReputerListeningCoefficient[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x1
				i--
				dAtA[i] = 0x82
			}
		}
		if len(x.ReputerScoresByBlock) > 0 {
			for iNdEx := len(x.ReputerScoresByBlock) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.ReputerScoresByBlock[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x62
			}
		}
		if len(x.ForecasterScoresByBlock) > 0 {
			for iNdEx := len(x.ForecasterScoresByBlock) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.ForecasterScoresByBlock[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x5a
			}
		}
		if len(x.InfererScoresByBlock) > 0 {
			for iNdEx := len(x.InfererScoresByBlock) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.InfererScoresByBlock[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x52
			}
		}
		if len(x.TopicRewardNonce) > 0 {
			for iNdEx := len(x.TopicRewardNonce) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.TopicRewardNonce[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x4a
			}
		}
		if len(x.TopicReputers) > 0 {
			for iNdEx := len(x.TopicReputers) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.TopicReputers[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x42
			}
		}
		if len(x.TopicWorkers) > 0 {
			for iNdEx := len(x.TopicWorkers) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.TopicWorkers[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x3a
			}
		}
		if len(x.RewardableTopics) > 0 {
			var pksize2 int
			for _, num := range x.RewardableTopics {
				pksize2 += runtime.Sov(uint64(num))
			}
			i -= pksize2
			j1 := i
			for _, num := range x.RewardableTopics {
				for num >= 1<<7 {
					dAtA[j1] = uint8(uint64(num)&0x7f | 0x80)
					num >>= 7
					j1++
				}
				dAtA[j1] = uint8(num)
				j1++
			}
			i = runtime.EncodeVarint(dAtA, i, uint64(pksize2))
			i--
			dAtA[i] = 0x32
		}
		if len(x.ActiveTopics) > 0 {
			var pksize4 int
			for _, num := range x.ActiveTopics {
				pksize4 += runtime.Sov(uint64(num))
			}
			i -= pksize4
			j3 := i
			for _, num := range x.ActiveTopics {
				for num >= 1<<7 {
					dAtA[j3] = uint8(uint64(num)&0x7f | 0x80)
					num >>= 7
					j3++
				}
				dAtA[j3] = uint8(num)
				j3++
			}
			i = runtime.EncodeVarint(dAtA, i, uint64(pksize4))
			i--
			dAtA[i] = 0x2a
		}
		if len(x.Topics) > 0 {
			for iNdEx := len(x.Topics) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.Topics[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x22
			}
		}
		if x.NextTopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.NextTopicId))
			i--
			dAtA[i] = 0x18
		}
		if len(x.CoreTeamAddresses) > 0 {
			for iNdEx := len(x.CoreTeamAddresses) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.CoreTeamAddresses[iNdEx])
				copy(dAtA[i:], x.CoreTeamAddresses[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.CoreTeamAddresses[iNdEx])))
				i--
				dAtA[i] = 0x12
			}
		}
		if x.Params != nil {
			encoded, err := options.Marshal(x.Params)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GenesisState)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GenesisState: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GenesisState: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Params == nil {
					x.Params = &v3.Params{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Params); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field NextTopicId", wireType)
				}
				x.NextTopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.NextTopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Topics", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Topics = append(x.Topics, &TopicIdAndTopic{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Topics[len(x.Topics)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 5:
				if wireType == 0 {
					var v uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
						}
						if iNdEx >= l {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= uint64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					x.ActiveTopics = append(x.ActiveTopics, v)
				} else if wireType == 2 {
					var packedLen int
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
						}
						if iNdEx >= l {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						packedLen |= int(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					if packedLen < 0 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
					}
					postIndex := iNdEx + packedLen
					if postIndex < 0 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
					}
					if postIndex > l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					var elementCount int
					var count int
					for _, integer := range dAtA[iNdEx:postIndex] {
						if integer < 128 {
							count++
						}
					}
					elementCount = count
					if elementCount != 0 && len(x.ActiveTopics) == 0 {
						x.ActiveTopics = make([]uint64, 0, elementCount)
					}
					for iNdEx < postIndex {
						var v uint64
						for shift := uint(0); ; shift += 7 {
							if shift >= 64 {
								return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
							}
							if iNdEx >= l {
								return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
							}
							b := dAtA[iNdEx]
							iNdEx++
							v |= uint64(b&0x7F) << shift
							if b < 0x80 {
								break
							}
						}
						x.ActiveTopics = append(x.ActiveTopics, v)
					}
				} else {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ActiveTopics", wireType)
				}
			case 6:
				if wireType == 0 {
					var v uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
						}
						if iNdEx >= l {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= uint64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					x.RewardableTopics = append(x.RewardableTopics, v)
				} else if wireType == 2 {
					var packedLen int
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
						}
						if iNdEx >= l {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						packedLen |= int(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					if packedLen < 0 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
					}
					postIndex := iNdEx + packedLen
					if postIndex < 0 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
					}
					if postIndex > l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					var elementCount int
					var count int
					for _, integer := range dAtA[iNdEx:postIndex] {
						if integer < 128 {
							count++
						}
					}
					elementCount = count
					if elementCount != 0 && len(x.RewardableTopics) == 0 {
						x.RewardableTopics = make([]uint64, 0, elementCount)
					}
					for iNdEx < postIndex {
						var v uint64
						for shift := uint(0); ; shift += 7 {
							if shift >= 64 {
								return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
							}
							if iNdEx >= l {
								return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
							}
							b := dAtA[iNdEx]
							iNdEx++
							v |= uint64(b&0x7F) << shift
							if b < 0x80 {
								break
							}
						}
						x.RewardableTopics = append(x.RewardableTopics, v)
					}
				} else {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RewardableTopics", wireType)
				}
			case 7:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicWorkers", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TopicWorkers = append(x.TopicWorkers, &TopicAndActorId{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.TopicWorkers[len(x.TopicWorkers)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 8:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicReputers", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TopicReputers = append(x.TopicReputers, &TopicAndActorId{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.TopicReputers[len(x.TopicReputers)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 9:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicRewardNonce", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TopicRewardNonce = append(x.TopicRewardNonce, &TopicIdAndBlockHeight{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.TopicRewardNonce[len(x.TopicRewardNonce)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 10:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field InfererScoresByBlock", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.InfererScoresByBlock = append(x.InfererScoresByBlock, &TopicIdBlockHeightScores{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.InfererScoresByBlock[len(x.InfererScoresByBlock)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 11:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ForecasterScoresByBlock", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ForecasterScoresByBlock = append(x.ForecasterScoresByBlock, &TopicIdBlockHeightScores{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.ForecasterScoresByBlock[len(x.ForecasterScoresByBlock)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 12:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ReputerScoresByBlock", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ReputerScoresByBlock = append(x.ReputerScoresByBlock, &TopicIdBlockHeightScores{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.ReputerScoresByBlock[len(x.ReputerScoresByBlock)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 60:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field InfererScoreEmas", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.InfererScoreEmas = append(x.InfererScoreEmas, &TopicIdActorIdScore{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.InfererScoreEmas[len(x.InfererScoreEmas)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 61:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ForecasterScoreEmas", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ForecasterScoreEmas = append(x.ForecasterScoreEmas, &TopicIdActorIdScore{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.ForecasterScoreEmas[len(x.ForecasterScoreEmas)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 62:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ReputerScoreEmas", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ReputerScoreEmas = append(x.ReputerScoreEmas, &TopicIdActorIdScore{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.ReputerScoreEmas[len(x.ReputerScoreEmas)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 16:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ReputerListeningCoefficient", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ReputerListeningCoefficient = append(x.ReputerListeningCoefficient, &TopicIdActorIdListeningCoefficient{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.ReputerListeningCoefficient[len(x.ReputerListeningCoefficient)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 17:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PreviousReputerRewardFraction", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.PreviousReputerRewardFraction = append(x.PreviousReputerRewardFraction, &TopicIdActorIdDec{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.PreviousReputerRewardFraction[len(x.PreviousReputerRewardFraction)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 18:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PreviousInferenceRewardFraction", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.PreviousInferenceRewardFraction = append(x.PreviousInferenceRewardFraction, &TopicIdActorIdDec{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.PreviousInferenceRewardFraction[len(x.PreviousInferenceRewardFraction)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 19:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PreviousForecastRewardFraction", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.PreviousForecastRewardFraction = append(x.PreviousForecastRewardFraction, &TopicIdActorIdDec{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.PreviousForecastRewardFraction[len(x.PreviousForecastRewardFraction)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 20:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PreviousForecasterScoreRatio", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.PreviousForecasterScoreRatio = append(x.PreviousForecasterScoreRatio, &TopicIdAndDec{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.PreviousForecasterScoreRatio[len(x.PreviousForecasterScoreRatio)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 21:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TotalStake", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TotalStake = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 22:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicStake", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TopicStake = append(x.TopicStake, &TopicIdAndInt{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.TopicStake[len(x.TopicStake)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 23:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field StakeReputerAuthority", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.StakeReputerAuthority = append(x.StakeReputerAuthority, &TopicIdActorIdInt{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.StakeReputerAuthority[len(x.StakeReputerAuthority)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 24:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field StakeSumFromDelegator", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.StakeSumFromDelegator = append(x.StakeSumFromDelegator, &TopicIdActorIdInt{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.StakeSumFromDelegator[len(x.StakeSumFromDelegator)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 25:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field DelegatedStakes", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.DelegatedStakes = append(x.DelegatedStakes, &TopicIdDelegatorReputerDelegatorInfo{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.DelegatedStakes[len(x.DelegatedStakes)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 26:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field StakeFromDelegatorsUponReputer", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.StakeFromDelegatorsUponReputer = append(x.StakeFromDelegatorsUponReputer, &TopicIdActorIdInt{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.StakeFromDelegatorsUponReputer[len(x.StakeFromDelegatorsUponReputer)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 27:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field DelegateRewardPerShare", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.DelegateRewardPerShare = append(x.DelegateRewardPerShare, &TopicIdActorIdDec{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.DelegateRewardPerShare[len(x.DelegateRewardPerShare)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 28:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field StakeRemovalsByBlock", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.StakeRemovalsByBlock = append(x.StakeRemovalsByBlock, &BlockHeightTopicIdReputerStakeRemovalInfo{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.StakeRemovalsByBlock[len(x.StakeRemovalsByBlock)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 29:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field StakeRemovalsByActor", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.StakeRemovalsByActor = append(x.StakeRemovalsByActor, &ActorIdTopicIdBlockHeight{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.StakeRemovalsByActor[len(x.StakeRemovalsByActor)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 30:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field DelegateStakeRemovalsByBlock", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.DelegateStakeRemovalsByBlock = append(x.DelegateStakeRemovalsByBlock, &BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.DelegateStakeRemovalsByBlock[len(x.DelegateStakeRemovalsByBlock)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 31:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field DelegateStakeRemovalsByActor", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.DelegateStakeRemovalsByActor = append(x.DelegateStakeRemovalsByActor, &DelegatorReputerTopicIdBlockHeight{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.DelegateStakeRemovalsByActor[len(x.DelegateStakeRemovalsByActor)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 32:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Inferences", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Inferences = append(x.Inferences, &TopicIdActorIdInference{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Inferences[len(x.Inferences)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 33:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Forecasts", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Forecasts = append(x.Forecasts, &TopicIdActorIdForecast{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Forecasts[len(x.Forecasts)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 34:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Workers", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Workers = append(x.Workers, &LibP2PKeyAndOffchainNode{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Workers[len(x.Workers)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 35:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Reputers", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Reputers = append(x.Reputers, &LibP2PKeyAndOffchainNode{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Reputers[len(x.Reputers)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 36:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicFeeRevenue", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TopicFeeRevenue = append(x.TopicFeeRevenue, &TopicIdAndInt{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.TopicFeeRevenue[len(x.TopicFeeRevenue)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 37:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PreviousTopicWeight", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.PreviousTopicWeight = append(x.PreviousTopicWeight, &TopicIdAndDec{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.PreviousTopicWeight[len(x.PreviousTopicWeight)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 38:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field AllInferences", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.AllInferences = append(x.AllInferences, &TopicIdBlockHeightInferences{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.AllInferences[len(x.AllInferences)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 39:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field AllForecasts", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.AllForecasts = append(x.AllForecasts, &TopicIdBlockHeightForecasts{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.AllForecasts[len(x.AllForecasts)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 40:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field AllLossBundles", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.AllLossBundles = append(x.AllLossBundles, &TopicIdBlockHeightReputerValueBundles{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.AllLossBundles[len(x.AllLossBundles)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 41:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field NetworkLossBundles", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.NetworkLossBundles = append(x.NetworkLossBundles, &TopicIdBlockHeightValueBundles{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.NetworkLossBundles[len(x.NetworkLossBundles)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 42:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PreviousPercentageRewardToStakedReputers", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.PreviousPercentageRewardToStakedReputers = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 55:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field OpenWorkerWindows", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.OpenWorkerWindows = append(x.OpenWorkerWindows, &BlockHeightAndTopicIds{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.OpenWorkerWindows[len(x.OpenWorkerWindows)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 43:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field UnfulfilledWorkerNonces", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.UnfulfilledWorkerNonces = append(x.UnfulfilledWorkerNonces, &TopicIdAndNonces{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.UnfulfilledWorkerNonces[len(x.UnfulfilledWorkerNonces)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 44:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field UnfulfilledReputerNonces", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.UnfulfilledReputerNonces = append(x.UnfulfilledReputerNonces, &TopicIdAndReputerRequestNonces{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.UnfulfilledReputerNonces[len(x.UnfulfilledReputerNonces)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 56:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field LastDripBlock", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.LastDripBlock = append(x.LastDripBlock, &TopicIdAndBlockHeight{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.LastDripBlock[len(x.LastDripBlock)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 45:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field LatestInfererNetworkRegrets", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.LatestInfererNetworkRegrets = append(x.LatestInfererNetworkRegrets, &TopicIdActorIdTimeStampedValue{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.LatestInfererNetworkRegrets[len(x.LatestInfererNetworkRegrets)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 46:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field LatestForecasterNetworkRegrets", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.LatestForecasterNetworkRegrets = append(x.LatestForecasterNetworkRegrets, &TopicIdActorIdTimeStampedValue{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.LatestForecasterNetworkRegrets[len(x.LatestForecasterNetworkRegrets)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 47:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field LatestOneInForecasterNetworkRegrets", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.LatestOneInForecasterNetworkRegrets = append(x.LatestOneInForecasterNetworkRegrets, &TopicIdActorIdActorIdTimeStampedValue{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.LatestOneInForecasterNetworkRegrets[len(x.LatestOneInForecasterNetworkRegrets)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 48:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field LatestNaiveInfererNetworkRegrets", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.LatestNaiveInfererNetworkRegrets = append(x.LatestNaiveInfererNetworkRegrets, &TopicIdActorIdTimeStampedValue{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.LatestNaiveInfererNetworkRegrets[len(x.LatestNaiveInfererNetworkRegrets)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 49:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field LatestOneOutInfererInfererNetworkRegrets", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.LatestOneOutInfererInfererNetworkRegrets = append(x.LatestOneOutInfererInfererNetworkRegrets, &TopicIdActorIdActorIdTimeStampedValue{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.LatestOneOutInfererInfererNetworkRegrets[len(x.LatestOneOutInfererInfererNetworkRegrets)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 50:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field LatestOneOutInfererForecasterNetworkRegrets", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.LatestOneOutInfererForecasterNetworkRegrets = append(x.LatestOneOutInfererForecasterNetworkRegrets, &TopicIdActorIdActorIdTimeStampedValue{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.LatestOneOutInfererForecasterNetworkRegrets[len(x.LatestOneOutInfererForecasterNetworkRegrets)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 51:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field LatestOneOutForecasterInfererNetworkRegrets", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.LatestOneOutForecasterInfererNetworkRegrets = append(x.LatestOneOutForecasterInfererNetworkRegrets, &TopicIdActorIdActorIdTimeStampedValue{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.LatestOneOutForecasterInfererNetworkRegrets[len(x.LatestOneOutForecasterInfererNetworkRegrets)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 52:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field LatestOneOutForecasterForecasterNetworkRegrets", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.LatestOneOutForecasterForecasterNetworkRegrets = append(x.LatestOneOutForecasterForecasterNetworkRegrets, &TopicIdActorIdActorIdTimeStampedValue{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.LatestOneOutForecasterForecasterNetworkRegrets[len(x.LatestOneOutForecasterForecasterNetworkRegrets)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CoreTeamAddresses", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.CoreTeamAddresses = append(x.CoreTeamAddresses, string(dAtA[iNdEx:postIndex]))
				iNdEx = postIndex
			case 53:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicLastWorkerCommit", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TopicLastWorkerCommit = append(x.TopicLastWorkerCommit, &TopicIdTimestampedActorNonce{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.TopicLastWorkerCommit[len(x.TopicLastWorkerCommit)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 54:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicLastReputerCommit", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TopicLastReputerCommit = append(x.TopicLastReputerCommit, &TopicIdTimestampedActorNonce{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.TopicLastReputerCommit[len(x.TopicLastReputerCommit)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 57:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicToNextPossibleChurningBlock", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TopicToNextPossibleChurningBlock = append(x.TopicToNextPossibleChurningBlock, &TopicIdAndBlockHeight{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.TopicToNextPossibleChurningBlock[len(x.TopicToNextPossibleChurningBlock)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 58:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BlockToActiveTopics", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.BlockToActiveTopics = append(x.BlockToActiveTopics, &BlockHeightTopicIds{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.BlockToActiveTopics[len(x.BlockToActiveTopics)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 59:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BlockToLowestActiveTopicWeight", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.BlockToLowestActiveTopicWeight = append(x.BlockToLowestActiveTopicWeight, &BlockHeightTopicIdWeightPair{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.BlockToLowestActiveTopicWeight[len(x.BlockToLowestActiveTopicWeight)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 63:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PreviousTopicQuantileInfererScoreEma", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.PreviousTopicQuantileInfererScoreEma = append(x.PreviousTopicQuantileInfererScoreEma, &TopicIdAndDec{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.PreviousTopicQuantileInfererScoreEma[len(x.PreviousTopicQuantileInfererScoreEma)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 64:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PreviousTopicQuantileForecasterScoreEma", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.PreviousTopicQuantileForecasterScoreEma = append(x.PreviousTopicQuantileForecasterScoreEma, &TopicIdAndDec{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.PreviousTopicQuantileForecasterScoreEma[len(x.PreviousTopicQuantileForecasterScoreEma)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 65:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PreviousTopicQuantileReputerScoreEma", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.PreviousTopicQuantileReputerScoreEma = append(x.PreviousTopicQuantileReputerScoreEma, &TopicIdAndDec{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.PreviousTopicQuantileReputerScoreEma[len(x.PreviousTopicQuantileReputerScoreEma)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 66:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CountInfererInclusionsInTopicActiveSet", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.CountInfererInclusionsInTopicActiveSet = append(x.CountInfererInclusionsInTopicActiveSet, &TopicIdActorIdUint64{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.CountInfererInclusionsInTopicActiveSet[len(x.CountInfererInclusionsInTopicActiveSet)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 67:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CountForecasterInclusionsInTopicActiveSet", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.CountForecasterInclusionsInTopicActiveSet = append(x.CountForecasterInclusionsInTopicActiveSet, &TopicIdActorIdUint64{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.CountForecasterInclusionsInTopicActiveSet[len(x.CountForecasterInclusionsInTopicActiveSet)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 68:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TotalSumPreviousTopicWeights", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TotalSumPreviousTopicWeights = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 69:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RewardCurrentBlockEmission", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.RewardCurrentBlockEmission = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_TopicIdAndTopic          protoreflect.MessageDescriptor
	fd_TopicIdAndTopic_topic_id protoreflect.FieldDescriptor
	fd_TopicIdAndTopic_topic    protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_genesis_proto_init()
	md_TopicIdAndTopic = File_emissions_v5_genesis_proto.Messages().ByName("TopicIdAndTopic")
	fd_TopicIdAndTopic_topic_id = md_TopicIdAndTopic.Fields().ByName("topic_id")
	fd_TopicIdAndTopic_topic = md_TopicIdAndTopic.Fields().ByName("topic")
}

var _ protoreflect.Message = (*fastReflection_TopicIdAndTopic)(nil)

type fastReflection_TopicIdAndTopic TopicIdAndTopic

func (x *TopicIdAndTopic) ProtoReflect() protoreflect.Message {
	return (*fastReflection_TopicIdAndTopic)(x)
}

func (x *TopicIdAndTopic) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_genesis_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_TopicIdAndTopic_messageType fastReflection_TopicIdAndTopic_messageType
var _ protoreflect.MessageType = fastReflection_TopicIdAndTopic_messageType{}

type fastReflection_TopicIdAndTopic_messageType struct{}

func (x fastReflection_TopicIdAndTopic_messageType) Zero() protoreflect.Message {
	return (*fastReflection_TopicIdAndTopic)(nil)
}
func (x fastReflection_TopicIdAndTopic_messageType) New() protoreflect.Message {
	return new(fastReflection_TopicIdAndTopic)
}
func (x fastReflection_TopicIdAndTopic_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_TopicIdAndTopic
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_TopicIdAndTopic) Descriptor() protoreflect.MessageDescriptor {
	return md_TopicIdAndTopic
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_TopicIdAndTopic) Type() protoreflect.MessageType {
	return _fastReflection_TopicIdAndTopic_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_TopicIdAndTopic) New() protoreflect.Message {
	return new(fastReflection_TopicIdAndTopic)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_TopicIdAndTopic) Interface() protoreflect.ProtoMessage {
	return (*TopicIdAndTopic)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_TopicIdAndTopic) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_TopicIdAndTopic_topic_id, value) {
			return
		}
	}
	if x.Topic != nil {
		value := protoreflect.ValueOfMessage(x.Topic.ProtoReflect())
		if !f(fd_TopicIdAndTopic_topic, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_TopicIdAndTopic) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.TopicIdAndTopic.topic_id":
		return x.TopicId != uint64(0)
	case "emissions.v5.TopicIdAndTopic.topic":
		return x.Topic != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdAndTopic"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdAndTopic does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TopicIdAndTopic) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.TopicIdAndTopic.topic_id":
		x.TopicId = uint64(0)
	case "emissions.v5.TopicIdAndTopic.topic":
		x.Topic = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdAndTopic"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdAndTopic does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_TopicIdAndTopic) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.TopicIdAndTopic.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	case "emissions.v5.TopicIdAndTopic.topic":
		value := x.Topic
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdAndTopic"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdAndTopic does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TopicIdAndTopic) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.TopicIdAndTopic.topic_id":
		x.TopicId = value.Uint()
	case "emissions.v5.TopicIdAndTopic.topic":
		x.Topic = value.Message().Interface().(*v3.Topic)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdAndTopic"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdAndTopic does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TopicIdAndTopic) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.TopicIdAndTopic.topic":
		if x.Topic == nil {
			x.Topic = new(v3.Topic)
		}
		return protoreflect.ValueOfMessage(x.Topic.ProtoReflect())
	case "emissions.v5.TopicIdAndTopic.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.TopicIdAndTopic is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdAndTopic"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdAndTopic does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_TopicIdAndTopic) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.TopicIdAndTopic.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "emissions.v5.TopicIdAndTopic.topic":
		m := new(v3.Topic)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdAndTopic"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdAndTopic does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_TopicIdAndTopic) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.TopicIdAndTopic", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_TopicIdAndTopic) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TopicIdAndTopic) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_TopicIdAndTopic) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_TopicIdAndTopic) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*TopicIdAndTopic)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		if x.Topic != nil {
			l = options.Size(x.Topic)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*TopicIdAndTopic)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Topic != nil {
			encoded, err := options.Marshal(x.Topic)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x12
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*TopicIdAndTopic)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: TopicIdAndTopic: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: TopicIdAndTopic: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Topic", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Topic == nil {
					x.Topic = &v3.Topic{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Topic); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_TopicAndActorId          protoreflect.MessageDescriptor
	fd_TopicAndActorId_topic_id protoreflect.FieldDescriptor
	fd_TopicAndActorId_actor_id protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_genesis_proto_init()
	md_TopicAndActorId = File_emissions_v5_genesis_proto.Messages().ByName("TopicAndActorId")
	fd_TopicAndActorId_topic_id = md_TopicAndActorId.Fields().ByName("topic_id")
	fd_TopicAndActorId_actor_id = md_TopicAndActorId.Fields().ByName("actor_id")
}

var _ protoreflect.Message = (*fastReflection_TopicAndActorId)(nil)

type fastReflection_TopicAndActorId TopicAndActorId

func (x *TopicAndActorId) ProtoReflect() protoreflect.Message {
	return (*fastReflection_TopicAndActorId)(x)
}

func (x *TopicAndActorId) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_genesis_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_TopicAndActorId_messageType fastReflection_TopicAndActorId_messageType
var _ protoreflect.MessageType = fastReflection_TopicAndActorId_messageType{}

type fastReflection_TopicAndActorId_messageType struct{}

func (x fastReflection_TopicAndActorId_messageType) Zero() protoreflect.Message {
	return (*fastReflection_TopicAndActorId)(nil)
}
func (x fastReflection_TopicAndActorId_messageType) New() protoreflect.Message {
	return new(fastReflection_TopicAndActorId)
}
func (x fastReflection_TopicAndActorId_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_TopicAndActorId
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_TopicAndActorId) Descriptor() protoreflect.MessageDescriptor {
	return md_TopicAndActorId
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_TopicAndActorId) Type() protoreflect.MessageType {
	return _fastReflection_TopicAndActorId_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_TopicAndActorId) New() protoreflect.Message {
	return new(fastReflection_TopicAndActorId)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_TopicAndActorId) Interface() protoreflect.ProtoMessage {
	return (*TopicAndActorId)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_TopicAndActorId) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_TopicAndActorId_topic_id, value) {
			return
		}
	}
	if x.ActorId != "" {
		value := protoreflect.ValueOfString(x.ActorId)
		if !f(fd_TopicAndActorId_actor_id, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_TopicAndActorId) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.TopicAndActorId.topic_id":
		return x.TopicId != uint64(0)
	case "emissions.v5.TopicAndActorId.actor_id":
		return x.ActorId != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicAndActorId"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicAndActorId does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TopicAndActorId) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.TopicAndActorId.topic_id":
		x.TopicId = uint64(0)
	case "emissions.v5.TopicAndActorId.actor_id":
		x.ActorId = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicAndActorId"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicAndActorId does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_TopicAndActorId) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.TopicAndActorId.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	case "emissions.v5.TopicAndActorId.actor_id":
		value := x.ActorId
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicAndActorId"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicAndActorId does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TopicAndActorId) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.TopicAndActorId.topic_id":
		x.TopicId = value.Uint()
	case "emissions.v5.TopicAndActorId.actor_id":
		x.ActorId = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicAndActorId"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicAndActorId does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TopicAndActorId) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.TopicAndActorId.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.TopicAndActorId is not mutable"))
	case "emissions.v5.TopicAndActorId.actor_id":
		panic(fmt.Errorf("field actor_id of message emissions.v5.TopicAndActorId is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicAndActorId"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicAndActorId does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_TopicAndActorId) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.TopicAndActorId.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "emissions.v5.TopicAndActorId.actor_id":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicAndActorId"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicAndActorId does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_TopicAndActorId) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.TopicAndActorId", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_TopicAndActorId) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TopicAndActorId) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_TopicAndActorId) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_TopicAndActorId) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*TopicAndActorId)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		l = len(x.ActorId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*TopicAndActorId)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.ActorId) > 0 {
			i -= len(x.ActorId)
			copy(dAtA[i:], x.ActorId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ActorId)))
			i--
			dAtA[i] = 0x12
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*TopicAndActorId)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: TopicAndActorId: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: TopicAndActorId: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ActorId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ActorId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_TopicIdAndBlockHeight              protoreflect.MessageDescriptor
	fd_TopicIdAndBlockHeight_topic_id     protoreflect.FieldDescriptor
	fd_TopicIdAndBlockHeight_block_height protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_genesis_proto_init()
	md_TopicIdAndBlockHeight = File_emissions_v5_genesis_proto.Messages().ByName("TopicIdAndBlockHeight")
	fd_TopicIdAndBlockHeight_topic_id = md_TopicIdAndBlockHeight.Fields().ByName("topic_id")
	fd_TopicIdAndBlockHeight_block_height = md_TopicIdAndBlockHeight.Fields().ByName("block_height")
}

var _ protoreflect.Message = (*fastReflection_TopicIdAndBlockHeight)(nil)

type fastReflection_TopicIdAndBlockHeight TopicIdAndBlockHeight

func (x *TopicIdAndBlockHeight) ProtoReflect() protoreflect.Message {
	return (*fastReflection_TopicIdAndBlockHeight)(x)
}

func (x *TopicIdAndBlockHeight) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_genesis_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_TopicIdAndBlockHeight_messageType fastReflection_TopicIdAndBlockHeight_messageType
var _ protoreflect.MessageType = fastReflection_TopicIdAndBlockHeight_messageType{}

type fastReflection_TopicIdAndBlockHeight_messageType struct{}

func (x fastReflection_TopicIdAndBlockHeight_messageType) Zero() protoreflect.Message {
	return (*fastReflection_TopicIdAndBlockHeight)(nil)
}
func (x fastReflection_TopicIdAndBlockHeight_messageType) New() protoreflect.Message {
	return new(fastReflection_TopicIdAndBlockHeight)
}
func (x fastReflection_TopicIdAndBlockHeight_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_TopicIdAndBlockHeight
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_TopicIdAndBlockHeight) Descriptor() protoreflect.MessageDescriptor {
	return md_TopicIdAndBlockHeight
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_TopicIdAndBlockHeight) Type() protoreflect.MessageType {
	return _fastReflection_TopicIdAndBlockHeight_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_TopicIdAndBlockHeight) New() protoreflect.Message {
	return new(fastReflection_TopicIdAndBlockHeight)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_TopicIdAndBlockHeight) Interface() protoreflect.ProtoMessage {
	return (*TopicIdAndBlockHeight)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_TopicIdAndBlockHeight) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_TopicIdAndBlockHeight_topic_id, value) {
			return
		}
	}
	if x.BlockHeight != int64(0) {
		value := protoreflect.ValueOfInt64(x.BlockHeight)
		if !f(fd_TopicIdAndBlockHeight_block_height, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_TopicIdAndBlockHeight) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.TopicIdAndBlockHeight.topic_id":
		return x.TopicId != uint64(0)
	case "emissions.v5.TopicIdAndBlockHeight.block_height":
		return x.BlockHeight != int64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdAndBlockHeight"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdAndBlockHeight does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TopicIdAndBlockHeight) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.TopicIdAndBlockHeight.topic_id":
		x.TopicId = uint64(0)
	case "emissions.v5.TopicIdAndBlockHeight.block_height":
		x.BlockHeight = int64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdAndBlockHeight"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdAndBlockHeight does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_TopicIdAndBlockHeight) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.TopicIdAndBlockHeight.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	case "emissions.v5.TopicIdAndBlockHeight.block_height":
		value := x.BlockHeight
		return protoreflect.ValueOfInt64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdAndBlockHeight"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdAndBlockHeight does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TopicIdAndBlockHeight) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.TopicIdAndBlockHeight.topic_id":
		x.TopicId = value.Uint()
	case "emissions.v5.TopicIdAndBlockHeight.block_height":
		x.BlockHeight = value.Int()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdAndBlockHeight"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdAndBlockHeight does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TopicIdAndBlockHeight) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.TopicIdAndBlockHeight.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.TopicIdAndBlockHeight is not mutable"))
	case "emissions.v5.TopicIdAndBlockHeight.block_height":
		panic(fmt.Errorf("field block_height of message emissions.v5.TopicIdAndBlockHeight is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdAndBlockHeight"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdAndBlockHeight does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_TopicIdAndBlockHeight) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.TopicIdAndBlockHeight.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "emissions.v5.TopicIdAndBlockHeight.block_height":
		return protoreflect.ValueOfInt64(int64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdAndBlockHeight"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdAndBlockHeight does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_TopicIdAndBlockHeight) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.TopicIdAndBlockHeight", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_TopicIdAndBlockHeight) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TopicIdAndBlockHeight) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_TopicIdAndBlockHeight) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_TopicIdAndBlockHeight) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*TopicIdAndBlockHeight)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		if x.BlockHeight != 0 {
			n += 1 + runtime.Sov(uint64(x.BlockHeight))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*TopicIdAndBlockHeight)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.BlockHeight != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.BlockHeight))
			i--
			dAtA[i] = 0x10
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*TopicIdAndBlockHeight)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: TopicIdAndBlockHeight: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: TopicIdAndBlockHeight: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BlockHeight", wireType)
				}
				x.BlockHeight = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.BlockHeight |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_BlockHeightAndTopicIds_2_list)(nil)

type _BlockHeightAndTopicIds_2_list struct {
	list *[]uint64
}

func (x *_BlockHeightAndTopicIds_2_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_BlockHeightAndTopicIds_2_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfUint64((*x.list)[i])
}

func (x *_BlockHeightAndTopicIds_2_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Uint()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_BlockHeightAndTopicIds_2_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Uint()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_BlockHeightAndTopicIds_2_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message BlockHeightAndTopicIds at list field TopicIds as it is not of Message kind"))
}

func (x *_BlockHeightAndTopicIds_2_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_BlockHeightAndTopicIds_2_list) NewElement() protoreflect.Value {
	v := uint64(0)
	return protoreflect.ValueOfUint64(v)
}

func (x *_BlockHeightAndTopicIds_2_list) IsValid() bool {
	return x.list != nil
}

var (
	md_BlockHeightAndTopicIds              protoreflect.MessageDescriptor
	fd_BlockHeightAndTopicIds_block_height protoreflect.FieldDescriptor
	fd_BlockHeightAndTopicIds_topic_ids    protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_genesis_proto_init()
	md_BlockHeightAndTopicIds = File_emissions_v5_genesis_proto.Messages().ByName("BlockHeightAndTopicIds")
	fd_BlockHeightAndTopicIds_block_height = md_BlockHeightAndTopicIds.Fields().ByName("block_height")
	fd_BlockHeightAndTopicIds_topic_ids = md_BlockHeightAndTopicIds.Fields().ByName("topic_ids")
}

var _ protoreflect.Message = (*fastReflection_BlockHeightAndTopicIds)(nil)

type fastReflection_BlockHeightAndTopicIds BlockHeightAndTopicIds

func (x *BlockHeightAndTopicIds) ProtoReflect() protoreflect.Message {
	return (*fastReflection_BlockHeightAndTopicIds)(x)
}

func (x *BlockHeightAndTopicIds) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_genesis_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_BlockHeightAndTopicIds_messageType fastReflection_BlockHeightAndTopicIds_messageType
var _ protoreflect.MessageType = fastReflection_BlockHeightAndTopicIds_messageType{}

type fastReflection_BlockHeightAndTopicIds_messageType struct{}

func (x fastReflection_BlockHeightAndTopicIds_messageType) Zero() protoreflect.Message {
	return (*fastReflection_BlockHeightAndTopicIds)(nil)
}
func (x fastReflection_BlockHeightAndTopicIds_messageType) New() protoreflect.Message {
	return new(fastReflection_BlockHeightAndTopicIds)
}
func (x fastReflection_BlockHeightAndTopicIds_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_BlockHeightAndTopicIds
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_BlockHeightAndTopicIds) Descriptor() protoreflect.MessageDescriptor {
	return md_BlockHeightAndTopicIds
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_BlockHeightAndTopicIds) Type() protoreflect.MessageType {
	return _fastReflection_BlockHeightAndTopicIds_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_BlockHeightAndTopicIds) New() protoreflect.Message {
	return new(fastReflection_BlockHeightAndTopicIds)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_BlockHeightAndTopicIds) Interface() protoreflect.ProtoMessage {
	return (*BlockHeightAndTopicIds)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_BlockHeightAndTopicIds) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.BlockHeight != int64(0) {
		value := protoreflect.ValueOfInt64(x.BlockHeight)
		if !f(fd_BlockHeightAndTopicIds_block_height, value) {
			return
		}
	}
	if len(x.TopicIds) != 0 {
		value := protoreflect.ValueOfList(&_BlockHeightAndTopicIds_2_list{list: &x.TopicIds})
		if !f(fd_BlockHeightAndTopicIds_topic_ids, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_BlockHeightAndTopicIds) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.BlockHeightAndTopicIds.block_height":
		return x.BlockHeight != int64(0)
	case "emissions.v5.BlockHeightAndTopicIds.topic_ids":
		return len(x.TopicIds) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.BlockHeightAndTopicIds"))
		}
		panic(fmt.Errorf("message emissions.v5.BlockHeightAndTopicIds does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_BlockHeightAndTopicIds) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.BlockHeightAndTopicIds.block_height":
		x.BlockHeight = int64(0)
	case "emissions.v5.BlockHeightAndTopicIds.topic_ids":
		x.TopicIds = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.BlockHeightAndTopicIds"))
		}
		panic(fmt.Errorf("message emissions.v5.BlockHeightAndTopicIds does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_BlockHeightAndTopicIds) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.BlockHeightAndTopicIds.block_height":
		value := x.BlockHeight
		return protoreflect.ValueOfInt64(value)
	case "emissions.v5.BlockHeightAndTopicIds.topic_ids":
		if len(x.TopicIds) == 0 {
			return protoreflect.ValueOfList(&_BlockHeightAndTopicIds_2_list{})
		}
		listValue := &_BlockHeightAndTopicIds_2_list{list: &x.TopicIds}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.BlockHeightAndTopicIds"))
		}
		panic(fmt.Errorf("message emissions.v5.BlockHeightAndTopicIds does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_BlockHeightAndTopicIds) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.BlockHeightAndTopicIds.block_height":
		x.BlockHeight = value.Int()
	case "emissions.v5.BlockHeightAndTopicIds.topic_ids":
		lv := value.List()
		clv := lv.(*_BlockHeightAndTopicIds_2_list)
		x.TopicIds = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.BlockHeightAndTopicIds"))
		}
		panic(fmt.Errorf("message emissions.v5.BlockHeightAndTopicIds does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_BlockHeightAndTopicIds) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.BlockHeightAndTopicIds.topic_ids":
		if x.TopicIds == nil {
			x.TopicIds = []uint64{}
		}
		value := &_BlockHeightAndTopicIds_2_list{list: &x.TopicIds}
		return protoreflect.ValueOfList(value)
	case "emissions.v5.BlockHeightAndTopicIds.block_height":
		panic(fmt.Errorf("field block_height of message emissions.v5.BlockHeightAndTopicIds is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.BlockHeightAndTopicIds"))
		}
		panic(fmt.Errorf("message emissions.v5.BlockHeightAndTopicIds does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_BlockHeightAndTopicIds) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.BlockHeightAndTopicIds.block_height":
		return protoreflect.ValueOfInt64(int64(0))
	case "emissions.v5.BlockHeightAndTopicIds.topic_ids":
		list := []uint64{}
		return protoreflect.ValueOfList(&_BlockHeightAndTopicIds_2_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.BlockHeightAndTopicIds"))
		}
		panic(fmt.Errorf("message emissions.v5.BlockHeightAndTopicIds does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_BlockHeightAndTopicIds) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.BlockHeightAndTopicIds", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_BlockHeightAndTopicIds) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_BlockHeightAndTopicIds) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_BlockHeightAndTopicIds) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_BlockHeightAndTopicIds) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*BlockHeightAndTopicIds)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.BlockHeight != 0 {
			n += 1 + runtime.Sov(uint64(x.BlockHeight))
		}
		if len(x.TopicIds) > 0 {
			l = 0
			for _, e := range x.TopicIds {
				l += runtime.Sov(uint64(e))
			}
			n += 1 + runtime.Sov(uint64(l)) + l
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*BlockHeightAndTopicIds)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.TopicIds) > 0 {
			var pksize2 int
			for _, num := range x.TopicIds {
				pksize2 += runtime.Sov(uint64(num))
			}
			i -= pksize2
			j1 := i
			for _, num := range x.TopicIds {
				for num >= 1<<7 {
					dAtA[j1] = uint8(uint64(num)&0x7f | 0x80)
					num >>= 7
					j1++
				}
				dAtA[j1] = uint8(num)
				j1++
			}
			i = runtime.EncodeVarint(dAtA, i, uint64(pksize2))
			i--
			dAtA[i] = 0x12
		}
		if x.BlockHeight != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.BlockHeight))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*BlockHeightAndTopicIds)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: BlockHeightAndTopicIds: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: BlockHeightAndTopicIds: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BlockHeight", wireType)
				}
				x.BlockHeight = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.BlockHeight |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType == 0 {
					var v uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
						}
						if iNdEx >= l {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= uint64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					x.TopicIds = append(x.TopicIds, v)
				} else if wireType == 2 {
					var packedLen int
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
						}
						if iNdEx >= l {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						packedLen |= int(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					if packedLen < 0 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
					}
					postIndex := iNdEx + packedLen
					if postIndex < 0 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
					}
					if postIndex > l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					var elementCount int
					var count int
					for _, integer := range dAtA[iNdEx:postIndex] {
						if integer < 128 {
							count++
						}
					}
					elementCount = count
					if elementCount != 0 && len(x.TopicIds) == 0 {
						x.TopicIds = make([]uint64, 0, elementCount)
					}
					for iNdEx < postIndex {
						var v uint64
						for shift := uint(0); ; shift += 7 {
							if shift >= 64 {
								return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
							}
							if iNdEx >= l {
								return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
							}
							b := dAtA[iNdEx]
							iNdEx++
							v |= uint64(b&0x7F) << shift
							if b < 0x80 {
								break
							}
						}
						x.TopicIds = append(x.TopicIds, v)
					}
				} else {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicIds", wireType)
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_TopicIdBlockHeightScores              protoreflect.MessageDescriptor
	fd_TopicIdBlockHeightScores_topic_id     protoreflect.FieldDescriptor
	fd_TopicIdBlockHeightScores_block_height protoreflect.FieldDescriptor
	fd_TopicIdBlockHeightScores_scores       protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_genesis_proto_init()
	md_TopicIdBlockHeightScores = File_emissions_v5_genesis_proto.Messages().ByName("TopicIdBlockHeightScores")
	fd_TopicIdBlockHeightScores_topic_id = md_TopicIdBlockHeightScores.Fields().ByName("topic_id")
	fd_TopicIdBlockHeightScores_block_height = md_TopicIdBlockHeightScores.Fields().ByName("block_height")
	fd_TopicIdBlockHeightScores_scores = md_TopicIdBlockHeightScores.Fields().ByName("scores")
}

var _ protoreflect.Message = (*fastReflection_TopicIdBlockHeightScores)(nil)

type fastReflection_TopicIdBlockHeightScores TopicIdBlockHeightScores

func (x *TopicIdBlockHeightScores) ProtoReflect() protoreflect.Message {
	return (*fastReflection_TopicIdBlockHeightScores)(x)
}

func (x *TopicIdBlockHeightScores) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_genesis_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_TopicIdBlockHeightScores_messageType fastReflection_TopicIdBlockHeightScores_messageType
var _ protoreflect.MessageType = fastReflection_TopicIdBlockHeightScores_messageType{}

type fastReflection_TopicIdBlockHeightScores_messageType struct{}

func (x fastReflection_TopicIdBlockHeightScores_messageType) Zero() protoreflect.Message {
	return (*fastReflection_TopicIdBlockHeightScores)(nil)
}
func (x fastReflection_TopicIdBlockHeightScores_messageType) New() protoreflect.Message {
	return new(fastReflection_TopicIdBlockHeightScores)
}
func (x fastReflection_TopicIdBlockHeightScores_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_TopicIdBlockHeightScores
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_TopicIdBlockHeightScores) Descriptor() protoreflect.MessageDescriptor {
	return md_TopicIdBlockHeightScores
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_TopicIdBlockHeightScores) Type() protoreflect.MessageType {
	return _fastReflection_TopicIdBlockHeightScores_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_TopicIdBlockHeightScores) New() protoreflect.Message {
	return new(fastReflection_TopicIdBlockHeightScores)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_TopicIdBlockHeightScores) Interface() protoreflect.ProtoMessage {
	return (*TopicIdBlockHeightScores)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_TopicIdBlockHeightScores) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_TopicIdBlockHeightScores_topic_id, value) {
			return
		}
	}
	if x.BlockHeight != int64(0) {
		value := protoreflect.ValueOfInt64(x.BlockHeight)
		if !f(fd_TopicIdBlockHeightScores_block_height, value) {
			return
		}
	}
	if x.Scores != nil {
		value := protoreflect.ValueOfMessage(x.Scores.ProtoReflect())
		if !f(fd_TopicIdBlockHeightScores_scores, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_TopicIdBlockHeightScores) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.TopicIdBlockHeightScores.topic_id":
		return x.TopicId != uint64(0)
	case "emissions.v5.TopicIdBlockHeightScores.block_height":
		return x.BlockHeight != int64(0)
	case "emissions.v5.TopicIdBlockHeightScores.scores":
		return x.Scores != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdBlockHeightScores"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdBlockHeightScores does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TopicIdBlockHeightScores) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.TopicIdBlockHeightScores.topic_id":
		x.TopicId = uint64(0)
	case "emissions.v5.TopicIdBlockHeightScores.block_height":
		x.BlockHeight = int64(0)
	case "emissions.v5.TopicIdBlockHeightScores.scores":
		x.Scores = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdBlockHeightScores"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdBlockHeightScores does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_TopicIdBlockHeightScores) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.TopicIdBlockHeightScores.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	case "emissions.v5.TopicIdBlockHeightScores.block_height":
		value := x.BlockHeight
		return protoreflect.ValueOfInt64(value)
	case "emissions.v5.TopicIdBlockHeightScores.scores":
		value := x.Scores
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdBlockHeightScores"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdBlockHeightScores does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TopicIdBlockHeightScores) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.TopicIdBlockHeightScores.topic_id":
		x.TopicId = value.Uint()
	case "emissions.v5.TopicIdBlockHeightScores.block_height":
		x.BlockHeight = value.Int()
	case "emissions.v5.TopicIdBlockHeightScores.scores":
		x.Scores = value.Message().Interface().(*v3.Scores)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdBlockHeightScores"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdBlockHeightScores does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TopicIdBlockHeightScores) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.TopicIdBlockHeightScores.scores":
		if x.Scores == nil {
			x.Scores = new(v3.Scores)
		}
		return protoreflect.ValueOfMessage(x.Scores.ProtoReflect())
	case "emissions.v5.TopicIdBlockHeightScores.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.TopicIdBlockHeightScores is not mutable"))
	case "emissions.v5.TopicIdBlockHeightScores.block_height":
		panic(fmt.Errorf("field block_height of message emissions.v5.TopicIdBlockHeightScores is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdBlockHeightScores"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdBlockHeightScores does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_TopicIdBlockHeightScores) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.TopicIdBlockHeightScores.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "emissions.v5.TopicIdBlockHeightScores.block_height":
		return protoreflect.ValueOfInt64(int64(0))
	case "emissions.v5.TopicIdBlockHeightScores.scores":
		m := new(v3.Scores)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdBlockHeightScores"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdBlockHeightScores does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_TopicIdBlockHeightScores) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.TopicIdBlockHeightScores", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_TopicIdBlockHeightScores) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TopicIdBlockHeightScores) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_TopicIdBlockHeightScores) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_TopicIdBlockHeightScores) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*TopicIdBlockHeightScores)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		if x.BlockHeight != 0 {
			n += 1 + runtime.Sov(uint64(x.BlockHeight))
		}
		if x.Scores != nil {
			l = options.Size(x.Scores)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*TopicIdBlockHeightScores)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Scores != nil {
			encoded, err := options.Marshal(x.Scores)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x1a
		}
		if x.BlockHeight != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.BlockHeight))
			i--
			dAtA[i] = 0x10
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*TopicIdBlockHeightScores)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: TopicIdBlockHeightScores: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: TopicIdBlockHeightScores: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BlockHeight", wireType)
				}
				x.BlockHeight = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.BlockHeight |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Scores", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Scores == nil {
					x.Scores = &v3.Scores{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Scores); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_TopicIdActorIdScore          protoreflect.MessageDescriptor
	fd_TopicIdActorIdScore_topic_id protoreflect.FieldDescriptor
	fd_TopicIdActorIdScore_actor_id protoreflect.FieldDescriptor
	fd_TopicIdActorIdScore_score    protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_genesis_proto_init()
	md_TopicIdActorIdScore = File_emissions_v5_genesis_proto.Messages().ByName("TopicIdActorIdScore")
	fd_TopicIdActorIdScore_topic_id = md_TopicIdActorIdScore.Fields().ByName("topic_id")
	fd_TopicIdActorIdScore_actor_id = md_TopicIdActorIdScore.Fields().ByName("actor_id")
	fd_TopicIdActorIdScore_score = md_TopicIdActorIdScore.Fields().ByName("score")
}

var _ protoreflect.Message = (*fastReflection_TopicIdActorIdScore)(nil)

type fastReflection_TopicIdActorIdScore TopicIdActorIdScore

func (x *TopicIdActorIdScore) ProtoReflect() protoreflect.Message {
	return (*fastReflection_TopicIdActorIdScore)(x)
}

func (x *TopicIdActorIdScore) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_genesis_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_TopicIdActorIdScore_messageType fastReflection_TopicIdActorIdScore_messageType
var _ protoreflect.MessageType = fastReflection_TopicIdActorIdScore_messageType{}

type fastReflection_TopicIdActorIdScore_messageType struct{}

func (x fastReflection_TopicIdActorIdScore_messageType) Zero() protoreflect.Message {
	return (*fastReflection_TopicIdActorIdScore)(nil)
}
func (x fastReflection_TopicIdActorIdScore_messageType) New() protoreflect.Message {
	return new(fastReflection_TopicIdActorIdScore)
}
func (x fastReflection_TopicIdActorIdScore_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_TopicIdActorIdScore
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_TopicIdActorIdScore) Descriptor() protoreflect.MessageDescriptor {
	return md_TopicIdActorIdScore
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_TopicIdActorIdScore) Type() protoreflect.MessageType {
	return _fastReflection_TopicIdActorIdScore_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_TopicIdActorIdScore) New() protoreflect.Message {
	return new(fastReflection_TopicIdActorIdScore)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_TopicIdActorIdScore) Interface() protoreflect.ProtoMessage {
	return (*TopicIdActorIdScore)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_TopicIdActorIdScore) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_TopicIdActorIdScore_topic_id, value) {
			return
		}
	}
	if x.ActorId != "" {
		value := protoreflect.ValueOfString(x.ActorId)
		if !f(fd_TopicIdActorIdScore_actor_id, value) {
			return
		}
	}
	if x.Score != nil {
		value := protoreflect.ValueOfMessage(x.Score.ProtoReflect())
		if !f(fd_TopicIdActorIdScore_score, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_TopicIdActorIdScore) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.TopicIdActorIdScore.topic_id":
		return x.TopicId != uint64(0)
	case "emissions.v5.TopicIdActorIdScore.actor_id":
		return x.ActorId != ""
	case "emissions.v5.TopicIdActorIdScore.score":
		return x.Score != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdActorIdScore"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdActorIdScore does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TopicIdActorIdScore) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.TopicIdActorIdScore.topic_id":
		x.TopicId = uint64(0)
	case "emissions.v5.TopicIdActorIdScore.actor_id":
		x.ActorId = ""
	case "emissions.v5.TopicIdActorIdScore.score":
		x.Score = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdActorIdScore"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdActorIdScore does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_TopicIdActorIdScore) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.TopicIdActorIdScore.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	case "emissions.v5.TopicIdActorIdScore.actor_id":
		value := x.ActorId
		return protoreflect.ValueOfString(value)
	case "emissions.v5.TopicIdActorIdScore.score":
		value := x.Score
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdActorIdScore"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdActorIdScore does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TopicIdActorIdScore) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.TopicIdActorIdScore.topic_id":
		x.TopicId = value.Uint()
	case "emissions.v5.TopicIdActorIdScore.actor_id":
		x.ActorId = value.Interface().(string)
	case "emissions.v5.TopicIdActorIdScore.score":
		x.Score = value.Message().Interface().(*v3.Score)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdActorIdScore"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdActorIdScore does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TopicIdActorIdScore) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.TopicIdActorIdScore.score":
		if x.Score == nil {
			x.Score = new(v3.Score)
		}
		return protoreflect.ValueOfMessage(x.Score.ProtoReflect())
	case "emissions.v5.TopicIdActorIdScore.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.TopicIdActorIdScore is not mutable"))
	case "emissions.v5.TopicIdActorIdScore.actor_id":
		panic(fmt.Errorf("field actor_id of message emissions.v5.TopicIdActorIdScore is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdActorIdScore"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdActorIdScore does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_TopicIdActorIdScore) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.TopicIdActorIdScore.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "emissions.v5.TopicIdActorIdScore.actor_id":
		return protoreflect.ValueOfString("")
	case "emissions.v5.TopicIdActorIdScore.score":
		m := new(v3.Score)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdActorIdScore"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdActorIdScore does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_TopicIdActorIdScore) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.TopicIdActorIdScore", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_TopicIdActorIdScore) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TopicIdActorIdScore) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_TopicIdActorIdScore) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_TopicIdActorIdScore) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*TopicIdActorIdScore)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		l = len(x.ActorId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Score != nil {
			l = options.Size(x.Score)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*TopicIdActorIdScore)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Score != nil {
			encoded, err := options.Marshal(x.Score)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.ActorId) > 0 {
			i -= len(x.ActorId)
			copy(dAtA[i:], x.ActorId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ActorId)))
			i--
			dAtA[i] = 0x12
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*TopicIdActorIdScore)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: TopicIdActorIdScore: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: TopicIdActorIdScore: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ActorId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ActorId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Score", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Score == nil {
					x.Score = &v3.Score{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Score); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_TopicIdActorIdUint64          protoreflect.MessageDescriptor
	fd_TopicIdActorIdUint64_topic_id protoreflect.FieldDescriptor
	fd_TopicIdActorIdUint64_actor_id protoreflect.FieldDescriptor
	fd_TopicIdActorIdUint64_uint64   protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_genesis_proto_init()
	md_TopicIdActorIdUint64 = File_emissions_v5_genesis_proto.Messages().ByName("TopicIdActorIdUint64")
	fd_TopicIdActorIdUint64_topic_id = md_TopicIdActorIdUint64.Fields().ByName("topic_id")
	fd_TopicIdActorIdUint64_actor_id = md_TopicIdActorIdUint64.Fields().ByName("actor_id")
	fd_TopicIdActorIdUint64_uint64 = md_TopicIdActorIdUint64.Fields().ByName("uint64")
}

var _ protoreflect.Message = (*fastReflection_TopicIdActorIdUint64)(nil)

type fastReflection_TopicIdActorIdUint64 TopicIdActorIdUint64

func (x *TopicIdActorIdUint64) ProtoReflect() protoreflect.Message {
	return (*fastReflection_TopicIdActorIdUint64)(x)
}

func (x *TopicIdActorIdUint64) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_genesis_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_TopicIdActorIdUint64_messageType fastReflection_TopicIdActorIdUint64_messageType
var _ protoreflect.MessageType = fastReflection_TopicIdActorIdUint64_messageType{}

type fastReflection_TopicIdActorIdUint64_messageType struct{}

func (x fastReflection_TopicIdActorIdUint64_messageType) Zero() protoreflect.Message {
	return (*fastReflection_TopicIdActorIdUint64)(nil)
}
func (x fastReflection_TopicIdActorIdUint64_messageType) New() protoreflect.Message {
	return new(fastReflection_TopicIdActorIdUint64)
}
func (x fastReflection_TopicIdActorIdUint64_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_TopicIdActorIdUint64
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_TopicIdActorIdUint64) Descriptor() protoreflect.MessageDescriptor {
	return md_TopicIdActorIdUint64
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_TopicIdActorIdUint64) Type() protoreflect.MessageType {
	return _fastReflection_TopicIdActorIdUint64_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_TopicIdActorIdUint64) New() protoreflect.Message {
	return new(fastReflection_TopicIdActorIdUint64)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_TopicIdActorIdUint64) Interface() protoreflect.ProtoMessage {
	return (*TopicIdActorIdUint64)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_TopicIdActorIdUint64) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_TopicIdActorIdUint64_topic_id, value) {
			return
		}
	}
	if x.ActorId != "" {
		value := protoreflect.ValueOfString(x.ActorId)
		if !f(fd_TopicIdActorIdUint64_actor_id, value) {
			return
		}
	}
	if x.Uint64 != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Uint64)
		if !f(fd_TopicIdActorIdUint64_uint64, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_TopicIdActorIdUint64) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.TopicIdActorIdUint64.topic_id":
		return x.TopicId != uint64(0)
	case "emissions.v5.TopicIdActorIdUint64.actor_id":
		return x.ActorId != ""
	case "emissions.v5.TopicIdActorIdUint64.uint64":
		return x.Uint64 != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdActorIdUint64"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdActorIdUint64 does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TopicIdActorIdUint64) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.TopicIdActorIdUint64.topic_id":
		x.TopicId = uint64(0)
	case "emissions.v5.TopicIdActorIdUint64.actor_id":
		x.ActorId = ""
	case "emissions.v5.TopicIdActorIdUint64.uint64":
		x.Uint64 = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdActorIdUint64"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdActorIdUint64 does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_TopicIdActorIdUint64) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.TopicIdActorIdUint64.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	case "emissions.v5.TopicIdActorIdUint64.actor_id":
		value := x.ActorId
		return protoreflect.ValueOfString(value)
	case "emissions.v5.TopicIdActorIdUint64.uint64":
		value := x.Uint64
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdActorIdUint64"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdActorIdUint64 does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TopicIdActorIdUint64) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.TopicIdActorIdUint64.topic_id":
		x.TopicId = value.Uint()
	case "emissions.v5.TopicIdActorIdUint64.actor_id":
		x.ActorId = value.Interface().(string)
	case "emissions.v5.TopicIdActorIdUint64.uint64":
		x.Uint64 = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdActorIdUint64"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdActorIdUint64 does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TopicIdActorIdUint64) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.TopicIdActorIdUint64.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.TopicIdActorIdUint64 is not mutable"))
	case "emissions.v5.TopicIdActorIdUint64.actor_id":
		panic(fmt.Errorf("field actor_id of message emissions.v5.TopicIdActorIdUint64 is not mutable"))
	case "emissions.v5.TopicIdActorIdUint64.uint64":
		panic(fmt.Errorf("field uint64 of message emissions.v5.TopicIdActorIdUint64 is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdActorIdUint64"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdActorIdUint64 does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_TopicIdActorIdUint64) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.TopicIdActorIdUint64.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "emissions.v5.TopicIdActorIdUint64.actor_id":
		return protoreflect.ValueOfString("")
	case "emissions.v5.TopicIdActorIdUint64.uint64":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdActorIdUint64"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdActorIdUint64 does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_TopicIdActorIdUint64) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.TopicIdActorIdUint64", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_TopicIdActorIdUint64) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TopicIdActorIdUint64) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_TopicIdActorIdUint64) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_TopicIdActorIdUint64) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*TopicIdActorIdUint64)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		l = len(x.ActorId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Uint64 != 0 {
			n += 1 + runtime.Sov(uint64(x.Uint64))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*TopicIdActorIdUint64)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Uint64 != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Uint64))
			i--
			dAtA[i] = 0x18
		}
		if len(x.ActorId) > 0 {
			i -= len(x.ActorId)
			copy(dAtA[i:], x.ActorId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ActorId)))
			i--
			dAtA[i] = 0x12
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*TopicIdActorIdUint64)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: TopicIdActorIdUint64: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: TopicIdActorIdUint64: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ActorId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ActorId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Uint64", wireType)
				}
				x.Uint64 = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Uint64 |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_TopicIdActorIdListeningCoefficient                       protoreflect.MessageDescriptor
	fd_TopicIdActorIdListeningCoefficient_topic_id              protoreflect.FieldDescriptor
	fd_TopicIdActorIdListeningCoefficient_actor_id              protoreflect.FieldDescriptor
	fd_TopicIdActorIdListeningCoefficient_listening_coefficient protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_genesis_proto_init()
	md_TopicIdActorIdListeningCoefficient = File_emissions_v5_genesis_proto.Messages().ByName("TopicIdActorIdListeningCoefficient")
	fd_TopicIdActorIdListeningCoefficient_topic_id = md_TopicIdActorIdListeningCoefficient.Fields().ByName("topic_id")
	fd_TopicIdActorIdListeningCoefficient_actor_id = md_TopicIdActorIdListeningCoefficient.Fields().ByName("actor_id")
	fd_TopicIdActorIdListeningCoefficient_listening_coefficient = md_TopicIdActorIdListeningCoefficient.Fields().ByName("listening_coefficient")
}

var _ protoreflect.Message = (*fastReflection_TopicIdActorIdListeningCoefficient)(nil)

type fastReflection_TopicIdActorIdListeningCoefficient TopicIdActorIdListeningCoefficient

func (x *TopicIdActorIdListeningCoefficient) ProtoReflect() protoreflect.Message {
	return (*fastReflection_TopicIdActorIdListeningCoefficient)(x)
}

func (x *TopicIdActorIdListeningCoefficient) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_genesis_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_TopicIdActorIdListeningCoefficient_messageType fastReflection_TopicIdActorIdListeningCoefficient_messageType
var _ protoreflect.MessageType = fastReflection_TopicIdActorIdListeningCoefficient_messageType{}

type fastReflection_TopicIdActorIdListeningCoefficient_messageType struct{}

func (x fastReflection_TopicIdActorIdListeningCoefficient_messageType) Zero() protoreflect.Message {
	return (*fastReflection_TopicIdActorIdListeningCoefficient)(nil)
}
func (x fastReflection_TopicIdActorIdListeningCoefficient_messageType) New() protoreflect.Message {
	return new(fastReflection_TopicIdActorIdListeningCoefficient)
}
func (x fastReflection_TopicIdActorIdListeningCoefficient_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_TopicIdActorIdListeningCoefficient
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_TopicIdActorIdListeningCoefficient) Descriptor() protoreflect.MessageDescriptor {
	return md_TopicIdActorIdListeningCoefficient
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_TopicIdActorIdListeningCoefficient) Type() protoreflect.MessageType {
	return _fastReflection_TopicIdActorIdListeningCoefficient_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_TopicIdActorIdListeningCoefficient) New() protoreflect.Message {
	return new(fastReflection_TopicIdActorIdListeningCoefficient)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_TopicIdActorIdListeningCoefficient) Interface() protoreflect.ProtoMessage {
	return (*TopicIdActorIdListeningCoefficient)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_TopicIdActorIdListeningCoefficient) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_TopicIdActorIdListeningCoefficient_topic_id, value) {
			return
		}
	}
	if x.ActorId != "" {
		value := protoreflect.ValueOfString(x.ActorId)
		if !f(fd_TopicIdActorIdListeningCoefficient_actor_id, value) {
			return
		}
	}
	if x.ListeningCoefficient != nil {
		value := protoreflect.ValueOfMessage(x.ListeningCoefficient.ProtoReflect())
		if !f(fd_TopicIdActorIdListeningCoefficient_listening_coefficient, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_TopicIdActorIdListeningCoefficient) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.TopicIdActorIdListeningCoefficient.topic_id":
		return x.TopicId != uint64(0)
	case "emissions.v5.TopicIdActorIdListeningCoefficient.actor_id":
		return x.ActorId != ""
	case "emissions.v5.TopicIdActorIdListeningCoefficient.listening_coefficient":
		return x.ListeningCoefficient != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdActorIdListeningCoefficient"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdActorIdListeningCoefficient does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TopicIdActorIdListeningCoefficient) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.TopicIdActorIdListeningCoefficient.topic_id":
		x.TopicId = uint64(0)
	case "emissions.v5.TopicIdActorIdListeningCoefficient.actor_id":
		x.ActorId = ""
	case "emissions.v5.TopicIdActorIdListeningCoefficient.listening_coefficient":
		x.ListeningCoefficient = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdActorIdListeningCoefficient"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdActorIdListeningCoefficient does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_TopicIdActorIdListeningCoefficient) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.TopicIdActorIdListeningCoefficient.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	case "emissions.v5.TopicIdActorIdListeningCoefficient.actor_id":
		value := x.ActorId
		return protoreflect.ValueOfString(value)
	case "emissions.v5.TopicIdActorIdListeningCoefficient.listening_coefficient":
		value := x.ListeningCoefficient
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdActorIdListeningCoefficient"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdActorIdListeningCoefficient does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TopicIdActorIdListeningCoefficient) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.TopicIdActorIdListeningCoefficient.topic_id":
		x.TopicId = value.Uint()
	case "emissions.v5.TopicIdActorIdListeningCoefficient.actor_id":
		x.ActorId = value.Interface().(string)
	case "emissions.v5.TopicIdActorIdListeningCoefficient.listening_coefficient":
		x.ListeningCoefficient = value.Message().Interface().(*v3.ListeningCoefficient)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdActorIdListeningCoefficient"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdActorIdListeningCoefficient does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TopicIdActorIdListeningCoefficient) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.TopicIdActorIdListeningCoefficient.listening_coefficient":
		if x.ListeningCoefficient == nil {
			x.ListeningCoefficient = new(v3.ListeningCoefficient)
		}
		return protoreflect.ValueOfMessage(x.ListeningCoefficient.ProtoReflect())
	case "emissions.v5.TopicIdActorIdListeningCoefficient.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.TopicIdActorIdListeningCoefficient is not mutable"))
	case "emissions.v5.TopicIdActorIdListeningCoefficient.actor_id":
		panic(fmt.Errorf("field actor_id of message emissions.v5.TopicIdActorIdListeningCoefficient is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdActorIdListeningCoefficient"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdActorIdListeningCoefficient does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_TopicIdActorIdListeningCoefficient) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.TopicIdActorIdListeningCoefficient.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "emissions.v5.TopicIdActorIdListeningCoefficient.actor_id":
		return protoreflect.ValueOfString("")
	case "emissions.v5.TopicIdActorIdListeningCoefficient.listening_coefficient":
		m := new(v3.ListeningCoefficient)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdActorIdListeningCoefficient"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdActorIdListeningCoefficient does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_TopicIdActorIdListeningCoefficient) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.TopicIdActorIdListeningCoefficient", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_TopicIdActorIdListeningCoefficient) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TopicIdActorIdListeningCoefficient) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_TopicIdActorIdListeningCoefficient) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_TopicIdActorIdListeningCoefficient) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*TopicIdActorIdListeningCoefficient)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		l = len(x.ActorId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.ListeningCoefficient != nil {
			l = options.Size(x.ListeningCoefficient)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*TopicIdActorIdListeningCoefficient)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.ListeningCoefficient != nil {
			encoded, err := options.Marshal(x.ListeningCoefficient)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.ActorId) > 0 {
			i -= len(x.ActorId)
			copy(dAtA[i:], x.ActorId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ActorId)))
			i--
			dAtA[i] = 0x12
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*TopicIdActorIdListeningCoefficient)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: TopicIdActorIdListeningCoefficient: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: TopicIdActorIdListeningCoefficient: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ActorId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ActorId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ListeningCoefficient", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.ListeningCoefficient == nil {
					x.ListeningCoefficient = &v3.ListeningCoefficient{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.ListeningCoefficient); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_TopicIdActorIdDec          protoreflect.MessageDescriptor
	fd_TopicIdActorIdDec_topic_id protoreflect.FieldDescriptor
	fd_TopicIdActorIdDec_actor_id protoreflect.FieldDescriptor
	fd_TopicIdActorIdDec_dec      protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_genesis_proto_init()
	md_TopicIdActorIdDec = File_emissions_v5_genesis_proto.Messages().ByName("TopicIdActorIdDec")
	fd_TopicIdActorIdDec_topic_id = md_TopicIdActorIdDec.Fields().ByName("topic_id")
	fd_TopicIdActorIdDec_actor_id = md_TopicIdActorIdDec.Fields().ByName("actor_id")
	fd_TopicIdActorIdDec_dec = md_TopicIdActorIdDec.Fields().ByName("dec")
}

var _ protoreflect.Message = (*fastReflection_TopicIdActorIdDec)(nil)

type fastReflection_TopicIdActorIdDec TopicIdActorIdDec

func (x *TopicIdActorIdDec) ProtoReflect() protoreflect.Message {
	return (*fastReflection_TopicIdActorIdDec)(x)
}

func (x *TopicIdActorIdDec) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_genesis_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_TopicIdActorIdDec_messageType fastReflection_TopicIdActorIdDec_messageType
var _ protoreflect.MessageType = fastReflection_TopicIdActorIdDec_messageType{}

type fastReflection_TopicIdActorIdDec_messageType struct{}

func (x fastReflection_TopicIdActorIdDec_messageType) Zero() protoreflect.Message {
	return (*fastReflection_TopicIdActorIdDec)(nil)
}
func (x fastReflection_TopicIdActorIdDec_messageType) New() protoreflect.Message {
	return new(fastReflection_TopicIdActorIdDec)
}
func (x fastReflection_TopicIdActorIdDec_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_TopicIdActorIdDec
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_TopicIdActorIdDec) Descriptor() protoreflect.MessageDescriptor {
	return md_TopicIdActorIdDec
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_TopicIdActorIdDec) Type() protoreflect.MessageType {
	return _fastReflection_TopicIdActorIdDec_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_TopicIdActorIdDec) New() protoreflect.Message {
	return new(fastReflection_TopicIdActorIdDec)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_TopicIdActorIdDec) Interface() protoreflect.ProtoMessage {
	return (*TopicIdActorIdDec)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_TopicIdActorIdDec) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_TopicIdActorIdDec_topic_id, value) {
			return
		}
	}
	if x.ActorId != "" {
		value := protoreflect.ValueOfString(x.ActorId)
		if !f(fd_TopicIdActorIdDec_actor_id, value) {
			return
		}
	}
	if x.Dec != "" {
		value := protoreflect.ValueOfString(x.Dec)
		if !f(fd_TopicIdActorIdDec_dec, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_TopicIdActorIdDec) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.TopicIdActorIdDec.topic_id":
		return x.TopicId != uint64(0)
	case "emissions.v5.TopicIdActorIdDec.actor_id":
		return x.ActorId != ""
	case "emissions.v5.TopicIdActorIdDec.dec":
		return x.Dec != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdActorIdDec"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdActorIdDec does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TopicIdActorIdDec) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.TopicIdActorIdDec.topic_id":
		x.TopicId = uint64(0)
	case "emissions.v5.TopicIdActorIdDec.actor_id":
		x.ActorId = ""
	case "emissions.v5.TopicIdActorIdDec.dec":
		x.Dec = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdActorIdDec"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdActorIdDec does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_TopicIdActorIdDec) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.TopicIdActorIdDec.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	case "emissions.v5.TopicIdActorIdDec.actor_id":
		value := x.ActorId
		return protoreflect.ValueOfString(value)
	case "emissions.v5.TopicIdActorIdDec.dec":
		value := x.Dec
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdActorIdDec"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdActorIdDec does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TopicIdActorIdDec) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.TopicIdActorIdDec.topic_id":
		x.TopicId = value.Uint()
	case "emissions.v5.TopicIdActorIdDec.actor_id":
		x.ActorId = value.Interface().(string)
	case "emissions.v5.TopicIdActorIdDec.dec":
		x.Dec = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdActorIdDec"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdActorIdDec does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TopicIdActorIdDec) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.TopicIdActorIdDec.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.TopicIdActorIdDec is not mutable"))
	case "emissions.v5.TopicIdActorIdDec.actor_id":
		panic(fmt.Errorf("field actor_id of message emissions.v5.TopicIdActorIdDec is not mutable"))
	case "emissions.v5.TopicIdActorIdDec.dec":
		panic(fmt.Errorf("field dec of message emissions.v5.TopicIdActorIdDec is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdActorIdDec"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdActorIdDec does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_TopicIdActorIdDec) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.TopicIdActorIdDec.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "emissions.v5.TopicIdActorIdDec.actor_id":
		return protoreflect.ValueOfString("")
	case "emissions.v5.TopicIdActorIdDec.dec":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdActorIdDec"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdActorIdDec does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_TopicIdActorIdDec) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.TopicIdActorIdDec", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_TopicIdActorIdDec) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TopicIdActorIdDec) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_TopicIdActorIdDec) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_TopicIdActorIdDec) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*TopicIdActorIdDec)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		l = len(x.ActorId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Dec)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*TopicIdActorIdDec)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Dec) > 0 {
			i -= len(x.Dec)
			copy(dAtA[i:], x.Dec)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Dec)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.ActorId) > 0 {
			i -= len(x.ActorId)
			copy(dAtA[i:], x.ActorId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ActorId)))
			i--
			dAtA[i] = 0x12
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*TopicIdActorIdDec)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: TopicIdActorIdDec: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: TopicIdActorIdDec: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ActorId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ActorId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Dec", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Dec = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_TopicIdAndInt          protoreflect.MessageDescriptor
	fd_TopicIdAndInt_topic_id protoreflect.FieldDescriptor
	fd_TopicIdAndInt_int      protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_genesis_proto_init()
	md_TopicIdAndInt = File_emissions_v5_genesis_proto.Messages().ByName("TopicIdAndInt")
	fd_TopicIdAndInt_topic_id = md_TopicIdAndInt.Fields().ByName("topic_id")
	fd_TopicIdAndInt_int = md_TopicIdAndInt.Fields().ByName("int")
}

var _ protoreflect.Message = (*fastReflection_TopicIdAndInt)(nil)

type fastReflection_TopicIdAndInt TopicIdAndInt

func (x *TopicIdAndInt) ProtoReflect() protoreflect.Message {
	return (*fastReflection_TopicIdAndInt)(x)
}

func (x *TopicIdAndInt) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_genesis_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_TopicIdAndInt_messageType fastReflection_TopicIdAndInt_messageType
var _ protoreflect.MessageType = fastReflection_TopicIdAndInt_messageType{}

type fastReflection_TopicIdAndInt_messageType struct{}

func (x fastReflection_TopicIdAndInt_messageType) Zero() protoreflect.Message {
	return (*fastReflection_TopicIdAndInt)(nil)
}
func (x fastReflection_TopicIdAndInt_messageType) New() protoreflect.Message {
	return new(fastReflection_TopicIdAndInt)
}
func (x fastReflection_TopicIdAndInt_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_TopicIdAndInt
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_TopicIdAndInt) Descriptor() protoreflect.MessageDescriptor {
	return md_TopicIdAndInt
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_TopicIdAndInt) Type() protoreflect.MessageType {
	return _fastReflection_TopicIdAndInt_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_TopicIdAndInt) New() protoreflect.Message {
	return new(fastReflection_TopicIdAndInt)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_TopicIdAndInt) Interface() protoreflect.ProtoMessage {
	return (*TopicIdAndInt)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_TopicIdAndInt) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_TopicIdAndInt_topic_id, value) {
			return
		}
	}
	if x.Int != "" {
		value := protoreflect.ValueOfString(x.Int)
		if !f(fd_TopicIdAndInt_int, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_TopicIdAndInt) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.TopicIdAndInt.topic_id":
		return x.TopicId != uint64(0)
	case "emissions.v5.TopicIdAndInt.int":
		return x.Int != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdAndInt"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdAndInt does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TopicIdAndInt) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.TopicIdAndInt.topic_id":
		x.TopicId = uint64(0)
	case "emissions.v5.TopicIdAndInt.int":
		x.Int = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdAndInt"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdAndInt does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_TopicIdAndInt) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.TopicIdAndInt.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	case "emissions.v5.TopicIdAndInt.int":
		value := x.Int
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdAndInt"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdAndInt does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TopicIdAndInt) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.TopicIdAndInt.topic_id":
		x.TopicId = value.Uint()
	case "emissions.v5.TopicIdAndInt.int":
		x.Int = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdAndInt"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdAndInt does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TopicIdAndInt) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.TopicIdAndInt.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.TopicIdAndInt is not mutable"))
	case "emissions.v5.TopicIdAndInt.int":
		panic(fmt.Errorf("field int of message emissions.v5.TopicIdAndInt is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdAndInt"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdAndInt does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_TopicIdAndInt) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.TopicIdAndInt.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "emissions.v5.TopicIdAndInt.int":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdAndInt"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdAndInt does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_TopicIdAndInt) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.TopicIdAndInt", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_TopicIdAndInt) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TopicIdAndInt) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_TopicIdAndInt) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_TopicIdAndInt) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*TopicIdAndInt)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		l = len(x.Int)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*TopicIdAndInt)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Int) > 0 {
			i -= len(x.Int)
			copy(dAtA[i:], x.Int)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Int)))
			i--
			dAtA[i] = 0x12
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*TopicIdAndInt)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: TopicIdAndInt: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: TopicIdAndInt: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Int", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Int = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_TopicIdActorIdInt          protoreflect.MessageDescriptor
	fd_TopicIdActorIdInt_topic_id protoreflect.FieldDescriptor
	fd_TopicIdActorIdInt_actor_id protoreflect.FieldDescriptor
	fd_TopicIdActorIdInt_int      protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_genesis_proto_init()
	md_TopicIdActorIdInt = File_emissions_v5_genesis_proto.Messages().ByName("TopicIdActorIdInt")
	fd_TopicIdActorIdInt_topic_id = md_TopicIdActorIdInt.Fields().ByName("topic_id")
	fd_TopicIdActorIdInt_actor_id = md_TopicIdActorIdInt.Fields().ByName("actor_id")
	fd_TopicIdActorIdInt_int = md_TopicIdActorIdInt.Fields().ByName("int")
}

var _ protoreflect.Message = (*fastReflection_TopicIdActorIdInt)(nil)

type fastReflection_TopicIdActorIdInt TopicIdActorIdInt

func (x *TopicIdActorIdInt) ProtoReflect() protoreflect.Message {
	return (*fastReflection_TopicIdActorIdInt)(x)
}

func (x *TopicIdActorIdInt) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_genesis_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_TopicIdActorIdInt_messageType fastReflection_TopicIdActorIdInt_messageType
var _ protoreflect.MessageType = fastReflection_TopicIdActorIdInt_messageType{}

type fastReflection_TopicIdActorIdInt_messageType struct{}

func (x fastReflection_TopicIdActorIdInt_messageType) Zero() protoreflect.Message {
	return (*fastReflection_TopicIdActorIdInt)(nil)
}
func (x fastReflection_TopicIdActorIdInt_messageType) New() protoreflect.Message {
	return new(fastReflection_TopicIdActorIdInt)
}
func (x fastReflection_TopicIdActorIdInt_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_TopicIdActorIdInt
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_TopicIdActorIdInt) Descriptor() protoreflect.MessageDescriptor {
	return md_TopicIdActorIdInt
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_TopicIdActorIdInt) Type() protoreflect.MessageType {
	return _fastReflection_TopicIdActorIdInt_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_TopicIdActorIdInt) New() protoreflect.Message {
	return new(fastReflection_TopicIdActorIdInt)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_TopicIdActorIdInt) Interface() protoreflect.ProtoMessage {
	return (*TopicIdActorIdInt)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_TopicIdActorIdInt) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_TopicIdActorIdInt_topic_id, value) {
			return
		}
	}
	if x.ActorId != "" {
		value := protoreflect.ValueOfString(x.ActorId)
		if !f(fd_TopicIdActorIdInt_actor_id, value) {
			return
		}
	}
	if x.Int != "" {
		value := protoreflect.ValueOfString(x.Int)
		if !f(fd_TopicIdActorIdInt_int, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_TopicIdActorIdInt) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.TopicIdActorIdInt.topic_id":
		return x.TopicId != uint64(0)
	case "emissions.v5.TopicIdActorIdInt.actor_id":
		return x.ActorId != ""
	case "emissions.v5.TopicIdActorIdInt.int":
		return x.Int != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdActorIdInt"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdActorIdInt does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TopicIdActorIdInt) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.TopicIdActorIdInt.topic_id":
		x.TopicId = uint64(0)
	case "emissions.v5.TopicIdActorIdInt.actor_id":
		x.ActorId = ""
	case "emissions.v5.TopicIdActorIdInt.int":
		x.Int = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdActorIdInt"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdActorIdInt does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_TopicIdActorIdInt) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.TopicIdActorIdInt.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	case "emissions.v5.TopicIdActorIdInt.actor_id":
		value := x.ActorId
		return protoreflect.ValueOfString(value)
	case "emissions.v5.TopicIdActorIdInt.int":
		value := x.Int
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdActorIdInt"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdActorIdInt does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TopicIdActorIdInt) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.TopicIdActorIdInt.topic_id":
		x.TopicId = value.Uint()
	case "emissions.v5.TopicIdActorIdInt.actor_id":
		x.ActorId = value.Interface().(string)
	case "emissions.v5.TopicIdActorIdInt.int":
		x.Int = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdActorIdInt"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdActorIdInt does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TopicIdActorIdInt) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.TopicIdActorIdInt.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.TopicIdActorIdInt is not mutable"))
	case "emissions.v5.TopicIdActorIdInt.actor_id":
		panic(fmt.Errorf("field actor_id of message emissions.v5.TopicIdActorIdInt is not mutable"))
	case "emissions.v5.TopicIdActorIdInt.int":
		panic(fmt.Errorf("field int of message emissions.v5.TopicIdActorIdInt is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdActorIdInt"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdActorIdInt does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_TopicIdActorIdInt) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.TopicIdActorIdInt.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "emissions.v5.TopicIdActorIdInt.actor_id":
		return protoreflect.ValueOfString("")
	case "emissions.v5.TopicIdActorIdInt.int":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdActorIdInt"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdActorIdInt does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_TopicIdActorIdInt) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.TopicIdActorIdInt", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_TopicIdActorIdInt) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TopicIdActorIdInt) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_TopicIdActorIdInt) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_TopicIdActorIdInt) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*TopicIdActorIdInt)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		l = len(x.ActorId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Int)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*TopicIdActorIdInt)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Int) > 0 {
			i -= len(x.Int)
			copy(dAtA[i:], x.Int)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Int)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.ActorId) > 0 {
			i -= len(x.ActorId)
			copy(dAtA[i:], x.ActorId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ActorId)))
			i--
			dAtA[i] = 0x12
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*TopicIdActorIdInt)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: TopicIdActorIdInt: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: TopicIdActorIdInt: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ActorId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ActorId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Int", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Int = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_TopicIdDelegatorReputerDelegatorInfo                protoreflect.MessageDescriptor
	fd_TopicIdDelegatorReputerDelegatorInfo_topic_id       protoreflect.FieldDescriptor
	fd_TopicIdDelegatorReputerDelegatorInfo_delegator      protoreflect.FieldDescriptor
	fd_TopicIdDelegatorReputerDelegatorInfo_reputer        protoreflect.FieldDescriptor
	fd_TopicIdDelegatorReputerDelegatorInfo_delegator_info protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_genesis_proto_init()
	md_TopicIdDelegatorReputerDelegatorInfo = File_emissions_v5_genesis_proto.Messages().ByName("TopicIdDelegatorReputerDelegatorInfo")
	fd_TopicIdDelegatorReputerDelegatorInfo_topic_id = md_TopicIdDelegatorReputerDelegatorInfo.Fields().ByName("topic_id")
	fd_TopicIdDelegatorReputerDelegatorInfo_delegator = md_TopicIdDelegatorReputerDelegatorInfo.Fields().ByName("delegator")
	fd_TopicIdDelegatorReputerDelegatorInfo_reputer = md_TopicIdDelegatorReputerDelegatorInfo.Fields().ByName("reputer")
	fd_TopicIdDelegatorReputerDelegatorInfo_delegator_info = md_TopicIdDelegatorReputerDelegatorInfo.Fields().ByName("delegator_info")
}

var _ protoreflect.Message = (*fastReflection_TopicIdDelegatorReputerDelegatorInfo)(nil)

type fastReflection_TopicIdDelegatorReputerDelegatorInfo TopicIdDelegatorReputerDelegatorInfo

func (x *TopicIdDelegatorReputerDelegatorInfo) ProtoReflect() protoreflect.Message {
	return (*fastReflection_TopicIdDelegatorReputerDelegatorInfo)(x)
}

func (x *TopicIdDelegatorReputerDelegatorInfo) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_genesis_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_TopicIdDelegatorReputerDelegatorInfo_messageType fastReflection_TopicIdDelegatorReputerDelegatorInfo_messageType
var _ protoreflect.MessageType = fastReflection_TopicIdDelegatorReputerDelegatorInfo_messageType{}

type fastReflection_TopicIdDelegatorReputerDelegatorInfo_messageType struct{}

func (x fastReflection_TopicIdDelegatorReputerDelegatorInfo_messageType) Zero() protoreflect.Message {
	return (*fastReflection_TopicIdDelegatorReputerDelegatorInfo)(nil)
}
func (x fastReflection_TopicIdDelegatorReputerDelegatorInfo_messageType) New() protoreflect.Message {
	return new(fastReflection_TopicIdDelegatorReputerDelegatorInfo)
}
func (x fastReflection_TopicIdDelegatorReputerDelegatorInfo_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_TopicIdDelegatorReputerDelegatorInfo
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_TopicIdDelegatorReputerDelegatorInfo) Descriptor() protoreflect.MessageDescriptor {
	return md_TopicIdDelegatorReputerDelegatorInfo
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_TopicIdDelegatorReputerDelegatorInfo) Type() protoreflect.MessageType {
	return _fastReflection_TopicIdDelegatorReputerDelegatorInfo_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_TopicIdDelegatorReputerDelegatorInfo) New() protoreflect.Message {
	return new(fastReflection_TopicIdDelegatorReputerDelegatorInfo)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_TopicIdDelegatorReputerDelegatorInfo) Interface() protoreflect.ProtoMessage {
	return (*TopicIdDelegatorReputerDelegatorInfo)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_TopicIdDelegatorReputerDelegatorInfo) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_TopicIdDelegatorReputerDelegatorInfo_topic_id, value) {
			return
		}
	}
	if x.Delegator != "" {
		value := protoreflect.ValueOfString(x.Delegator)
		if !f(fd_TopicIdDelegatorReputerDelegatorInfo_delegator, value) {
			return
		}
	}
	if x.Reputer != "" {
		value := protoreflect.ValueOfString(x.Reputer)
		if !f(fd_TopicIdDelegatorReputerDelegatorInfo_reputer, value) {
			return
		}
	}
	if x.DelegatorInfo != nil {
		value := protoreflect.ValueOfMessage(x.DelegatorInfo.ProtoReflect())
		if !f(fd_TopicIdDelegatorReputerDelegatorInfo_delegator_info, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_TopicIdDelegatorReputerDelegatorInfo) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.TopicIdDelegatorReputerDelegatorInfo.topic_id":
		return x.TopicId != uint64(0)
	case "emissions.v5.TopicIdDelegatorReputerDelegatorInfo.delegator":
		return x.Delegator != ""
	case "emissions.v5.TopicIdDelegatorReputerDelegatorInfo.reputer":
		return x.Reputer != ""
	case "emissions.v5.TopicIdDelegatorReputerDelegatorInfo.delegator_info":
		return x.DelegatorInfo != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdDelegatorReputerDelegatorInfo"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdDelegatorReputerDelegatorInfo does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TopicIdDelegatorReputerDelegatorInfo) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.TopicIdDelegatorReputerDelegatorInfo.topic_id":
		x.TopicId = uint64(0)
	case "emissions.v5.TopicIdDelegatorReputerDelegatorInfo.delegator":
		x.Delegator = ""
	case "emissions.v5.TopicIdDelegatorReputerDelegatorInfo.reputer":
		x.Reputer = ""
	case "emissions.v5.TopicIdDelegatorReputerDelegatorInfo.delegator_info":
		x.DelegatorInfo = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdDelegatorReputerDelegatorInfo"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdDelegatorReputerDelegatorInfo does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_TopicIdDelegatorReputerDelegatorInfo) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.TopicIdDelegatorReputerDelegatorInfo.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	case "emissions.v5.TopicIdDelegatorReputerDelegatorInfo.delegator":
		value := x.Delegator
		return protoreflect.ValueOfString(value)
	case "emissions.v5.TopicIdDelegatorReputerDelegatorInfo.reputer":
		value := x.Reputer
		return protoreflect.ValueOfString(value)
	case "emissions.v5.TopicIdDelegatorReputerDelegatorInfo.delegator_info":
		value := x.DelegatorInfo
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdDelegatorReputerDelegatorInfo"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdDelegatorReputerDelegatorInfo does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TopicIdDelegatorReputerDelegatorInfo) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.TopicIdDelegatorReputerDelegatorInfo.topic_id":
		x.TopicId = value.Uint()
	case "emissions.v5.TopicIdDelegatorReputerDelegatorInfo.delegator":
		x.Delegator = value.Interface().(string)
	case "emissions.v5.TopicIdDelegatorReputerDelegatorInfo.reputer":
		x.Reputer = value.Interface().(string)
	case "emissions.v5.TopicIdDelegatorReputerDelegatorInfo.delegator_info":
		x.DelegatorInfo = value.Message().Interface().(*v3.DelegatorInfo)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdDelegatorReputerDelegatorInfo"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdDelegatorReputerDelegatorInfo does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TopicIdDelegatorReputerDelegatorInfo) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.TopicIdDelegatorReputerDelegatorInfo.delegator_info":
		if x.DelegatorInfo == nil {
			x.DelegatorInfo = new(v3.DelegatorInfo)
		}
		return protoreflect.ValueOfMessage(x.DelegatorInfo.ProtoReflect())
	case "emissions.v5.TopicIdDelegatorReputerDelegatorInfo.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.TopicIdDelegatorReputerDelegatorInfo is not mutable"))
	case "emissions.v5.TopicIdDelegatorReputerDelegatorInfo.delegator":
		panic(fmt.Errorf("field delegator of message emissions.v5.TopicIdDelegatorReputerDelegatorInfo is not mutable"))
	case "emissions.v5.TopicIdDelegatorReputerDelegatorInfo.reputer":
		panic(fmt.Errorf("field reputer of message emissions.v5.TopicIdDelegatorReputerDelegatorInfo is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdDelegatorReputerDelegatorInfo"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdDelegatorReputerDelegatorInfo does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_TopicIdDelegatorReputerDelegatorInfo) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.TopicIdDelegatorReputerDelegatorInfo.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "emissions.v5.TopicIdDelegatorReputerDelegatorInfo.delegator":
		return protoreflect.ValueOfString("")
	case "emissions.v5.TopicIdDelegatorReputerDelegatorInfo.reputer":
		return protoreflect.ValueOfString("")
	case "emissions.v5.TopicIdDelegatorReputerDelegatorInfo.delegator_info":
		m := new(v3.DelegatorInfo)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdDelegatorReputerDelegatorInfo"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdDelegatorReputerDelegatorInfo does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_TopicIdDelegatorReputerDelegatorInfo) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.TopicIdDelegatorReputerDelegatorInfo", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_TopicIdDelegatorReputerDelegatorInfo) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TopicIdDelegatorReputerDelegatorInfo) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_TopicIdDelegatorReputerDelegatorInfo) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_TopicIdDelegatorReputerDelegatorInfo) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*TopicIdDelegatorReputerDelegatorInfo)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		l = len(x.Delegator)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Reputer)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.DelegatorInfo != nil {
			l = options.Size(x.DelegatorInfo)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*TopicIdDelegatorReputerDelegatorInfo)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.DelegatorInfo != nil {
			encoded, err := options.Marshal(x.DelegatorInfo)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.Reputer) > 0 {
			i -= len(x.Reputer)
			copy(dAtA[i:], x.Reputer)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Reputer)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.Delegator) > 0 {
			i -= len(x.Delegator)
			copy(dAtA[i:], x.Delegator)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Delegator)))
			i--
			dAtA[i] = 0x12
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*TopicIdDelegatorReputerDelegatorInfo)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: TopicIdDelegatorReputerDelegatorInfo: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: TopicIdDelegatorReputerDelegatorInfo: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Delegator", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Delegator = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Reputer", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Reputer = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field DelegatorInfo", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.DelegatorInfo == nil {
					x.DelegatorInfo = &v3.DelegatorInfo{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.DelegatorInfo); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_BlockHeightTopicIdReputerStakeRemovalInfo                    protoreflect.MessageDescriptor
	fd_BlockHeightTopicIdReputerStakeRemovalInfo_block_height       protoreflect.FieldDescriptor
	fd_BlockHeightTopicIdReputerStakeRemovalInfo_topic_id           protoreflect.FieldDescriptor
	fd_BlockHeightTopicIdReputerStakeRemovalInfo_reputer            protoreflect.FieldDescriptor
	fd_BlockHeightTopicIdReputerStakeRemovalInfo_stake_removal_info protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_genesis_proto_init()
	md_BlockHeightTopicIdReputerStakeRemovalInfo = File_emissions_v5_genesis_proto.Messages().ByName("BlockHeightTopicIdReputerStakeRemovalInfo")
	fd_BlockHeightTopicIdReputerStakeRemovalInfo_block_height = md_BlockHeightTopicIdReputerStakeRemovalInfo.Fields().ByName("block_height")
	fd_BlockHeightTopicIdReputerStakeRemovalInfo_topic_id = md_BlockHeightTopicIdReputerStakeRemovalInfo.Fields().ByName("topic_id")
	fd_BlockHeightTopicIdReputerStakeRemovalInfo_reputer = md_BlockHeightTopicIdReputerStakeRemovalInfo.Fields().ByName("reputer")
	fd_BlockHeightTopicIdReputerStakeRemovalInfo_stake_removal_info = md_BlockHeightTopicIdReputerStakeRemovalInfo.Fields().ByName("stake_removal_info")
}

var _ protoreflect.Message = (*fastReflection_BlockHeightTopicIdReputerStakeRemovalInfo)(nil)

type fastReflection_BlockHeightTopicIdReputerStakeRemovalInfo BlockHeightTopicIdReputerStakeRemovalInfo

func (x *BlockHeightTopicIdReputerStakeRemovalInfo) ProtoReflect() protoreflect.Message {
	return (*fastReflection_BlockHeightTopicIdReputerStakeRemovalInfo)(x)
}

func (x *BlockHeightTopicIdReputerStakeRemovalInfo) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_genesis_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_BlockHeightTopicIdReputerStakeRemovalInfo_messageType fastReflection_BlockHeightTopicIdReputerStakeRemovalInfo_messageType
var _ protoreflect.MessageType = fastReflection_BlockHeightTopicIdReputerStakeRemovalInfo_messageType{}

type fastReflection_BlockHeightTopicIdReputerStakeRemovalInfo_messageType struct{}

func (x fastReflection_BlockHeightTopicIdReputerStakeRemovalInfo_messageType) Zero() protoreflect.Message {
	return (*fastReflection_BlockHeightTopicIdReputerStakeRemovalInfo)(nil)
}
func (x fastReflection_BlockHeightTopicIdReputerStakeRemovalInfo_messageType) New() protoreflect.Message {
	return new(fastReflection_BlockHeightTopicIdReputerStakeRemovalInfo)
}
func (x fastReflection_BlockHeightTopicIdReputerStakeRemovalInfo_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_BlockHeightTopicIdReputerStakeRemovalInfo
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_BlockHeightTopicIdReputerStakeRemovalInfo) Descriptor() protoreflect.MessageDescriptor {
	return md_BlockHeightTopicIdReputerStakeRemovalInfo
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_BlockHeightTopicIdReputerStakeRemovalInfo) Type() protoreflect.MessageType {
	return _fastReflection_BlockHeightTopicIdReputerStakeRemovalInfo_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_BlockHeightTopicIdReputerStakeRemovalInfo) New() protoreflect.Message {
	return new(fastReflection_BlockHeightTopicIdReputerStakeRemovalInfo)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_BlockHeightTopicIdReputerStakeRemovalInfo) Interface() protoreflect.ProtoMessage {
	return (*BlockHeightTopicIdReputerStakeRemovalInfo)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_BlockHeightTopicIdReputerStakeRemovalInfo) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.BlockHeight != int64(0) {
		value := protoreflect.ValueOfInt64(x.BlockHeight)
		if !f(fd_BlockHeightTopicIdReputerStakeRemovalInfo_block_height, value) {
			return
		}
	}
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_BlockHeightTopicIdReputerStakeRemovalInfo_topic_id, value) {
			return
		}
	}
	if x.Reputer != "" {
		value := protoreflect.ValueOfString(x.Reputer)
		if !f(fd_BlockHeightTopicIdReputerStakeRemovalInfo_reputer, value) {
			return
		}
	}
	if x.StakeRemovalInfo != nil {
		value := protoreflect.ValueOfMessage(x.StakeRemovalInfo.ProtoReflect())
		if !f(fd_BlockHeightTopicIdReputerStakeRemovalInfo_stake_removal_info, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_BlockHeightTopicIdReputerStakeRemovalInfo) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.BlockHeightTopicIdReputerStakeRemovalInfo.block_height":
		return x.BlockHeight != int64(0)
	case "emissions.v5.BlockHeightTopicIdReputerStakeRemovalInfo.topic_id":
		return x.TopicId != uint64(0)
	case "emissions.v5.BlockHeightTopicIdReputerStakeRemovalInfo.reputer":
		return x.Reputer != ""
	case "emissions.v5.BlockHeightTopicIdReputerStakeRemovalInfo.stake_removal_info":
		return x.StakeRemovalInfo != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.BlockHeightTopicIdReputerStakeRemovalInfo"))
		}
		panic(fmt.Errorf("message emissions.v5.BlockHeightTopicIdReputerStakeRemovalInfo does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_BlockHeightTopicIdReputerStakeRemovalInfo) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.BlockHeightTopicIdReputerStakeRemovalInfo.block_height":
		x.BlockHeight = int64(0)
	case "emissions.v5.BlockHeightTopicIdReputerStakeRemovalInfo.topic_id":
		x.TopicId = uint64(0)
	case "emissions.v5.BlockHeightTopicIdReputerStakeRemovalInfo.reputer":
		x.Reputer = ""
	case "emissions.v5.BlockHeightTopicIdReputerStakeRemovalInfo.stake_removal_info":
		x.StakeRemovalInfo = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.BlockHeightTopicIdReputerStakeRemovalInfo"))
		}
		panic(fmt.Errorf("message emissions.v5.BlockHeightTopicIdReputerStakeRemovalInfo does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_BlockHeightTopicIdReputerStakeRemovalInfo) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.BlockHeightTopicIdReputerStakeRemovalInfo.block_height":
		value := x.BlockHeight
		return protoreflect.ValueOfInt64(value)
	case "emissions.v5.BlockHeightTopicIdReputerStakeRemovalInfo.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	case "emissions.v5.BlockHeightTopicIdReputerStakeRemovalInfo.reputer":
		value := x.Reputer
		return protoreflect.ValueOfString(value)
	case "emissions.v5.BlockHeightTopicIdReputerStakeRemovalInfo.stake_removal_info":
		value := x.StakeRemovalInfo
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.BlockHeightTopicIdReputerStakeRemovalInfo"))
		}
		panic(fmt.Errorf("message emissions.v5.BlockHeightTopicIdReputerStakeRemovalInfo does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_BlockHeightTopicIdReputerStakeRemovalInfo) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.BlockHeightTopicIdReputerStakeRemovalInfo.block_height":
		x.BlockHeight = value.Int()
	case "emissions.v5.BlockHeightTopicIdReputerStakeRemovalInfo.topic_id":
		x.TopicId = value.Uint()
	case "emissions.v5.BlockHeightTopicIdReputerStakeRemovalInfo.reputer":
		x.Reputer = value.Interface().(string)
	case "emissions.v5.BlockHeightTopicIdReputerStakeRemovalInfo.stake_removal_info":
		x.StakeRemovalInfo = value.Message().Interface().(*v3.StakeRemovalInfo)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.BlockHeightTopicIdReputerStakeRemovalInfo"))
		}
		panic(fmt.Errorf("message emissions.v5.BlockHeightTopicIdReputerStakeRemovalInfo does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_BlockHeightTopicIdReputerStakeRemovalInfo) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.BlockHeightTopicIdReputerStakeRemovalInfo.stake_removal_info":
		if x.StakeRemovalInfo == nil {
			x.StakeRemovalInfo = new(v3.StakeRemovalInfo)
		}
		return protoreflect.ValueOfMessage(x.StakeRemovalInfo.ProtoReflect())
	case "emissions.v5.BlockHeightTopicIdReputerStakeRemovalInfo.block_height":
		panic(fmt.Errorf("field block_height of message emissions.v5.BlockHeightTopicIdReputerStakeRemovalInfo is not mutable"))
	case "emissions.v5.BlockHeightTopicIdReputerStakeRemovalInfo.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.BlockHeightTopicIdReputerStakeRemovalInfo is not mutable"))
	case "emissions.v5.BlockHeightTopicIdReputerStakeRemovalInfo.reputer":
		panic(fmt.Errorf("field reputer of message emissions.v5.BlockHeightTopicIdReputerStakeRemovalInfo is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.BlockHeightTopicIdReputerStakeRemovalInfo"))
		}
		panic(fmt.Errorf("message emissions.v5.BlockHeightTopicIdReputerStakeRemovalInfo does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_BlockHeightTopicIdReputerStakeRemovalInfo) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.BlockHeightTopicIdReputerStakeRemovalInfo.block_height":
		return protoreflect.ValueOfInt64(int64(0))
	case "emissions.v5.BlockHeightTopicIdReputerStakeRemovalInfo.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "emissions.v5.BlockHeightTopicIdReputerStakeRemovalInfo.reputer":
		return protoreflect.ValueOfString("")
	case "emissions.v5.BlockHeightTopicIdReputerStakeRemovalInfo.stake_removal_info":
		m := new(v3.StakeRemovalInfo)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.BlockHeightTopicIdReputerStakeRemovalInfo"))
		}
		panic(fmt.Errorf("message emissions.v5.BlockHeightTopicIdReputerStakeRemovalInfo does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_BlockHeightTopicIdReputerStakeRemovalInfo) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.BlockHeightTopicIdReputerStakeRemovalInfo", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_BlockHeightTopicIdReputerStakeRemovalInfo) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_BlockHeightTopicIdReputerStakeRemovalInfo) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_BlockHeightTopicIdReputerStakeRemovalInfo) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_BlockHeightTopicIdReputerStakeRemovalInfo) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*BlockHeightTopicIdReputerStakeRemovalInfo)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.BlockHeight != 0 {
			n += 1 + runtime.Sov(uint64(x.BlockHeight))
		}
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		l = len(x.Reputer)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.StakeRemovalInfo != nil {
			l = options.Size(x.StakeRemovalInfo)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*BlockHeightTopicIdReputerStakeRemovalInfo)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.StakeRemovalInfo != nil {
			encoded, err := options.Marshal(x.StakeRemovalInfo)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.Reputer) > 0 {
			i -= len(x.Reputer)
			copy(dAtA[i:], x.Reputer)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Reputer)))
			i--
			dAtA[i] = 0x1a
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x10
		}
		if x.BlockHeight != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.BlockHeight))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*BlockHeightTopicIdReputerStakeRemovalInfo)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: BlockHeightTopicIdReputerStakeRemovalInfo: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: BlockHeightTopicIdReputerStakeRemovalInfo: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BlockHeight", wireType)
				}
				x.BlockHeight = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.BlockHeight |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Reputer", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Reputer = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field StakeRemovalInfo", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.StakeRemovalInfo == nil {
					x.StakeRemovalInfo = &v3.StakeRemovalInfo{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.StakeRemovalInfo); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_ActorIdTopicIdBlockHeight              protoreflect.MessageDescriptor
	fd_ActorIdTopicIdBlockHeight_actor_id     protoreflect.FieldDescriptor
	fd_ActorIdTopicIdBlockHeight_topic_id     protoreflect.FieldDescriptor
	fd_ActorIdTopicIdBlockHeight_block_height protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_genesis_proto_init()
	md_ActorIdTopicIdBlockHeight = File_emissions_v5_genesis_proto.Messages().ByName("ActorIdTopicIdBlockHeight")
	fd_ActorIdTopicIdBlockHeight_actor_id = md_ActorIdTopicIdBlockHeight.Fields().ByName("actor_id")
	fd_ActorIdTopicIdBlockHeight_topic_id = md_ActorIdTopicIdBlockHeight.Fields().ByName("topic_id")
	fd_ActorIdTopicIdBlockHeight_block_height = md_ActorIdTopicIdBlockHeight.Fields().ByName("block_height")
}

var _ protoreflect.Message = (*fastReflection_ActorIdTopicIdBlockHeight)(nil)

type fastReflection_ActorIdTopicIdBlockHeight ActorIdTopicIdBlockHeight

func (x *ActorIdTopicIdBlockHeight) ProtoReflect() protoreflect.Message {
	return (*fastReflection_ActorIdTopicIdBlockHeight)(x)
}

func (x *ActorIdTopicIdBlockHeight) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_genesis_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_ActorIdTopicIdBlockHeight_messageType fastReflection_ActorIdTopicIdBlockHeight_messageType
var _ protoreflect.MessageType = fastReflection_ActorIdTopicIdBlockHeight_messageType{}

type fastReflection_ActorIdTopicIdBlockHeight_messageType struct{}

func (x fastReflection_ActorIdTopicIdBlockHeight_messageType) Zero() protoreflect.Message {
	return (*fastReflection_ActorIdTopicIdBlockHeight)(nil)
}
func (x fastReflection_ActorIdTopicIdBlockHeight_messageType) New() protoreflect.Message {
	return new(fastReflection_ActorIdTopicIdBlockHeight)
}
func (x fastReflection_ActorIdTopicIdBlockHeight_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_ActorIdTopicIdBlockHeight
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_ActorIdTopicIdBlockHeight) Descriptor() protoreflect.MessageDescriptor {
	return md_ActorIdTopicIdBlockHeight
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_ActorIdTopicIdBlockHeight) Type() protoreflect.MessageType {
	return _fastReflection_ActorIdTopicIdBlockHeight_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_ActorIdTopicIdBlockHeight) New() protoreflect.Message {
	return new(fastReflection_ActorIdTopicIdBlockHeight)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_ActorIdTopicIdBlockHeight) Interface() protoreflect.ProtoMessage {
	return (*ActorIdTopicIdBlockHeight)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_ActorIdTopicIdBlockHeight) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.ActorId != "" {
		value := protoreflect.ValueOfString(x.ActorId)
		if !f(fd_ActorIdTopicIdBlockHeight_actor_id, value) {
			return
		}
	}
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_ActorIdTopicIdBlockHeight_topic_id, value) {
			return
		}
	}
	if x.BlockHeight != int64(0) {
		value := protoreflect.ValueOfInt64(x.BlockHeight)
		if !f(fd_ActorIdTopicIdBlockHeight_block_height, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_ActorIdTopicIdBlockHeight) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.ActorIdTopicIdBlockHeight.actor_id":
		return x.ActorId != ""
	case "emissions.v5.ActorIdTopicIdBlockHeight.topic_id":
		return x.TopicId != uint64(0)
	case "emissions.v5.ActorIdTopicIdBlockHeight.block_height":
		return x.BlockHeight != int64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.ActorIdTopicIdBlockHeight"))
		}
		panic(fmt.Errorf("message emissions.v5.ActorIdTopicIdBlockHeight does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ActorIdTopicIdBlockHeight) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.ActorIdTopicIdBlockHeight.actor_id":
		x.ActorId = ""
	case "emissions.v5.ActorIdTopicIdBlockHeight.topic_id":
		x.TopicId = uint64(0)
	case "emissions.v5.ActorIdTopicIdBlockHeight.block_height":
		x.BlockHeight = int64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.ActorIdTopicIdBlockHeight"))
		}
		panic(fmt.Errorf("message emissions.v5.ActorIdTopicIdBlockHeight does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_ActorIdTopicIdBlockHeight) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.ActorIdTopicIdBlockHeight.actor_id":
		value := x.ActorId
		return protoreflect.ValueOfString(value)
	case "emissions.v5.ActorIdTopicIdBlockHeight.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	case "emissions.v5.ActorIdTopicIdBlockHeight.block_height":
		value := x.BlockHeight
		return protoreflect.ValueOfInt64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.ActorIdTopicIdBlockHeight"))
		}
		panic(fmt.Errorf("message emissions.v5.ActorIdTopicIdBlockHeight does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ActorIdTopicIdBlockHeight) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.ActorIdTopicIdBlockHeight.actor_id":
		x.ActorId = value.Interface().(string)
	case "emissions.v5.ActorIdTopicIdBlockHeight.topic_id":
		x.TopicId = value.Uint()
	case "emissions.v5.ActorIdTopicIdBlockHeight.block_height":
		x.BlockHeight = value.Int()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.ActorIdTopicIdBlockHeight"))
		}
		panic(fmt.Errorf("message emissions.v5.ActorIdTopicIdBlockHeight does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ActorIdTopicIdBlockHeight) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.ActorIdTopicIdBlockHeight.actor_id":
		panic(fmt.Errorf("field actor_id of message emissions.v5.ActorIdTopicIdBlockHeight is not mutable"))
	case "emissions.v5.ActorIdTopicIdBlockHeight.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.ActorIdTopicIdBlockHeight is not mutable"))
	case "emissions.v5.ActorIdTopicIdBlockHeight.block_height":
		panic(fmt.Errorf("field block_height of message emissions.v5.ActorIdTopicIdBlockHeight is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.ActorIdTopicIdBlockHeight"))
		}
		panic(fmt.Errorf("message emissions.v5.ActorIdTopicIdBlockHeight does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_ActorIdTopicIdBlockHeight) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.ActorIdTopicIdBlockHeight.actor_id":
		return protoreflect.ValueOfString("")
	case "emissions.v5.ActorIdTopicIdBlockHeight.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "emissions.v5.ActorIdTopicIdBlockHeight.block_height":
		return protoreflect.ValueOfInt64(int64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.ActorIdTopicIdBlockHeight"))
		}
		panic(fmt.Errorf("message emissions.v5.ActorIdTopicIdBlockHeight does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_ActorIdTopicIdBlockHeight) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.ActorIdTopicIdBlockHeight", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_ActorIdTopicIdBlockHeight) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ActorIdTopicIdBlockHeight) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_ActorIdTopicIdBlockHeight) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_ActorIdTopicIdBlockHeight) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*ActorIdTopicIdBlockHeight)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.ActorId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		if x.BlockHeight != 0 {
			n += 1 + runtime.Sov(uint64(x.BlockHeight))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*ActorIdTopicIdBlockHeight)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.BlockHeight != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.BlockHeight))
			i--
			dAtA[i] = 0x18
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x10
		}
		if len(x.ActorId) > 0 {
			i -= len(x.ActorId)
			copy(dAtA[i:], x.ActorId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ActorId)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*ActorIdTopicIdBlockHeight)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ActorIdTopicIdBlockHeight: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ActorIdTopicIdBlockHeight: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ActorId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ActorId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BlockHeight", wireType)
				}
				x.BlockHeight = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.BlockHeight |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo                             protoreflect.MessageDescriptor
	fd_BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo_block_height                protoreflect.FieldDescriptor
	fd_BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo_topic_id                    protoreflect.FieldDescriptor
	fd_BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo_delegator                   protoreflect.FieldDescriptor
	fd_BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo_reputer                     protoreflect.FieldDescriptor
	fd_BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo_delegate_stake_removal_info protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_genesis_proto_init()
	md_BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo = File_emissions_v5_genesis_proto.Messages().ByName("BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo")
	fd_BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo_block_height = md_BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo.Fields().ByName("block_height")
	fd_BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo_topic_id = md_BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo.Fields().ByName("topic_id")
	fd_BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo_delegator = md_BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo.Fields().ByName("delegator")
	fd_BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo_reputer = md_BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo.Fields().ByName("reputer")
	fd_BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo_delegate_stake_removal_info = md_BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo.Fields().ByName("delegate_stake_removal_info")
}

var _ protoreflect.Message = (*fastReflection_BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo)(nil)

type fastReflection_BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo

func (x *BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo) ProtoReflect() protoreflect.Message {
	return (*fastReflection_BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo)(x)
}

func (x *BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_genesis_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo_messageType fastReflection_BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo_messageType
var _ protoreflect.MessageType = fastReflection_BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo_messageType{}

type fastReflection_BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo_messageType struct{}

func (x fastReflection_BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo_messageType) Zero() protoreflect.Message {
	return (*fastReflection_BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo)(nil)
}
func (x fastReflection_BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo_messageType) New() protoreflect.Message {
	return new(fastReflection_BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo)
}
func (x fastReflection_BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo) Descriptor() protoreflect.MessageDescriptor {
	return md_BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo) Type() protoreflect.MessageType {
	return _fastReflection_BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo) New() protoreflect.Message {
	return new(fastReflection_BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo) Interface() protoreflect.ProtoMessage {
	return (*BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.BlockHeight != int64(0) {
		value := protoreflect.ValueOfInt64(x.BlockHeight)
		if !f(fd_BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo_block_height, value) {
			return
		}
	}
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo_topic_id, value) {
			return
		}
	}
	if x.Delegator != "" {
		value := protoreflect.ValueOfString(x.Delegator)
		if !f(fd_BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo_delegator, value) {
			return
		}
	}
	if x.Reputer != "" {
		value := protoreflect.ValueOfString(x.Reputer)
		if !f(fd_BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo_reputer, value) {
			return
		}
	}
	if x.DelegateStakeRemovalInfo != nil {
		value := protoreflect.ValueOfMessage(x.DelegateStakeRemovalInfo.ProtoReflect())
		if !f(fd_BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo_delegate_stake_removal_info, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo.block_height":
		return x.BlockHeight != int64(0)
	case "emissions.v5.BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo.topic_id":
		return x.TopicId != uint64(0)
	case "emissions.v5.BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo.delegator":
		return x.Delegator != ""
	case "emissions.v5.BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo.reputer":
		return x.Reputer != ""
	case "emissions.v5.BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo.delegate_stake_removal_info":
		return x.DelegateStakeRemovalInfo != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo"))
		}
		panic(fmt.Errorf("message emissions.v5.BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo.block_height":
		x.BlockHeight = int64(0)
	case "emissions.v5.BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo.topic_id":
		x.TopicId = uint64(0)
	case "emissions.v5.BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo.delegator":
		x.Delegator = ""
	case "emissions.v5.BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo.reputer":
		x.Reputer = ""
	case "emissions.v5.BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo.delegate_stake_removal_info":
		x.DelegateStakeRemovalInfo = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo"))
		}
		panic(fmt.Errorf("message emissions.v5.BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo.block_height":
		value := x.BlockHeight
		return protoreflect.ValueOfInt64(value)
	case "emissions.v5.BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	case "emissions.v5.BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo.delegator":
		value := x.Delegator
		return protoreflect.ValueOfString(value)
	case "emissions.v5.BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo.reputer":
		value := x.Reputer
		return protoreflect.ValueOfString(value)
	case "emissions.v5.BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo.delegate_stake_removal_info":
		value := x.DelegateStakeRemovalInfo
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo"))
		}
		panic(fmt.Errorf("message emissions.v5.BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo.block_height":
		x.BlockHeight = value.Int()
	case "emissions.v5.BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo.topic_id":
		x.TopicId = value.Uint()
	case "emissions.v5.BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo.delegator":
		x.Delegator = value.Interface().(string)
	case "emissions.v5.BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo.reputer":
		x.Reputer = value.Interface().(string)
	case "emissions.v5.BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo.delegate_stake_removal_info":
		x.DelegateStakeRemovalInfo = value.Message().Interface().(*v3.DelegateStakeRemovalInfo)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo"))
		}
		panic(fmt.Errorf("message emissions.v5.BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo.delegate_stake_removal_info":
		if x.DelegateStakeRemovalInfo == nil {
			x.DelegateStakeRemovalInfo = new(v3.DelegateStakeRemovalInfo)
		}
		return protoreflect.ValueOfMessage(x.DelegateStakeRemovalInfo.ProtoReflect())
	case "emissions.v5.BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo.block_height":
		panic(fmt.Errorf("field block_height of message emissions.v5.BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo is not mutable"))
	case "emissions.v5.BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo is not mutable"))
	case "emissions.v5.BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo.delegator":
		panic(fmt.Errorf("field delegator of message emissions.v5.BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo is not mutable"))
	case "emissions.v5.BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo.reputer":
		panic(fmt.Errorf("field reputer of message emissions.v5.BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo"))
		}
		panic(fmt.Errorf("message emissions.v5.BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo.block_height":
		return protoreflect.ValueOfInt64(int64(0))
	case "emissions.v5.BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "emissions.v5.BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo.delegator":
		return protoreflect.ValueOfString("")
	case "emissions.v5.BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo.reputer":
		return protoreflect.ValueOfString("")
	case "emissions.v5.BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo.delegate_stake_removal_info":
		m := new(v3.DelegateStakeRemovalInfo)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo"))
		}
		panic(fmt.Errorf("message emissions.v5.BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.BlockHeight != 0 {
			n += 1 + runtime.Sov(uint64(x.BlockHeight))
		}
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		l = len(x.Delegator)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Reputer)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.DelegateStakeRemovalInfo != nil {
			l = options.Size(x.DelegateStakeRemovalInfo)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.DelegateStakeRemovalInfo != nil {
			encoded, err := options.Marshal(x.DelegateStakeRemovalInfo)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x2a
		}
		if len(x.Reputer) > 0 {
			i -= len(x.Reputer)
			copy(dAtA[i:], x.Reputer)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Reputer)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.Delegator) > 0 {
			i -= len(x.Delegator)
			copy(dAtA[i:], x.Delegator)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Delegator)))
			i--
			dAtA[i] = 0x1a
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x10
		}
		if x.BlockHeight != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.BlockHeight))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BlockHeight", wireType)
				}
				x.BlockHeight = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.BlockHeight |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Delegator", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Delegator = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Reputer", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Reputer = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field DelegateStakeRemovalInfo", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.DelegateStakeRemovalInfo == nil {
					x.DelegateStakeRemovalInfo = &v3.DelegateStakeRemovalInfo{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.DelegateStakeRemovalInfo); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_DelegatorReputerTopicIdBlockHeight              protoreflect.MessageDescriptor
	fd_DelegatorReputerTopicIdBlockHeight_delegator    protoreflect.FieldDescriptor
	fd_DelegatorReputerTopicIdBlockHeight_reputer      protoreflect.FieldDescriptor
	fd_DelegatorReputerTopicIdBlockHeight_topic_id     protoreflect.FieldDescriptor
	fd_DelegatorReputerTopicIdBlockHeight_block_height protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_genesis_proto_init()
	md_DelegatorReputerTopicIdBlockHeight = File_emissions_v5_genesis_proto.Messages().ByName("DelegatorReputerTopicIdBlockHeight")
	fd_DelegatorReputerTopicIdBlockHeight_delegator = md_DelegatorReputerTopicIdBlockHeight.Fields().ByName("delegator")
	fd_DelegatorReputerTopicIdBlockHeight_reputer = md_DelegatorReputerTopicIdBlockHeight.Fields().ByName("reputer")
	fd_DelegatorReputerTopicIdBlockHeight_topic_id = md_DelegatorReputerTopicIdBlockHeight.Fields().ByName("topic_id")
	fd_DelegatorReputerTopicIdBlockHeight_block_height = md_DelegatorReputerTopicIdBlockHeight.Fields().ByName("block_height")
}

var _ protoreflect.Message = (*fastReflection_DelegatorReputerTopicIdBlockHeight)(nil)

type fastReflection_DelegatorReputerTopicIdBlockHeight DelegatorReputerTopicIdBlockHeight

func (x *DelegatorReputerTopicIdBlockHeight) ProtoReflect() protoreflect.Message {
	return (*fastReflection_DelegatorReputerTopicIdBlockHeight)(x)
}

func (x *DelegatorReputerTopicIdBlockHeight) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_genesis_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_DelegatorReputerTopicIdBlockHeight_messageType fastReflection_DelegatorReputerTopicIdBlockHeight_messageType
var _ protoreflect.MessageType = fastReflection_DelegatorReputerTopicIdBlockHeight_messageType{}

type fastReflection_DelegatorReputerTopicIdBlockHeight_messageType struct{}

func (x fastReflection_DelegatorReputerTopicIdBlockHeight_messageType) Zero() protoreflect.Message {
	return (*fastReflection_DelegatorReputerTopicIdBlockHeight)(nil)
}
func (x fastReflection_DelegatorReputerTopicIdBlockHeight_messageType) New() protoreflect.Message {
	return new(fastReflection_DelegatorReputerTopicIdBlockHeight)
}
func (x fastReflection_DelegatorReputerTopicIdBlockHeight_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_DelegatorReputerTopicIdBlockHeight
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_DelegatorReputerTopicIdBlockHeight) Descriptor() protoreflect.MessageDescriptor {
	return md_DelegatorReputerTopicIdBlockHeight
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_DelegatorReputerTopicIdBlockHeight) Type() protoreflect.MessageType {
	return _fastReflection_DelegatorReputerTopicIdBlockHeight_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_DelegatorReputerTopicIdBlockHeight) New() protoreflect.Message {
	return new(fastReflection_DelegatorReputerTopicIdBlockHeight)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_DelegatorReputerTopicIdBlockHeight) Interface() protoreflect.ProtoMessage {
	return (*DelegatorReputerTopicIdBlockHeight)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_DelegatorReputerTopicIdBlockHeight) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Delegator != "" {
		value := protoreflect.ValueOfString(x.Delegator)
		if !f(fd_DelegatorReputerTopicIdBlockHeight_delegator, value) {
			return
		}
	}
	if x.Reputer != "" {
		value := protoreflect.ValueOfString(x.Reputer)
		if !f(fd_DelegatorReputerTopicIdBlockHeight_reputer, value) {
			return
		}
	}
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_DelegatorReputerTopicIdBlockHeight_topic_id, value) {
			return
		}
	}
	if x.BlockHeight != int64(0) {
		value := protoreflect.ValueOfInt64(x.BlockHeight)
		if !f(fd_DelegatorReputerTopicIdBlockHeight_block_height, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_DelegatorReputerTopicIdBlockHeight) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.DelegatorReputerTopicIdBlockHeight.delegator":
		return x.Delegator != ""
	case "emissions.v5.DelegatorReputerTopicIdBlockHeight.reputer":
		return x.Reputer != ""
	case "emissions.v5.DelegatorReputerTopicIdBlockHeight.topic_id":
		return x.TopicId != uint64(0)
	case "emissions.v5.DelegatorReputerTopicIdBlockHeight.block_height":
		return x.BlockHeight != int64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.DelegatorReputerTopicIdBlockHeight"))
		}
		panic(fmt.Errorf("message emissions.v5.DelegatorReputerTopicIdBlockHeight does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_DelegatorReputerTopicIdBlockHeight) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.DelegatorReputerTopicIdBlockHeight.delegator":
		x.Delegator = ""
	case "emissions.v5.DelegatorReputerTopicIdBlockHeight.reputer":
		x.Reputer = ""
	case "emissions.v5.DelegatorReputerTopicIdBlockHeight.topic_id":
		x.TopicId = uint64(0)
	case "emissions.v5.DelegatorReputerTopicIdBlockHeight.block_height":
		x.BlockHeight = int64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.DelegatorReputerTopicIdBlockHeight"))
		}
		panic(fmt.Errorf("message emissions.v5.DelegatorReputerTopicIdBlockHeight does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_DelegatorReputerTopicIdBlockHeight) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.DelegatorReputerTopicIdBlockHeight.delegator":
		value := x.Delegator
		return protoreflect.ValueOfString(value)
	case "emissions.v5.DelegatorReputerTopicIdBlockHeight.reputer":
		value := x.Reputer
		return protoreflect.ValueOfString(value)
	case "emissions.v5.DelegatorReputerTopicIdBlockHeight.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	case "emissions.v5.DelegatorReputerTopicIdBlockHeight.block_height":
		value := x.BlockHeight
		return protoreflect.ValueOfInt64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.DelegatorReputerTopicIdBlockHeight"))
		}
		panic(fmt.Errorf("message emissions.v5.DelegatorReputerTopicIdBlockHeight does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_DelegatorReputerTopicIdBlockHeight) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.DelegatorReputerTopicIdBlockHeight.delegator":
		x.Delegator = value.Interface().(string)
	case "emissions.v5.DelegatorReputerTopicIdBlockHeight.reputer":
		x.Reputer = value.Interface().(string)
	case "emissions.v5.DelegatorReputerTopicIdBlockHeight.topic_id":
		x.TopicId = value.Uint()
	case "emissions.v5.DelegatorReputerTopicIdBlockHeight.block_height":
		x.BlockHeight = value.Int()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.DelegatorReputerTopicIdBlockHeight"))
		}
		panic(fmt.Errorf("message emissions.v5.DelegatorReputerTopicIdBlockHeight does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_DelegatorReputerTopicIdBlockHeight) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.DelegatorReputerTopicIdBlockHeight.delegator":
		panic(fmt.Errorf("field delegator of message emissions.v5.DelegatorReputerTopicIdBlockHeight is not mutable"))
	case "emissions.v5.DelegatorReputerTopicIdBlockHeight.reputer":
		panic(fmt.Errorf("field reputer of message emissions.v5.DelegatorReputerTopicIdBlockHeight is not mutable"))
	case "emissions.v5.DelegatorReputerTopicIdBlockHeight.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.DelegatorReputerTopicIdBlockHeight is not mutable"))
	case "emissions.v5.DelegatorReputerTopicIdBlockHeight.block_height":
		panic(fmt.Errorf("field block_height of message emissions.v5.DelegatorReputerTopicIdBlockHeight is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.DelegatorReputerTopicIdBlockHeight"))
		}
		panic(fmt.Errorf("message emissions.v5.DelegatorReputerTopicIdBlockHeight does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_DelegatorReputerTopicIdBlockHeight) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.DelegatorReputerTopicIdBlockHeight.delegator":
		return protoreflect.ValueOfString("")
	case "emissions.v5.DelegatorReputerTopicIdBlockHeight.reputer":
		return protoreflect.ValueOfString("")
	case "emissions.v5.DelegatorReputerTopicIdBlockHeight.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "emissions.v5.DelegatorReputerTopicIdBlockHeight.block_height":
		return protoreflect.ValueOfInt64(int64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.DelegatorReputerTopicIdBlockHeight"))
		}
		panic(fmt.Errorf("message emissions.v5.DelegatorReputerTopicIdBlockHeight does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_DelegatorReputerTopicIdBlockHeight) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.DelegatorReputerTopicIdBlockHeight", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_DelegatorReputerTopicIdBlockHeight) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_DelegatorReputerTopicIdBlockHeight) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_DelegatorReputerTopicIdBlockHeight) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_DelegatorReputerTopicIdBlockHeight) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*DelegatorReputerTopicIdBlockHeight)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Delegator)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Reputer)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		if x.BlockHeight != 0 {
			n += 1 + runtime.Sov(uint64(x.BlockHeight))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*DelegatorReputerTopicIdBlockHeight)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.BlockHeight != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.BlockHeight))
			i--
			dAtA[i] = 0x20
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x18
		}
		if len(x.Reputer) > 0 {
			i -= len(x.Reputer)
			copy(dAtA[i:], x.Reputer)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Reputer)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Delegator) > 0 {
			i -= len(x.Delegator)
			copy(dAtA[i:], x.Delegator)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Delegator)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*DelegatorReputerTopicIdBlockHeight)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: DelegatorReputerTopicIdBlockHeight: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: DelegatorReputerTopicIdBlockHeight: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Delegator", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Delegator = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Reputer", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Reputer = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 4:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BlockHeight", wireType)
				}
				x.BlockHeight = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.BlockHeight |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_TopicIdActorIdInference           protoreflect.MessageDescriptor
	fd_TopicIdActorIdInference_topic_id  protoreflect.FieldDescriptor
	fd_TopicIdActorIdInference_actor_id  protoreflect.FieldDescriptor
	fd_TopicIdActorIdInference_inference protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_genesis_proto_init()
	md_TopicIdActorIdInference = File_emissions_v5_genesis_proto.Messages().ByName("TopicIdActorIdInference")
	fd_TopicIdActorIdInference_topic_id = md_TopicIdActorIdInference.Fields().ByName("topic_id")
	fd_TopicIdActorIdInference_actor_id = md_TopicIdActorIdInference.Fields().ByName("actor_id")
	fd_TopicIdActorIdInference_inference = md_TopicIdActorIdInference.Fields().ByName("inference")
}

var _ protoreflect.Message = (*fastReflection_TopicIdActorIdInference)(nil)

type fastReflection_TopicIdActorIdInference TopicIdActorIdInference

func (x *TopicIdActorIdInference) ProtoReflect() protoreflect.Message {
	return (*fastReflection_TopicIdActorIdInference)(x)
}

func (x *TopicIdActorIdInference) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_genesis_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_TopicIdActorIdInference_messageType fastReflection_TopicIdActorIdInference_messageType
var _ protoreflect.MessageType = fastReflection_TopicIdActorIdInference_messageType{}

type fastReflection_TopicIdActorIdInference_messageType struct{}

func (x fastReflection_TopicIdActorIdInference_messageType) Zero() protoreflect.Message {
	return (*fastReflection_TopicIdActorIdInference)(nil)
}
func (x fastReflection_TopicIdActorIdInference_messageType) New() protoreflect.Message {
	return new(fastReflection_TopicIdActorIdInference)
}
func (x fastReflection_TopicIdActorIdInference_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_TopicIdActorIdInference
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_TopicIdActorIdInference) Descriptor() protoreflect.MessageDescriptor {
	return md_TopicIdActorIdInference
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_TopicIdActorIdInference) Type() protoreflect.MessageType {
	return _fastReflection_TopicIdActorIdInference_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_TopicIdActorIdInference) New() protoreflect.Message {
	return new(fastReflection_TopicIdActorIdInference)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_TopicIdActorIdInference) Interface() protoreflect.ProtoMessage {
	return (*TopicIdActorIdInference)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_TopicIdActorIdInference) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_TopicIdActorIdInference_topic_id, value) {
			return
		}
	}
	if x.ActorId != "" {
		value := protoreflect.ValueOfString(x.ActorId)
		if !f(fd_TopicIdActorIdInference_actor_id, value) {
			return
		}
	}
	if x.Inference != nil {
		value := protoreflect.ValueOfMessage(x.Inference.ProtoReflect())
		if !f(fd_TopicIdActorIdInference_inference, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_TopicIdActorIdInference) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.TopicIdActorIdInference.topic_id":
		return x.TopicId != uint64(0)
	case "emissions.v5.TopicIdActorIdInference.actor_id":
		return x.ActorId != ""
	case "emissions.v5.TopicIdActorIdInference.inference":
		return x.Inference != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdActorIdInference"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdActorIdInference does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TopicIdActorIdInference) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.TopicIdActorIdInference.topic_id":
		x.TopicId = uint64(0)
	case "emissions.v5.TopicIdActorIdInference.actor_id":
		x.ActorId = ""
	case "emissions.v5.TopicIdActorIdInference.inference":
		x.Inference = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdActorIdInference"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdActorIdInference does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_TopicIdActorIdInference) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.TopicIdActorIdInference.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	case "emissions.v5.TopicIdActorIdInference.actor_id":
		value := x.ActorId
		return protoreflect.ValueOfString(value)
	case "emissions.v5.TopicIdActorIdInference.inference":
		value := x.Inference
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdActorIdInference"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdActorIdInference does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TopicIdActorIdInference) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.TopicIdActorIdInference.topic_id":
		x.TopicId = value.Uint()
	case "emissions.v5.TopicIdActorIdInference.actor_id":
		x.ActorId = value.Interface().(string)
	case "emissions.v5.TopicIdActorIdInference.inference":
		x.Inference = value.Message().Interface().(*v3.Inference)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdActorIdInference"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdActorIdInference does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TopicIdActorIdInference) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.TopicIdActorIdInference.inference":
		if x.Inference == nil {
			x.Inference = new(v3.Inference)
		}
		return protoreflect.ValueOfMessage(x.Inference.ProtoReflect())
	case "emissions.v5.TopicIdActorIdInference.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.TopicIdActorIdInference is not mutable"))
	case "emissions.v5.TopicIdActorIdInference.actor_id":
		panic(fmt.Errorf("field actor_id of message emissions.v5.TopicIdActorIdInference is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdActorIdInference"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdActorIdInference does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_TopicIdActorIdInference) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.TopicIdActorIdInference.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "emissions.v5.TopicIdActorIdInference.actor_id":
		return protoreflect.ValueOfString("")
	case "emissions.v5.TopicIdActorIdInference.inference":
		m := new(v3.Inference)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdActorIdInference"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdActorIdInference does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_TopicIdActorIdInference) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.TopicIdActorIdInference", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_TopicIdActorIdInference) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TopicIdActorIdInference) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_TopicIdActorIdInference) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_TopicIdActorIdInference) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*TopicIdActorIdInference)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		l = len(x.ActorId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Inference != nil {
			l = options.Size(x.Inference)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*TopicIdActorIdInference)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Inference != nil {
			encoded, err := options.Marshal(x.Inference)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.ActorId) > 0 {
			i -= len(x.ActorId)
			copy(dAtA[i:], x.ActorId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ActorId)))
			i--
			dAtA[i] = 0x12
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*TopicIdActorIdInference)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: TopicIdActorIdInference: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: TopicIdActorIdInference: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ActorId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ActorId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Inference", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Inference == nil {
					x.Inference = &v3.Inference{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Inference); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_TopicIdActorIdForecast          protoreflect.MessageDescriptor
	fd_TopicIdActorIdForecast_topic_id protoreflect.FieldDescriptor
	fd_TopicIdActorIdForecast_actor_id protoreflect.FieldDescriptor
	fd_TopicIdActorIdForecast_forecast protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_genesis_proto_init()
	md_TopicIdActorIdForecast = File_emissions_v5_genesis_proto.Messages().ByName("TopicIdActorIdForecast")
	fd_TopicIdActorIdForecast_topic_id = md_TopicIdActorIdForecast.Fields().ByName("topic_id")
	fd_TopicIdActorIdForecast_actor_id = md_TopicIdActorIdForecast.Fields().ByName("actor_id")
	fd_TopicIdActorIdForecast_forecast = md_TopicIdActorIdForecast.Fields().ByName("forecast")
}

var _ protoreflect.Message = (*fastReflection_TopicIdActorIdForecast)(nil)

type fastReflection_TopicIdActorIdForecast TopicIdActorIdForecast

func (x *TopicIdActorIdForecast) ProtoReflect() protoreflect.Message {
	return (*fastReflection_TopicIdActorIdForecast)(x)
}

func (x *TopicIdActorIdForecast) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_genesis_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_TopicIdActorIdForecast_messageType fastReflection_TopicIdActorIdForecast_messageType
var _ protoreflect.MessageType = fastReflection_TopicIdActorIdForecast_messageType{}

type fastReflection_TopicIdActorIdForecast_messageType struct{}

func (x fastReflection_TopicIdActorIdForecast_messageType) Zero() protoreflect.Message {
	return (*fastReflection_TopicIdActorIdForecast)(nil)
}
func (x fastReflection_TopicIdActorIdForecast_messageType) New() protoreflect.Message {
	return new(fastReflection_TopicIdActorIdForecast)
}
func (x fastReflection_TopicIdActorIdForecast_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_TopicIdActorIdForecast
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_TopicIdActorIdForecast) Descriptor() protoreflect.MessageDescriptor {
	return md_TopicIdActorIdForecast
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_TopicIdActorIdForecast) Type() protoreflect.MessageType {
	return _fastReflection_TopicIdActorIdForecast_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_TopicIdActorIdForecast) New() protoreflect.Message {
	return new(fastReflection_TopicIdActorIdForecast)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_TopicIdActorIdForecast) Interface() protoreflect.ProtoMessage {
	return (*TopicIdActorIdForecast)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_TopicIdActorIdForecast) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_TopicIdActorIdForecast_topic_id, value) {
			return
		}
	}
	if x.ActorId != "" {
		value := protoreflect.ValueOfString(x.ActorId)
		if !f(fd_TopicIdActorIdForecast_actor_id, value) {
			return
		}
	}
	if x.Forecast != nil {
		value := protoreflect.ValueOfMessage(x.Forecast.ProtoReflect())
		if !f(fd_TopicIdActorIdForecast_forecast, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_TopicIdActorIdForecast) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.TopicIdActorIdForecast.topic_id":
		return x.TopicId != uint64(0)
	case "emissions.v5.TopicIdActorIdForecast.actor_id":
		return x.ActorId != ""
	case "emissions.v5.TopicIdActorIdForecast.forecast":
		return x.Forecast != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdActorIdForecast"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdActorIdForecast does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TopicIdActorIdForecast) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.TopicIdActorIdForecast.topic_id":
		x.TopicId = uint64(0)
	case "emissions.v5.TopicIdActorIdForecast.actor_id":
		x.ActorId = ""
	case "emissions.v5.TopicIdActorIdForecast.forecast":
		x.Forecast = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdActorIdForecast"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdActorIdForecast does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_TopicIdActorIdForecast) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.TopicIdActorIdForecast.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	case "emissions.v5.TopicIdActorIdForecast.actor_id":
		value := x.ActorId
		return protoreflect.ValueOfString(value)
	case "emissions.v5.TopicIdActorIdForecast.forecast":
		value := x.Forecast
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdActorIdForecast"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdActorIdForecast does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TopicIdActorIdForecast) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.TopicIdActorIdForecast.topic_id":
		x.TopicId = value.Uint()
	case "emissions.v5.TopicIdActorIdForecast.actor_id":
		x.ActorId = value.Interface().(string)
	case "emissions.v5.TopicIdActorIdForecast.forecast":
		x.Forecast = value.Message().Interface().(*v3.Forecast)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdActorIdForecast"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdActorIdForecast does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TopicIdActorIdForecast) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.TopicIdActorIdForecast.forecast":
		if x.Forecast == nil {
			x.Forecast = new(v3.Forecast)
		}
		return protoreflect.ValueOfMessage(x.Forecast.ProtoReflect())
	case "emissions.v5.TopicIdActorIdForecast.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.TopicIdActorIdForecast is not mutable"))
	case "emissions.v5.TopicIdActorIdForecast.actor_id":
		panic(fmt.Errorf("field actor_id of message emissions.v5.TopicIdActorIdForecast is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdActorIdForecast"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdActorIdForecast does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_TopicIdActorIdForecast) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.TopicIdActorIdForecast.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "emissions.v5.TopicIdActorIdForecast.actor_id":
		return protoreflect.ValueOfString("")
	case "emissions.v5.TopicIdActorIdForecast.forecast":
		m := new(v3.Forecast)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdActorIdForecast"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdActorIdForecast does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_TopicIdActorIdForecast) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.TopicIdActorIdForecast", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_TopicIdActorIdForecast) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TopicIdActorIdForecast) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_TopicIdActorIdForecast) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_TopicIdActorIdForecast) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*TopicIdActorIdForecast)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		l = len(x.ActorId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Forecast != nil {
			l = options.Size(x.Forecast)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*TopicIdActorIdForecast)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Forecast != nil {
			encoded, err := options.Marshal(x.Forecast)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.ActorId) > 0 {
			i -= len(x.ActorId)
			copy(dAtA[i:], x.ActorId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ActorId)))
			i--
			dAtA[i] = 0x12
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*TopicIdActorIdForecast)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: TopicIdActorIdForecast: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: TopicIdActorIdForecast: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ActorId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ActorId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Forecast", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Forecast == nil {
					x.Forecast = &v3.Forecast{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Forecast); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_LibP2PKeyAndOffchainNode               protoreflect.MessageDescriptor
	fd_LibP2PKeyAndOffchainNode_lib_p2p_key   protoreflect.FieldDescriptor
	fd_LibP2PKeyAndOffchainNode_offchain_node protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_genesis_proto_init()
	md_LibP2PKeyAndOffchainNode = File_emissions_v5_genesis_proto.Messages().ByName("LibP2pKeyAndOffchainNode")
	fd_LibP2PKeyAndOffchainNode_lib_p2p_key = md_LibP2PKeyAndOffchainNode.Fields().ByName("lib_p2p_key")
	fd_LibP2PKeyAndOffchainNode_offchain_node = md_LibP2PKeyAndOffchainNode.Fields().ByName("offchain_node")
}

var _ protoreflect.Message = (*fastReflection_LibP2PKeyAndOffchainNode)(nil)

type fastReflection_LibP2PKeyAndOffchainNode LibP2PKeyAndOffchainNode

func (x *LibP2PKeyAndOffchainNode) ProtoReflect() protoreflect.Message {
	return (*fastReflection_LibP2PKeyAndOffchainNode)(x)
}

func (x *LibP2PKeyAndOffchainNode) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_genesis_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_LibP2PKeyAndOffchainNode_messageType fastReflection_LibP2PKeyAndOffchainNode_messageType
var _ protoreflect.MessageType = fastReflection_LibP2PKeyAndOffchainNode_messageType{}

type fastReflection_LibP2PKeyAndOffchainNode_messageType struct{}

func (x fastReflection_LibP2PKeyAndOffchainNode_messageType) Zero() protoreflect.Message {
	return (*fastReflection_LibP2PKeyAndOffchainNode)(nil)
}
func (x fastReflection_LibP2PKeyAndOffchainNode_messageType) New() protoreflect.Message {
	return new(fastReflection_LibP2PKeyAndOffchainNode)
}
func (x fastReflection_LibP2PKeyAndOffchainNode_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_LibP2PKeyAndOffchainNode
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_LibP2PKeyAndOffchainNode) Descriptor() protoreflect.MessageDescriptor {
	return md_LibP2PKeyAndOffchainNode
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_LibP2PKeyAndOffchainNode) Type() protoreflect.MessageType {
	return _fastReflection_LibP2PKeyAndOffchainNode_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_LibP2PKeyAndOffchainNode) New() protoreflect.Message {
	return new(fastReflection_LibP2PKeyAndOffchainNode)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_LibP2PKeyAndOffchainNode) Interface() protoreflect.ProtoMessage {
	return (*LibP2PKeyAndOffchainNode)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_LibP2PKeyAndOffchainNode) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.LibP2PKey != "" {
		value := protoreflect.ValueOfString(x.LibP2PKey)
		if !f(fd_LibP2PKeyAndOffchainNode_lib_p2p_key, value) {
			return
		}
	}
	if x.OffchainNode != nil {
		value := protoreflect.ValueOfMessage(x.OffchainNode.ProtoReflect())
		if !f(fd_LibP2PKeyAndOffchainNode_offchain_node, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_LibP2PKeyAndOffchainNode) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.LibP2pKeyAndOffchainNode.lib_p2p_key":
		return x.LibP2PKey != ""
	case "emissions.v5.LibP2pKeyAndOffchainNode.offchain_node":
		return x.OffchainNode != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.LibP2pKeyAndOffchainNode"))
		}
		panic(fmt.Errorf("message emissions.v5.LibP2pKeyAndOffchainNode does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_LibP2PKeyAndOffchainNode) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.LibP2pKeyAndOffchainNode.lib_p2p_key":
		x.LibP2PKey = ""
	case "emissions.v5.LibP2pKeyAndOffchainNode.offchain_node":
		x.OffchainNode = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.LibP2pKeyAndOffchainNode"))
		}
		panic(fmt.Errorf("message emissions.v5.LibP2pKeyAndOffchainNode does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_LibP2PKeyAndOffchainNode) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.LibP2pKeyAndOffchainNode.lib_p2p_key":
		value := x.LibP2PKey
		return protoreflect.ValueOfString(value)
	case "emissions.v5.LibP2pKeyAndOffchainNode.offchain_node":
		value := x.OffchainNode
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.LibP2pKeyAndOffchainNode"))
		}
		panic(fmt.Errorf("message emissions.v5.LibP2pKeyAndOffchainNode does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_LibP2PKeyAndOffchainNode) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.LibP2pKeyAndOffchainNode.lib_p2p_key":
		x.LibP2PKey = value.Interface().(string)
	case "emissions.v5.LibP2pKeyAndOffchainNode.offchain_node":
		x.OffchainNode = value.Message().Interface().(*v3.OffchainNode)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.LibP2pKeyAndOffchainNode"))
		}
		panic(fmt.Errorf("message emissions.v5.LibP2pKeyAndOffchainNode does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_LibP2PKeyAndOffchainNode) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.LibP2pKeyAndOffchainNode.offchain_node":
		if x.OffchainNode == nil {
			x.OffchainNode = new(v3.OffchainNode)
		}
		return protoreflect.ValueOfMessage(x.OffchainNode.ProtoReflect())
	case "emissions.v5.LibP2pKeyAndOffchainNode.lib_p2p_key":
		panic(fmt.Errorf("field lib_p2p_key of message emissions.v5.LibP2pKeyAndOffchainNode is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.LibP2pKeyAndOffchainNode"))
		}
		panic(fmt.Errorf("message emissions.v5.LibP2pKeyAndOffchainNode does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_LibP2PKeyAndOffchainNode) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.LibP2pKeyAndOffchainNode.lib_p2p_key":
		return protoreflect.ValueOfString("")
	case "emissions.v5.LibP2pKeyAndOffchainNode.offchain_node":
		m := new(v3.OffchainNode)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.LibP2pKeyAndOffchainNode"))
		}
		panic(fmt.Errorf("message emissions.v5.LibP2pKeyAndOffchainNode does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_LibP2PKeyAndOffchainNode) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.LibP2pKeyAndOffchainNode", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_LibP2PKeyAndOffchainNode) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_LibP2PKeyAndOffchainNode) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_LibP2PKeyAndOffchainNode) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_LibP2PKeyAndOffchainNode) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*LibP2PKeyAndOffchainNode)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.LibP2PKey)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.OffchainNode != nil {
			l = options.Size(x.OffchainNode)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*LibP2PKeyAndOffchainNode)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.OffchainNode != nil {
			encoded, err := options.Marshal(x.OffchainNode)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.LibP2PKey) > 0 {
			i -= len(x.LibP2PKey)
			copy(dAtA[i:], x.LibP2PKey)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.LibP2PKey)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*LibP2PKeyAndOffchainNode)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: LibP2PKeyAndOffchainNode: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: LibP2PKeyAndOffchainNode: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field LibP2PKey", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.LibP2PKey = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field OffchainNode", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.OffchainNode == nil {
					x.OffchainNode = &v3.OffchainNode{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.OffchainNode); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_TopicIdAndDec          protoreflect.MessageDescriptor
	fd_TopicIdAndDec_topic_id protoreflect.FieldDescriptor
	fd_TopicIdAndDec_dec      protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_genesis_proto_init()
	md_TopicIdAndDec = File_emissions_v5_genesis_proto.Messages().ByName("TopicIdAndDec")
	fd_TopicIdAndDec_topic_id = md_TopicIdAndDec.Fields().ByName("topic_id")
	fd_TopicIdAndDec_dec = md_TopicIdAndDec.Fields().ByName("dec")
}

var _ protoreflect.Message = (*fastReflection_TopicIdAndDec)(nil)

type fastReflection_TopicIdAndDec TopicIdAndDec

func (x *TopicIdAndDec) ProtoReflect() protoreflect.Message {
	return (*fastReflection_TopicIdAndDec)(x)
}

func (x *TopicIdAndDec) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_genesis_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_TopicIdAndDec_messageType fastReflection_TopicIdAndDec_messageType
var _ protoreflect.MessageType = fastReflection_TopicIdAndDec_messageType{}

type fastReflection_TopicIdAndDec_messageType struct{}

func (x fastReflection_TopicIdAndDec_messageType) Zero() protoreflect.Message {
	return (*fastReflection_TopicIdAndDec)(nil)
}
func (x fastReflection_TopicIdAndDec_messageType) New() protoreflect.Message {
	return new(fastReflection_TopicIdAndDec)
}
func (x fastReflection_TopicIdAndDec_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_TopicIdAndDec
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_TopicIdAndDec) Descriptor() protoreflect.MessageDescriptor {
	return md_TopicIdAndDec
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_TopicIdAndDec) Type() protoreflect.MessageType {
	return _fastReflection_TopicIdAndDec_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_TopicIdAndDec) New() protoreflect.Message {
	return new(fastReflection_TopicIdAndDec)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_TopicIdAndDec) Interface() protoreflect.ProtoMessage {
	return (*TopicIdAndDec)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_TopicIdAndDec) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_TopicIdAndDec_topic_id, value) {
			return
		}
	}
	if x.Dec != "" {
		value := protoreflect.ValueOfString(x.Dec)
		if !f(fd_TopicIdAndDec_dec, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_TopicIdAndDec) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.TopicIdAndDec.topic_id":
		return x.TopicId != uint64(0)
	case "emissions.v5.TopicIdAndDec.dec":
		return x.Dec != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdAndDec"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdAndDec does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TopicIdAndDec) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.TopicIdAndDec.topic_id":
		x.TopicId = uint64(0)
	case "emissions.v5.TopicIdAndDec.dec":
		x.Dec = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdAndDec"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdAndDec does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_TopicIdAndDec) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.TopicIdAndDec.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	case "emissions.v5.TopicIdAndDec.dec":
		value := x.Dec
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdAndDec"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdAndDec does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TopicIdAndDec) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.TopicIdAndDec.topic_id":
		x.TopicId = value.Uint()
	case "emissions.v5.TopicIdAndDec.dec":
		x.Dec = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdAndDec"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdAndDec does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TopicIdAndDec) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.TopicIdAndDec.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.TopicIdAndDec is not mutable"))
	case "emissions.v5.TopicIdAndDec.dec":
		panic(fmt.Errorf("field dec of message emissions.v5.TopicIdAndDec is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdAndDec"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdAndDec does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_TopicIdAndDec) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.TopicIdAndDec.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "emissions.v5.TopicIdAndDec.dec":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdAndDec"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdAndDec does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_TopicIdAndDec) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.TopicIdAndDec", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_TopicIdAndDec) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TopicIdAndDec) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_TopicIdAndDec) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_TopicIdAndDec) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*TopicIdAndDec)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		l = len(x.Dec)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*TopicIdAndDec)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Dec) > 0 {
			i -= len(x.Dec)
			copy(dAtA[i:], x.Dec)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Dec)))
			i--
			dAtA[i] = 0x12
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*TopicIdAndDec)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: TopicIdAndDec: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: TopicIdAndDec: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Dec", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Dec = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_TopicIdBlockHeightInferences              protoreflect.MessageDescriptor
	fd_TopicIdBlockHeightInferences_topic_id     protoreflect.FieldDescriptor
	fd_TopicIdBlockHeightInferences_block_height protoreflect.FieldDescriptor
	fd_TopicIdBlockHeightInferences_inferences   protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_genesis_proto_init()
	md_TopicIdBlockHeightInferences = File_emissions_v5_genesis_proto.Messages().ByName("TopicIdBlockHeightInferences")
	fd_TopicIdBlockHeightInferences_topic_id = md_TopicIdBlockHeightInferences.Fields().ByName("topic_id")
	fd_TopicIdBlockHeightInferences_block_height = md_TopicIdBlockHeightInferences.Fields().ByName("block_height")
	fd_TopicIdBlockHeightInferences_inferences = md_TopicIdBlockHeightInferences.Fields().ByName("inferences")
}

var _ protoreflect.Message = (*fastReflection_TopicIdBlockHeightInferences)(nil)

type fastReflection_TopicIdBlockHeightInferences TopicIdBlockHeightInferences

func (x *TopicIdBlockHeightInferences) ProtoReflect() protoreflect.Message {
	return (*fastReflection_TopicIdBlockHeightInferences)(x)
}

func (x *TopicIdBlockHeightInferences) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_genesis_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_TopicIdBlockHeightInferences_messageType fastReflection_TopicIdBlockHeightInferences_messageType
var _ protoreflect.MessageType = fastReflection_TopicIdBlockHeightInferences_messageType{}

type fastReflection_TopicIdBlockHeightInferences_messageType struct{}

func (x fastReflection_TopicIdBlockHeightInferences_messageType) Zero() protoreflect.Message {
	return (*fastReflection_TopicIdBlockHeightInferences)(nil)
}
func (x fastReflection_TopicIdBlockHeightInferences_messageType) New() protoreflect.Message {
	return new(fastReflection_TopicIdBlockHeightInferences)
}
func (x fastReflection_TopicIdBlockHeightInferences_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_TopicIdBlockHeightInferences
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_TopicIdBlockHeightInferences) Descriptor() protoreflect.MessageDescriptor {
	return md_TopicIdBlockHeightInferences
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_TopicIdBlockHeightInferences) Type() protoreflect.MessageType {
	return _fastReflection_TopicIdBlockHeightInferences_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_TopicIdBlockHeightInferences) New() protoreflect.Message {
	return new(fastReflection_TopicIdBlockHeightInferences)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_TopicIdBlockHeightInferences) Interface() protoreflect.ProtoMessage {
	return (*TopicIdBlockHeightInferences)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_TopicIdBlockHeightInferences) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_TopicIdBlockHeightInferences_topic_id, value) {
			return
		}
	}
	if x.BlockHeight != int64(0) {
		value := protoreflect.ValueOfInt64(x.BlockHeight)
		if !f(fd_TopicIdBlockHeightInferences_block_height, value) {
			return
		}
	}
	if x.Inferences != nil {
		value := protoreflect.ValueOfMessage(x.Inferences.ProtoReflect())
		if !f(fd_TopicIdBlockHeightInferences_inferences, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_TopicIdBlockHeightInferences) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.TopicIdBlockHeightInferences.topic_id":
		return x.TopicId != uint64(0)
	case "emissions.v5.TopicIdBlockHeightInferences.block_height":
		return x.BlockHeight != int64(0)
	case "emissions.v5.TopicIdBlockHeightInferences.inferences":
		return x.Inferences != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdBlockHeightInferences"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdBlockHeightInferences does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TopicIdBlockHeightInferences) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.TopicIdBlockHeightInferences.topic_id":
		x.TopicId = uint64(0)
	case "emissions.v5.TopicIdBlockHeightInferences.block_height":
		x.BlockHeight = int64(0)
	case "emissions.v5.TopicIdBlockHeightInferences.inferences":
		x.Inferences = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdBlockHeightInferences"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdBlockHeightInferences does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_TopicIdBlockHeightInferences) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.TopicIdBlockHeightInferences.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	case "emissions.v5.TopicIdBlockHeightInferences.block_height":
		value := x.BlockHeight
		return protoreflect.ValueOfInt64(value)
	case "emissions.v5.TopicIdBlockHeightInferences.inferences":
		value := x.Inferences
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdBlockHeightInferences"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdBlockHeightInferences does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TopicIdBlockHeightInferences) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.TopicIdBlockHeightInferences.topic_id":
		x.TopicId = value.Uint()
	case "emissions.v5.TopicIdBlockHeightInferences.block_height":
		x.BlockHeight = value.Int()
	case "emissions.v5.TopicIdBlockHeightInferences.inferences":
		x.Inferences = value.Message().Interface().(*v3.Inferences)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdBlockHeightInferences"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdBlockHeightInferences does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TopicIdBlockHeightInferences) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.TopicIdBlockHeightInferences.inferences":
		if x.Inferences == nil {
			x.Inferences = new(v3.Inferences)
		}
		return protoreflect.ValueOfMessage(x.Inferences.ProtoReflect())
	case "emissions.v5.TopicIdBlockHeightInferences.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.TopicIdBlockHeightInferences is not mutable"))
	case "emissions.v5.TopicIdBlockHeightInferences.block_height":
		panic(fmt.Errorf("field block_height of message emissions.v5.TopicIdBlockHeightInferences is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdBlockHeightInferences"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdBlockHeightInferences does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_TopicIdBlockHeightInferences) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.TopicIdBlockHeightInferences.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "emissions.v5.TopicIdBlockHeightInferences.block_height":
		return protoreflect.ValueOfInt64(int64(0))
	case "emissions.v5.TopicIdBlockHeightInferences.inferences":
		m := new(v3.Inferences)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdBlockHeightInferences"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdBlockHeightInferences does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_TopicIdBlockHeightInferences) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.TopicIdBlockHeightInferences", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_TopicIdBlockHeightInferences) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TopicIdBlockHeightInferences) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_TopicIdBlockHeightInferences) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_TopicIdBlockHeightInferences) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*TopicIdBlockHeightInferences)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		if x.BlockHeight != 0 {
			n += 1 + runtime.Sov(uint64(x.BlockHeight))
		}
		if x.Inferences != nil {
			l = options.Size(x.Inferences)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*TopicIdBlockHeightInferences)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Inferences != nil {
			encoded, err := options.Marshal(x.Inferences)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x1a
		}
		if x.BlockHeight != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.BlockHeight))
			i--
			dAtA[i] = 0x10
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*TopicIdBlockHeightInferences)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: TopicIdBlockHeightInferences: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: TopicIdBlockHeightInferences: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BlockHeight", wireType)
				}
				x.BlockHeight = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.BlockHeight |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Inferences", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Inferences == nil {
					x.Inferences = &v3.Inferences{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Inferences); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_TopicIdBlockHeightForecasts              protoreflect.MessageDescriptor
	fd_TopicIdBlockHeightForecasts_topic_id     protoreflect.FieldDescriptor
	fd_TopicIdBlockHeightForecasts_block_height protoreflect.FieldDescriptor
	fd_TopicIdBlockHeightForecasts_forecasts    protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_genesis_proto_init()
	md_TopicIdBlockHeightForecasts = File_emissions_v5_genesis_proto.Messages().ByName("TopicIdBlockHeightForecasts")
	fd_TopicIdBlockHeightForecasts_topic_id = md_TopicIdBlockHeightForecasts.Fields().ByName("topic_id")
	fd_TopicIdBlockHeightForecasts_block_height = md_TopicIdBlockHeightForecasts.Fields().ByName("block_height")
	fd_TopicIdBlockHeightForecasts_forecasts = md_TopicIdBlockHeightForecasts.Fields().ByName("forecasts")
}

var _ protoreflect.Message = (*fastReflection_TopicIdBlockHeightForecasts)(nil)

type fastReflection_TopicIdBlockHeightForecasts TopicIdBlockHeightForecasts

func (x *TopicIdBlockHeightForecasts) ProtoReflect() protoreflect.Message {
	return (*fastReflection_TopicIdBlockHeightForecasts)(x)
}

func (x *TopicIdBlockHeightForecasts) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_genesis_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_TopicIdBlockHeightForecasts_messageType fastReflection_TopicIdBlockHeightForecasts_messageType
var _ protoreflect.MessageType = fastReflection_TopicIdBlockHeightForecasts_messageType{}

type fastReflection_TopicIdBlockHeightForecasts_messageType struct{}

func (x fastReflection_TopicIdBlockHeightForecasts_messageType) Zero() protoreflect.Message {
	return (*fastReflection_TopicIdBlockHeightForecasts)(nil)
}
func (x fastReflection_TopicIdBlockHeightForecasts_messageType) New() protoreflect.Message {
	return new(fastReflection_TopicIdBlockHeightForecasts)
}
func (x fastReflection_TopicIdBlockHeightForecasts_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_TopicIdBlockHeightForecasts
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_TopicIdBlockHeightForecasts) Descriptor() protoreflect.MessageDescriptor {
	return md_TopicIdBlockHeightForecasts
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_TopicIdBlockHeightForecasts) Type() protoreflect.MessageType {
	return _fastReflection_TopicIdBlockHeightForecasts_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_TopicIdBlockHeightForecasts) New() protoreflect.Message {
	return new(fastReflection_TopicIdBlockHeightForecasts)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_TopicIdBlockHeightForecasts) Interface() protoreflect.ProtoMessage {
	return (*TopicIdBlockHeightForecasts)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_TopicIdBlockHeightForecasts) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_TopicIdBlockHeightForecasts_topic_id, value) {
			return
		}
	}
	if x.BlockHeight != int64(0) {
		value := protoreflect.ValueOfInt64(x.BlockHeight)
		if !f(fd_TopicIdBlockHeightForecasts_block_height, value) {
			return
		}
	}
	if x.Forecasts != nil {
		value := protoreflect.ValueOfMessage(x.Forecasts.ProtoReflect())
		if !f(fd_TopicIdBlockHeightForecasts_forecasts, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_TopicIdBlockHeightForecasts) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.TopicIdBlockHeightForecasts.topic_id":
		return x.TopicId != uint64(0)
	case "emissions.v5.TopicIdBlockHeightForecasts.block_height":
		return x.BlockHeight != int64(0)
	case "emissions.v5.TopicIdBlockHeightForecasts.forecasts":
		return x.Forecasts != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdBlockHeightForecasts"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdBlockHeightForecasts does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TopicIdBlockHeightForecasts) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.TopicIdBlockHeightForecasts.topic_id":
		x.TopicId = uint64(0)
	case "emissions.v5.TopicIdBlockHeightForecasts.block_height":
		x.BlockHeight = int64(0)
	case "emissions.v5.TopicIdBlockHeightForecasts.forecasts":
		x.Forecasts = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdBlockHeightForecasts"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdBlockHeightForecasts does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_TopicIdBlockHeightForecasts) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.TopicIdBlockHeightForecasts.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	case "emissions.v5.TopicIdBlockHeightForecasts.block_height":
		value := x.BlockHeight
		return protoreflect.ValueOfInt64(value)
	case "emissions.v5.TopicIdBlockHeightForecasts.forecasts":
		value := x.Forecasts
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdBlockHeightForecasts"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdBlockHeightForecasts does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TopicIdBlockHeightForecasts) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.TopicIdBlockHeightForecasts.topic_id":
		x.TopicId = value.Uint()
	case "emissions.v5.TopicIdBlockHeightForecasts.block_height":
		x.BlockHeight = value.Int()
	case "emissions.v5.TopicIdBlockHeightForecasts.forecasts":
		x.Forecasts = value.Message().Interface().(*v3.Forecasts)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdBlockHeightForecasts"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdBlockHeightForecasts does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TopicIdBlockHeightForecasts) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.TopicIdBlockHeightForecasts.forecasts":
		if x.Forecasts == nil {
			x.Forecasts = new(v3.Forecasts)
		}
		return protoreflect.ValueOfMessage(x.Forecasts.ProtoReflect())
	case "emissions.v5.TopicIdBlockHeightForecasts.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.TopicIdBlockHeightForecasts is not mutable"))
	case "emissions.v5.TopicIdBlockHeightForecasts.block_height":
		panic(fmt.Errorf("field block_height of message emissions.v5.TopicIdBlockHeightForecasts is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdBlockHeightForecasts"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdBlockHeightForecasts does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_TopicIdBlockHeightForecasts) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.TopicIdBlockHeightForecasts.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "emissions.v5.TopicIdBlockHeightForecasts.block_height":
		return protoreflect.ValueOfInt64(int64(0))
	case "emissions.v5.TopicIdBlockHeightForecasts.forecasts":
		m := new(v3.Forecasts)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdBlockHeightForecasts"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdBlockHeightForecasts does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_TopicIdBlockHeightForecasts) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.TopicIdBlockHeightForecasts", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_TopicIdBlockHeightForecasts) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TopicIdBlockHeightForecasts) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_TopicIdBlockHeightForecasts) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_TopicIdBlockHeightForecasts) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*TopicIdBlockHeightForecasts)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		if x.BlockHeight != 0 {
			n += 1 + runtime.Sov(uint64(x.BlockHeight))
		}
		if x.Forecasts != nil {
			l = options.Size(x.Forecasts)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*TopicIdBlockHeightForecasts)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Forecasts != nil {
			encoded, err := options.Marshal(x.Forecasts)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x1a
		}
		if x.BlockHeight != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.BlockHeight))
			i--
			dAtA[i] = 0x10
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*TopicIdBlockHeightForecasts)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: TopicIdBlockHeightForecasts: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: TopicIdBlockHeightForecasts: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BlockHeight", wireType)
				}
				x.BlockHeight = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.BlockHeight |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Forecasts", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Forecasts == nil {
					x.Forecasts = &v3.Forecasts{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Forecasts); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_TopicIdBlockHeightReputerValueBundles                       protoreflect.MessageDescriptor
	fd_TopicIdBlockHeightReputerValueBundles_topic_id              protoreflect.FieldDescriptor
	fd_TopicIdBlockHeightReputerValueBundles_block_height          protoreflect.FieldDescriptor
	fd_TopicIdBlockHeightReputerValueBundles_reputer_value_bundles protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_genesis_proto_init()
	md_TopicIdBlockHeightReputerValueBundles = File_emissions_v5_genesis_proto.Messages().ByName("TopicIdBlockHeightReputerValueBundles")
	fd_TopicIdBlockHeightReputerValueBundles_topic_id = md_TopicIdBlockHeightReputerValueBundles.Fields().ByName("topic_id")
	fd_TopicIdBlockHeightReputerValueBundles_block_height = md_TopicIdBlockHeightReputerValueBundles.Fields().ByName("block_height")
	fd_TopicIdBlockHeightReputerValueBundles_reputer_value_bundles = md_TopicIdBlockHeightReputerValueBundles.Fields().ByName("reputer_value_bundles")
}

var _ protoreflect.Message = (*fastReflection_TopicIdBlockHeightReputerValueBundles)(nil)

type fastReflection_TopicIdBlockHeightReputerValueBundles TopicIdBlockHeightReputerValueBundles

func (x *TopicIdBlockHeightReputerValueBundles) ProtoReflect() protoreflect.Message {
	return (*fastReflection_TopicIdBlockHeightReputerValueBundles)(x)
}

func (x *TopicIdBlockHeightReputerValueBundles) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_genesis_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_TopicIdBlockHeightReputerValueBundles_messageType fastReflection_TopicIdBlockHeightReputerValueBundles_messageType
var _ protoreflect.MessageType = fastReflection_TopicIdBlockHeightReputerValueBundles_messageType{}

type fastReflection_TopicIdBlockHeightReputerValueBundles_messageType struct{}

func (x fastReflection_TopicIdBlockHeightReputerValueBundles_messageType) Zero() protoreflect.Message {
	return (*fastReflection_TopicIdBlockHeightReputerValueBundles)(nil)
}
func (x fastReflection_TopicIdBlockHeightReputerValueBundles_messageType) New() protoreflect.Message {
	return new(fastReflection_TopicIdBlockHeightReputerValueBundles)
}
func (x fastReflection_TopicIdBlockHeightReputerValueBundles_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_TopicIdBlockHeightReputerValueBundles
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_TopicIdBlockHeightReputerValueBundles) Descriptor() protoreflect.MessageDescriptor {
	return md_TopicIdBlockHeightReputerValueBundles
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_TopicIdBlockHeightReputerValueBundles) Type() protoreflect.MessageType {
	return _fastReflection_TopicIdBlockHeightReputerValueBundles_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_TopicIdBlockHeightReputerValueBundles) New() protoreflect.Message {
	return new(fastReflection_TopicIdBlockHeightReputerValueBundles)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_TopicIdBlockHeightReputerValueBundles) Interface() protoreflect.ProtoMessage {
	return (*TopicIdBlockHeightReputerValueBundles)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_TopicIdBlockHeightReputerValueBundles) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_TopicIdBlockHeightReputerValueBundles_topic_id, value) {
			return
		}
	}
	if x.BlockHeight != int64(0) {
		value := protoreflect.ValueOfInt64(x.BlockHeight)
		if !f(fd_TopicIdBlockHeightReputerValueBundles_block_height, value) {
			return
		}
	}
	if x.ReputerValueBundles != nil {
		value := protoreflect.ValueOfMessage(x.ReputerValueBundles.ProtoReflect())
		if !f(fd_TopicIdBlockHeightReputerValueBundles_reputer_value_bundles, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_TopicIdBlockHeightReputerValueBundles) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.TopicIdBlockHeightReputerValueBundles.topic_id":
		return x.TopicId != uint64(0)
	case "emissions.v5.TopicIdBlockHeightReputerValueBundles.block_height":
		return x.BlockHeight != int64(0)
	case "emissions.v5.TopicIdBlockHeightReputerValueBundles.reputer_value_bundles":
		return x.ReputerValueBundles != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdBlockHeightReputerValueBundles"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdBlockHeightReputerValueBundles does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TopicIdBlockHeightReputerValueBundles) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.TopicIdBlockHeightReputerValueBundles.topic_id":
		x.TopicId = uint64(0)
	case "emissions.v5.TopicIdBlockHeightReputerValueBundles.block_height":
		x.BlockHeight = int64(0)
	case "emissions.v5.TopicIdBlockHeightReputerValueBundles.reputer_value_bundles":
		x.ReputerValueBundles = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdBlockHeightReputerValueBundles"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdBlockHeightReputerValueBundles does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_TopicIdBlockHeightReputerValueBundles) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.TopicIdBlockHeightReputerValueBundles.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	case "emissions.v5.TopicIdBlockHeightReputerValueBundles.block_height":
		value := x.BlockHeight
		return protoreflect.ValueOfInt64(value)
	case "emissions.v5.TopicIdBlockHeightReputerValueBundles.reputer_value_bundles":
		value := x.ReputerValueBundles
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdBlockHeightReputerValueBundles"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdBlockHeightReputerValueBundles does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TopicIdBlockHeightReputerValueBundles) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.TopicIdBlockHeightReputerValueBundles.topic_id":
		x.TopicId = value.Uint()
	case "emissions.v5.TopicIdBlockHeightReputerValueBundles.block_height":
		x.BlockHeight = value.Int()
	case "emissions.v5.TopicIdBlockHeightReputerValueBundles.reputer_value_bundles":
		x.ReputerValueBundles = value.Message().Interface().(*v3.ReputerValueBundles)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdBlockHeightReputerValueBundles"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdBlockHeightReputerValueBundles does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TopicIdBlockHeightReputerValueBundles) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.TopicIdBlockHeightReputerValueBundles.reputer_value_bundles":
		if x.ReputerValueBundles == nil {
			x.ReputerValueBundles = new(v3.ReputerValueBundles)
		}
		return protoreflect.ValueOfMessage(x.ReputerValueBundles.ProtoReflect())
	case "emissions.v5.TopicIdBlockHeightReputerValueBundles.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.TopicIdBlockHeightReputerValueBundles is not mutable"))
	case "emissions.v5.TopicIdBlockHeightReputerValueBundles.block_height":
		panic(fmt.Errorf("field block_height of message emissions.v5.TopicIdBlockHeightReputerValueBundles is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdBlockHeightReputerValueBundles"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdBlockHeightReputerValueBundles does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_TopicIdBlockHeightReputerValueBundles) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.TopicIdBlockHeightReputerValueBundles.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "emissions.v5.TopicIdBlockHeightReputerValueBundles.block_height":
		return protoreflect.ValueOfInt64(int64(0))
	case "emissions.v5.TopicIdBlockHeightReputerValueBundles.reputer_value_bundles":
		m := new(v3.ReputerValueBundles)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdBlockHeightReputerValueBundles"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdBlockHeightReputerValueBundles does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_TopicIdBlockHeightReputerValueBundles) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.TopicIdBlockHeightReputerValueBundles", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_TopicIdBlockHeightReputerValueBundles) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TopicIdBlockHeightReputerValueBundles) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_TopicIdBlockHeightReputerValueBundles) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_TopicIdBlockHeightReputerValueBundles) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*TopicIdBlockHeightReputerValueBundles)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		if x.BlockHeight != 0 {
			n += 1 + runtime.Sov(uint64(x.BlockHeight))
		}
		if x.ReputerValueBundles != nil {
			l = options.Size(x.ReputerValueBundles)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*TopicIdBlockHeightReputerValueBundles)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.ReputerValueBundles != nil {
			encoded, err := options.Marshal(x.ReputerValueBundles)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x1a
		}
		if x.BlockHeight != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.BlockHeight))
			i--
			dAtA[i] = 0x10
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*TopicIdBlockHeightReputerValueBundles)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: TopicIdBlockHeightReputerValueBundles: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: TopicIdBlockHeightReputerValueBundles: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BlockHeight", wireType)
				}
				x.BlockHeight = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.BlockHeight |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ReputerValueBundles", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.ReputerValueBundles == nil {
					x.ReputerValueBundles = &v3.ReputerValueBundles{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.ReputerValueBundles); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_TopicIdBlockHeightValueBundles              protoreflect.MessageDescriptor
	fd_TopicIdBlockHeightValueBundles_topic_id     protoreflect.FieldDescriptor
	fd_TopicIdBlockHeightValueBundles_block_height protoreflect.FieldDescriptor
	fd_TopicIdBlockHeightValueBundles_value_bundle protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_genesis_proto_init()
	md_TopicIdBlockHeightValueBundles = File_emissions_v5_genesis_proto.Messages().ByName("TopicIdBlockHeightValueBundles")
	fd_TopicIdBlockHeightValueBundles_topic_id = md_TopicIdBlockHeightValueBundles.Fields().ByName("topic_id")
	fd_TopicIdBlockHeightValueBundles_block_height = md_TopicIdBlockHeightValueBundles.Fields().ByName("block_height")
	fd_TopicIdBlockHeightValueBundles_value_bundle = md_TopicIdBlockHeightValueBundles.Fields().ByName("value_bundle")
}

var _ protoreflect.Message = (*fastReflection_TopicIdBlockHeightValueBundles)(nil)

type fastReflection_TopicIdBlockHeightValueBundles TopicIdBlockHeightValueBundles

func (x *TopicIdBlockHeightValueBundles) ProtoReflect() protoreflect.Message {
	return (*fastReflection_TopicIdBlockHeightValueBundles)(x)
}

func (x *TopicIdBlockHeightValueBundles) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_genesis_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_TopicIdBlockHeightValueBundles_messageType fastReflection_TopicIdBlockHeightValueBundles_messageType
var _ protoreflect.MessageType = fastReflection_TopicIdBlockHeightValueBundles_messageType{}

type fastReflection_TopicIdBlockHeightValueBundles_messageType struct{}

func (x fastReflection_TopicIdBlockHeightValueBundles_messageType) Zero() protoreflect.Message {
	return (*fastReflection_TopicIdBlockHeightValueBundles)(nil)
}
func (x fastReflection_TopicIdBlockHeightValueBundles_messageType) New() protoreflect.Message {
	return new(fastReflection_TopicIdBlockHeightValueBundles)
}
func (x fastReflection_TopicIdBlockHeightValueBundles_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_TopicIdBlockHeightValueBundles
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_TopicIdBlockHeightValueBundles) Descriptor() protoreflect.MessageDescriptor {
	return md_TopicIdBlockHeightValueBundles
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_TopicIdBlockHeightValueBundles) Type() protoreflect.MessageType {
	return _fastReflection_TopicIdBlockHeightValueBundles_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_TopicIdBlockHeightValueBundles) New() protoreflect.Message {
	return new(fastReflection_TopicIdBlockHeightValueBundles)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_TopicIdBlockHeightValueBundles) Interface() protoreflect.ProtoMessage {
	return (*TopicIdBlockHeightValueBundles)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_TopicIdBlockHeightValueBundles) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_TopicIdBlockHeightValueBundles_topic_id, value) {
			return
		}
	}
	if x.BlockHeight != int64(0) {
		value := protoreflect.ValueOfInt64(x.BlockHeight)
		if !f(fd_TopicIdBlockHeightValueBundles_block_height, value) {
			return
		}
	}
	if x.ValueBundle != nil {
		value := protoreflect.ValueOfMessage(x.ValueBundle.ProtoReflect())
		if !f(fd_TopicIdBlockHeightValueBundles_value_bundle, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_TopicIdBlockHeightValueBundles) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.TopicIdBlockHeightValueBundles.topic_id":
		return x.TopicId != uint64(0)
	case "emissions.v5.TopicIdBlockHeightValueBundles.block_height":
		return x.BlockHeight != int64(0)
	case "emissions.v5.TopicIdBlockHeightValueBundles.value_bundle":
		return x.ValueBundle != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdBlockHeightValueBundles"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdBlockHeightValueBundles does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TopicIdBlockHeightValueBundles) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.TopicIdBlockHeightValueBundles.topic_id":
		x.TopicId = uint64(0)
	case "emissions.v5.TopicIdBlockHeightValueBundles.block_height":
		x.BlockHeight = int64(0)
	case "emissions.v5.TopicIdBlockHeightValueBundles.value_bundle":
		x.ValueBundle = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdBlockHeightValueBundles"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdBlockHeightValueBundles does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_TopicIdBlockHeightValueBundles) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.TopicIdBlockHeightValueBundles.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	case "emissions.v5.TopicIdBlockHeightValueBundles.block_height":
		value := x.BlockHeight
		return protoreflect.ValueOfInt64(value)
	case "emissions.v5.TopicIdBlockHeightValueBundles.value_bundle":
		value := x.ValueBundle
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdBlockHeightValueBundles"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdBlockHeightValueBundles does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TopicIdBlockHeightValueBundles) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.TopicIdBlockHeightValueBundles.topic_id":
		x.TopicId = value.Uint()
	case "emissions.v5.TopicIdBlockHeightValueBundles.block_height":
		x.BlockHeight = value.Int()
	case "emissions.v5.TopicIdBlockHeightValueBundles.value_bundle":
		x.ValueBundle = value.Message().Interface().(*v3.ValueBundle)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdBlockHeightValueBundles"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdBlockHeightValueBundles does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TopicIdBlockHeightValueBundles) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.TopicIdBlockHeightValueBundles.value_bundle":
		if x.ValueBundle == nil {
			x.ValueBundle = new(v3.ValueBundle)
		}
		return protoreflect.ValueOfMessage(x.ValueBundle.ProtoReflect())
	case "emissions.v5.TopicIdBlockHeightValueBundles.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.TopicIdBlockHeightValueBundles is not mutable"))
	case "emissions.v5.TopicIdBlockHeightValueBundles.block_height":
		panic(fmt.Errorf("field block_height of message emissions.v5.TopicIdBlockHeightValueBundles is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdBlockHeightValueBundles"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdBlockHeightValueBundles does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_TopicIdBlockHeightValueBundles) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.TopicIdBlockHeightValueBundles.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "emissions.v5.TopicIdBlockHeightValueBundles.block_height":
		return protoreflect.ValueOfInt64(int64(0))
	case "emissions.v5.TopicIdBlockHeightValueBundles.value_bundle":
		m := new(v3.ValueBundle)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdBlockHeightValueBundles"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdBlockHeightValueBundles does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_TopicIdBlockHeightValueBundles) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.TopicIdBlockHeightValueBundles", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_TopicIdBlockHeightValueBundles) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TopicIdBlockHeightValueBundles) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_TopicIdBlockHeightValueBundles) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_TopicIdBlockHeightValueBundles) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*TopicIdBlockHeightValueBundles)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		if x.BlockHeight != 0 {
			n += 1 + runtime.Sov(uint64(x.BlockHeight))
		}
		if x.ValueBundle != nil {
			l = options.Size(x.ValueBundle)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*TopicIdBlockHeightValueBundles)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.ValueBundle != nil {
			encoded, err := options.Marshal(x.ValueBundle)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x1a
		}
		if x.BlockHeight != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.BlockHeight))
			i--
			dAtA[i] = 0x10
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*TopicIdBlockHeightValueBundles)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: TopicIdBlockHeightValueBundles: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: TopicIdBlockHeightValueBundles: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BlockHeight", wireType)
				}
				x.BlockHeight = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.BlockHeight |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ValueBundle", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.ValueBundle == nil {
					x.ValueBundle = &v3.ValueBundle{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.ValueBundle); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_TopicIdAndNonces          protoreflect.MessageDescriptor
	fd_TopicIdAndNonces_topic_id protoreflect.FieldDescriptor
	fd_TopicIdAndNonces_nonces   protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_genesis_proto_init()
	md_TopicIdAndNonces = File_emissions_v5_genesis_proto.Messages().ByName("TopicIdAndNonces")
	fd_TopicIdAndNonces_topic_id = md_TopicIdAndNonces.Fields().ByName("topic_id")
	fd_TopicIdAndNonces_nonces = md_TopicIdAndNonces.Fields().ByName("nonces")
}

var _ protoreflect.Message = (*fastReflection_TopicIdAndNonces)(nil)

type fastReflection_TopicIdAndNonces TopicIdAndNonces

func (x *TopicIdAndNonces) ProtoReflect() protoreflect.Message {
	return (*fastReflection_TopicIdAndNonces)(x)
}

func (x *TopicIdAndNonces) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_genesis_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_TopicIdAndNonces_messageType fastReflection_TopicIdAndNonces_messageType
var _ protoreflect.MessageType = fastReflection_TopicIdAndNonces_messageType{}

type fastReflection_TopicIdAndNonces_messageType struct{}

func (x fastReflection_TopicIdAndNonces_messageType) Zero() protoreflect.Message {
	return (*fastReflection_TopicIdAndNonces)(nil)
}
func (x fastReflection_TopicIdAndNonces_messageType) New() protoreflect.Message {
	return new(fastReflection_TopicIdAndNonces)
}
func (x fastReflection_TopicIdAndNonces_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_TopicIdAndNonces
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_TopicIdAndNonces) Descriptor() protoreflect.MessageDescriptor {
	return md_TopicIdAndNonces
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_TopicIdAndNonces) Type() protoreflect.MessageType {
	return _fastReflection_TopicIdAndNonces_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_TopicIdAndNonces) New() protoreflect.Message {
	return new(fastReflection_TopicIdAndNonces)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_TopicIdAndNonces) Interface() protoreflect.ProtoMessage {
	return (*TopicIdAndNonces)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_TopicIdAndNonces) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_TopicIdAndNonces_topic_id, value) {
			return
		}
	}
	if x.Nonces != nil {
		value := protoreflect.ValueOfMessage(x.Nonces.ProtoReflect())
		if !f(fd_TopicIdAndNonces_nonces, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_TopicIdAndNonces) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.TopicIdAndNonces.topic_id":
		return x.TopicId != uint64(0)
	case "emissions.v5.TopicIdAndNonces.nonces":
		return x.Nonces != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdAndNonces"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdAndNonces does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TopicIdAndNonces) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.TopicIdAndNonces.topic_id":
		x.TopicId = uint64(0)
	case "emissions.v5.TopicIdAndNonces.nonces":
		x.Nonces = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdAndNonces"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdAndNonces does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_TopicIdAndNonces) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.TopicIdAndNonces.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	case "emissions.v5.TopicIdAndNonces.nonces":
		value := x.Nonces
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdAndNonces"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdAndNonces does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TopicIdAndNonces) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.TopicIdAndNonces.topic_id":
		x.TopicId = value.Uint()
	case "emissions.v5.TopicIdAndNonces.nonces":
		x.Nonces = value.Message().Interface().(*v3.Nonces)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdAndNonces"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdAndNonces does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TopicIdAndNonces) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.TopicIdAndNonces.nonces":
		if x.Nonces == nil {
			x.Nonces = new(v3.Nonces)
		}
		return protoreflect.ValueOfMessage(x.Nonces.ProtoReflect())
	case "emissions.v5.TopicIdAndNonces.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.TopicIdAndNonces is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdAndNonces"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdAndNonces does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_TopicIdAndNonces) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.TopicIdAndNonces.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "emissions.v5.TopicIdAndNonces.nonces":
		m := new(v3.Nonces)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdAndNonces"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdAndNonces does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_TopicIdAndNonces) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.TopicIdAndNonces", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_TopicIdAndNonces) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TopicIdAndNonces) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_TopicIdAndNonces) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_TopicIdAndNonces) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*TopicIdAndNonces)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		if x.Nonces != nil {
			l = options.Size(x.Nonces)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*TopicIdAndNonces)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Nonces != nil {
			encoded, err := options.Marshal(x.Nonces)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x12
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*TopicIdAndNonces)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: TopicIdAndNonces: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: TopicIdAndNonces: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Nonces", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Nonces == nil {
					x.Nonces = &v3.Nonces{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Nonces); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_TopicIdAndReputerRequestNonces                        protoreflect.MessageDescriptor
	fd_TopicIdAndReputerRequestNonces_topic_id               protoreflect.FieldDescriptor
	fd_TopicIdAndReputerRequestNonces_reputer_request_nonces protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_genesis_proto_init()
	md_TopicIdAndReputerRequestNonces = File_emissions_v5_genesis_proto.Messages().ByName("TopicIdAndReputerRequestNonces")
	fd_TopicIdAndReputerRequestNonces_topic_id = md_TopicIdAndReputerRequestNonces.Fields().ByName("topic_id")
	fd_TopicIdAndReputerRequestNonces_reputer_request_nonces = md_TopicIdAndReputerRequestNonces.Fields().ByName("reputer_request_nonces")
}

var _ protoreflect.Message = (*fastReflection_TopicIdAndReputerRequestNonces)(nil)

type fastReflection_TopicIdAndReputerRequestNonces TopicIdAndReputerRequestNonces

func (x *TopicIdAndReputerRequestNonces) ProtoReflect() protoreflect.Message {
	return (*fastReflection_TopicIdAndReputerRequestNonces)(x)
}

func (x *TopicIdAndReputerRequestNonces) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_genesis_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_TopicIdAndReputerRequestNonces_messageType fastReflection_TopicIdAndReputerRequestNonces_messageType
var _ protoreflect.MessageType = fastReflection_TopicIdAndReputerRequestNonces_messageType{}

type fastReflection_TopicIdAndReputerRequestNonces_messageType struct{}

func (x fastReflection_TopicIdAndReputerRequestNonces_messageType) Zero() protoreflect.Message {
	return (*fastReflection_TopicIdAndReputerRequestNonces)(nil)
}
func (x fastReflection_TopicIdAndReputerRequestNonces_messageType) New() protoreflect.Message {
	return new(fastReflection_TopicIdAndReputerRequestNonces)
}
func (x fastReflection_TopicIdAndReputerRequestNonces_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_TopicIdAndReputerRequestNonces
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_TopicIdAndReputerRequestNonces) Descriptor() protoreflect.MessageDescriptor {
	return md_TopicIdAndReputerRequestNonces
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_TopicIdAndReputerRequestNonces) Type() protoreflect.MessageType {
	return _fastReflection_TopicIdAndReputerRequestNonces_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_TopicIdAndReputerRequestNonces) New() protoreflect.Message {
	return new(fastReflection_TopicIdAndReputerRequestNonces)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_TopicIdAndReputerRequestNonces) Interface() protoreflect.ProtoMessage {
	return (*TopicIdAndReputerRequestNonces)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_TopicIdAndReputerRequestNonces) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_TopicIdAndReputerRequestNonces_topic_id, value) {
			return
		}
	}
	if x.ReputerRequestNonces != nil {
		value := protoreflect.ValueOfMessage(x.ReputerRequestNonces.ProtoReflect())
		if !f(fd_TopicIdAndReputerRequestNonces_reputer_request_nonces, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_TopicIdAndReputerRequestNonces) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.TopicIdAndReputerRequestNonces.topic_id":
		return x.TopicId != uint64(0)
	case "emissions.v5.TopicIdAndReputerRequestNonces.reputer_request_nonces":
		return x.ReputerRequestNonces != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdAndReputerRequestNonces"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdAndReputerRequestNonces does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TopicIdAndReputerRequestNonces) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.TopicIdAndReputerRequestNonces.topic_id":
		x.TopicId = uint64(0)
	case "emissions.v5.TopicIdAndReputerRequestNonces.reputer_request_nonces":
		x.ReputerRequestNonces = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdAndReputerRequestNonces"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdAndReputerRequestNonces does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_TopicIdAndReputerRequestNonces) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.TopicIdAndReputerRequestNonces.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	case "emissions.v5.TopicIdAndReputerRequestNonces.reputer_request_nonces":
		value := x.ReputerRequestNonces
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdAndReputerRequestNonces"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdAndReputerRequestNonces does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TopicIdAndReputerRequestNonces) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.TopicIdAndReputerRequestNonces.topic_id":
		x.TopicId = value.Uint()
	case "emissions.v5.TopicIdAndReputerRequestNonces.reputer_request_nonces":
		x.ReputerRequestNonces = value.Message().Interface().(*v3.ReputerRequestNonces)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdAndReputerRequestNonces"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdAndReputerRequestNonces does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TopicIdAndReputerRequestNonces) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.TopicIdAndReputerRequestNonces.reputer_request_nonces":
		if x.ReputerRequestNonces == nil {
			x.ReputerRequestNonces = new(v3.ReputerRequestNonces)
		}
		return protoreflect.ValueOfMessage(x.ReputerRequestNonces.ProtoReflect())
	case "emissions.v5.TopicIdAndReputerRequestNonces.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.TopicIdAndReputerRequestNonces is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdAndReputerRequestNonces"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdAndReputerRequestNonces does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_TopicIdAndReputerRequestNonces) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.TopicIdAndReputerRequestNonces.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "emissions.v5.TopicIdAndReputerRequestNonces.reputer_request_nonces":
		m := new(v3.ReputerRequestNonces)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdAndReputerRequestNonces"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdAndReputerRequestNonces does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_TopicIdAndReputerRequestNonces) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.TopicIdAndReputerRequestNonces", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_TopicIdAndReputerRequestNonces) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TopicIdAndReputerRequestNonces) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_TopicIdAndReputerRequestNonces) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_TopicIdAndReputerRequestNonces) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*TopicIdAndReputerRequestNonces)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		if x.ReputerRequestNonces != nil {
			l = options.Size(x.ReputerRequestNonces)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*TopicIdAndReputerRequestNonces)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.ReputerRequestNonces != nil {
			encoded, err := options.Marshal(x.ReputerRequestNonces)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x12
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*TopicIdAndReputerRequestNonces)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: TopicIdAndReputerRequestNonces: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: TopicIdAndReputerRequestNonces: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ReputerRequestNonces", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.ReputerRequestNonces == nil {
					x.ReputerRequestNonces = &v3.ReputerRequestNonces{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.ReputerRequestNonces); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_TopicIdActorIdTimeStampedValue                   protoreflect.MessageDescriptor
	fd_TopicIdActorIdTimeStampedValue_topic_id          protoreflect.FieldDescriptor
	fd_TopicIdActorIdTimeStampedValue_actor_id          protoreflect.FieldDescriptor
	fd_TopicIdActorIdTimeStampedValue_timestamped_value protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_genesis_proto_init()
	md_TopicIdActorIdTimeStampedValue = File_emissions_v5_genesis_proto.Messages().ByName("TopicIdActorIdTimeStampedValue")
	fd_TopicIdActorIdTimeStampedValue_topic_id = md_TopicIdActorIdTimeStampedValue.Fields().ByName("topic_id")
	fd_TopicIdActorIdTimeStampedValue_actor_id = md_TopicIdActorIdTimeStampedValue.Fields().ByName("actor_id")
	fd_TopicIdActorIdTimeStampedValue_timestamped_value = md_TopicIdActorIdTimeStampedValue.Fields().ByName("timestamped_value")
}

var _ protoreflect.Message = (*fastReflection_TopicIdActorIdTimeStampedValue)(nil)

type fastReflection_TopicIdActorIdTimeStampedValue TopicIdActorIdTimeStampedValue

func (x *TopicIdActorIdTimeStampedValue) ProtoReflect() protoreflect.Message {
	return (*fastReflection_TopicIdActorIdTimeStampedValue)(x)
}

func (x *TopicIdActorIdTimeStampedValue) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_genesis_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_TopicIdActorIdTimeStampedValue_messageType fastReflection_TopicIdActorIdTimeStampedValue_messageType
var _ protoreflect.MessageType = fastReflection_TopicIdActorIdTimeStampedValue_messageType{}

type fastReflection_TopicIdActorIdTimeStampedValue_messageType struct{}

func (x fastReflection_TopicIdActorIdTimeStampedValue_messageType) Zero() protoreflect.Message {
	return (*fastReflection_TopicIdActorIdTimeStampedValue)(nil)
}
func (x fastReflection_TopicIdActorIdTimeStampedValue_messageType) New() protoreflect.Message {
	return new(fastReflection_TopicIdActorIdTimeStampedValue)
}
func (x fastReflection_TopicIdActorIdTimeStampedValue_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_TopicIdActorIdTimeStampedValue
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_TopicIdActorIdTimeStampedValue) Descriptor() protoreflect.MessageDescriptor {
	return md_TopicIdActorIdTimeStampedValue
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_TopicIdActorIdTimeStampedValue) Type() protoreflect.MessageType {
	return _fastReflection_TopicIdActorIdTimeStampedValue_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_TopicIdActorIdTimeStampedValue) New() protoreflect.Message {
	return new(fastReflection_TopicIdActorIdTimeStampedValue)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_TopicIdActorIdTimeStampedValue) Interface() protoreflect.ProtoMessage {
	return (*TopicIdActorIdTimeStampedValue)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_TopicIdActorIdTimeStampedValue) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_TopicIdActorIdTimeStampedValue_topic_id, value) {
			return
		}
	}
	if x.ActorId != "" {
		value := protoreflect.ValueOfString(x.ActorId)
		if !f(fd_TopicIdActorIdTimeStampedValue_actor_id, value) {
			return
		}
	}
	if x.TimestampedValue != nil {
		value := protoreflect.ValueOfMessage(x.TimestampedValue.ProtoReflect())
		if !f(fd_TopicIdActorIdTimeStampedValue_timestamped_value, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_TopicIdActorIdTimeStampedValue) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.TopicIdActorIdTimeStampedValue.topic_id":
		return x.TopicId != uint64(0)
	case "emissions.v5.TopicIdActorIdTimeStampedValue.actor_id":
		return x.ActorId != ""
	case "emissions.v5.TopicIdActorIdTimeStampedValue.timestamped_value":
		return x.TimestampedValue != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdActorIdTimeStampedValue"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdActorIdTimeStampedValue does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TopicIdActorIdTimeStampedValue) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.TopicIdActorIdTimeStampedValue.topic_id":
		x.TopicId = uint64(0)
	case "emissions.v5.TopicIdActorIdTimeStampedValue.actor_id":
		x.ActorId = ""
	case "emissions.v5.TopicIdActorIdTimeStampedValue.timestamped_value":
		x.TimestampedValue = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdActorIdTimeStampedValue"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdActorIdTimeStampedValue does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_TopicIdActorIdTimeStampedValue) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.TopicIdActorIdTimeStampedValue.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	case "emissions.v5.TopicIdActorIdTimeStampedValue.actor_id":
		value := x.ActorId
		return protoreflect.ValueOfString(value)
	case "emissions.v5.TopicIdActorIdTimeStampedValue.timestamped_value":
		value := x.TimestampedValue
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdActorIdTimeStampedValue"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdActorIdTimeStampedValue does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TopicIdActorIdTimeStampedValue) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.TopicIdActorIdTimeStampedValue.topic_id":
		x.TopicId = value.Uint()
	case "emissions.v5.TopicIdActorIdTimeStampedValue.actor_id":
		x.ActorId = value.Interface().(string)
	case "emissions.v5.TopicIdActorIdTimeStampedValue.timestamped_value":
		x.TimestampedValue = value.Message().Interface().(*v3.TimestampedValue)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdActorIdTimeStampedValue"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdActorIdTimeStampedValue does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TopicIdActorIdTimeStampedValue) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.TopicIdActorIdTimeStampedValue.timestamped_value":
		if x.TimestampedValue == nil {
			x.TimestampedValue = new(v3.TimestampedValue)
		}
		return protoreflect.ValueOfMessage(x.TimestampedValue.ProtoReflect())
	case "emissions.v5.TopicIdActorIdTimeStampedValue.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.TopicIdActorIdTimeStampedValue is not mutable"))
	case "emissions.v5.TopicIdActorIdTimeStampedValue.actor_id":
		panic(fmt.Errorf("field actor_id of message emissions.v5.TopicIdActorIdTimeStampedValue is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdActorIdTimeStampedValue"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdActorIdTimeStampedValue does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_TopicIdActorIdTimeStampedValue) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.TopicIdActorIdTimeStampedValue.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "emissions.v5.TopicIdActorIdTimeStampedValue.actor_id":
		return protoreflect.ValueOfString("")
	case "emissions.v5.TopicIdActorIdTimeStampedValue.timestamped_value":
		m := new(v3.TimestampedValue)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdActorIdTimeStampedValue"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdActorIdTimeStampedValue does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_TopicIdActorIdTimeStampedValue) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.TopicIdActorIdTimeStampedValue", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_TopicIdActorIdTimeStampedValue) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TopicIdActorIdTimeStampedValue) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_TopicIdActorIdTimeStampedValue) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_TopicIdActorIdTimeStampedValue) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*TopicIdActorIdTimeStampedValue)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		l = len(x.ActorId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.TimestampedValue != nil {
			l = options.Size(x.TimestampedValue)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*TopicIdActorIdTimeStampedValue)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.TimestampedValue != nil {
			encoded, err := options.Marshal(x.TimestampedValue)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.ActorId) > 0 {
			i -= len(x.ActorId)
			copy(dAtA[i:], x.ActorId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ActorId)))
			i--
			dAtA[i] = 0x12
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*TopicIdActorIdTimeStampedValue)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: TopicIdActorIdTimeStampedValue: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: TopicIdActorIdTimeStampedValue: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ActorId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ActorId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TimestampedValue", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.TimestampedValue == nil {
					x.TimestampedValue = &v3.TimestampedValue{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.TimestampedValue); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_TopicIdActorIdActorIdTimeStampedValue                   protoreflect.MessageDescriptor
	fd_TopicIdActorIdActorIdTimeStampedValue_topic_id          protoreflect.FieldDescriptor
	fd_TopicIdActorIdActorIdTimeStampedValue_actor_id1         protoreflect.FieldDescriptor
	fd_TopicIdActorIdActorIdTimeStampedValue_actor_id2         protoreflect.FieldDescriptor
	fd_TopicIdActorIdActorIdTimeStampedValue_timestamped_value protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_genesis_proto_init()
	md_TopicIdActorIdActorIdTimeStampedValue = File_emissions_v5_genesis_proto.Messages().ByName("TopicIdActorIdActorIdTimeStampedValue")
	fd_TopicIdActorIdActorIdTimeStampedValue_topic_id = md_TopicIdActorIdActorIdTimeStampedValue.Fields().ByName("topic_id")
	fd_TopicIdActorIdActorIdTimeStampedValue_actor_id1 = md_TopicIdActorIdActorIdTimeStampedValue.Fields().ByName("actor_id1")
	fd_TopicIdActorIdActorIdTimeStampedValue_actor_id2 = md_TopicIdActorIdActorIdTimeStampedValue.Fields().ByName("actor_id2")
	fd_TopicIdActorIdActorIdTimeStampedValue_timestamped_value = md_TopicIdActorIdActorIdTimeStampedValue.Fields().ByName("timestamped_value")
}

var _ protoreflect.Message = (*fastReflection_TopicIdActorIdActorIdTimeStampedValue)(nil)

type fastReflection_TopicIdActorIdActorIdTimeStampedValue TopicIdActorIdActorIdTimeStampedValue

func (x *TopicIdActorIdActorIdTimeStampedValue) ProtoReflect() protoreflect.Message {
	return (*fastReflection_TopicIdActorIdActorIdTimeStampedValue)(x)
}

func (x *TopicIdActorIdActorIdTimeStampedValue) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_genesis_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_TopicIdActorIdActorIdTimeStampedValue_messageType fastReflection_TopicIdActorIdActorIdTimeStampedValue_messageType
var _ protoreflect.MessageType = fastReflection_TopicIdActorIdActorIdTimeStampedValue_messageType{}

type fastReflection_TopicIdActorIdActorIdTimeStampedValue_messageType struct{}

func (x fastReflection_TopicIdActorIdActorIdTimeStampedValue_messageType) Zero() protoreflect.Message {
	return (*fastReflection_TopicIdActorIdActorIdTimeStampedValue)(nil)
}
func (x fastReflection_TopicIdActorIdActorIdTimeStampedValue_messageType) New() protoreflect.Message {
	return new(fastReflection_TopicIdActorIdActorIdTimeStampedValue)
}
func (x fastReflection_TopicIdActorIdActorIdTimeStampedValue_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_TopicIdActorIdActorIdTimeStampedValue
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_TopicIdActorIdActorIdTimeStampedValue) Descriptor() protoreflect.MessageDescriptor {
	return md_TopicIdActorIdActorIdTimeStampedValue
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_TopicIdActorIdActorIdTimeStampedValue) Type() protoreflect.MessageType {
	return _fastReflection_TopicIdActorIdActorIdTimeStampedValue_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_TopicIdActorIdActorIdTimeStampedValue) New() protoreflect.Message {
	return new(fastReflection_TopicIdActorIdActorIdTimeStampedValue)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_TopicIdActorIdActorIdTimeStampedValue) Interface() protoreflect.ProtoMessage {
	return (*TopicIdActorIdActorIdTimeStampedValue)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_TopicIdActorIdActorIdTimeStampedValue) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_TopicIdActorIdActorIdTimeStampedValue_topic_id, value) {
			return
		}
	}
	if x.ActorId1 != "" {
		value := protoreflect.ValueOfString(x.ActorId1)
		if !f(fd_TopicIdActorIdActorIdTimeStampedValue_actor_id1, value) {
			return
		}
	}
	if x.ActorId2 != "" {
		value := protoreflect.ValueOfString(x.ActorId2)
		if !f(fd_TopicIdActorIdActorIdTimeStampedValue_actor_id2, value) {
			return
		}
	}
	if x.TimestampedValue != nil {
		value := protoreflect.ValueOfMessage(x.TimestampedValue.ProtoReflect())
		if !f(fd_TopicIdActorIdActorIdTimeStampedValue_timestamped_value, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_TopicIdActorIdActorIdTimeStampedValue) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.TopicIdActorIdActorIdTimeStampedValue.topic_id":
		return x.TopicId != uint64(0)
	case "emissions.v5.TopicIdActorIdActorIdTimeStampedValue.actor_id1":
		return x.ActorId1 != ""
	case "emissions.v5.TopicIdActorIdActorIdTimeStampedValue.actor_id2":
		return x.ActorId2 != ""
	case "emissions.v5.TopicIdActorIdActorIdTimeStampedValue.timestamped_value":
		return x.TimestampedValue != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdActorIdActorIdTimeStampedValue"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdActorIdActorIdTimeStampedValue does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TopicIdActorIdActorIdTimeStampedValue) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.TopicIdActorIdActorIdTimeStampedValue.topic_id":
		x.TopicId = uint64(0)
	case "emissions.v5.TopicIdActorIdActorIdTimeStampedValue.actor_id1":
		x.ActorId1 = ""
	case "emissions.v5.TopicIdActorIdActorIdTimeStampedValue.actor_id2":
		x.ActorId2 = ""
	case "emissions.v5.TopicIdActorIdActorIdTimeStampedValue.timestamped_value":
		x.TimestampedValue = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdActorIdActorIdTimeStampedValue"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdActorIdActorIdTimeStampedValue does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_TopicIdActorIdActorIdTimeStampedValue) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.TopicIdActorIdActorIdTimeStampedValue.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	case "emissions.v5.TopicIdActorIdActorIdTimeStampedValue.actor_id1":
		value := x.ActorId1
		return protoreflect.ValueOfString(value)
	case "emissions.v5.TopicIdActorIdActorIdTimeStampedValue.actor_id2":
		value := x.ActorId2
		return protoreflect.ValueOfString(value)
	case "emissions.v5.TopicIdActorIdActorIdTimeStampedValue.timestamped_value":
		value := x.TimestampedValue
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdActorIdActorIdTimeStampedValue"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdActorIdActorIdTimeStampedValue does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TopicIdActorIdActorIdTimeStampedValue) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.TopicIdActorIdActorIdTimeStampedValue.topic_id":
		x.TopicId = value.Uint()
	case "emissions.v5.TopicIdActorIdActorIdTimeStampedValue.actor_id1":
		x.ActorId1 = value.Interface().(string)
	case "emissions.v5.TopicIdActorIdActorIdTimeStampedValue.actor_id2":
		x.ActorId2 = value.Interface().(string)
	case "emissions.v5.TopicIdActorIdActorIdTimeStampedValue.timestamped_value":
		x.TimestampedValue = value.Message().Interface().(*v3.TimestampedValue)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdActorIdActorIdTimeStampedValue"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdActorIdActorIdTimeStampedValue does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TopicIdActorIdActorIdTimeStampedValue) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.TopicIdActorIdActorIdTimeStampedValue.timestamped_value":
		if x.TimestampedValue == nil {
			x.TimestampedValue = new(v3.TimestampedValue)
		}
		return protoreflect.ValueOfMessage(x.TimestampedValue.ProtoReflect())
	case "emissions.v5.TopicIdActorIdActorIdTimeStampedValue.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.TopicIdActorIdActorIdTimeStampedValue is not mutable"))
	case "emissions.v5.TopicIdActorIdActorIdTimeStampedValue.actor_id1":
		panic(fmt.Errorf("field actor_id1 of message emissions.v5.TopicIdActorIdActorIdTimeStampedValue is not mutable"))
	case "emissions.v5.TopicIdActorIdActorIdTimeStampedValue.actor_id2":
		panic(fmt.Errorf("field actor_id2 of message emissions.v5.TopicIdActorIdActorIdTimeStampedValue is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdActorIdActorIdTimeStampedValue"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdActorIdActorIdTimeStampedValue does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_TopicIdActorIdActorIdTimeStampedValue) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.TopicIdActorIdActorIdTimeStampedValue.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "emissions.v5.TopicIdActorIdActorIdTimeStampedValue.actor_id1":
		return protoreflect.ValueOfString("")
	case "emissions.v5.TopicIdActorIdActorIdTimeStampedValue.actor_id2":
		return protoreflect.ValueOfString("")
	case "emissions.v5.TopicIdActorIdActorIdTimeStampedValue.timestamped_value":
		m := new(v3.TimestampedValue)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdActorIdActorIdTimeStampedValue"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdActorIdActorIdTimeStampedValue does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_TopicIdActorIdActorIdTimeStampedValue) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.TopicIdActorIdActorIdTimeStampedValue", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_TopicIdActorIdActorIdTimeStampedValue) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TopicIdActorIdActorIdTimeStampedValue) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_TopicIdActorIdActorIdTimeStampedValue) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_TopicIdActorIdActorIdTimeStampedValue) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*TopicIdActorIdActorIdTimeStampedValue)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		l = len(x.ActorId1)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ActorId2)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.TimestampedValue != nil {
			l = options.Size(x.TimestampedValue)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*TopicIdActorIdActorIdTimeStampedValue)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.TimestampedValue != nil {
			encoded, err := options.Marshal(x.TimestampedValue)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.ActorId2) > 0 {
			i -= len(x.ActorId2)
			copy(dAtA[i:], x.ActorId2)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ActorId2)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.ActorId1) > 0 {
			i -= len(x.ActorId1)
			copy(dAtA[i:], x.ActorId1)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ActorId1)))
			i--
			dAtA[i] = 0x12
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*TopicIdActorIdActorIdTimeStampedValue)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: TopicIdActorIdActorIdTimeStampedValue: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: TopicIdActorIdActorIdTimeStampedValue: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ActorId1", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ActorId1 = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ActorId2", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ActorId2 = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TimestampedValue", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.TimestampedValue == nil {
					x.TimestampedValue = &v3.TimestampedValue{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.TimestampedValue); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_TopicIdTimestampedActorNonce                         protoreflect.MessageDescriptor
	fd_TopicIdTimestampedActorNonce_topic_id                protoreflect.FieldDescriptor
	fd_TopicIdTimestampedActorNonce_timestamped_actor_nonce protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_genesis_proto_init()
	md_TopicIdTimestampedActorNonce = File_emissions_v5_genesis_proto.Messages().ByName("TopicIdTimestampedActorNonce")
	fd_TopicIdTimestampedActorNonce_topic_id = md_TopicIdTimestampedActorNonce.Fields().ByName("topic_id")
	fd_TopicIdTimestampedActorNonce_timestamped_actor_nonce = md_TopicIdTimestampedActorNonce.Fields().ByName("timestamped_actor_nonce")
}

var _ protoreflect.Message = (*fastReflection_TopicIdTimestampedActorNonce)(nil)

type fastReflection_TopicIdTimestampedActorNonce TopicIdTimestampedActorNonce

func (x *TopicIdTimestampedActorNonce) ProtoReflect() protoreflect.Message {
	return (*fastReflection_TopicIdTimestampedActorNonce)(x)
}

func (x *TopicIdTimestampedActorNonce) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_genesis_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_TopicIdTimestampedActorNonce_messageType fastReflection_TopicIdTimestampedActorNonce_messageType
var _ protoreflect.MessageType = fastReflection_TopicIdTimestampedActorNonce_messageType{}

type fastReflection_TopicIdTimestampedActorNonce_messageType struct{}

func (x fastReflection_TopicIdTimestampedActorNonce_messageType) Zero() protoreflect.Message {
	return (*fastReflection_TopicIdTimestampedActorNonce)(nil)
}
func (x fastReflection_TopicIdTimestampedActorNonce_messageType) New() protoreflect.Message {
	return new(fastReflection_TopicIdTimestampedActorNonce)
}
func (x fastReflection_TopicIdTimestampedActorNonce_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_TopicIdTimestampedActorNonce
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_TopicIdTimestampedActorNonce) Descriptor() protoreflect.MessageDescriptor {
	return md_TopicIdTimestampedActorNonce
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_TopicIdTimestampedActorNonce) Type() protoreflect.MessageType {
	return _fastReflection_TopicIdTimestampedActorNonce_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_TopicIdTimestampedActorNonce) New() protoreflect.Message {
	return new(fastReflection_TopicIdTimestampedActorNonce)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_TopicIdTimestampedActorNonce) Interface() protoreflect.ProtoMessage {
	return (*TopicIdTimestampedActorNonce)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_TopicIdTimestampedActorNonce) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_TopicIdTimestampedActorNonce_topic_id, value) {
			return
		}
	}
	if x.TimestampedActorNonce != nil {
		value := protoreflect.ValueOfMessage(x.TimestampedActorNonce.ProtoReflect())
		if !f(fd_TopicIdTimestampedActorNonce_timestamped_actor_nonce, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_TopicIdTimestampedActorNonce) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.TopicIdTimestampedActorNonce.topic_id":
		return x.TopicId != uint64(0)
	case "emissions.v5.TopicIdTimestampedActorNonce.timestamped_actor_nonce":
		return x.TimestampedActorNonce != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdTimestampedActorNonce"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdTimestampedActorNonce does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TopicIdTimestampedActorNonce) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.TopicIdTimestampedActorNonce.topic_id":
		x.TopicId = uint64(0)
	case "emissions.v5.TopicIdTimestampedActorNonce.timestamped_actor_nonce":
		x.TimestampedActorNonce = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdTimestampedActorNonce"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdTimestampedActorNonce does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_TopicIdTimestampedActorNonce) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.TopicIdTimestampedActorNonce.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	case "emissions.v5.TopicIdTimestampedActorNonce.timestamped_actor_nonce":
		value := x.TimestampedActorNonce
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdTimestampedActorNonce"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdTimestampedActorNonce does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TopicIdTimestampedActorNonce) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.TopicIdTimestampedActorNonce.topic_id":
		x.TopicId = value.Uint()
	case "emissions.v5.TopicIdTimestampedActorNonce.timestamped_actor_nonce":
		x.TimestampedActorNonce = value.Message().Interface().(*v3.TimestampedActorNonce)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdTimestampedActorNonce"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdTimestampedActorNonce does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TopicIdTimestampedActorNonce) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.TopicIdTimestampedActorNonce.timestamped_actor_nonce":
		if x.TimestampedActorNonce == nil {
			x.TimestampedActorNonce = new(v3.TimestampedActorNonce)
		}
		return protoreflect.ValueOfMessage(x.TimestampedActorNonce.ProtoReflect())
	case "emissions.v5.TopicIdTimestampedActorNonce.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.TopicIdTimestampedActorNonce is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdTimestampedActorNonce"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdTimestampedActorNonce does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_TopicIdTimestampedActorNonce) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.TopicIdTimestampedActorNonce.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "emissions.v5.TopicIdTimestampedActorNonce.timestamped_actor_nonce":
		m := new(v3.TimestampedActorNonce)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.TopicIdTimestampedActorNonce"))
		}
		panic(fmt.Errorf("message emissions.v5.TopicIdTimestampedActorNonce does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_TopicIdTimestampedActorNonce) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.TopicIdTimestampedActorNonce", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_TopicIdTimestampedActorNonce) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TopicIdTimestampedActorNonce) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_TopicIdTimestampedActorNonce) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_TopicIdTimestampedActorNonce) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*TopicIdTimestampedActorNonce)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		if x.TimestampedActorNonce != nil {
			l = options.Size(x.TimestampedActorNonce)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*TopicIdTimestampedActorNonce)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.TimestampedActorNonce != nil {
			encoded, err := options.Marshal(x.TimestampedActorNonce)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x12
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*TopicIdTimestampedActorNonce)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: TopicIdTimestampedActorNonce: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: TopicIdTimestampedActorNonce: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TimestampedActorNonce", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.TimestampedActorNonce == nil {
					x.TimestampedActorNonce = &v3.TimestampedActorNonce{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.TimestampedActorNonce); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_BlockHeightTopicIds              protoreflect.MessageDescriptor
	fd_BlockHeightTopicIds_block_height protoreflect.FieldDescriptor
	fd_BlockHeightTopicIds_topic_ids    protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_genesis_proto_init()
	md_BlockHeightTopicIds = File_emissions_v5_genesis_proto.Messages().ByName("BlockHeightTopicIds")
	fd_BlockHeightTopicIds_block_height = md_BlockHeightTopicIds.Fields().ByName("block_height")
	fd_BlockHeightTopicIds_topic_ids = md_BlockHeightTopicIds.Fields().ByName("topic_ids")
}

var _ protoreflect.Message = (*fastReflection_BlockHeightTopicIds)(nil)

type fastReflection_BlockHeightTopicIds BlockHeightTopicIds

func (x *BlockHeightTopicIds) ProtoReflect() protoreflect.Message {
	return (*fastReflection_BlockHeightTopicIds)(x)
}

func (x *BlockHeightTopicIds) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_genesis_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_BlockHeightTopicIds_messageType fastReflection_BlockHeightTopicIds_messageType
var _ protoreflect.MessageType = fastReflection_BlockHeightTopicIds_messageType{}

type fastReflection_BlockHeightTopicIds_messageType struct{}

func (x fastReflection_BlockHeightTopicIds_messageType) Zero() protoreflect.Message {
	return (*fastReflection_BlockHeightTopicIds)(nil)
}
func (x fastReflection_BlockHeightTopicIds_messageType) New() protoreflect.Message {
	return new(fastReflection_BlockHeightTopicIds)
}
func (x fastReflection_BlockHeightTopicIds_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_BlockHeightTopicIds
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_BlockHeightTopicIds) Descriptor() protoreflect.MessageDescriptor {
	return md_BlockHeightTopicIds
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_BlockHeightTopicIds) Type() protoreflect.MessageType {
	return _fastReflection_BlockHeightTopicIds_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_BlockHeightTopicIds) New() protoreflect.Message {
	return new(fastReflection_BlockHeightTopicIds)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_BlockHeightTopicIds) Interface() protoreflect.ProtoMessage {
	return (*BlockHeightTopicIds)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_BlockHeightTopicIds) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.BlockHeight != int64(0) {
		value := protoreflect.ValueOfInt64(x.BlockHeight)
		if !f(fd_BlockHeightTopicIds_block_height, value) {
			return
		}
	}
	if x.TopicIds != nil {
		value := protoreflect.ValueOfMessage(x.TopicIds.ProtoReflect())
		if !f(fd_BlockHeightTopicIds_topic_ids, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_BlockHeightTopicIds) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.BlockHeightTopicIds.block_height":
		return x.BlockHeight != int64(0)
	case "emissions.v5.BlockHeightTopicIds.topic_ids":
		return x.TopicIds != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.BlockHeightTopicIds"))
		}
		panic(fmt.Errorf("message emissions.v5.BlockHeightTopicIds does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_BlockHeightTopicIds) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.BlockHeightTopicIds.block_height":
		x.BlockHeight = int64(0)
	case "emissions.v5.BlockHeightTopicIds.topic_ids":
		x.TopicIds = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.BlockHeightTopicIds"))
		}
		panic(fmt.Errorf("message emissions.v5.BlockHeightTopicIds does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_BlockHeightTopicIds) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.BlockHeightTopicIds.block_height":
		value := x.BlockHeight
		return protoreflect.ValueOfInt64(value)
	case "emissions.v5.BlockHeightTopicIds.topic_ids":
		value := x.TopicIds
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.BlockHeightTopicIds"))
		}
		panic(fmt.Errorf("message emissions.v5.BlockHeightTopicIds does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_BlockHeightTopicIds) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.BlockHeightTopicIds.block_height":
		x.BlockHeight = value.Int()
	case "emissions.v5.BlockHeightTopicIds.topic_ids":
		x.TopicIds = value.Message().Interface().(*v3.TopicIds)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.BlockHeightTopicIds"))
		}
		panic(fmt.Errorf("message emissions.v5.BlockHeightTopicIds does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_BlockHeightTopicIds) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.BlockHeightTopicIds.topic_ids":
		if x.TopicIds == nil {
			x.TopicIds = new(v3.TopicIds)
		}
		return protoreflect.ValueOfMessage(x.TopicIds.ProtoReflect())
	case "emissions.v5.BlockHeightTopicIds.block_height":
		panic(fmt.Errorf("field block_height of message emissions.v5.BlockHeightTopicIds is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.BlockHeightTopicIds"))
		}
		panic(fmt.Errorf("message emissions.v5.BlockHeightTopicIds does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_BlockHeightTopicIds) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.BlockHeightTopicIds.block_height":
		return protoreflect.ValueOfInt64(int64(0))
	case "emissions.v5.BlockHeightTopicIds.topic_ids":
		m := new(v3.TopicIds)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.BlockHeightTopicIds"))
		}
		panic(fmt.Errorf("message emissions.v5.BlockHeightTopicIds does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_BlockHeightTopicIds) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.BlockHeightTopicIds", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_BlockHeightTopicIds) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_BlockHeightTopicIds) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_BlockHeightTopicIds) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_BlockHeightTopicIds) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*BlockHeightTopicIds)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.BlockHeight != 0 {
			n += 1 + runtime.Sov(uint64(x.BlockHeight))
		}
		if x.TopicIds != nil {
			l = options.Size(x.TopicIds)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*BlockHeightTopicIds)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.TopicIds != nil {
			encoded, err := options.Marshal(x.TopicIds)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x12
		}
		if x.BlockHeight != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.BlockHeight))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*BlockHeightTopicIds)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: BlockHeightTopicIds: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: BlockHeightTopicIds: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BlockHeight", wireType)
				}
				x.BlockHeight = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.BlockHeight |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicIds", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.TopicIds == nil {
					x.TopicIds = &v3.TopicIds{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.TopicIds); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_BlockHeightTopicIdWeightPair              protoreflect.MessageDescriptor
	fd_BlockHeightTopicIdWeightPair_block_height protoreflect.FieldDescriptor
	fd_BlockHeightTopicIdWeightPair_topic_weight protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_genesis_proto_init()
	md_BlockHeightTopicIdWeightPair = File_emissions_v5_genesis_proto.Messages().ByName("BlockHeightTopicIdWeightPair")
	fd_BlockHeightTopicIdWeightPair_block_height = md_BlockHeightTopicIdWeightPair.Fields().ByName("block_height")
	fd_BlockHeightTopicIdWeightPair_topic_weight = md_BlockHeightTopicIdWeightPair.Fields().ByName("topic_weight")
}

var _ protoreflect.Message = (*fastReflection_BlockHeightTopicIdWeightPair)(nil)

type fastReflection_BlockHeightTopicIdWeightPair BlockHeightTopicIdWeightPair

func (x *BlockHeightTopicIdWeightPair) ProtoReflect() protoreflect.Message {
	return (*fastReflection_BlockHeightTopicIdWeightPair)(x)
}

func (x *BlockHeightTopicIdWeightPair) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_genesis_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_BlockHeightTopicIdWeightPair_messageType fastReflection_BlockHeightTopicIdWeightPair_messageType
var _ protoreflect.MessageType = fastReflection_BlockHeightTopicIdWeightPair_messageType{}

type fastReflection_BlockHeightTopicIdWeightPair_messageType struct{}

func (x fastReflection_BlockHeightTopicIdWeightPair_messageType) Zero() protoreflect.Message {
	return (*fastReflection_BlockHeightTopicIdWeightPair)(nil)
}
func (x fastReflection_BlockHeightTopicIdWeightPair_messageType) New() protoreflect.Message {
	return new(fastReflection_BlockHeightTopicIdWeightPair)
}
func (x fastReflection_BlockHeightTopicIdWeightPair_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_BlockHeightTopicIdWeightPair
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_BlockHeightTopicIdWeightPair) Descriptor() protoreflect.MessageDescriptor {
	return md_BlockHeightTopicIdWeightPair
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_BlockHeightTopicIdWeightPair) Type() protoreflect.MessageType {
	return _fastReflection_BlockHeightTopicIdWeightPair_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_BlockHeightTopicIdWeightPair) New() protoreflect.Message {
	return new(fastReflection_BlockHeightTopicIdWeightPair)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_BlockHeightTopicIdWeightPair) Interface() protoreflect.ProtoMessage {
	return (*BlockHeightTopicIdWeightPair)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_BlockHeightTopicIdWeightPair) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.BlockHeight != int64(0) {
		value := protoreflect.ValueOfInt64(x.BlockHeight)
		if !f(fd_BlockHeightTopicIdWeightPair_block_height, value) {
			return
		}
	}
	if x.TopicWeight != nil {
		value := protoreflect.ValueOfMessage(x.TopicWeight.ProtoReflect())
		if !f(fd_BlockHeightTopicIdWeightPair_topic_weight, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_BlockHeightTopicIdWeightPair) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.BlockHeightTopicIdWeightPair.block_height":
		return x.BlockHeight != int64(0)
	case "emissions.v5.BlockHeightTopicIdWeightPair.topic_weight":
		return x.TopicWeight != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.BlockHeightTopicIdWeightPair"))
		}
		panic(fmt.Errorf("message emissions.v5.BlockHeightTopicIdWeightPair does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_BlockHeightTopicIdWeightPair) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.BlockHeightTopicIdWeightPair.block_height":
		x.BlockHeight = int64(0)
	case "emissions.v5.BlockHeightTopicIdWeightPair.topic_weight":
		x.TopicWeight = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.BlockHeightTopicIdWeightPair"))
		}
		panic(fmt.Errorf("message emissions.v5.BlockHeightTopicIdWeightPair does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_BlockHeightTopicIdWeightPair) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.BlockHeightTopicIdWeightPair.block_height":
		value := x.BlockHeight
		return protoreflect.ValueOfInt64(value)
	case "emissions.v5.BlockHeightTopicIdWeightPair.topic_weight":
		value := x.TopicWeight
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.BlockHeightTopicIdWeightPair"))
		}
		panic(fmt.Errorf("message emissions.v5.BlockHeightTopicIdWeightPair does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_BlockHeightTopicIdWeightPair) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.BlockHeightTopicIdWeightPair.block_height":
		x.BlockHeight = value.Int()
	case "emissions.v5.BlockHeightTopicIdWeightPair.topic_weight":
		x.TopicWeight = value.Message().Interface().(*v3.TopicIdWeightPair)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.BlockHeightTopicIdWeightPair"))
		}
		panic(fmt.Errorf("message emissions.v5.BlockHeightTopicIdWeightPair does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_BlockHeightTopicIdWeightPair) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.BlockHeightTopicIdWeightPair.topic_weight":
		if x.TopicWeight == nil {
			x.TopicWeight = new(v3.TopicIdWeightPair)
		}
		return protoreflect.ValueOfMessage(x.TopicWeight.ProtoReflect())
	case "emissions.v5.BlockHeightTopicIdWeightPair.block_height":
		panic(fmt.Errorf("field block_height of message emissions.v5.BlockHeightTopicIdWeightPair is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.BlockHeightTopicIdWeightPair"))
		}
		panic(fmt.Errorf("message emissions.v5.BlockHeightTopicIdWeightPair does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_BlockHeightTopicIdWeightPair) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.BlockHeightTopicIdWeightPair.block_height":
		return protoreflect.ValueOfInt64(int64(0))
	case "emissions.v5.BlockHeightTopicIdWeightPair.topic_weight":
		m := new(v3.TopicIdWeightPair)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.BlockHeightTopicIdWeightPair"))
		}
		panic(fmt.Errorf("message emissions.v5.BlockHeightTopicIdWeightPair does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_BlockHeightTopicIdWeightPair) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.BlockHeightTopicIdWeightPair", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_BlockHeightTopicIdWeightPair) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_BlockHeightTopicIdWeightPair) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_BlockHeightTopicIdWeightPair) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_BlockHeightTopicIdWeightPair) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*BlockHeightTopicIdWeightPair)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.BlockHeight != 0 {
			n += 1 + runtime.Sov(uint64(x.BlockHeight))
		}
		if x.TopicWeight != nil {
			l = options.Size(x.TopicWeight)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*BlockHeightTopicIdWeightPair)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.TopicWeight != nil {
			encoded, err := options.Marshal(x.TopicWeight)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x12
		}
		if x.BlockHeight != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.BlockHeight))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*BlockHeightTopicIdWeightPair)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: BlockHeightTopicIdWeightPair: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: BlockHeightTopicIdWeightPair: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BlockHeight", wireType)
				}
				x.BlockHeight = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.BlockHeight |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicWeight", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.TopicWeight == nil {
					x.TopicWeight = &v3.TopicIdWeightPair{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.TopicWeight); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: emissions/v5/genesis.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// GenesisState is the state that must be provided at genesis.
type GenesisState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// params defines all the parameters of the module.
	Params *v3.Params `protobuf:"bytes,1,opt,name=params,proto3" json:"params,omitempty"`
	// / TOPIC
	// the next topic id to be used, equal to the number of topics that have been
	// created
	NextTopicId uint64 `protobuf:"varint,3,opt,name=next_topic_id,json=nextTopicId,proto3" json:"next_topic_id,omitempty"`
	// every topic that has been created indexed by their topicId starting from 1
	// (0 is reserved for the root network)
	Topics       []*TopicIdAndTopic `protobuf:"bytes,4,rep,name=topics,proto3" json:"topics,omitempty"`
	ActiveTopics []uint64           `protobuf:"varint,5,rep,packed,name=active_topics,json=activeTopics,proto3" json:"active_topics,omitempty"`
	// every topic that has been churned and ready to be rewarded i.e. reputer
	// losses have been committed
	RewardableTopics []uint64 `protobuf:"varint,6,rep,packed,name=rewardable_topics,json=rewardableTopics,proto3" json:"rewardable_topics,omitempty"`
	// for a topic, what is every worker node that has registered to it?
	TopicWorkers []*TopicAndActorId `protobuf:"bytes,7,rep,name=topic_workers,json=topicWorkers,proto3" json:"topic_workers,omitempty"`
	// for a topic, what is every reputer node that has registered to it?
	TopicReputers []*TopicAndActorId `protobuf:"bytes,8,rep,name=topic_reputers,json=topicReputers,proto3" json:"topic_reputers,omitempty"`
	// map of (topic) -> nonce/block height
	TopicRewardNonce []*TopicIdAndBlockHeight `protobuf:"bytes,9,rep,name=topic_reward_nonce,json=topicRewardNonce,proto3" json:"topic_reward_nonce,omitempty"`
	// / SCORES
	// map of (topic, block_height, worker) -> score
	InfererScoresByBlock []*TopicIdBlockHeightScores `protobuf:"bytes,10,rep,name=inferer_scores_by_block,json=infererScoresByBlock,proto3" json:"inferer_scores_by_block,omitempty"`
	// map of (topic, block_height, worker) -> score
	ForecasterScoresByBlock []*TopicIdBlockHeightScores `protobuf:"bytes,11,rep,name=forecaster_scores_by_block,json=forecasterScoresByBlock,proto3" json:"forecaster_scores_by_block,omitempty"`
	// map of (topic, block_height, reputer) -> score
	ReputerScoresByBlock []*TopicIdBlockHeightScores `protobuf:"bytes,12,rep,name=reputer_scores_by_block,json=reputerScoresByBlock,proto3" json:"reputer_scores_by_block,omitempty"`
	// map of (topic, block_height, worker) -> score
	InfererScoreEmas []*TopicIdActorIdScore `protobuf:"bytes,60,rep,name=inferer_score_emas,json=infererScoreEmas,proto3" json:"inferer_score_emas,omitempty"`
	// map of (topic, block_height, worker) -> score
	ForecasterScoreEmas []*TopicIdActorIdScore `protobuf:"bytes,61,rep,name=forecaster_score_emas,json=forecasterScoreEmas,proto3" json:"forecaster_score_emas,omitempty"`
	// map of (topic, block_height, reputer) -> score
	ReputerScoreEmas []*TopicIdActorIdScore `protobuf:"bytes,62,rep,name=reputer_score_emas,json=reputerScoreEmas,proto3" json:"reputer_score_emas,omitempty"`
	// map of (topic, reputer) -> listening coefficient
	ReputerListeningCoefficient []*TopicIdActorIdListeningCoefficient `protobuf:"bytes,16,rep,name=reputer_listening_coefficient,json=reputerListeningCoefficient,proto3" json:"reputer_listening_coefficient,omitempty"`
	// map of (topic, reputer) -> previous reward (used for EMA)
	PreviousReputerRewardFraction []*TopicIdActorIdDec `protobuf:"bytes,17,rep,name=previous_reputer_reward_fraction,json=previousReputerRewardFraction,proto3" json:"previous_reputer_reward_fraction,omitempty"`
	// map of (topic, worker) -> previous reward for inference (used for EMA)
	PreviousInferenceRewardFraction []*TopicIdActorIdDec `protobuf:"bytes,18,rep,name=previous_inference_reward_fraction,json=previousInferenceRewardFraction,proto3" json:"previous_inference_reward_fraction,omitempty"`
	// map of (topic, worker) -> previous reward for forecast (used for EMA)
	PreviousForecastRewardFraction []*TopicIdActorIdDec `protobuf:"bytes,19,rep,name=previous_forecast_reward_fraction,json=previousForecastRewardFraction,proto3" json:"previous_forecast_reward_fraction,omitempty"`
	// map of (topic, forecaster) -> ratio of forecaster score
	PreviousForecasterScoreRatio []*TopicIdAndDec `protobuf:"bytes,20,rep,name=previous_forecaster_score_ratio,json=previousForecasterScoreRatio,proto3" json:"previous_forecaster_score_ratio,omitempty"`
	// total sum stake of all stakers on the network
	TotalStake string `protobuf:"bytes,21,opt,name=total_stake,json=totalStake,proto3" json:"total_stake,omitempty"`
	// for every topic, how much total stake does that topic have accumulated?
	TopicStake []*TopicIdAndInt `protobuf:"bytes,22,rep,name=topic_stake,json=topicStake,proto3" json:"topic_stake,omitempty"`
	// stake reputer placed in topic + delegate stake placed in them,
	// signalling their total authority on the topic
	// (topic Id, reputer) -> stake from reputer on self +
	// stakeFromDelegatorsUponReputer
	StakeReputerAuthority []*TopicIdActorIdInt `protobuf:"bytes,23,rep,name=stake_reputer_authority,json=stakeReputerAuthority,proto3" json:"stake_reputer_authority,omitempty"`
	// map of (topic id, delegator) -> total amount of stake in that topic placed
	// by that delegator
	StakeSumFromDelegator []*TopicIdActorIdInt `protobuf:"bytes,24,rep,name=stake_sum_from_delegator,json=stakeSumFromDelegator,proto3" json:"stake_sum_from_delegator,omitempty"`
	// map of (topic id, delegator, reputer) -> amount of stake that has been
	// placed by that delegator on that target
	DelegatedStakes []*TopicIdDelegatorReputerDelegatorInfo `protobuf:"bytes,25,rep,name=delegated_stakes,json=delegatedStakes,proto3" json:"delegated_stakes,omitempty"`
	// map of (topic id, reputer) -> total amount of stake that has been placed on
	// that reputer by delegators
	StakeFromDelegatorsUponReputer []*TopicIdActorIdInt `protobuf:"bytes,26,rep,name=stake_from_delegators_upon_reputer,json=stakeFromDelegatorsUponReputer,proto3" json:"stake_from_delegators_upon_reputer,omitempty"`
	// map of (topicId, reputer) -> share of delegate reward
	DelegateRewardPerShare []*TopicIdActorIdDec `protobuf:"bytes,27,rep,name=delegate_reward_per_share,json=delegateRewardPerShare,proto3" json:"delegate_reward_per_share,omitempty"`
	// stake removals are double indexed to avoid O(n) lookups when removing stake
	// map of (blockHeight, topic, reputer) -> removal information for that
	// reputer
	StakeRemovalsByBlock []*BlockHeightTopicIdReputerStakeRemovalInfo `protobuf:"bytes,28,rep,name=stake_removals_by_block,json=stakeRemovalsByBlock,proto3" json:"stake_removals_by_block,omitempty"`
	// key set of (reputer, topic, blockHeight) to existence of a removal in the
	// forwards map
	StakeRemovalsByActor []*ActorIdTopicIdBlockHeight `protobuf:"bytes,29,rep,name=stake_removals_by_actor,json=stakeRemovalsByActor,proto3" json:"stake_removals_by_actor,omitempty"`
	// delegate stake removals are double indexed to avoid O(n) lookups when
	// removing stake map of (blockHeight, topic, delegator, reputer staked upon)
	// -> (list of reputers delegated upon and info) to have stake removed at that
	// block
	DelegateStakeRemovalsByBlock []*BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo `protobuf:"bytes,30,rep,name=delegate_stake_removals_by_block,json=delegateStakeRemovalsByBlock,proto3" json:"delegate_stake_removals_by_block,omitempty"`
	// key set of (delegator, reputer, topicId, blockHeight) to existence of a
	// removal in the forwards map
	DelegateStakeRemovalsByActor []*DelegatorReputerTopicIdBlockHeight `protobuf:"bytes,31,rep,name=delegate_stake_removals_by_actor,json=delegateStakeRemovalsByActor,proto3" json:"delegate_stake_removals_by_actor,omitempty"`
	// / MISC GLOBAL STATE
	// map of (topic, worker) -> inference
	Inferences []*TopicIdActorIdInference `protobuf:"bytes,32,rep,name=inferences,proto3" json:"inferences,omitempty"`
	// map of (topic, worker) -> forecast[]
	Forecasts []*TopicIdActorIdForecast `protobuf:"bytes,33,rep,name=forecasts,proto3" json:"forecasts,omitempty"`
	// map of worker id to node data about that worker
	Workers []*LibP2PKeyAndOffchainNode `protobuf:"bytes,34,rep,name=workers,proto3" json:"workers,omitempty"`
	// map of reputer id to node data about that reputer
	Reputers []*LibP2PKeyAndOffchainNode `protobuf:"bytes,35,rep,name=reputers,proto3" json:"reputers,omitempty"`
	// fee revenue collected by a topic over the course of the last reward cadence
	TopicFeeRevenue []*TopicIdAndInt `protobuf:"bytes,36,rep,name=topic_fee_revenue,json=topicFeeRevenue,proto3" json:"topic_fee_revenue,omitempty"`
	// store previous weights for exponential moving average in rewards calc
	PreviousTopicWeight []*TopicIdAndDec `protobuf:"bytes,37,rep,name=previous_topic_weight,json=previousTopicWeight,proto3" json:"previous_topic_weight,omitempty"`
	// map of (topic, block_height) -> Inference
	AllInferences []*TopicIdBlockHeightInferences `protobuf:"bytes,38,rep,name=all_inferences,json=allInferences,proto3" json:"all_inferences,omitempty"`
	// map of (topic, block_height) -> Forecast
	AllForecasts []*TopicIdBlockHeightForecasts `protobuf:"bytes,39,rep,name=all_forecasts,json=allForecasts,proto3" json:"all_forecasts,omitempty"`
	// map of (topic, block_height) -> ReputerValueBundles (1 per reputer active
	// at that time)
	AllLossBundles []*TopicIdBlockHeightReputerValueBundles `protobuf:"bytes,40,rep,name=all_loss_bundles,json=allLossBundles,proto3" json:"all_loss_bundles,omitempty"`
	// map of (topic, block_height) -> ValueBundle (1 network wide bundle per
	// timestep)
	NetworkLossBundles []*TopicIdBlockHeightValueBundles `protobuf:"bytes,41,rep,name=network_loss_bundles,json=networkLossBundles,proto3" json:"network_loss_bundles,omitempty"`
	// Percentage of all rewards, paid out to staked reputers, during the previous
	// reward cadence. Used by mint module
	PreviousPercentageRewardToStakedReputers string `protobuf:"bytes,42,opt,name=previous_percentage_reward_to_staked_reputers,json=previousPercentageRewardToStakedReputers,proto3" json:"previous_percentage_reward_to_staked_reputers,omitempty"`
	// map of open worker nonce windows for topics on particular block heights
	OpenWorkerWindows []*BlockHeightAndTopicIds `protobuf:"bytes,55,rep,name=open_worker_windows,json=openWorkerWindows,proto3" json:"open_worker_windows,omitempty"`
	// map of (topic) -> unfulfilled nonces
	UnfulfilledWorkerNonces []*TopicIdAndNonces `protobuf:"bytes,43,rep,name=unfulfilled_worker_nonces,json=unfulfilledWorkerNonces,proto3" json:"unfulfilled_worker_nonces,omitempty"`
	// map of (topic) -> unfulfilled nonces
	UnfulfilledReputerNonces []*TopicIdAndReputerRequestNonces `protobuf:"bytes,44,rep,name=unfulfilled_reputer_nonces,json=unfulfilledReputerNonces,proto3" json:"unfulfilled_reputer_nonces,omitempty"`
	// map of (topic) -> last dripped block
	LastDripBlock []*TopicIdAndBlockHeight `protobuf:"bytes,56,rep,name=last_drip_block,json=lastDripBlock,proto3" json:"last_drip_block,omitempty"`
	// / REGRETS
	// map of (topic, worker) -> regret of worker from comparing loss of worker
	// relative to loss of other inferers
	LatestInfererNetworkRegrets []*TopicIdActorIdTimeStampedValue `protobuf:"bytes,45,rep,name=latest_inferer_network_regrets,json=latestInfererNetworkRegrets,proto3" json:"latest_inferer_network_regrets,omitempty"`
	// map of (topic, worker) -> regret of worker from comparing loss of worker
	// relative to loss of other forecasters
	LatestForecasterNetworkRegrets []*TopicIdActorIdTimeStampedValue `protobuf:"bytes,46,rep,name=latest_forecaster_network_regrets,json=latestForecasterNetworkRegrets,proto3" json:"latest_forecaster_network_regrets,omitempty"`
	// map of (topic, forecaster, inferer) -> R^+_{ij_kk} regret of forecaster
	// loss from comparing one-in loss with all network inferer (3rd index)
	// regrets L_ij made under the regime of the one-in forecaster (2nd index)
	LatestOneInForecasterNetworkRegrets []*TopicIdActorIdActorIdTimeStampedValue `protobuf:"bytes,47,rep,name=latest_one_in_forecaster_network_regrets,json=latestOneInForecasterNetworkRegrets,proto3" json:"latest_one_in_forecaster_network_regrets,omitempty"`
	// the forecaster (2nd index) regrets made under the regime of the same
	// forecaster as a one-in forecaster
	LatestNaiveInfererNetworkRegrets               []*TopicIdActorIdTimeStampedValue        `protobuf:"bytes,48,rep,name=latest_naive_inferer_network_regrets,json=latestNaiveInfererNetworkRegrets,proto3" json:"latest_naive_inferer_network_regrets,omitempty"`
	LatestOneOutInfererInfererNetworkRegrets       []*TopicIdActorIdActorIdTimeStampedValue `protobuf:"bytes,49,rep,name=latest_one_out_inferer_inferer_network_regrets,json=latestOneOutInfererInfererNetworkRegrets,proto3" json:"latest_one_out_inferer_inferer_network_regrets,omitempty"`
	LatestOneOutInfererForecasterNetworkRegrets    []*TopicIdActorIdActorIdTimeStampedValue `protobuf:"bytes,50,rep,name=latest_one_out_inferer_forecaster_network_regrets,json=latestOneOutInfererForecasterNetworkRegrets,proto3" json:"latest_one_out_inferer_forecaster_network_regrets,omitempty"`
	LatestOneOutForecasterInfererNetworkRegrets    []*TopicIdActorIdActorIdTimeStampedValue `protobuf:"bytes,51,rep,name=latest_one_out_forecaster_inferer_network_regrets,json=latestOneOutForecasterInfererNetworkRegrets,proto3" json:"latest_one_out_forecaster_inferer_network_regrets,omitempty"`
	LatestOneOutForecasterForecasterNetworkRegrets []*TopicIdActorIdActorIdTimeStampedValue `protobuf:"bytes,52,rep,name=latest_one_out_forecaster_forecaster_network_regrets,json=latestOneOutForecasterForecasterNetworkRegrets,proto3" json:"latest_one_out_forecaster_forecaster_network_regrets,omitempty"`
	// / WHITELISTS
	CoreTeamAddresses []string `protobuf:"bytes,2,rep,name=core_team_addresses,json=coreTeamAddresses,proto3" json:"core_team_addresses,omitempty"`
	// / RECORD COMMITS
	TopicLastWorkerCommit  []*TopicIdTimestampedActorNonce `protobuf:"bytes,53,rep,name=topic_last_worker_commit,json=topicLastWorkerCommit,proto3" json:"topic_last_worker_commit,omitempty"`
	TopicLastReputerCommit []*TopicIdTimestampedActorNonce `protobuf:"bytes,54,rep,name=topic_last_reputer_commit,json=topicLastReputerCommit,proto3" json:"topic_last_reputer_commit,omitempty"`
	// ACTIVE TOPIC
	TopicToNextPossibleChurningBlock []*TopicIdAndBlockHeight        `protobuf:"bytes,57,rep,name=topic_to_next_possible_churning_block,json=topicToNextPossibleChurningBlock,proto3" json:"topic_to_next_possible_churning_block,omitempty"`
	BlockToActiveTopics              []*BlockHeightTopicIds          `protobuf:"bytes,58,rep,name=block_to_active_topics,json=blockToActiveTopics,proto3" json:"block_to_active_topics,omitempty"`
	BlockToLowestActiveTopicWeight   []*BlockHeightTopicIdWeightPair `protobuf:"bytes,59,rep,name=block_to_lowest_active_topic_weight,json=blockToLowestActiveTopicWeight,proto3" json:"block_to_lowest_active_topic_weight,omitempty"`
	// EMA
	PreviousTopicQuantileInfererScoreEma    []*TopicIdAndDec `protobuf:"bytes,63,rep,name=previous_topic_quantile_inferer_score_ema,json=previousTopicQuantileInfererScoreEma,proto3" json:"previous_topic_quantile_inferer_score_ema,omitempty"`
	PreviousTopicQuantileForecasterScoreEma []*TopicIdAndDec `protobuf:"bytes,64,rep,name=previous_topic_quantile_forecaster_score_ema,json=previousTopicQuantileForecasterScoreEma,proto3" json:"previous_topic_quantile_forecaster_score_ema,omitempty"`
	PreviousTopicQuantileReputerScoreEma    []*TopicIdAndDec `protobuf:"bytes,65,rep,name=previous_topic_quantile_reputer_score_ema,json=previousTopicQuantileReputerScoreEma,proto3" json:"previous_topic_quantile_reputer_score_ema,omitempty"`
	// INCLUSIONS
	CountInfererInclusionsInTopicActiveSet    []*TopicIdActorIdUint64 `protobuf:"bytes,66,rep,name=count_inferer_inclusions_in_topic_active_set,json=countInfererInclusionsInTopicActiveSet,proto3" json:"count_inferer_inclusions_in_topic_active_set,omitempty"`
	CountForecasterInclusionsInTopicActiveSet []*TopicIdActorIdUint64 `protobuf:"bytes,67,rep,name=count_forecaster_inclusions_in_topic_active_set,json=countForecasterInclusionsInTopicActiveSet,proto3" json:"count_forecaster_inclusions_in_topic_active_set,omitempty"`
	// total sum of topic weights
	TotalSumPreviousTopicWeights string `protobuf:"bytes,68,opt,name=total_sum_previous_topic_weights,json=totalSumPreviousTopicWeights,proto3" json:"total_sum_previous_topic_weights,omitempty"`
	// reward emission on current block
	RewardCurrentBlockEmission string `protobuf:"bytes,69,opt,name=reward_current_block_emission,json=rewardCurrentBlockEmission,proto3" json:"reward_current_block_emission,omitempty"`
}

func (x *GenesisState) Reset() {
	*x = GenesisState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_genesis_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenesisState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenesisState) ProtoMessage() {}

// Deprecated: Use GenesisState.ProtoReflect.Descriptor instead.
func (*GenesisState) Descriptor() ([]byte, []int) {
	return file_emissions_v5_genesis_proto_rawDescGZIP(), []int{0}
}

func (x *GenesisState) GetParams() *v3.Params {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *GenesisState) GetNextTopicId() uint64 {
	if x != nil {
		return x.NextTopicId
	}
	return 0
}

func (x *GenesisState) GetTopics() []*TopicIdAndTopic {
	if x != nil {
		return x.Topics
	}
	return nil
}

func (x *GenesisState) GetActiveTopics() []uint64 {
	if x != nil {
		return x.ActiveTopics
	}
	return nil
}

func (x *GenesisState) GetRewardableTopics() []uint64 {
	if x != nil {
		return x.RewardableTopics
	}
	return nil
}

func (x *GenesisState) GetTopicWorkers() []*TopicAndActorId {
	if x != nil {
		return x.TopicWorkers
	}
	return nil
}

func (x *GenesisState) GetTopicReputers() []*TopicAndActorId {
	if x != nil {
		return x.TopicReputers
	}
	return nil
}

func (x *GenesisState) GetTopicRewardNonce() []*TopicIdAndBlockHeight {
	if x != nil {
		return x.TopicRewardNonce
	}
	return nil
}

func (x *GenesisState) GetInfererScoresByBlock() []*TopicIdBlockHeightScores {
	if x != nil {
		return x.InfererScoresByBlock
	}
	return nil
}

func (x *GenesisState) GetForecasterScoresByBlock() []*TopicIdBlockHeightScores {
	if x != nil {
		return x.ForecasterScoresByBlock
	}
	return nil
}

func (x *GenesisState) GetReputerScoresByBlock() []*TopicIdBlockHeightScores {
	if x != nil {
		return x.ReputerScoresByBlock
	}
	return nil
}

func (x *GenesisState) GetInfererScoreEmas() []*TopicIdActorIdScore {
	if x != nil {
		return x.InfererScoreEmas
	}
	return nil
}

func (x *GenesisState) GetForecasterScoreEmas() []*TopicIdActorIdScore {
	if x != nil {
		return x.ForecasterScoreEmas
	}
	return nil
}

func (x *GenesisState) GetReputerScoreEmas() []*TopicIdActorIdScore {
	if x != nil {
		return x.ReputerScoreEmas
	}
	return nil
}

func (x *GenesisState) GetReputerListeningCoefficient() []*TopicIdActorIdListeningCoefficient {
	if x != nil {
		return x.ReputerListeningCoefficient
	}
	return nil
}

func (x *GenesisState) GetPreviousReputerRewardFraction() []*TopicIdActorIdDec {
	if x != nil {
		return x.PreviousReputerRewardFraction
	}
	return nil
}

func (x *GenesisState) GetPreviousInferenceRewardFraction() []*TopicIdActorIdDec {
	if x != nil {
		return x.PreviousInferenceRewardFraction
	}
	return nil
}

func (x *GenesisState) GetPreviousForecastRewardFraction() []*TopicIdActorIdDec {
	if x != nil {
		return x.PreviousForecastRewardFraction
	}
	return nil
}

func (x *GenesisState) GetPreviousForecasterScoreRatio() []*TopicIdAndDec {
	if x != nil {
		return x.PreviousForecasterScoreRatio
	}
	return nil
}

func (x *GenesisState) GetTotalStake() string {
	if x != nil {
		return x.TotalStake
	}
	return ""
}

func (x *GenesisState) GetTopicStake() []*TopicIdAndInt {
	if x != nil {
		return x.TopicStake
	}
	return nil
}

func (x *GenesisState) GetStakeReputerAuthority() []*TopicIdActorIdInt {
	if x != nil {
		return x.StakeReputerAuthority
	}
	return nil
}

func (x *GenesisState) GetStakeSumFromDelegator() []*TopicIdActorIdInt {
	if x != nil {
		return x.StakeSumFromDelegator
	}
	return nil
}

func (x *GenesisState) GetDelegatedStakes() []*TopicIdDelegatorReputerDelegatorInfo {
	if x != nil {
		return x.DelegatedStakes
	}
	return nil
}

func (x *GenesisState) GetStakeFromDelegatorsUponReputer() []*TopicIdActorIdInt {
	if x != nil {
		return x.StakeFromDelegatorsUponReputer
	}
	return nil
}

func (x *GenesisState) GetDelegateRewardPerShare() []*TopicIdActorIdDec {
	if x != nil {
		return x.DelegateRewardPerShare
	}
	return nil
}

func (x *GenesisState) GetStakeRemovalsByBlock() []*BlockHeightTopicIdReputerStakeRemovalInfo {
	if x != nil {
		return x.StakeRemovalsByBlock
	}
	return nil
}

func (x *GenesisState) GetStakeRemovalsByActor() []*ActorIdTopicIdBlockHeight {
	if x != nil {
		return x.StakeRemovalsByActor
	}
	return nil
}

func (x *GenesisState) GetDelegateStakeRemovalsByBlock() []*BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo {
	if x != nil {
		return x.DelegateStakeRemovalsByBlock
	}
	return nil
}

func (x *GenesisState) GetDelegateStakeRemovalsByActor() []*DelegatorReputerTopicIdBlockHeight {
	if x != nil {
		return x.DelegateStakeRemovalsByActor
	}
	return nil
}

func (x *GenesisState) GetInferences() []*TopicIdActorIdInference {
	if x != nil {
		return x.Inferences
	}
	return nil
}

func (x *GenesisState) GetForecasts() []*TopicIdActorIdForecast {
	if x != nil {
		return x.Forecasts
	}
	return nil
}

func (x *GenesisState) GetWorkers() []*LibP2PKeyAndOffchainNode {
	if x != nil {
		return x.Workers
	}
	return nil
}

func (x *GenesisState) GetReputers() []*LibP2PKeyAndOffchainNode {
	if x != nil {
		return x.Reputers
	}
	return nil
}

func (x *GenesisState) GetTopicFeeRevenue() []*TopicIdAndInt {
	if x != nil {
		return x.TopicFeeRevenue
	}
	return nil
}

func (x *GenesisState) GetPreviousTopicWeight() []*TopicIdAndDec {
	if x != nil {
		return x.PreviousTopicWeight
	}
	return nil
}

func (x *GenesisState) GetAllInferences() []*TopicIdBlockHeightInferences {
	if x != nil {
		return x.AllInferences
	}
	return nil
}

func (x *GenesisState) GetAllForecasts() []*TopicIdBlockHeightForecasts {
	if x != nil {
		return x.AllForecasts
	}
	return nil
}

func (x *GenesisState) GetAllLossBundles() []*TopicIdBlockHeightReputerValueBundles {
	if x != nil {
		return x.AllLossBundles
	}
	return nil
}

func (x *GenesisState) GetNetworkLossBundles() []*TopicIdBlockHeightValueBundles {
	if x != nil {
		return x.NetworkLossBundles
	}
	return nil
}

func (x *GenesisState) GetPreviousPercentageRewardToStakedReputers() string {
	if x != nil {
		return x.PreviousPercentageRewardToStakedReputers
	}
	return ""
}

func (x *GenesisState) GetOpenWorkerWindows() []*BlockHeightAndTopicIds {
	if x != nil {
		return x.OpenWorkerWindows
	}
	return nil
}

func (x *GenesisState) GetUnfulfilledWorkerNonces() []*TopicIdAndNonces {
	if x != nil {
		return x.UnfulfilledWorkerNonces
	}
	return nil
}

func (x *GenesisState) GetUnfulfilledReputerNonces() []*TopicIdAndReputerRequestNonces {
	if x != nil {
		return x.UnfulfilledReputerNonces
	}
	return nil
}

func (x *GenesisState) GetLastDripBlock() []*TopicIdAndBlockHeight {
	if x != nil {
		return x.LastDripBlock
	}
	return nil
}

func (x *GenesisState) GetLatestInfererNetworkRegrets() []*TopicIdActorIdTimeStampedValue {
	if x != nil {
		return x.LatestInfererNetworkRegrets
	}
	return nil
}

func (x *GenesisState) GetLatestForecasterNetworkRegrets() []*TopicIdActorIdTimeStampedValue {
	if x != nil {
		return x.LatestForecasterNetworkRegrets
	}
	return nil
}

func (x *GenesisState) GetLatestOneInForecasterNetworkRegrets() []*TopicIdActorIdActorIdTimeStampedValue {
	if x != nil {
		return x.LatestOneInForecasterNetworkRegrets
	}
	return nil
}

func (x *GenesisState) GetLatestNaiveInfererNetworkRegrets() []*TopicIdActorIdTimeStampedValue {
	if x != nil {
		return x.LatestNaiveInfererNetworkRegrets
	}
	return nil
}

func (x *GenesisState) GetLatestOneOutInfererInfererNetworkRegrets() []*TopicIdActorIdActorIdTimeStampedValue {
	if x != nil {
		return x.LatestOneOutInfererInfererNetworkRegrets
	}
	return nil
}

func (x *GenesisState) GetLatestOneOutInfererForecasterNetworkRegrets() []*TopicIdActorIdActorIdTimeStampedValue {
	if x != nil {
		return x.LatestOneOutInfererForecasterNetworkRegrets
	}
	return nil
}

func (x *GenesisState) GetLatestOneOutForecasterInfererNetworkRegrets() []*TopicIdActorIdActorIdTimeStampedValue {
	if x != nil {
		return x.LatestOneOutForecasterInfererNetworkRegrets
	}
	return nil
}

func (x *GenesisState) GetLatestOneOutForecasterForecasterNetworkRegrets() []*TopicIdActorIdActorIdTimeStampedValue {
	if x != nil {
		return x.LatestOneOutForecasterForecasterNetworkRegrets
	}
	return nil
}

func (x *GenesisState) GetCoreTeamAddresses() []string {
	if x != nil {
		return x.CoreTeamAddresses
	}
	return nil
}

func (x *GenesisState) GetTopicLastWorkerCommit() []*TopicIdTimestampedActorNonce {
	if x != nil {
		return x.TopicLastWorkerCommit
	}
	return nil
}

func (x *GenesisState) GetTopicLastReputerCommit() []*TopicIdTimestampedActorNonce {
	if x != nil {
		return x.TopicLastReputerCommit
	}
	return nil
}

func (x *GenesisState) GetTopicToNextPossibleChurningBlock() []*TopicIdAndBlockHeight {
	if x != nil {
		return x.TopicToNextPossibleChurningBlock
	}
	return nil
}

func (x *GenesisState) GetBlockToActiveTopics() []*BlockHeightTopicIds {
	if x != nil {
		return x.BlockToActiveTopics
	}
	return nil
}

func (x *GenesisState) GetBlockToLowestActiveTopicWeight() []*BlockHeightTopicIdWeightPair {
	if x != nil {
		return x.BlockToLowestActiveTopicWeight
	}
	return nil
}

func (x *GenesisState) GetPreviousTopicQuantileInfererScoreEma() []*TopicIdAndDec {
	if x != nil {
		return x.PreviousTopicQuantileInfererScoreEma
	}
	return nil
}

func (x *GenesisState) GetPreviousTopicQuantileForecasterScoreEma() []*TopicIdAndDec {
	if x != nil {
		return x.PreviousTopicQuantileForecasterScoreEma
	}
	return nil
}

func (x *GenesisState) GetPreviousTopicQuantileReputerScoreEma() []*TopicIdAndDec {
	if x != nil {
		return x.PreviousTopicQuantileReputerScoreEma
	}
	return nil
}

func (x *GenesisState) GetCountInfererInclusionsInTopicActiveSet() []*TopicIdActorIdUint64 {
	if x != nil {
		return x.CountInfererInclusionsInTopicActiveSet
	}
	return nil
}

func (x *GenesisState) GetCountForecasterInclusionsInTopicActiveSet() []*TopicIdActorIdUint64 {
	if x != nil {
		return x.CountForecasterInclusionsInTopicActiveSet
	}
	return nil
}

func (x *GenesisState) GetTotalSumPreviousTopicWeights() string {
	if x != nil {
		return x.TotalSumPreviousTopicWeights
	}
	return ""
}

func (x *GenesisState) GetRewardCurrentBlockEmission() string {
	if x != nil {
		return x.RewardCurrentBlockEmission
	}
	return ""
}

type TopicIdAndTopic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId uint64    `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	Topic   *v3.Topic `protobuf:"bytes,2,opt,name=topic,proto3" json:"topic,omitempty"`
}

func (x *TopicIdAndTopic) Reset() {
	*x = TopicIdAndTopic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_genesis_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopicIdAndTopic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopicIdAndTopic) ProtoMessage() {}

// Deprecated: Use TopicIdAndTopic.ProtoReflect.Descriptor instead.
func (*TopicIdAndTopic) Descriptor() ([]byte, []int) {
	return file_emissions_v5_genesis_proto_rawDescGZIP(), []int{1}
}

func (x *TopicIdAndTopic) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

func (x *TopicIdAndTopic) GetTopic() *v3.Topic {
	if x != nil {
		return x.Topic
	}
	return nil
}

type TopicAndActorId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId uint64 `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	ActorId string `protobuf:"bytes,2,opt,name=actor_id,json=actorId,proto3" json:"actor_id,omitempty"`
}

func (x *TopicAndActorId) Reset() {
	*x = TopicAndActorId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_genesis_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopicAndActorId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopicAndActorId) ProtoMessage() {}

// Deprecated: Use TopicAndActorId.ProtoReflect.Descriptor instead.
func (*TopicAndActorId) Descriptor() ([]byte, []int) {
	return file_emissions_v5_genesis_proto_rawDescGZIP(), []int{2}
}

func (x *TopicAndActorId) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

func (x *TopicAndActorId) GetActorId() string {
	if x != nil {
		return x.ActorId
	}
	return ""
}

type TopicIdAndBlockHeight struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId     uint64 `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	BlockHeight int64  `protobuf:"varint,2,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
}

func (x *TopicIdAndBlockHeight) Reset() {
	*x = TopicIdAndBlockHeight{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_genesis_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopicIdAndBlockHeight) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopicIdAndBlockHeight) ProtoMessage() {}

// Deprecated: Use TopicIdAndBlockHeight.ProtoReflect.Descriptor instead.
func (*TopicIdAndBlockHeight) Descriptor() ([]byte, []int) {
	return file_emissions_v5_genesis_proto_rawDescGZIP(), []int{3}
}

func (x *TopicIdAndBlockHeight) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

func (x *TopicIdAndBlockHeight) GetBlockHeight() int64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

type BlockHeightAndTopicIds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockHeight int64    `protobuf:"varint,1,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	TopicIds    []uint64 `protobuf:"varint,2,rep,packed,name=topic_ids,json=topicIds,proto3" json:"topic_ids,omitempty"`
}

func (x *BlockHeightAndTopicIds) Reset() {
	*x = BlockHeightAndTopicIds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_genesis_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockHeightAndTopicIds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockHeightAndTopicIds) ProtoMessage() {}

// Deprecated: Use BlockHeightAndTopicIds.ProtoReflect.Descriptor instead.
func (*BlockHeightAndTopicIds) Descriptor() ([]byte, []int) {
	return file_emissions_v5_genesis_proto_rawDescGZIP(), []int{4}
}

func (x *BlockHeightAndTopicIds) GetBlockHeight() int64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

func (x *BlockHeightAndTopicIds) GetTopicIds() []uint64 {
	if x != nil {
		return x.TopicIds
	}
	return nil
}

type TopicIdBlockHeightScores struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId     uint64     `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	BlockHeight int64      `protobuf:"varint,2,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	Scores      *v3.Scores `protobuf:"bytes,3,opt,name=scores,proto3" json:"scores,omitempty"`
}

func (x *TopicIdBlockHeightScores) Reset() {
	*x = TopicIdBlockHeightScores{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_genesis_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopicIdBlockHeightScores) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopicIdBlockHeightScores) ProtoMessage() {}

// Deprecated: Use TopicIdBlockHeightScores.ProtoReflect.Descriptor instead.
func (*TopicIdBlockHeightScores) Descriptor() ([]byte, []int) {
	return file_emissions_v5_genesis_proto_rawDescGZIP(), []int{5}
}

func (x *TopicIdBlockHeightScores) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

func (x *TopicIdBlockHeightScores) GetBlockHeight() int64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

func (x *TopicIdBlockHeightScores) GetScores() *v3.Scores {
	if x != nil {
		return x.Scores
	}
	return nil
}

type TopicIdActorIdScore struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId uint64    `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	ActorId string    `protobuf:"bytes,2,opt,name=actor_id,json=actorId,proto3" json:"actor_id,omitempty"`
	Score   *v3.Score `protobuf:"bytes,3,opt,name=score,proto3" json:"score,omitempty"`
}

func (x *TopicIdActorIdScore) Reset() {
	*x = TopicIdActorIdScore{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_genesis_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopicIdActorIdScore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopicIdActorIdScore) ProtoMessage() {}

// Deprecated: Use TopicIdActorIdScore.ProtoReflect.Descriptor instead.
func (*TopicIdActorIdScore) Descriptor() ([]byte, []int) {
	return file_emissions_v5_genesis_proto_rawDescGZIP(), []int{6}
}

func (x *TopicIdActorIdScore) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

func (x *TopicIdActorIdScore) GetActorId() string {
	if x != nil {
		return x.ActorId
	}
	return ""
}

func (x *TopicIdActorIdScore) GetScore() *v3.Score {
	if x != nil {
		return x.Score
	}
	return nil
}

type TopicIdActorIdUint64 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId uint64 `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	ActorId string `protobuf:"bytes,2,opt,name=actor_id,json=actorId,proto3" json:"actor_id,omitempty"`
	Uint64  uint64 `protobuf:"varint,3,opt,name=uint64,proto3" json:"uint64,omitempty"`
}

func (x *TopicIdActorIdUint64) Reset() {
	*x = TopicIdActorIdUint64{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_genesis_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopicIdActorIdUint64) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopicIdActorIdUint64) ProtoMessage() {}

// Deprecated: Use TopicIdActorIdUint64.ProtoReflect.Descriptor instead.
func (*TopicIdActorIdUint64) Descriptor() ([]byte, []int) {
	return file_emissions_v5_genesis_proto_rawDescGZIP(), []int{7}
}

func (x *TopicIdActorIdUint64) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

func (x *TopicIdActorIdUint64) GetActorId() string {
	if x != nil {
		return x.ActorId
	}
	return ""
}

func (x *TopicIdActorIdUint64) GetUint64() uint64 {
	if x != nil {
		return x.Uint64
	}
	return 0
}

type TopicIdActorIdListeningCoefficient struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId              uint64                   `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	ActorId              string                   `protobuf:"bytes,2,opt,name=actor_id,json=actorId,proto3" json:"actor_id,omitempty"`
	ListeningCoefficient *v3.ListeningCoefficient `protobuf:"bytes,3,opt,name=listening_coefficient,json=listeningCoefficient,proto3" json:"listening_coefficient,omitempty"`
}

func (x *TopicIdActorIdListeningCoefficient) Reset() {
	*x = TopicIdActorIdListeningCoefficient{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_genesis_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopicIdActorIdListeningCoefficient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopicIdActorIdListeningCoefficient) ProtoMessage() {}

// Deprecated: Use TopicIdActorIdListeningCoefficient.ProtoReflect.Descriptor instead.
func (*TopicIdActorIdListeningCoefficient) Descriptor() ([]byte, []int) {
	return file_emissions_v5_genesis_proto_rawDescGZIP(), []int{8}
}

func (x *TopicIdActorIdListeningCoefficient) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

func (x *TopicIdActorIdListeningCoefficient) GetActorId() string {
	if x != nil {
		return x.ActorId
	}
	return ""
}

func (x *TopicIdActorIdListeningCoefficient) GetListeningCoefficient() *v3.ListeningCoefficient {
	if x != nil {
		return x.ListeningCoefficient
	}
	return nil
}

type TopicIdActorIdDec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId uint64 `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	ActorId string `protobuf:"bytes,2,opt,name=actor_id,json=actorId,proto3" json:"actor_id,omitempty"`
	Dec     string `protobuf:"bytes,3,opt,name=dec,proto3" json:"dec,omitempty"`
}

func (x *TopicIdActorIdDec) Reset() {
	*x = TopicIdActorIdDec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_genesis_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopicIdActorIdDec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopicIdActorIdDec) ProtoMessage() {}

// Deprecated: Use TopicIdActorIdDec.ProtoReflect.Descriptor instead.
func (*TopicIdActorIdDec) Descriptor() ([]byte, []int) {
	return file_emissions_v5_genesis_proto_rawDescGZIP(), []int{9}
}

func (x *TopicIdActorIdDec) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

func (x *TopicIdActorIdDec) GetActorId() string {
	if x != nil {
		return x.ActorId
	}
	return ""
}

func (x *TopicIdActorIdDec) GetDec() string {
	if x != nil {
		return x.Dec
	}
	return ""
}

type TopicIdAndInt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId uint64 `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	Int     string `protobuf:"bytes,2,opt,name=int,proto3" json:"int,omitempty"`
}

func (x *TopicIdAndInt) Reset() {
	*x = TopicIdAndInt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_genesis_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopicIdAndInt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopicIdAndInt) ProtoMessage() {}

// Deprecated: Use TopicIdAndInt.ProtoReflect.Descriptor instead.
func (*TopicIdAndInt) Descriptor() ([]byte, []int) {
	return file_emissions_v5_genesis_proto_rawDescGZIP(), []int{10}
}

func (x *TopicIdAndInt) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

func (x *TopicIdAndInt) GetInt() string {
	if x != nil {
		return x.Int
	}
	return ""
}

type TopicIdActorIdInt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId uint64 `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	ActorId string `protobuf:"bytes,2,opt,name=actor_id,json=actorId,proto3" json:"actor_id,omitempty"`
	Int     string `protobuf:"bytes,3,opt,name=int,proto3" json:"int,omitempty"`
}

func (x *TopicIdActorIdInt) Reset() {
	*x = TopicIdActorIdInt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_genesis_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopicIdActorIdInt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopicIdActorIdInt) ProtoMessage() {}

// Deprecated: Use TopicIdActorIdInt.ProtoReflect.Descriptor instead.
func (*TopicIdActorIdInt) Descriptor() ([]byte, []int) {
	return file_emissions_v5_genesis_proto_rawDescGZIP(), []int{11}
}

func (x *TopicIdActorIdInt) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

func (x *TopicIdActorIdInt) GetActorId() string {
	if x != nil {
		return x.ActorId
	}
	return ""
}

func (x *TopicIdActorIdInt) GetInt() string {
	if x != nil {
		return x.Int
	}
	return ""
}

type TopicIdDelegatorReputerDelegatorInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId       uint64            `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	Delegator     string            `protobuf:"bytes,2,opt,name=delegator,proto3" json:"delegator,omitempty"`
	Reputer       string            `protobuf:"bytes,3,opt,name=reputer,proto3" json:"reputer,omitempty"`
	DelegatorInfo *v3.DelegatorInfo `protobuf:"bytes,4,opt,name=delegator_info,json=delegatorInfo,proto3" json:"delegator_info,omitempty"`
}

func (x *TopicIdDelegatorReputerDelegatorInfo) Reset() {
	*x = TopicIdDelegatorReputerDelegatorInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_genesis_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopicIdDelegatorReputerDelegatorInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopicIdDelegatorReputerDelegatorInfo) ProtoMessage() {}

// Deprecated: Use TopicIdDelegatorReputerDelegatorInfo.ProtoReflect.Descriptor instead.
func (*TopicIdDelegatorReputerDelegatorInfo) Descriptor() ([]byte, []int) {
	return file_emissions_v5_genesis_proto_rawDescGZIP(), []int{12}
}

func (x *TopicIdDelegatorReputerDelegatorInfo) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

func (x *TopicIdDelegatorReputerDelegatorInfo) GetDelegator() string {
	if x != nil {
		return x.Delegator
	}
	return ""
}

func (x *TopicIdDelegatorReputerDelegatorInfo) GetReputer() string {
	if x != nil {
		return x.Reputer
	}
	return ""
}

func (x *TopicIdDelegatorReputerDelegatorInfo) GetDelegatorInfo() *v3.DelegatorInfo {
	if x != nil {
		return x.DelegatorInfo
	}
	return nil
}

type BlockHeightTopicIdReputerStakeRemovalInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockHeight      int64                `protobuf:"varint,1,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	TopicId          uint64               `protobuf:"varint,2,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	Reputer          string               `protobuf:"bytes,3,opt,name=reputer,proto3" json:"reputer,omitempty"`
	StakeRemovalInfo *v3.StakeRemovalInfo `protobuf:"bytes,4,opt,name=stake_removal_info,json=stakeRemovalInfo,proto3" json:"stake_removal_info,omitempty"`
}

func (x *BlockHeightTopicIdReputerStakeRemovalInfo) Reset() {
	*x = BlockHeightTopicIdReputerStakeRemovalInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_genesis_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockHeightTopicIdReputerStakeRemovalInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockHeightTopicIdReputerStakeRemovalInfo) ProtoMessage() {}

// Deprecated: Use BlockHeightTopicIdReputerStakeRemovalInfo.ProtoReflect.Descriptor instead.
func (*BlockHeightTopicIdReputerStakeRemovalInfo) Descriptor() ([]byte, []int) {
	return file_emissions_v5_genesis_proto_rawDescGZIP(), []int{13}
}

func (x *BlockHeightTopicIdReputerStakeRemovalInfo) GetBlockHeight() int64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

func (x *BlockHeightTopicIdReputerStakeRemovalInfo) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

func (x *BlockHeightTopicIdReputerStakeRemovalInfo) GetReputer() string {
	if x != nil {
		return x.Reputer
	}
	return ""
}

func (x *BlockHeightTopicIdReputerStakeRemovalInfo) GetStakeRemovalInfo() *v3.StakeRemovalInfo {
	if x != nil {
		return x.StakeRemovalInfo
	}
	return nil
}

type ActorIdTopicIdBlockHeight struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActorId     string `protobuf:"bytes,1,opt,name=actor_id,json=actorId,proto3" json:"actor_id,omitempty"`
	TopicId     uint64 `protobuf:"varint,2,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	BlockHeight int64  `protobuf:"varint,3,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
}

func (x *ActorIdTopicIdBlockHeight) Reset() {
	*x = ActorIdTopicIdBlockHeight{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_genesis_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActorIdTopicIdBlockHeight) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActorIdTopicIdBlockHeight) ProtoMessage() {}

// Deprecated: Use ActorIdTopicIdBlockHeight.ProtoReflect.Descriptor instead.
func (*ActorIdTopicIdBlockHeight) Descriptor() ([]byte, []int) {
	return file_emissions_v5_genesis_proto_rawDescGZIP(), []int{14}
}

func (x *ActorIdTopicIdBlockHeight) GetActorId() string {
	if x != nil {
		return x.ActorId
	}
	return ""
}

func (x *ActorIdTopicIdBlockHeight) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

func (x *ActorIdTopicIdBlockHeight) GetBlockHeight() int64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

type BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockHeight              int64                        `protobuf:"varint,1,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	TopicId                  uint64                       `protobuf:"varint,2,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	Delegator                string                       `protobuf:"bytes,3,opt,name=delegator,proto3" json:"delegator,omitempty"`
	Reputer                  string                       `protobuf:"bytes,4,opt,name=reputer,proto3" json:"reputer,omitempty"`
	DelegateStakeRemovalInfo *v3.DelegateStakeRemovalInfo `protobuf:"bytes,5,opt,name=delegate_stake_removal_info,json=delegateStakeRemovalInfo,proto3" json:"delegate_stake_removal_info,omitempty"`
}

func (x *BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo) Reset() {
	*x = BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_genesis_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo) ProtoMessage() {}

// Deprecated: Use BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo.ProtoReflect.Descriptor instead.
func (*BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo) Descriptor() ([]byte, []int) {
	return file_emissions_v5_genesis_proto_rawDescGZIP(), []int{15}
}

func (x *BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo) GetBlockHeight() int64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

func (x *BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

func (x *BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo) GetDelegator() string {
	if x != nil {
		return x.Delegator
	}
	return ""
}

func (x *BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo) GetReputer() string {
	if x != nil {
		return x.Reputer
	}
	return ""
}

func (x *BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo) GetDelegateStakeRemovalInfo() *v3.DelegateStakeRemovalInfo {
	if x != nil {
		return x.DelegateStakeRemovalInfo
	}
	return nil
}

type DelegatorReputerTopicIdBlockHeight struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Delegator   string `protobuf:"bytes,1,opt,name=delegator,proto3" json:"delegator,omitempty"`
	Reputer     string `protobuf:"bytes,2,opt,name=reputer,proto3" json:"reputer,omitempty"`
	TopicId     uint64 `protobuf:"varint,3,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	BlockHeight int64  `protobuf:"varint,4,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
}

func (x *DelegatorReputerTopicIdBlockHeight) Reset() {
	*x = DelegatorReputerTopicIdBlockHeight{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_genesis_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelegatorReputerTopicIdBlockHeight) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelegatorReputerTopicIdBlockHeight) ProtoMessage() {}

// Deprecated: Use DelegatorReputerTopicIdBlockHeight.ProtoReflect.Descriptor instead.
func (*DelegatorReputerTopicIdBlockHeight) Descriptor() ([]byte, []int) {
	return file_emissions_v5_genesis_proto_rawDescGZIP(), []int{16}
}

func (x *DelegatorReputerTopicIdBlockHeight) GetDelegator() string {
	if x != nil {
		return x.Delegator
	}
	return ""
}

func (x *DelegatorReputerTopicIdBlockHeight) GetReputer() string {
	if x != nil {
		return x.Reputer
	}
	return ""
}

func (x *DelegatorReputerTopicIdBlockHeight) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

func (x *DelegatorReputerTopicIdBlockHeight) GetBlockHeight() int64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

type TopicIdActorIdInference struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId   uint64        `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	ActorId   string        `protobuf:"bytes,2,opt,name=actor_id,json=actorId,proto3" json:"actor_id,omitempty"`
	Inference *v3.Inference `protobuf:"bytes,3,opt,name=inference,proto3" json:"inference,omitempty"`
}

func (x *TopicIdActorIdInference) Reset() {
	*x = TopicIdActorIdInference{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_genesis_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopicIdActorIdInference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopicIdActorIdInference) ProtoMessage() {}

// Deprecated: Use TopicIdActorIdInference.ProtoReflect.Descriptor instead.
func (*TopicIdActorIdInference) Descriptor() ([]byte, []int) {
	return file_emissions_v5_genesis_proto_rawDescGZIP(), []int{17}
}

func (x *TopicIdActorIdInference) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

func (x *TopicIdActorIdInference) GetActorId() string {
	if x != nil {
		return x.ActorId
	}
	return ""
}

func (x *TopicIdActorIdInference) GetInference() *v3.Inference {
	if x != nil {
		return x.Inference
	}
	return nil
}

type TopicIdActorIdForecast struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId  uint64       `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	ActorId  string       `protobuf:"bytes,2,opt,name=actor_id,json=actorId,proto3" json:"actor_id,omitempty"`
	Forecast *v3.Forecast `protobuf:"bytes,3,opt,name=forecast,proto3" json:"forecast,omitempty"`
}

func (x *TopicIdActorIdForecast) Reset() {
	*x = TopicIdActorIdForecast{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_genesis_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopicIdActorIdForecast) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopicIdActorIdForecast) ProtoMessage() {}

// Deprecated: Use TopicIdActorIdForecast.ProtoReflect.Descriptor instead.
func (*TopicIdActorIdForecast) Descriptor() ([]byte, []int) {
	return file_emissions_v5_genesis_proto_rawDescGZIP(), []int{18}
}

func (x *TopicIdActorIdForecast) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

func (x *TopicIdActorIdForecast) GetActorId() string {
	if x != nil {
		return x.ActorId
	}
	return ""
}

func (x *TopicIdActorIdForecast) GetForecast() *v3.Forecast {
	if x != nil {
		return x.Forecast
	}
	return nil
}

type LibP2PKeyAndOffchainNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LibP2PKey    string           `protobuf:"bytes,1,opt,name=lib_p2p_key,json=libP2pKey,proto3" json:"lib_p2p_key,omitempty"`
	OffchainNode *v3.OffchainNode `protobuf:"bytes,2,opt,name=offchain_node,json=offchainNode,proto3" json:"offchain_node,omitempty"`
}

func (x *LibP2PKeyAndOffchainNode) Reset() {
	*x = LibP2PKeyAndOffchainNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_genesis_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LibP2PKeyAndOffchainNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LibP2PKeyAndOffchainNode) ProtoMessage() {}

// Deprecated: Use LibP2PKeyAndOffchainNode.ProtoReflect.Descriptor instead.
func (*LibP2PKeyAndOffchainNode) Descriptor() ([]byte, []int) {
	return file_emissions_v5_genesis_proto_rawDescGZIP(), []int{19}
}

func (x *LibP2PKeyAndOffchainNode) GetLibP2PKey() string {
	if x != nil {
		return x.LibP2PKey
	}
	return ""
}

func (x *LibP2PKeyAndOffchainNode) GetOffchainNode() *v3.OffchainNode {
	if x != nil {
		return x.OffchainNode
	}
	return nil
}

type TopicIdAndDec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId uint64 `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	Dec     string `protobuf:"bytes,2,opt,name=dec,proto3" json:"dec,omitempty"`
}

func (x *TopicIdAndDec) Reset() {
	*x = TopicIdAndDec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_genesis_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopicIdAndDec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopicIdAndDec) ProtoMessage() {}

// Deprecated: Use TopicIdAndDec.ProtoReflect.Descriptor instead.
func (*TopicIdAndDec) Descriptor() ([]byte, []int) {
	return file_emissions_v5_genesis_proto_rawDescGZIP(), []int{20}
}

func (x *TopicIdAndDec) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

func (x *TopicIdAndDec) GetDec() string {
	if x != nil {
		return x.Dec
	}
	return ""
}

type TopicIdBlockHeightInferences struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId     uint64         `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	BlockHeight int64          `protobuf:"varint,2,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	Inferences  *v3.Inferences `protobuf:"bytes,3,opt,name=inferences,proto3" json:"inferences,omitempty"`
}

func (x *TopicIdBlockHeightInferences) Reset() {
	*x = TopicIdBlockHeightInferences{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_genesis_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopicIdBlockHeightInferences) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopicIdBlockHeightInferences) ProtoMessage() {}

// Deprecated: Use TopicIdBlockHeightInferences.ProtoReflect.Descriptor instead.
func (*TopicIdBlockHeightInferences) Descriptor() ([]byte, []int) {
	return file_emissions_v5_genesis_proto_rawDescGZIP(), []int{21}
}

func (x *TopicIdBlockHeightInferences) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

func (x *TopicIdBlockHeightInferences) GetBlockHeight() int64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

func (x *TopicIdBlockHeightInferences) GetInferences() *v3.Inferences {
	if x != nil {
		return x.Inferences
	}
	return nil
}

type TopicIdBlockHeightForecasts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId     uint64        `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	BlockHeight int64         `protobuf:"varint,2,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	Forecasts   *v3.Forecasts `protobuf:"bytes,3,opt,name=forecasts,proto3" json:"forecasts,omitempty"`
}

func (x *TopicIdBlockHeightForecasts) Reset() {
	*x = TopicIdBlockHeightForecasts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_genesis_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopicIdBlockHeightForecasts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopicIdBlockHeightForecasts) ProtoMessage() {}

// Deprecated: Use TopicIdBlockHeightForecasts.ProtoReflect.Descriptor instead.
func (*TopicIdBlockHeightForecasts) Descriptor() ([]byte, []int) {
	return file_emissions_v5_genesis_proto_rawDescGZIP(), []int{22}
}

func (x *TopicIdBlockHeightForecasts) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

func (x *TopicIdBlockHeightForecasts) GetBlockHeight() int64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

func (x *TopicIdBlockHeightForecasts) GetForecasts() *v3.Forecasts {
	if x != nil {
		return x.Forecasts
	}
	return nil
}

type TopicIdBlockHeightReputerValueBundles struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId             uint64                  `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	BlockHeight         int64                   `protobuf:"varint,2,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	ReputerValueBundles *v3.ReputerValueBundles `protobuf:"bytes,3,opt,name=reputer_value_bundles,json=reputerValueBundles,proto3" json:"reputer_value_bundles,omitempty"`
}

func (x *TopicIdBlockHeightReputerValueBundles) Reset() {
	*x = TopicIdBlockHeightReputerValueBundles{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_genesis_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopicIdBlockHeightReputerValueBundles) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopicIdBlockHeightReputerValueBundles) ProtoMessage() {}

// Deprecated: Use TopicIdBlockHeightReputerValueBundles.ProtoReflect.Descriptor instead.
func (*TopicIdBlockHeightReputerValueBundles) Descriptor() ([]byte, []int) {
	return file_emissions_v5_genesis_proto_rawDescGZIP(), []int{23}
}

func (x *TopicIdBlockHeightReputerValueBundles) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

func (x *TopicIdBlockHeightReputerValueBundles) GetBlockHeight() int64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

func (x *TopicIdBlockHeightReputerValueBundles) GetReputerValueBundles() *v3.ReputerValueBundles {
	if x != nil {
		return x.ReputerValueBundles
	}
	return nil
}

type TopicIdBlockHeightValueBundles struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId     uint64          `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	BlockHeight int64           `protobuf:"varint,2,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	ValueBundle *v3.ValueBundle `protobuf:"bytes,3,opt,name=value_bundle,json=valueBundle,proto3" json:"value_bundle,omitempty"`
}

func (x *TopicIdBlockHeightValueBundles) Reset() {
	*x = TopicIdBlockHeightValueBundles{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_genesis_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopicIdBlockHeightValueBundles) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopicIdBlockHeightValueBundles) ProtoMessage() {}

// Deprecated: Use TopicIdBlockHeightValueBundles.ProtoReflect.Descriptor instead.
func (*TopicIdBlockHeightValueBundles) Descriptor() ([]byte, []int) {
	return file_emissions_v5_genesis_proto_rawDescGZIP(), []int{24}
}

func (x *TopicIdBlockHeightValueBundles) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

func (x *TopicIdBlockHeightValueBundles) GetBlockHeight() int64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

func (x *TopicIdBlockHeightValueBundles) GetValueBundle() *v3.ValueBundle {
	if x != nil {
		return x.ValueBundle
	}
	return nil
}

type TopicIdAndNonces struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId uint64     `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	Nonces  *v3.Nonces `protobuf:"bytes,2,opt,name=nonces,proto3" json:"nonces,omitempty"`
}

func (x *TopicIdAndNonces) Reset() {
	*x = TopicIdAndNonces{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_genesis_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopicIdAndNonces) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopicIdAndNonces) ProtoMessage() {}

// Deprecated: Use TopicIdAndNonces.ProtoReflect.Descriptor instead.
func (*TopicIdAndNonces) Descriptor() ([]byte, []int) {
	return file_emissions_v5_genesis_proto_rawDescGZIP(), []int{25}
}

func (x *TopicIdAndNonces) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

func (x *TopicIdAndNonces) GetNonces() *v3.Nonces {
	if x != nil {
		return x.Nonces
	}
	return nil
}

type TopicIdAndReputerRequestNonces struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId              uint64                   `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	ReputerRequestNonces *v3.ReputerRequestNonces `protobuf:"bytes,2,opt,name=reputer_request_nonces,json=reputerRequestNonces,proto3" json:"reputer_request_nonces,omitempty"`
}

func (x *TopicIdAndReputerRequestNonces) Reset() {
	*x = TopicIdAndReputerRequestNonces{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_genesis_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopicIdAndReputerRequestNonces) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopicIdAndReputerRequestNonces) ProtoMessage() {}

// Deprecated: Use TopicIdAndReputerRequestNonces.ProtoReflect.Descriptor instead.
func (*TopicIdAndReputerRequestNonces) Descriptor() ([]byte, []int) {
	return file_emissions_v5_genesis_proto_rawDescGZIP(), []int{26}
}

func (x *TopicIdAndReputerRequestNonces) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

func (x *TopicIdAndReputerRequestNonces) GetReputerRequestNonces() *v3.ReputerRequestNonces {
	if x != nil {
		return x.ReputerRequestNonces
	}
	return nil
}

type TopicIdActorIdTimeStampedValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId          uint64               `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	ActorId          string               `protobuf:"bytes,2,opt,name=actor_id,json=actorId,proto3" json:"actor_id,omitempty"`
	TimestampedValue *v3.TimestampedValue `protobuf:"bytes,3,opt,name=timestamped_value,json=timestampedValue,proto3" json:"timestamped_value,omitempty"`
}

func (x *TopicIdActorIdTimeStampedValue) Reset() {
	*x = TopicIdActorIdTimeStampedValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_genesis_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopicIdActorIdTimeStampedValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopicIdActorIdTimeStampedValue) ProtoMessage() {}

// Deprecated: Use TopicIdActorIdTimeStampedValue.ProtoReflect.Descriptor instead.
func (*TopicIdActorIdTimeStampedValue) Descriptor() ([]byte, []int) {
	return file_emissions_v5_genesis_proto_rawDescGZIP(), []int{27}
}

func (x *TopicIdActorIdTimeStampedValue) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

func (x *TopicIdActorIdTimeStampedValue) GetActorId() string {
	if x != nil {
		return x.ActorId
	}
	return ""
}

func (x *TopicIdActorIdTimeStampedValue) GetTimestampedValue() *v3.TimestampedValue {
	if x != nil {
		return x.TimestampedValue
	}
	return nil
}

type TopicIdActorIdActorIdTimeStampedValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId          uint64               `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	ActorId1         string               `protobuf:"bytes,2,opt,name=actor_id1,json=actorId1,proto3" json:"actor_id1,omitempty"`
	ActorId2         string               `protobuf:"bytes,3,opt,name=actor_id2,json=actorId2,proto3" json:"actor_id2,omitempty"`
	TimestampedValue *v3.TimestampedValue `protobuf:"bytes,4,opt,name=timestamped_value,json=timestampedValue,proto3" json:"timestamped_value,omitempty"`
}

func (x *TopicIdActorIdActorIdTimeStampedValue) Reset() {
	*x = TopicIdActorIdActorIdTimeStampedValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_genesis_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopicIdActorIdActorIdTimeStampedValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopicIdActorIdActorIdTimeStampedValue) ProtoMessage() {}

// Deprecated: Use TopicIdActorIdActorIdTimeStampedValue.ProtoReflect.Descriptor instead.
func (*TopicIdActorIdActorIdTimeStampedValue) Descriptor() ([]byte, []int) {
	return file_emissions_v5_genesis_proto_rawDescGZIP(), []int{28}
}

func (x *TopicIdActorIdActorIdTimeStampedValue) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

func (x *TopicIdActorIdActorIdTimeStampedValue) GetActorId1() string {
	if x != nil {
		return x.ActorId1
	}
	return ""
}

func (x *TopicIdActorIdActorIdTimeStampedValue) GetActorId2() string {
	if x != nil {
		return x.ActorId2
	}
	return ""
}

func (x *TopicIdActorIdActorIdTimeStampedValue) GetTimestampedValue() *v3.TimestampedValue {
	if x != nil {
		return x.TimestampedValue
	}
	return nil
}

type TopicIdTimestampedActorNonce struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId               uint64                    `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	TimestampedActorNonce *v3.TimestampedActorNonce `protobuf:"bytes,2,opt,name=timestamped_actor_nonce,json=timestampedActorNonce,proto3" json:"timestamped_actor_nonce,omitempty"`
}

func (x *TopicIdTimestampedActorNonce) Reset() {
	*x = TopicIdTimestampedActorNonce{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_genesis_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopicIdTimestampedActorNonce) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopicIdTimestampedActorNonce) ProtoMessage() {}

// Deprecated: Use TopicIdTimestampedActorNonce.ProtoReflect.Descriptor instead.
func (*TopicIdTimestampedActorNonce) Descriptor() ([]byte, []int) {
	return file_emissions_v5_genesis_proto_rawDescGZIP(), []int{29}
}

func (x *TopicIdTimestampedActorNonce) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

func (x *TopicIdTimestampedActorNonce) GetTimestampedActorNonce() *v3.TimestampedActorNonce {
	if x != nil {
		return x.TimestampedActorNonce
	}
	return nil
}

type BlockHeightTopicIds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockHeight int64        `protobuf:"varint,1,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	TopicIds    *v3.TopicIds `protobuf:"bytes,2,opt,name=topic_ids,json=topicIds,proto3" json:"topic_ids,omitempty"`
}

func (x *BlockHeightTopicIds) Reset() {
	*x = BlockHeightTopicIds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_genesis_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockHeightTopicIds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockHeightTopicIds) ProtoMessage() {}

// Deprecated: Use BlockHeightTopicIds.ProtoReflect.Descriptor instead.
func (*BlockHeightTopicIds) Descriptor() ([]byte, []int) {
	return file_emissions_v5_genesis_proto_rawDescGZIP(), []int{30}
}

func (x *BlockHeightTopicIds) GetBlockHeight() int64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

func (x *BlockHeightTopicIds) GetTopicIds() *v3.TopicIds {
	if x != nil {
		return x.TopicIds
	}
	return nil
}

type BlockHeightTopicIdWeightPair struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockHeight int64                 `protobuf:"varint,1,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	TopicWeight *v3.TopicIdWeightPair `protobuf:"bytes,2,opt,name=topic_weight,json=topicWeight,proto3" json:"topic_weight,omitempty"`
}

func (x *BlockHeightTopicIdWeightPair) Reset() {
	*x = BlockHeightTopicIdWeightPair{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_genesis_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockHeightTopicIdWeightPair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockHeightTopicIdWeightPair) ProtoMessage() {}

// Deprecated: Use BlockHeightTopicIdWeightPair.ProtoReflect.Descriptor instead.
func (*BlockHeightTopicIdWeightPair) Descriptor() ([]byte, []int) {
	return file_emissions_v5_genesis_proto_rawDescGZIP(), []int{31}
}

func (x *BlockHeightTopicIdWeightPair) GetBlockHeight() int64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

func (x *BlockHeightTopicIdWeightPair) GetTopicWeight() *v3.TopicIdWeightPair {
	if x != nil {
		return x.TopicWeight
	}
	return nil
}

var File_emissions_v5_genesis_proto protoreflect.FileDescriptor

var file_emissions_v5_genesis_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x35, 0x2f, 0x67,
	0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x65, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x1a, 0x11, 0x61, 0x6d, 0x69, 0x6e,
	0x6f, 0x2f, 0x61, 0x6d, 0x69, 0x6e, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x63,
	0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x73, 0x6d,
	0x6f, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x33, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x18, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x33, 0x2f,
	0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x65, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x33, 0x2f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x2f, 0x76, 0x33, 0x2f, 0x72, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x18, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x33,
	0x2f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x65, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x33, 0x2f, 0x73, 0x74, 0x61, 0x6b, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x2f, 0x76, 0x33, 0x2f, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x18, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x33, 0x2f, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x65, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x33, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x67, 0x6f, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x67, 0x6f, 0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xeb, 0x33, 0x0a, 0x0c,
	0x47, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x32, 0x0a, 0x06,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x65,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x33, 0x2e, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x12, 0x22, 0x0a, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x6e, 0x65, 0x78, 0x74, 0x54, 0x6f, 0x70,
	0x69, 0x63, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x06, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x76, 0x35, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x54, 0x6f,
	0x70, 0x69, 0x63, 0x52, 0x06, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x04, 0x52, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x73,
	0x12, 0x2b, 0x0a, 0x11, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x74,
	0x6f, 0x70, 0x69, 0x63, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x04, 0x52, 0x10, 0x72, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x12, 0x42, 0x0a,
	0x0d, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x73, 0x18, 0x07,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x76, 0x35, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x41, 0x6e, 0x64, 0x41, 0x63, 0x74, 0x6f,
	0x72, 0x49, 0x64, 0x52, 0x0c, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72,
	0x73, 0x12, 0x44, 0x0a, 0x0e, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x72, 0x65, 0x70, 0x75, 0x74,
	0x65, 0x72, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x41, 0x6e,
	0x64, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x52, 0x0d, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x52,
	0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x73, 0x12, 0x51, 0x0a, 0x12, 0x74, 0x6f, 0x70, 0x69, 0x63,
	0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x09, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x76, 0x35, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x52, 0x10, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x52,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x5d, 0x0a, 0x17, 0x69, 0x6e,
	0x66, 0x65, 0x72, 0x65, 0x72, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x5f, 0x62, 0x79, 0x5f,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x65, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63,
	0x49, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x73, 0x52, 0x14, 0x69, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x72, 0x53, 0x63, 0x6f, 0x72,
	0x65, 0x73, 0x42, 0x79, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x63, 0x0a, 0x1a, 0x66, 0x6f, 0x72,
	0x65, 0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x5f, 0x62,
	0x79, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e,
	0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x54, 0x6f, 0x70,
	0x69, 0x63, 0x49, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x73, 0x52, 0x17, 0x66, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x42, 0x79, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x5d,
	0x0a, 0x17, 0x72, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x73,
	0x5f, 0x62, 0x79, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x26, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x54,
	0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x52, 0x14, 0x72, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x42, 0x79, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x4f, 0x0a,
	0x12, 0x69, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x72, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x65,
	0x6d, 0x61, 0x73, 0x18, 0x3c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64,
	0x41, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x10, 0x69, 0x6e,
	0x66, 0x65, 0x72, 0x65, 0x72, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x45, 0x6d, 0x61, 0x73, 0x12, 0x55,
	0x0a, 0x15, 0x66, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x63, 0x6f,
	0x72, 0x65, 0x5f, 0x65, 0x6d, 0x61, 0x73, 0x18, 0x3d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x54, 0x6f, 0x70,
	0x69, 0x63, 0x49, 0x64, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x53, 0x63, 0x6f, 0x72, 0x65,
	0x52, 0x13, 0x66, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x53, 0x63, 0x6f, 0x72,
	0x65, 0x45, 0x6d, 0x61, 0x73, 0x12, 0x4f, 0x0a, 0x12, 0x72, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72,
	0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x65, 0x6d, 0x61, 0x73, 0x18, 0x3e, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35,
	0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x52, 0x10, 0x72, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x45, 0x6d, 0x61, 0x73, 0x12, 0x74, 0x0a, 0x1d, 0x72, 0x65, 0x70, 0x75, 0x74, 0x65,
	0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x65, 0x66,
	0x66, 0x69, 0x63, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x10, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e,
	0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x54, 0x6f, 0x70,
	0x69, 0x63, 0x49, 0x64, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x65,
	0x6e, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x65, 0x66, 0x66, 0x69, 0x63, 0x69, 0x65, 0x6e, 0x74, 0x52,
	0x1b, 0x72, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x69, 0x6e,
	0x67, 0x43, 0x6f, 0x65, 0x66, 0x66, 0x69, 0x63, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x68, 0x0a, 0x20,
	0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x5f, 0x72, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72,
	0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x11, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x41, 0x63, 0x74,
	0x6f, 0x72, 0x49, 0x64, 0x44, 0x65, 0x63, 0x52, 0x1d, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75,
	0x73, 0x52, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x46, 0x72,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x6c, 0x0a, 0x22, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f,
	0x75, 0x73, 0x5f, 0x69, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x5f, 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x12, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76,
	0x35, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64,
	0x44, 0x65, 0x63, 0x52, 0x1f, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x49, 0x6e, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x46, 0x72, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x6a, 0x0a, 0x21, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73,
	0x5f, 0x66, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x5f, 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x13, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x54,
	0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x44, 0x65, 0x63,
	0x52, 0x1e, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61,
	0x73, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x46, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x62, 0x0a, 0x1f, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x5f, 0x66, 0x6f, 0x72,
	0x65, 0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x18, 0x14, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x65, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64,
	0x41, 0x6e, 0x64, 0x44, 0x65, 0x63, 0x52, 0x1c, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73,
	0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52,
	0x61, 0x74, 0x69, 0x6f, 0x12, 0x51, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x74,
	0x61, 0x6b, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x42, 0x30, 0xc8, 0xde, 0x1f, 0x00, 0xda,
	0xde, 0x1f, 0x15, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73, 0x64, 0x6b, 0x2e, 0x69, 0x6f, 0x2f,
	0x6d, 0x61, 0x74, 0x68, 0x2e, 0x49, 0x6e, 0x74, 0xd2, 0xb4, 0x2d, 0x0a, 0x63, 0x6f, 0x73, 0x6d,
	0x6f, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0xa8, 0xe7, 0xb0, 0x2a, 0x01, 0x52, 0x0a, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x12, 0x3c, 0x0a, 0x0b, 0x74, 0x6f, 0x70, 0x69, 0x63,
	0x5f, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x18, 0x16, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x65,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x54, 0x6f, 0x70, 0x69,
	0x63, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x49, 0x6e, 0x74, 0x52, 0x0a, 0x74, 0x6f, 0x70, 0x69, 0x63,
	0x53, 0x74, 0x61, 0x6b, 0x65, 0x12, 0x57, 0x0a, 0x17, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x5f, 0x72,
	0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79,
	0x18, 0x17, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x41, 0x63, 0x74,
	0x6f, 0x72, 0x49, 0x64, 0x49, 0x6e, 0x74, 0x52, 0x15, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x52, 0x65,
	0x70, 0x75, 0x74, 0x65, 0x72, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x58,
	0x0a, 0x18, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x5f, 0x73, 0x75, 0x6d, 0x5f, 0x66, 0x72, 0x6f, 0x6d,
	0x5f, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x18, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e,
	0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x49, 0x6e,
	0x74, 0x52, 0x15, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x53, 0x75, 0x6d, 0x46, 0x72, 0x6f, 0x6d, 0x44,
	0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x5d, 0x0a, 0x10, 0x64, 0x65, 0x6c, 0x65,
	0x67, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x73, 0x18, 0x19, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x32, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76,
	0x35, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74,
	0x6f, 0x72, 0x52, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74,
	0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0f, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65,
	0x64, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x73, 0x12, 0x6b, 0x0a, 0x22, 0x73, 0x74, 0x61, 0x6b, 0x65,
	0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x73,
	0x5f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x18, 0x1a, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x76, 0x35, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x49,
	0x64, 0x49, 0x6e, 0x74, 0x52, 0x1e, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x44,
	0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x55, 0x70, 0x6f, 0x6e, 0x52, 0x65, 0x70,
	0x75, 0x74, 0x65, 0x72, 0x12, 0x5a, 0x0a, 0x19, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65,
	0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x18, 0x1b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x41, 0x63,
	0x74, 0x6f, 0x72, 0x49, 0x64, 0x44, 0x65, 0x63, 0x52, 0x16, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x50, 0x65, 0x72, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x12, 0x6e, 0x0a, 0x17, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x61,
	0x6c, 0x73, 0x5f, 0x62, 0x79, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x1c, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x37, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35,
	0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x54, 0x6f, 0x70, 0x69,
	0x63, 0x49, 0x64, 0x52, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x14, 0x73, 0x74, 0x61, 0x6b,
	0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x61, 0x6c, 0x73, 0x42, 0x79, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x12, 0x5e, 0x0a, 0x17, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x61,
	0x6c, 0x73, 0x5f, 0x62, 0x79, 0x5f, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x1d, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x27, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35,
	0x2e, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x52, 0x14, 0x73, 0x74, 0x61, 0x6b,
	0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x61, 0x6c, 0x73, 0x42, 0x79, 0x41, 0x63, 0x74, 0x6f, 0x72,
	0x12, 0x90, 0x01, 0x0a, 0x20, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x74,
	0x61, 0x6b, 0x65, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x61, 0x6c, 0x73, 0x5f, 0x62, 0x79, 0x5f,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x1e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x48, 0x2e, 0x65, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x44, 0x65, 0x6c,
	0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x44, 0x65, 0x6c,
	0x65, 0x67, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x61,
	0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x1c, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x53,
	0x74, 0x61, 0x6b, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x61, 0x6c, 0x73, 0x42, 0x79, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x12, 0x78, 0x0a, 0x20, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x5f,
	0x73, 0x74, 0x61, 0x6b, 0x65, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x61, 0x6c, 0x73, 0x5f, 0x62,
	0x79, 0x5f, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x1f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e,
	0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x54, 0x6f, 0x70,
	0x69, 0x63, 0x49, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x52,
	0x1c, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x61, 0x6c, 0x73, 0x42, 0x79, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x45, 0x0a,
	0x0a, 0x69, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x20, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35,
	0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x49,
	0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x0a, 0x69, 0x6e, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x73, 0x12, 0x42, 0x0a, 0x09, 0x66, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74,
	0x73, 0x18, 0x21, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x41, 0x63,
	0x74, 0x6f, 0x72, 0x49, 0x64, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x52, 0x09, 0x66,
	0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x73, 0x12, 0x40, 0x0a, 0x07, 0x77, 0x6f, 0x72, 0x6b,
	0x65, 0x72, 0x73, 0x18, 0x22, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x65, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x4c, 0x69, 0x62, 0x50, 0x32, 0x70, 0x4b,
	0x65, 0x79, 0x41, 0x6e, 0x64, 0x4f, 0x66, 0x66, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x4e, 0x6f, 0x64,
	0x65, 0x52, 0x07, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x73, 0x12, 0x42, 0x0a, 0x08, 0x72, 0x65,
	0x70, 0x75, 0x74, 0x65, 0x72, 0x73, 0x18, 0x23, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x65,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x4c, 0x69, 0x62, 0x50,
	0x32, 0x70, 0x4b, 0x65, 0x79, 0x41, 0x6e, 0x64, 0x4f, 0x66, 0x66, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x4e, 0x6f, 0x64, 0x65, 0x52, 0x08, 0x72, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x73, 0x12, 0x47,
	0x0a, 0x11, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x66, 0x65, 0x65, 0x5f, 0x72, 0x65, 0x76, 0x65,
	0x6e, 0x75, 0x65, 0x18, 0x24, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x65, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64,
	0x41, 0x6e, 0x64, 0x49, 0x6e, 0x74, 0x52, 0x0f, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x46, 0x65, 0x65,
	0x52, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x12, 0x4f, 0x0a, 0x15, 0x70, 0x72, 0x65, 0x76, 0x69,
	0x6f, 0x75, 0x73, 0x5f, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x25, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x41, 0x6e, 0x64,
	0x44, 0x65, 0x63, 0x52, 0x13, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x54, 0x6f, 0x70,
	0x69, 0x63, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x51, 0x0a, 0x0e, 0x61, 0x6c, 0x6c, 0x5f,
	0x69, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x26, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2a, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e,
	0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x0d, 0x61, 0x6c,
	0x6c, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x4e, 0x0a, 0x0d, 0x61,
	0x6c, 0x6c, 0x5f, 0x66, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x73, 0x18, 0x27, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x29, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76,
	0x35, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x73, 0x52, 0x0c, 0x61,
	0x6c, 0x6c, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x73, 0x12, 0x5d, 0x0a, 0x10, 0x61,
	0x6c, 0x6c, 0x5f, 0x6c, 0x6f, 0x73, 0x73, 0x5f, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x18,
	0x28, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x76, 0x35, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x52, 0x0e, 0x61, 0x6c, 0x6c, 0x4c,
	0x6f, 0x73, 0x73, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x12, 0x5e, 0x0a, 0x14, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x6c, 0x6f, 0x73, 0x73, 0x5f, 0x62, 0x75, 0x6e, 0x64, 0x6c,
	0x65, 0x73, 0x18, 0x29, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42,
	0x75, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x52, 0x12, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4c,
	0x6f, 0x73, 0x73, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x12, 0x98, 0x01, 0x0a, 0x2d, 0x70,
	0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61,
	0x67, 0x65, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x74, 0x6f, 0x5f, 0x73, 0x74, 0x61,
	0x6b, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x73, 0x18, 0x2a, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x37, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x2f, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x6c, 0x6c, 0x6f, 0x72, 0x61, 0x2d, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x61, 0x6c, 0x6c, 0x6f, 0x72, 0x61, 0x2d, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x2f, 0x6d, 0x61, 0x74, 0x68, 0x2e, 0x44, 0x65, 0x63, 0x52, 0x28, 0x70, 0x72, 0x65,
	0x76, 0x69, 0x6f, 0x75, 0x73, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x54, 0x6f, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x64, 0x52, 0x65, 0x70,
	0x75, 0x74, 0x65, 0x72, 0x73, 0x12, 0x54, 0x0a, 0x13, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x77, 0x6f,
	0x72, 0x6b, 0x65, 0x72, 0x5f, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x73, 0x18, 0x37, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76,
	0x35, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x41, 0x6e, 0x64,
	0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x73, 0x52, 0x11, 0x6f, 0x70, 0x65, 0x6e, 0x57, 0x6f,
	0x72, 0x6b, 0x65, 0x72, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x73, 0x12, 0x5a, 0x0a, 0x19, 0x75,
	0x6e, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x65,
	0x72, 0x5f, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x2b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x54, 0x6f,
	0x70, 0x69, 0x63, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x17,
	0x75, 0x6e, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x57, 0x6f, 0x72, 0x6b, 0x65,
	0x72, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x6a, 0x0a, 0x1a, 0x75, 0x6e, 0x66, 0x75, 0x6c,
	0x66, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x5f, 0x6e,
	0x6f, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x2c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x65, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63,
	0x49, 0x64, 0x41, 0x6e, 0x64, 0x52, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x18, 0x75, 0x6e, 0x66, 0x75, 0x6c,
	0x66, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x4e, 0x6f, 0x6e,
	0x63, 0x65, 0x73, 0x12, 0x4b, 0x0a, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x64, 0x72, 0x69, 0x70,
	0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x38, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x54, 0x6f, 0x70, 0x69,
	0x63, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x52, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x44, 0x72, 0x69, 0x70, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x12, 0x71, 0x0a, 0x1e, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x65, 0x72,
	0x65, 0x72, 0x5f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x72, 0x65, 0x67, 0x72, 0x65,
	0x74, 0x73, 0x18, 0x2d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x41,
	0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x65,
	0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x1b, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x49, 0x6e,
	0x66, 0x65, 0x72, 0x65, 0x72, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x67, 0x72,
	0x65, 0x74, 0x73, 0x12, 0x77, 0x0a, 0x21, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x66, 0x6f,
	0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x5f, 0x72, 0x65, 0x67, 0x72, 0x65, 0x74, 0x73, 0x18, 0x2e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c,
	0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x54, 0x6f,
	0x70, 0x69, 0x63, 0x49, 0x64, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x53, 0x74, 0x61, 0x6d, 0x70, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x1e, 0x6c, 0x61,
	0x74, 0x65, 0x73, 0x74, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x67, 0x72, 0x65, 0x74, 0x73, 0x12, 0x8a, 0x01, 0x0a,
	0x28, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x6f, 0x6e, 0x65, 0x5f, 0x69, 0x6e, 0x5f, 0x66,
	0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x5f, 0x72, 0x65, 0x67, 0x72, 0x65, 0x74, 0x73, 0x18, 0x2f, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x33, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x54,
	0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x41, 0x63, 0x74,
	0x6f, 0x72, 0x49, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x65, 0x64, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x23, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x4f, 0x6e, 0x65, 0x49,
	0x6e, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x52, 0x65, 0x67, 0x72, 0x65, 0x74, 0x73, 0x12, 0x7c, 0x0a, 0x24, 0x6c, 0x61, 0x74,
	0x65, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x69, 0x76, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x65, 0x72, 0x65,
	0x72, 0x5f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x72, 0x65, 0x67, 0x72, 0x65, 0x74,
	0x73, 0x18, 0x30, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x41, 0x63,
	0x74, 0x6f, 0x72, 0x49, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x65, 0x64,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x20, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x4e, 0x61, 0x69,
	0x76, 0x65, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x72, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x52, 0x65, 0x67, 0x72, 0x65, 0x74, 0x73, 0x12, 0x95, 0x01, 0x0a, 0x2e, 0x6c, 0x61, 0x74, 0x65,
	0x73, 0x74, 0x5f, 0x6f, 0x6e, 0x65, 0x5f, 0x6f, 0x75, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x65, 0x72,
	0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x72, 0x5f, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x5f, 0x72, 0x65, 0x67, 0x72, 0x65, 0x74, 0x73, 0x18, 0x31, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x33, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e,
	0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x41, 0x63,
	0x74, 0x6f, 0x72, 0x49, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x65, 0x64,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x28, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x4f, 0x6e, 0x65,
	0x4f, 0x75, 0x74, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x65,
	0x72, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x67, 0x72, 0x65, 0x74, 0x73, 0x12,
	0x9b, 0x01, 0x0a, 0x31, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x6f, 0x6e, 0x65, 0x5f, 0x6f,
	0x75, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x72, 0x5f, 0x66, 0x6f, 0x72, 0x65, 0x63,
	0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x72, 0x65,
	0x67, 0x72, 0x65, 0x74, 0x73, 0x18, 0x32, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x65, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63,
	0x49, 0x64, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x2b, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x4f, 0x6e, 0x65, 0x4f, 0x75, 0x74, 0x49, 0x6e,
	0x66, 0x65, 0x72, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x4e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x67, 0x72, 0x65, 0x74, 0x73, 0x12, 0x9b, 0x01,
	0x0a, 0x31, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x6f, 0x6e, 0x65, 0x5f, 0x6f, 0x75, 0x74,
	0x5f, 0x66, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x65,
	0x72, 0x65, 0x72, 0x5f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x72, 0x65, 0x67, 0x72,
	0x65, 0x74, 0x73, 0x18, 0x33, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x65, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64,
	0x41, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x2b,
	0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x4f, 0x6e, 0x65, 0x4f, 0x75, 0x74, 0x46, 0x6f, 0x72, 0x65,
	0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x72, 0x4e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x67, 0x72, 0x65, 0x74, 0x73, 0x12, 0xa1, 0x01, 0x0a, 0x34,
	0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x6f, 0x6e, 0x65, 0x5f, 0x6f, 0x75, 0x74, 0x5f, 0x66,
	0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x66, 0x6f, 0x72, 0x65, 0x63, 0x61,
	0x73, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x72, 0x65, 0x67,
	0x72, 0x65, 0x74, 0x73, 0x18, 0x34, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x65, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49,
	0x64, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x2e, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x4f, 0x6e, 0x65, 0x4f, 0x75, 0x74, 0x46, 0x6f, 0x72,
	0x65, 0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x67, 0x72, 0x65, 0x74, 0x73, 0x12,
	0x2e, 0x0a, 0x13, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x11, 0x63, 0x6f,
	0x72, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12,
	0x63, 0x0a, 0x18, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x77, 0x6f,
	0x72, 0x6b, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x18, 0x35, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2a, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35,
	0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x65, 0x64, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x52, 0x15, 0x74,
	0x6f, 0x70, 0x69, 0x63, 0x4c, 0x61, 0x73, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x43, 0x6f,
	0x6d, 0x6d, 0x69, 0x74, 0x12, 0x65, 0x0a, 0x19, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x6c, 0x61,
	0x73, 0x74, 0x5f, 0x72, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69,
	0x74, 0x18, 0x36, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x65, 0x64, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x4e, 0x6f,
	0x6e, 0x63, 0x65, 0x52, 0x16, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x4c, 0x61, 0x73, 0x74, 0x52, 0x65,
	0x70, 0x75, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x12, 0x74, 0x0a, 0x25, 0x74,
	0x6f, 0x70, 0x69, 0x63, 0x5f, 0x74, 0x6f, 0x5f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x6f, 0x73,
	0x73, 0x69, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x68, 0x75, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x39, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49,
	0x64, 0x41, 0x6e, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x52,
	0x20, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x54, 0x6f, 0x4e, 0x65, 0x78, 0x74, 0x50, 0x6f, 0x73, 0x73,
	0x69, 0x62, 0x6c, 0x65, 0x43, 0x68, 0x75, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x12, 0x56, 0x0a, 0x16, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x74, 0x6f, 0x5f, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x5f, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x18, 0x3a, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35,
	0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x54, 0x6f, 0x70, 0x69,
	0x63, 0x49, 0x64, 0x73, 0x52, 0x13, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x6f, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x12, 0x77, 0x0a, 0x23, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x5f, 0x74, 0x6f, 0x5f, 0x6c, 0x6f, 0x77, 0x65, 0x73, 0x74, 0x5f, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x5f, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x3b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x50, 0x61,
	0x69, 0x72, 0x52, 0x1e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x6f, 0x4c, 0x6f, 0x77, 0x65, 0x73,
	0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x57, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x12, 0x74, 0x0a, 0x29, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x5f, 0x74,
	0x6f, 0x70, 0x69, 0x63, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x6e,
	0x66, 0x65, 0x72, 0x65, 0x72, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x65, 0x6d, 0x61, 0x18,
	0x3f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x76, 0x35, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x44,
	0x65, 0x63, 0x52, 0x24, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x54, 0x6f, 0x70, 0x69,
	0x63, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x72,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x45, 0x6d, 0x61, 0x12, 0x7a, 0x0a, 0x2c, 0x70, 0x72, 0x65, 0x76,
	0x69, 0x6f, 0x75, 0x73, 0x5f, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74,
	0x69, 0x6c, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x73,
	0x63, 0x6f, 0x72, 0x65, 0x5f, 0x65, 0x6d, 0x61, 0x18, 0x40, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x54, 0x6f,
	0x70, 0x69, 0x63, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x44, 0x65, 0x63, 0x52, 0x27, 0x70, 0x72, 0x65,
	0x76, 0x69, 0x6f, 0x75, 0x73, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69,
	0x6c, 0x65, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x53, 0x63, 0x6f, 0x72,
	0x65, 0x45, 0x6d, 0x61, 0x12, 0x74, 0x0a, 0x29, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73,
	0x5f, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x6c, 0x65, 0x5f,
	0x72, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x65, 0x6d,
	0x61, 0x18, 0x41, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x41, 0x6e,
	0x64, 0x44, 0x65, 0x63, 0x52, 0x24, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x54, 0x6f,
	0x70, 0x69, 0x63, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x75, 0x74,
	0x65, 0x72, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x45, 0x6d, 0x61, 0x12, 0x80, 0x01, 0x0a, 0x2c, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x63,
	0x6c, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x69, 0x6e, 0x5f, 0x74, 0x6f, 0x70, 0x69, 0x63,
	0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x18, 0x42, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35,
	0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x55,
	0x69, 0x6e, 0x74, 0x36, 0x34, 0x52, 0x26, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x65,
	0x72, 0x65, 0x72, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x54,
	0x6f, 0x70, 0x69, 0x63, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x53, 0x65, 0x74, 0x12, 0x86, 0x01,
	0x0a, 0x2f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x5f, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x69, 0x6e,
	0x5f, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x73, 0x65,
	0x74, 0x18, 0x43, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x41, 0x63,
	0x74, 0x6f, 0x72, 0x49, 0x64, 0x55, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x52, 0x29, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x63, 0x6c,
	0x75, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x53, 0x65, 0x74, 0x12, 0x7f, 0x0a, 0x20, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x73, 0x75, 0x6d, 0x5f, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x5f, 0x74, 0x6f, 0x70,
	0x69, 0x63, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x73, 0x18, 0x44, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x37, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x6c, 0x6c, 0x6f, 0x72, 0x61, 0x2d, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x2f, 0x61, 0x6c, 0x6c, 0x6f, 0x72, 0x61, 0x2d, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x2f, 0x6d, 0x61, 0x74, 0x68, 0x2e, 0x44, 0x65, 0x63, 0x52, 0x1c, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x53, 0x75, 0x6d, 0x50, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x54, 0x6f, 0x70, 0x69, 0x63,
	0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x73, 0x12, 0x73, 0x0a, 0x1d, 0x72, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f,
	0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x45, 0x20, 0x01, 0x28, 0x09, 0x42, 0x30,
	0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x15, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73, 0x64,
	0x6b, 0x2e, 0x69, 0x6f, 0x2f, 0x6d, 0x61, 0x74, 0x68, 0x2e, 0x49, 0x6e, 0x74, 0xd2, 0xb4, 0x2d,
	0x0a, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0xa8, 0xe7, 0xb0, 0x2a, 0x01,
	0x52, 0x1a, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4a, 0x04, 0x08, 0x0d,
	0x10, 0x0e, 0x4a, 0x04, 0x08, 0x0e, 0x10, 0x0f, 0x4a, 0x04, 0x08, 0x0f, 0x10, 0x10, 0x52, 0x1b,
	0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x72, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x73, 0x42, 0x79, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x52, 0x1e, 0x6c, 0x61, 0x74,
	0x65, 0x73, 0x74, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x73, 0x42, 0x79, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x52, 0x1c, 0x6c, 0x61, 0x74,
	0x65, 0x73, 0x74, 0x52, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73,
	0x42, 0x79, 0x52, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x22, 0x57, 0x0a, 0x0f, 0x54, 0x6f, 0x70,
	0x69, 0x63, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x19, 0x0a, 0x08,
	0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07,
	0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x76, 0x33, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x05, 0x74, 0x6f, 0x70,
	0x69, 0x63, 0x22, 0x47, 0x0a, 0x0f, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x41, 0x6e, 0x64, 0x41, 0x63,
	0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64,
	0x12, 0x19, 0x0a, 0x08, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x22, 0x55, 0x0a, 0x15, 0x54,
	0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x12,
	0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x22, 0x58, 0x0a, 0x16, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x41, 0x6e, 0x64, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x73, 0x12, 0x21, 0x0a, 0x0c,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x04, 0x52, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x73, 0x22, 0x86, 0x01, 0x0a,
	0x18, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70,
	0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x6f, 0x70,
	0x69, 0x63, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x2c, 0x0a, 0x06, 0x73, 0x63, 0x6f, 0x72, 0x65,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x33, 0x2e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x52, 0x06, 0x73,
	0x63, 0x6f, 0x72, 0x65, 0x73, 0x22, 0x76, 0x0a, 0x13, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64,
	0x41, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07,
	0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x63, 0x74, 0x6f, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x74, 0x6f, 0x72,
	0x49, 0x64, 0x12, 0x29, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x33,
	0x2e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x22, 0x64, 0x0a,
	0x14, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x55,
	0x69, 0x6e, 0x74, 0x36, 0x34, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64,
	0x12, 0x19, 0x0a, 0x08, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75,
	0x69, 0x6e, 0x74, 0x36, 0x34, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x69, 0x6e,
	0x74, 0x36, 0x34, 0x22, 0xb3, 0x01, 0x0a, 0x22, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x41,
	0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x43,
	0x6f, 0x65, 0x66, 0x66, 0x69, 0x63, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f,
	0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x6f,
	0x70, 0x69, 0x63, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64,
	0x12, 0x57, 0x0a, 0x15, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f,
	0x65, 0x66, 0x66, 0x69, 0x63, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x33, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x65, 0x66, 0x66, 0x69, 0x63, 0x69,
	0x65, 0x6e, 0x74, 0x52, 0x14, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x43, 0x6f,
	0x65, 0x66, 0x66, 0x69, 0x63, 0x69, 0x65, 0x6e, 0x74, 0x22, 0x94, 0x01, 0x0a, 0x11, 0x54, 0x6f,
	0x70, 0x69, 0x63, 0x49, 0x64, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x44, 0x65, 0x63, 0x12,
	0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x63,
	0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63,
	0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x49, 0x0a, 0x03, 0x64, 0x65, 0x63, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x37, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x2f, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x6c, 0x6c, 0x6f, 0x72, 0x61, 0x2d, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x61, 0x6c, 0x6c, 0x6f, 0x72, 0x61, 0x2d, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x2f, 0x6d, 0x61, 0x74, 0x68, 0x2e, 0x44, 0x65, 0x63, 0x52, 0x03, 0x64, 0x65, 0x63,
	0x22, 0x6e, 0x0a, 0x0d, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x49, 0x6e,
	0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x12, 0x42, 0x0a, 0x03,
	0x69, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x30, 0xc8, 0xde, 0x1f, 0x00, 0xda,
	0xde, 0x1f, 0x15, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73, 0x64, 0x6b, 0x2e, 0x69, 0x6f, 0x2f,
	0x6d, 0x61, 0x74, 0x68, 0x2e, 0x49, 0x6e, 0x74, 0xd2, 0xb4, 0x2d, 0x0a, 0x63, 0x6f, 0x73, 0x6d,
	0x6f, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0xa8, 0xe7, 0xb0, 0x2a, 0x01, 0x52, 0x03, 0x69, 0x6e, 0x74,
	0x22, 0x8d, 0x01, 0x0a, 0x11, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x41, 0x63, 0x74, 0x6f,
	0x72, 0x49, 0x64, 0x49, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49,
	0x64, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x42, 0x0a, 0x03,
	0x69, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x30, 0xc8, 0xde, 0x1f, 0x00, 0xda,
	0xde, 0x1f, 0x15, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73, 0x64, 0x6b, 0x2e, 0x69, 0x6f, 0x2f,
	0x6d, 0x61, 0x74, 0x68, 0x2e, 0x49, 0x6e, 0x74, 0xd2, 0xb4, 0x2d, 0x0a, 0x63, 0x6f, 0x73, 0x6d,
	0x6f, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0xa8, 0xe7, 0xb0, 0x2a, 0x01, 0x52, 0x03, 0x69, 0x6e, 0x74,
	0x22, 0xbd, 0x01, 0x0a, 0x24, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x44, 0x65, 0x6c, 0x65,
	0x67, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65,
	0x67, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70,
	0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x6f, 0x70,
	0x69, 0x63, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x6f,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74,
	0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x12, 0x42, 0x0a, 0x0e,
	0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x76, 0x33, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x0d, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0xd1, 0x01, 0x0a, 0x29, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x52, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x6b, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x21,
	0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x72, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72,
	0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x12, 0x4c, 0x0a, 0x12, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x5f,
	0x72, 0x65, 0x6d, 0x6f, 0x76, 0x61, 0x6c, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76,
	0x33, 0x2e, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x61, 0x6c, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x10, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x61, 0x6c,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0x74, 0x0a, 0x19, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x54,
	0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08,
	0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07,
	0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x99, 0x02, 0x0a, 0x3a, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49,
	0x64, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x70, 0x75, 0x74, 0x65,
	0x72, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07,
	0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x67,
	0x61, 0x74, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65,
	0x67, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x12,
	0x65, 0x0a, 0x1b, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x6b,
	0x65, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x61, 0x6c, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x76, 0x33, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x6b,
	0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x18, 0x64, 0x65,
	0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x9a, 0x01, 0x0a, 0x22, 0x44, 0x65, 0x6c, 0x65, 0x67,
	0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x54, 0x6f, 0x70, 0x69, 0x63,
	0x49, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x72,
	0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65,
	0x70, 0x75, 0x74, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64,
	0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x22, 0x86, 0x01, 0x0a, 0x17, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x41,
	0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12,
	0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x63,
	0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63,
	0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x09, 0x69, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x33, 0x2e, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x52, 0x09, 0x69, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x22, 0x82, 0x01, 0x0a,
	0x16, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x46,
	0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63,
	0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x32, 0x0a,
	0x08, 0x66, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x33, 0x2e, 0x46,
	0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x52, 0x08, 0x66, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73,
	0x74, 0x22, 0x7b, 0x0a, 0x18, 0x4c, 0x69, 0x62, 0x50, 0x32, 0x70, 0x4b, 0x65, 0x79, 0x41, 0x6e,
	0x64, 0x4f, 0x66, 0x66, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x0a,
	0x0b, 0x6c, 0x69, 0x62, 0x5f, 0x70, 0x32, 0x70, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6c, 0x69, 0x62, 0x50, 0x32, 0x70, 0x4b, 0x65, 0x79, 0x12, 0x3f, 0x0a,
	0x0d, 0x6f, 0x66, 0x66, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x76, 0x33, 0x2e, 0x4f, 0x66, 0x66, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x4e, 0x6f, 0x64, 0x65,
	0x52, 0x0c, 0x6f, 0x66, 0x66, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x4e, 0x6f, 0x64, 0x65, 0x22, 0x75,
	0x0a, 0x0d, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x44, 0x65, 0x63, 0x12,
	0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x12, 0x49, 0x0a, 0x03, 0x64, 0x65,
	0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x37, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f,
	0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x6c, 0x6c, 0x6f,
	0x72, 0x61, 0x2d, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x61, 0x6c, 0x6c, 0x6f, 0x72,
	0x61, 0x2d, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x6d, 0x61, 0x74, 0x68, 0x2e, 0x44, 0x65, 0x63,
	0x52, 0x03, 0x64, 0x65, 0x63, 0x22, 0x96, 0x01, 0x0a, 0x1c, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49,
	0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x49, 0x6e, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49,
	0x64, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x12, 0x38, 0x0a, 0x0a, 0x69, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x33, 0x2e, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x73, 0x52, 0x0a, 0x69, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x22, 0x92,
	0x01, 0x0a, 0x1b, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x73, 0x12, 0x19,
	0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x35, 0x0a, 0x09,
	0x66, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x33, 0x2e, 0x46,
	0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x73, 0x52, 0x09, 0x66, 0x6f, 0x72, 0x65, 0x63, 0x61,
	0x73, 0x74, 0x73, 0x22, 0xbc, 0x01, 0x0a, 0x25, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x70, 0x75, 0x74, 0x65,
	0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x12, 0x19, 0x0a,
	0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x55, 0x0a, 0x15, 0x72,
	0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x62, 0x75, 0x6e,
	0x64, 0x6c, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x33, 0x2e, 0x52, 0x65, 0x70, 0x75, 0x74, 0x65,
	0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x52, 0x13, 0x72,
	0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x75, 0x6e, 0x64, 0x6c,
	0x65, 0x73, 0x22, 0x9c, 0x01, 0x0a, 0x1e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x75,
	0x6e, 0x64, 0x6c, 0x65, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64,
	0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x12, 0x3c, 0x0a, 0x0c, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x62, 0x75, 0x6e,
	0x64, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x33, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x75,
	0x6e, 0x64, 0x6c, 0x65, 0x52, 0x0b, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x75, 0x6e, 0x64, 0x6c,
	0x65, 0x22, 0x5b, 0x0a, 0x10, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x4e,
	0x6f, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64,
	0x12, 0x2c, 0x0a, 0x06, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x33, 0x2e,
	0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x06, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x73, 0x22, 0x95,
	0x01, 0x0a, 0x1e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x52, 0x65, 0x70,
	0x75, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4e, 0x6f, 0x6e, 0x63, 0x65,
	0x73, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x12, 0x58, 0x0a, 0x16,
	0x72, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f,
	0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x33, 0x2e, 0x52, 0x65, 0x70, 0x75,
	0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x73,
	0x52, 0x14, 0x72, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x73, 0x22, 0xa3, 0x01, 0x0a, 0x1e, 0x54, 0x6f, 0x70, 0x69, 0x63,
	0x49, 0x64, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61,
	0x6d, 0x70, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70,
	0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x6f, 0x70,
	0x69, 0x63, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12,
	0x4b, 0x0a, 0x11, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x65, 0x64, 0x5f, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x33, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x10, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xc9, 0x01, 0x0a,
	0x25, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x41,
	0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x65,
	0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x31, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x31, 0x12, 0x1b,
	0x0a, 0x09, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x32, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x32, 0x12, 0x4b, 0x0a, 0x11, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x65, 0x64, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x76, 0x33, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x65,
	0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x10, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x96, 0x01, 0x0a, 0x1c, 0x54, 0x6f, 0x70,
	0x69, 0x63, 0x49, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x65, 0x64, 0x41,
	0x63, 0x74, 0x6f, 0x72, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70,
	0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x6f, 0x70,
	0x69, 0x63, 0x49, 0x64, 0x12, 0x5b, 0x0a, 0x17, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x65, 0x64, 0x5f, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x76, 0x33, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x65, 0x64,
	0x41, 0x63, 0x74, 0x6f, 0x72, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x52, 0x15, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x65, 0x64, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x4e, 0x6f, 0x6e, 0x63,
	0x65, 0x22, 0x6d, 0x0a, 0x13, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x33, 0x0a, 0x09, 0x74,
	0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x33, 0x2e, 0x54, 0x6f,
	0x70, 0x69, 0x63, 0x49, 0x64, 0x73, 0x52, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x73,
	0x22, 0x85, 0x01, 0x0a, 0x1c, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x50, 0x61, 0x69,
	0x72, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x12, 0x42, 0x0a, 0x0c, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x77, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x33, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49,
	0x64, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x50, 0x61, 0x69, 0x72, 0x52, 0x0b, 0x74, 0x6f, 0x70,
	0x69, 0x63, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x42, 0xc2, 0x01, 0x0a, 0x10, 0x63, 0x6f, 0x6d,
	0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x42, 0x0c, 0x47,
	0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x4f, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x6c, 0x6c, 0x6f, 0x72, 0x61,
	0x2d, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x61, 0x6c, 0x6c, 0x6f, 0x72, 0x61, 0x2d,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x78, 0x2f, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f,
	0x76, 0x35, 0x3b, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x76, 0x35, 0xa2, 0x02,
	0x03, 0x45, 0x58, 0x58, 0xaa, 0x02, 0x0c, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x56, 0x35, 0xca, 0x02, 0x0c, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x5c,
	0x56, 0x35, 0xe2, 0x02, 0x18, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x5c, 0x56,
	0x35, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0d,
	0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x3a, 0x3a, 0x56, 0x35, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_emissions_v5_genesis_proto_rawDescOnce sync.Once
	file_emissions_v5_genesis_proto_rawDescData = file_emissions_v5_genesis_proto_rawDesc
)

func file_emissions_v5_genesis_proto_rawDescGZIP() []byte {
	file_emissions_v5_genesis_proto_rawDescOnce.Do(func() {
		file_emissions_v5_genesis_proto_rawDescData = protoimpl.X.CompressGZIP(file_emissions_v5_genesis_proto_rawDescData)
	})
	return file_emissions_v5_genesis_proto_rawDescData
}

var file_emissions_v5_genesis_proto_msgTypes = make([]protoimpl.MessageInfo, 32)
var file_emissions_v5_genesis_proto_goTypes = []interface{}{
	(*GenesisState)(nil),                                               // 0: emissions.v5.GenesisState
	(*TopicIdAndTopic)(nil),                                            // 1: emissions.v5.TopicIdAndTopic
	(*TopicAndActorId)(nil),                                            // 2: emissions.v5.TopicAndActorId
	(*TopicIdAndBlockHeight)(nil),                                      // 3: emissions.v5.TopicIdAndBlockHeight
	(*BlockHeightAndTopicIds)(nil),                                     // 4: emissions.v5.BlockHeightAndTopicIds
	(*TopicIdBlockHeightScores)(nil),                                   // 5: emissions.v5.TopicIdBlockHeightScores
	(*TopicIdActorIdScore)(nil),                                        // 6: emissions.v5.TopicIdActorIdScore
	(*TopicIdActorIdUint64)(nil),                                       // 7: emissions.v5.TopicIdActorIdUint64
	(*TopicIdActorIdListeningCoefficient)(nil),                         // 8: emissions.v5.TopicIdActorIdListeningCoefficient
	(*TopicIdActorIdDec)(nil),                                          // 9: emissions.v5.TopicIdActorIdDec
	(*TopicIdAndInt)(nil),                                              // 10: emissions.v5.TopicIdAndInt
	(*TopicIdActorIdInt)(nil),                                          // 11: emissions.v5.TopicIdActorIdInt
	(*TopicIdDelegatorReputerDelegatorInfo)(nil),                       // 12: emissions.v5.TopicIdDelegatorReputerDelegatorInfo
	(*BlockHeightTopicIdReputerStakeRemovalInfo)(nil),                  // 13: emissions.v5.BlockHeightTopicIdReputerStakeRemovalInfo
	(*ActorIdTopicIdBlockHeight)(nil),                                  // 14: emissions.v5.ActorIdTopicIdBlockHeight
	(*BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo)(nil), // 15: emissions.v5.BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo
	(*DelegatorReputerTopicIdBlockHeight)(nil),                         // 16: emissions.v5.DelegatorReputerTopicIdBlockHeight
	(*TopicIdActorIdInference)(nil),                                    // 17: emissions.v5.TopicIdActorIdInference
	(*TopicIdActorIdForecast)(nil),                                     // 18: emissions.v5.TopicIdActorIdForecast
	(*LibP2PKeyAndOffchainNode)(nil),                                   // 19: emissions.v5.LibP2pKeyAndOffchainNode
	(*TopicIdAndDec)(nil),                                              // 20: emissions.v5.TopicIdAndDec
	(*TopicIdBlockHeightInferences)(nil),                               // 21: emissions.v5.TopicIdBlockHeightInferences
	(*TopicIdBlockHeightForecasts)(nil),                                // 22: emissions.v5.TopicIdBlockHeightForecasts
	(*TopicIdBlockHeightReputerValueBundles)(nil),                      // 23: emissions.v5.TopicIdBlockHeightReputerValueBundles
	(*TopicIdBlockHeightValueBundles)(nil),                             // 24: emissions.v5.TopicIdBlockHeightValueBundles
	(*TopicIdAndNonces)(nil),                                           // 25: emissions.v5.TopicIdAndNonces
	(*TopicIdAndReputerRequestNonces)(nil),                             // 26: emissions.v5.TopicIdAndReputerRequestNonces
	(*TopicIdActorIdTimeStampedValue)(nil),                             // 27: emissions.v5.TopicIdActorIdTimeStampedValue
	(*TopicIdActorIdActorIdTimeStampedValue)(nil),                      // 28: emissions.v5.TopicIdActorIdActorIdTimeStampedValue
	(*TopicIdTimestampedActorNonce)(nil),                               // 29: emissions.v5.TopicIdTimestampedActorNonce
	(*BlockHeightTopicIds)(nil),                                        // 30: emissions.v5.BlockHeightTopicIds
	(*BlockHeightTopicIdWeightPair)(nil),                               // 31: emissions.v5.BlockHeightTopicIdWeightPair
	(*v3.Params)(nil),                                                  // 32: emissions.v3.Params
	(*v3.Topic)(nil),                                                   // 33: emissions.v3.Topic
	(*v3.Scores)(nil),                                                  // 34: emissions.v3.Scores
	(*v3.Score)(nil),                                                   // 35: emissions.v3.Score
	(*v3.ListeningCoefficient)(nil),                                    // 36: emissions.v3.ListeningCoefficient
	(*v3.DelegatorInfo)(nil),                                           // 37: emissions.v3.DelegatorInfo
	(*v3.StakeRemovalInfo)(nil),                                        // 38: emissions.v3.StakeRemovalInfo
	(*v3.DelegateStakeRemovalInfo)(nil),                                // 39: emissions.v3.DelegateStakeRemovalInfo
	(*v3.Inference)(nil),                                               // 40: emissions.v3.Inference
	(*v3.Forecast)(nil),                                                // 41: emissions.v3.Forecast
	(*v3.OffchainNode)(nil),                                            // 42: emissions.v3.OffchainNode
	(*v3.Inferences)(nil),                                              // 43: emissions.v3.Inferences
	(*v3.Forecasts)(nil),                                               // 44: emissions.v3.Forecasts
	(*v3.ReputerValueBundles)(nil),                                     // 45: emissions.v3.ReputerValueBundles
	(*v3.ValueBundle)(nil),                                             // 46: emissions.v3.ValueBundle
	(*v3.Nonces)(nil),                                                  // 47: emissions.v3.Nonces
	(*v3.ReputerRequestNonces)(nil),                                    // 48: emissions.v3.ReputerRequestNonces
	(*v3.TimestampedValue)(nil),                                        // 49: emissions.v3.TimestampedValue
	(*v3.TimestampedActorNonce)(nil),                                   // 50: emissions.v3.TimestampedActorNonce
	(*v3.TopicIds)(nil),                                                // 51: emissions.v3.TopicIds
	(*v3.TopicIdWeightPair)(nil),                                       // 52: emissions.v3.TopicIdWeightPair
}
var file_emissions_v5_genesis_proto_depIdxs = []int32{
	32, // 0: emissions.v5.GenesisState.params:type_name -> emissions.v3.Params
	1,  // 1: emissions.v5.GenesisState.topics:type_name -> emissions.v5.TopicIdAndTopic
	2,  // 2: emissions.v5.GenesisState.topic_workers:type_name -> emissions.v5.TopicAndActorId
	2,  // 3: emissions.v5.GenesisState.topic_reputers:type_name -> emissions.v5.TopicAndActorId
	3,  // 4: emissions.v5.GenesisState.topic_reward_nonce:type_name -> emissions.v5.TopicIdAndBlockHeight
	5,  // 5: emissions.v5.GenesisState.inferer_scores_by_block:type_name -> emissions.v5.TopicIdBlockHeightScores
	5,  // 6: emissions.v5.GenesisState.forecaster_scores_by_block:type_name -> emissions.v5.TopicIdBlockHeightScores
	5,  // 7: emissions.v5.GenesisState.reputer_scores_by_block:type_name -> emissions.v5.TopicIdBlockHeightScores
	6,  // 8: emissions.v5.GenesisState.inferer_score_emas:type_name -> emissions.v5.TopicIdActorIdScore
	6,  // 9: emissions.v5.GenesisState.forecaster_score_emas:type_name -> emissions.v5.TopicIdActorIdScore
	6,  // 10: emissions.v5.GenesisState.reputer_score_emas:type_name -> emissions.v5.TopicIdActorIdScore
	8,  // 11: emissions.v5.GenesisState.reputer_listening_coefficient:type_name -> emissions.v5.TopicIdActorIdListeningCoefficient
	9,  // 12: emissions.v5.GenesisState.previous_reputer_reward_fraction:type_name -> emissions.v5.TopicIdActorIdDec
	9,  // 13: emissions.v5.GenesisState.previous_inference_reward_fraction:type_name -> emissions.v5.TopicIdActorIdDec
	9,  // 14: emissions.v5.GenesisState.previous_forecast_reward_fraction:type_name -> emissions.v5.TopicIdActorIdDec
	20, // 15: emissions.v5.GenesisState.previous_forecaster_score_ratio:type_name -> emissions.v5.TopicIdAndDec
	10, // 16: emissions.v5.GenesisState.topic_stake:type_name -> emissions.v5.TopicIdAndInt
	11, // 17: emissions.v5.GenesisState.stake_reputer_authority:type_name -> emissions.v5.TopicIdActorIdInt
	11, // 18: emissions.v5.GenesisState.stake_sum_from_delegator:type_name -> emissions.v5.TopicIdActorIdInt
	12, // 19: emissions.v5.GenesisState.delegated_stakes:type_name -> emissions.v5.TopicIdDelegatorReputerDelegatorInfo
	11, // 20: emissions.v5.GenesisState.stake_from_delegators_upon_reputer:type_name -> emissions.v5.TopicIdActorIdInt
	9,  // 21: emissions.v5.GenesisState.delegate_reward_per_share:type_name -> emissions.v5.TopicIdActorIdDec
	13, // 22: emissions.v5.GenesisState.stake_removals_by_block:type_name -> emissions.v5.BlockHeightTopicIdReputerStakeRemovalInfo
	14, // 23: emissions.v5.GenesisState.stake_removals_by_actor:type_name -> emissions.v5.ActorIdTopicIdBlockHeight
	15, // 24: emissions.v5.GenesisState.delegate_stake_removals_by_block:type_name -> emissions.v5.BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo
	16, // 25: emissions.v5.GenesisState.delegate_stake_removals_by_actor:type_name -> emissions.v5.DelegatorReputerTopicIdBlockHeight
	17, // 26: emissions.v5.GenesisState.inferences:type_name -> emissions.v5.TopicIdActorIdInference
	18, // 27: emissions.v5.GenesisState.forecasts:type_name -> emissions.v5.TopicIdActorIdForecast
	19, // 28: emissions.v5.GenesisState.workers:type_name -> emissions.v5.LibP2pKeyAndOffchainNode
	19, // 29: emissions.v5.GenesisState.reputers:type_name -> emissions.v5.LibP2pKeyAndOffchainNode
	10, // 30: emissions.v5.GenesisState.topic_fee_revenue:type_name -> emissions.v5.TopicIdAndInt
	20, // 31: emissions.v5.GenesisState.previous_topic_weight:type_name -> emissions.v5.TopicIdAndDec
	21, // 32: emissions.v5.GenesisState.all_inferences:type_name -> emissions.v5.TopicIdBlockHeightInferences
	22, // 33: emissions.v5.GenesisState.all_forecasts:type_name -> emissions.v5.TopicIdBlockHeightForecasts
	23, // 34: emissions.v5.GenesisState.all_loss_bundles:type_name -> emissions.v5.TopicIdBlockHeightReputerValueBundles
	24, // 35: emissions.v5.GenesisState.network_loss_bundles:type_name -> emissions.v5.TopicIdBlockHeightValueBundles
	4,  // 36: emissions.v5.GenesisState.open_worker_windows:type_name -> emissions.v5.BlockHeightAndTopicIds
	25, // 37: emissions.v5.GenesisState.unfulfilled_worker_nonces:type_name -> emissions.v5.TopicIdAndNonces
	26, // 38: emissions.v5.GenesisState.unfulfilled_reputer_nonces:type_name -> emissions.v5.TopicIdAndReputerRequestNonces
	3,  // 39: emissions.v5.GenesisState.last_drip_block:type_name -> emissions.v5.TopicIdAndBlockHeight
	27, // 40: emissions.v5.GenesisState.latest_inferer_network_regrets:type_name -> emissions.v5.TopicIdActorIdTimeStampedValue
	27, // 41: emissions.v5.GenesisState.latest_forecaster_network_regrets:type_name -> emissions.v5.TopicIdActorIdTimeStampedValue
	28, // 42: emissions.v5.GenesisState.latest_one_in_forecaster_network_regrets:type_name -> emissions.v5.TopicIdActorIdActorIdTimeStampedValue
	27, // 43: emissions.v5.GenesisState.latest_naive_inferer_network_regrets:type_name -> emissions.v5.TopicIdActorIdTimeStampedValue
	28, // 44: emissions.v5.GenesisState.latest_one_out_inferer_inferer_network_regrets:type_name -> emissions.v5.TopicIdActorIdActorIdTimeStampedValue
	28, // 45: emissions.v5.GenesisState.latest_one_out_inferer_forecaster_network_regrets:type_name -> emissions.v5.TopicIdActorIdActorIdTimeStampedValue
	28, // 46: emissions.v5.GenesisState.latest_one_out_forecaster_inferer_network_regrets:type_name -> emissions.v5.TopicIdActorIdActorIdTimeStampedValue
	28, // 47: emissions.v5.GenesisState.latest_one_out_forecaster_forecaster_network_regrets:type_name -> emissions.v5.TopicIdActorIdActorIdTimeStampedValue
	29, // 48: emissions.v5.GenesisState.topic_last_worker_commit:type_name -> emissions.v5.TopicIdTimestampedActorNonce
	29, // 49: emissions.v5.GenesisState.topic_last_reputer_commit:type_name -> emissions.v5.TopicIdTimestampedActorNonce
	3,  // 50: emissions.v5.GenesisState.topic_to_next_possible_churning_block:type_name -> emissions.v5.TopicIdAndBlockHeight
	30, // 51: emissions.v5.GenesisState.block_to_active_topics:type_name -> emissions.v5.BlockHeightTopicIds
	31, // 52: emissions.v5.GenesisState.block_to_lowest_active_topic_weight:type_name -> emissions.v5.BlockHeightTopicIdWeightPair
	20, // 53: emissions.v5.GenesisState.previous_topic_quantile_inferer_score_ema:type_name -> emissions.v5.TopicIdAndDec
	20, // 54: emissions.v5.GenesisState.previous_topic_quantile_forecaster_score_ema:type_name -> emissions.v5.TopicIdAndDec
	20, // 55: emissions.v5.GenesisState.previous_topic_quantile_reputer_score_ema:type_name -> emissions.v5.TopicIdAndDec
	7,  // 56: emissions.v5.GenesisState.count_inferer_inclusions_in_topic_active_set:type_name -> emissions.v5.TopicIdActorIdUint64
	7,  // 57: emissions.v5.GenesisState.count_forecaster_inclusions_in_topic_active_set:type_name -> emissions.v5.TopicIdActorIdUint64
	33, // 58: emissions.v5.TopicIdAndTopic.topic:type_name -> emissions.v3.Topic
	34, // 59: emissions.v5.TopicIdBlockHeightScores.scores:type_name -> emissions.v3.Scores
	35, // 60: emissions.v5.TopicIdActorIdScore.score:type_name -> emissions.v3.Score
	36, // 61: emissions.v5.TopicIdActorIdListeningCoefficient.listening_coefficient:type_name -> emissions.v3.ListeningCoefficient
	37, // 62: emissions.v5.TopicIdDelegatorReputerDelegatorInfo.delegator_info:type_name -> emissions.v3.DelegatorInfo
	38, // 63: emissions.v5.BlockHeightTopicIdReputerStakeRemovalInfo.stake_removal_info:type_name -> emissions.v3.StakeRemovalInfo
	39, // 64: emissions.v5.BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo.delegate_stake_removal_info:type_name -> emissions.v3.DelegateStakeRemovalInfo
	40, // 65: emissions.v5.TopicIdActorIdInference.inference:type_name -> emissions.v3.Inference
	41, // 66: emissions.v5.TopicIdActorIdForecast.forecast:type_name -> emissions.v3.Forecast
	42, // 67: emissions.v5.LibP2pKeyAndOffchainNode.offchain_node:type_name -> emissions.v3.OffchainNode
	43, // 68: emissions.v5.TopicIdBlockHeightInferences.inferences:type_name -> emissions.v3.Inferences
	44, // 69: emissions.v5.TopicIdBlockHeightForecasts.forecasts:type_name -> emissions.v3.Forecasts
	45, // 70: emissions.v5.TopicIdBlockHeightReputerValueBundles.reputer_value_bundles:type_name -> emissions.v3.ReputerValueBundles
	46, // 71: emissions.v5.TopicIdBlockHeightValueBundles.value_bundle:type_name -> emissions.v3.ValueBundle
	47, // 72: emissions.v5.TopicIdAndNonces.nonces:type_name -> emissions.v3.Nonces
	48, // 73: emissions.v5.TopicIdAndReputerRequestNonces.reputer_request_nonces:type_name -> emissions.v3.ReputerRequestNonces
	49, // 74: emissions.v5.TopicIdActorIdTimeStampedValue.timestamped_value:type_name -> emissions.v3.TimestampedValue
	49, // 75: emissions.v5.TopicIdActorIdActorIdTimeStampedValue.timestamped_value:type_name -> emissions.v3.TimestampedValue
	50, // 76: emissions.v5.TopicIdTimestampedActorNonce.timestamped_actor_nonce:type_name -> emissions.v3.TimestampedActorNonce
	51, // 77: emissions.v5.BlockHeightTopicIds.topic_ids:type_name -> emissions.v3.TopicIds
	52, // 78: emissions.v5.BlockHeightTopicIdWeightPair.topic_weight:type_name -> emissions.v3.TopicIdWeightPair
	79, // [79:79] is the sub-list for method output_type
	79, // [79:79] is the sub-list for method input_type
	79, // [79:79] is the sub-list for extension type_name
	79, // [79:79] is the sub-list for extension extendee
	0,  // [0:79] is the sub-list for field type_name
}

func init() { file_emissions_v5_genesis_proto_init() }
func file_emissions_v5_genesis_proto_init() {
	if File_emissions_v5_genesis_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_emissions_v5_genesis_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenesisState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_genesis_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopicIdAndTopic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_genesis_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopicAndActorId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_genesis_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopicIdAndBlockHeight); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_genesis_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockHeightAndTopicIds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_genesis_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopicIdBlockHeightScores); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_genesis_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopicIdActorIdScore); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_genesis_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopicIdActorIdUint64); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_genesis_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopicIdActorIdListeningCoefficient); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_genesis_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopicIdActorIdDec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_genesis_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopicIdAndInt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_genesis_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopicIdActorIdInt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_genesis_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopicIdDelegatorReputerDelegatorInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_genesis_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockHeightTopicIdReputerStakeRemovalInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_genesis_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActorIdTopicIdBlockHeight); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_genesis_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockHeightTopicIdDelegatorReputerDelegateStakeRemovalInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_genesis_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelegatorReputerTopicIdBlockHeight); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_genesis_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopicIdActorIdInference); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_genesis_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopicIdActorIdForecast); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_genesis_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LibP2PKeyAndOffchainNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_genesis_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopicIdAndDec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_genesis_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopicIdBlockHeightInferences); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_genesis_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopicIdBlockHeightForecasts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_genesis_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopicIdBlockHeightReputerValueBundles); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_genesis_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopicIdBlockHeightValueBundles); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_genesis_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopicIdAndNonces); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_genesis_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopicIdAndReputerRequestNonces); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_genesis_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopicIdActorIdTimeStampedValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_genesis_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopicIdActorIdActorIdTimeStampedValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_genesis_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopicIdTimestampedActorNonce); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_genesis_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockHeightTopicIds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_genesis_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockHeightTopicIdWeightPair); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_emissions_v5_genesis_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   32,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_emissions_v5_genesis_proto_goTypes,
		DependencyIndexes: file_emissions_v5_genesis_proto_depIdxs,
		MessageInfos:      file_emissions_v5_genesis_proto_msgTypes,
	}.Build()
	File_emissions_v5_genesis_proto = out.File
	file_emissions_v5_genesis_proto_rawDesc = nil
	file_emissions_v5_genesis_proto_goTypes = nil
	file_emissions_v5_genesis_proto_depIdxs = nil
}

// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package emissionsv5

import (
	fmt "fmt"
	v3 "github.com/allora-network/allora-chain/x/emissions/api/emissions/v3"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	_ "github.com/cosmos/gogoproto/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	io "io"
	reflect "reflect"
	sync "sync"
)

var _ protoreflect.List = (*_EventScoresSet_4_list)(nil)

type _EventScoresSet_4_list struct {
	list *[]string
}

func (x *_EventScoresSet_4_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_EventScoresSet_4_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfString((*x.list)[i])
}

func (x *_EventScoresSet_4_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_EventScoresSet_4_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_EventScoresSet_4_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message EventScoresSet at list field Addresses as it is not of Message kind"))
}

func (x *_EventScoresSet_4_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_EventScoresSet_4_list) NewElement() protoreflect.Value {
	v := ""
	return protoreflect.ValueOfString(v)
}

func (x *_EventScoresSet_4_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_EventScoresSet_5_list)(nil)

type _EventScoresSet_5_list struct {
	list *[]string
}

func (x *_EventScoresSet_5_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_EventScoresSet_5_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfString((*x.list)[i])
}

func (x *_EventScoresSet_5_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_EventScoresSet_5_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_EventScoresSet_5_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message EventScoresSet at list field Scores as it is not of Message kind"))
}

func (x *_EventScoresSet_5_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_EventScoresSet_5_list) NewElement() protoreflect.Value {
	v := ""
	return protoreflect.ValueOfString(v)
}

func (x *_EventScoresSet_5_list) IsValid() bool {
	return x.list != nil
}

var (
	md_EventScoresSet              protoreflect.MessageDescriptor
	fd_EventScoresSet_actor_type   protoreflect.FieldDescriptor
	fd_EventScoresSet_topic_id     protoreflect.FieldDescriptor
	fd_EventScoresSet_block_height protoreflect.FieldDescriptor
	fd_EventScoresSet_addresses    protoreflect.FieldDescriptor
	fd_EventScoresSet_scores       protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_events_proto_init()
	md_EventScoresSet = File_emissions_v5_events_proto.Messages().ByName("EventScoresSet")
	fd_EventScoresSet_actor_type = md_EventScoresSet.Fields().ByName("actor_type")
	fd_EventScoresSet_topic_id = md_EventScoresSet.Fields().ByName("topic_id")
	fd_EventScoresSet_block_height = md_EventScoresSet.Fields().ByName("block_height")
	fd_EventScoresSet_addresses = md_EventScoresSet.Fields().ByName("addresses")
	fd_EventScoresSet_scores = md_EventScoresSet.Fields().ByName("scores")
}

var _ protoreflect.Message = (*fastReflection_EventScoresSet)(nil)

type fastReflection_EventScoresSet EventScoresSet

func (x *EventScoresSet) ProtoReflect() protoreflect.Message {
	return (*fastReflection_EventScoresSet)(x)
}

func (x *EventScoresSet) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_events_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_EventScoresSet_messageType fastReflection_EventScoresSet_messageType
var _ protoreflect.MessageType = fastReflection_EventScoresSet_messageType{}

type fastReflection_EventScoresSet_messageType struct{}

func (x fastReflection_EventScoresSet_messageType) Zero() protoreflect.Message {
	return (*fastReflection_EventScoresSet)(nil)
}
func (x fastReflection_EventScoresSet_messageType) New() protoreflect.Message {
	return new(fastReflection_EventScoresSet)
}
func (x fastReflection_EventScoresSet_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_EventScoresSet
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_EventScoresSet) Descriptor() protoreflect.MessageDescriptor {
	return md_EventScoresSet
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_EventScoresSet) Type() protoreflect.MessageType {
	return _fastReflection_EventScoresSet_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_EventScoresSet) New() protoreflect.Message {
	return new(fastReflection_EventScoresSet)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_EventScoresSet) Interface() protoreflect.ProtoMessage {
	return (*EventScoresSet)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_EventScoresSet) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.ActorType != 0 {
		value := protoreflect.ValueOfEnum((protoreflect.EnumNumber)(x.ActorType))
		if !f(fd_EventScoresSet_actor_type, value) {
			return
		}
	}
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_EventScoresSet_topic_id, value) {
			return
		}
	}
	if x.BlockHeight != int64(0) {
		value := protoreflect.ValueOfInt64(x.BlockHeight)
		if !f(fd_EventScoresSet_block_height, value) {
			return
		}
	}
	if len(x.Addresses) != 0 {
		value := protoreflect.ValueOfList(&_EventScoresSet_4_list{list: &x.Addresses})
		if !f(fd_EventScoresSet_addresses, value) {
			return
		}
	}
	if len(x.Scores) != 0 {
		value := protoreflect.ValueOfList(&_EventScoresSet_5_list{list: &x.Scores})
		if !f(fd_EventScoresSet_scores, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_EventScoresSet) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.EventScoresSet.actor_type":
		return x.ActorType != 0
	case "emissions.v5.EventScoresSet.topic_id":
		return x.TopicId != uint64(0)
	case "emissions.v5.EventScoresSet.block_height":
		return x.BlockHeight != int64(0)
	case "emissions.v5.EventScoresSet.addresses":
		return len(x.Addresses) != 0
	case "emissions.v5.EventScoresSet.scores":
		return len(x.Scores) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.EventScoresSet"))
		}
		panic(fmt.Errorf("message emissions.v5.EventScoresSet does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventScoresSet) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.EventScoresSet.actor_type":
		x.ActorType = 0
	case "emissions.v5.EventScoresSet.topic_id":
		x.TopicId = uint64(0)
	case "emissions.v5.EventScoresSet.block_height":
		x.BlockHeight = int64(0)
	case "emissions.v5.EventScoresSet.addresses":
		x.Addresses = nil
	case "emissions.v5.EventScoresSet.scores":
		x.Scores = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.EventScoresSet"))
		}
		panic(fmt.Errorf("message emissions.v5.EventScoresSet does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_EventScoresSet) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.EventScoresSet.actor_type":
		value := x.ActorType
		return protoreflect.ValueOfEnum((protoreflect.EnumNumber)(value))
	case "emissions.v5.EventScoresSet.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	case "emissions.v5.EventScoresSet.block_height":
		value := x.BlockHeight
		return protoreflect.ValueOfInt64(value)
	case "emissions.v5.EventScoresSet.addresses":
		if len(x.Addresses) == 0 {
			return protoreflect.ValueOfList(&_EventScoresSet_4_list{})
		}
		listValue := &_EventScoresSet_4_list{list: &x.Addresses}
		return protoreflect.ValueOfList(listValue)
	case "emissions.v5.EventScoresSet.scores":
		if len(x.Scores) == 0 {
			return protoreflect.ValueOfList(&_EventScoresSet_5_list{})
		}
		listValue := &_EventScoresSet_5_list{list: &x.Scores}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.EventScoresSet"))
		}
		panic(fmt.Errorf("message emissions.v5.EventScoresSet does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventScoresSet) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.EventScoresSet.actor_type":
		x.ActorType = (ActorType)(value.Enum())
	case "emissions.v5.EventScoresSet.topic_id":
		x.TopicId = value.Uint()
	case "emissions.v5.EventScoresSet.block_height":
		x.BlockHeight = value.Int()
	case "emissions.v5.EventScoresSet.addresses":
		lv := value.List()
		clv := lv.(*_EventScoresSet_4_list)
		x.Addresses = *clv.list
	case "emissions.v5.EventScoresSet.scores":
		lv := value.List()
		clv := lv.(*_EventScoresSet_5_list)
		x.Scores = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.EventScoresSet"))
		}
		panic(fmt.Errorf("message emissions.v5.EventScoresSet does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventScoresSet) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.EventScoresSet.addresses":
		if x.Addresses == nil {
			x.Addresses = []string{}
		}
		value := &_EventScoresSet_4_list{list: &x.Addresses}
		return protoreflect.ValueOfList(value)
	case "emissions.v5.EventScoresSet.scores":
		if x.Scores == nil {
			x.Scores = []string{}
		}
		value := &_EventScoresSet_5_list{list: &x.Scores}
		return protoreflect.ValueOfList(value)
	case "emissions.v5.EventScoresSet.actor_type":
		panic(fmt.Errorf("field actor_type of message emissions.v5.EventScoresSet is not mutable"))
	case "emissions.v5.EventScoresSet.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.EventScoresSet is not mutable"))
	case "emissions.v5.EventScoresSet.block_height":
		panic(fmt.Errorf("field block_height of message emissions.v5.EventScoresSet is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.EventScoresSet"))
		}
		panic(fmt.Errorf("message emissions.v5.EventScoresSet does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_EventScoresSet) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.EventScoresSet.actor_type":
		return protoreflect.ValueOfEnum(0)
	case "emissions.v5.EventScoresSet.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "emissions.v5.EventScoresSet.block_height":
		return protoreflect.ValueOfInt64(int64(0))
	case "emissions.v5.EventScoresSet.addresses":
		list := []string{}
		return protoreflect.ValueOfList(&_EventScoresSet_4_list{list: &list})
	case "emissions.v5.EventScoresSet.scores":
		list := []string{}
		return protoreflect.ValueOfList(&_EventScoresSet_5_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.EventScoresSet"))
		}
		panic(fmt.Errorf("message emissions.v5.EventScoresSet does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_EventScoresSet) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.EventScoresSet", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_EventScoresSet) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventScoresSet) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_EventScoresSet) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_EventScoresSet) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*EventScoresSet)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.ActorType != 0 {
			n += 1 + runtime.Sov(uint64(x.ActorType))
		}
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		if x.BlockHeight != 0 {
			n += 1 + runtime.Sov(uint64(x.BlockHeight))
		}
		if len(x.Addresses) > 0 {
			for _, s := range x.Addresses {
				l = len(s)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.Scores) > 0 {
			for _, s := range x.Scores {
				l = len(s)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*EventScoresSet)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Scores) > 0 {
			for iNdEx := len(x.Scores) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.Scores[iNdEx])
				copy(dAtA[i:], x.Scores[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Scores[iNdEx])))
				i--
				dAtA[i] = 0x2a
			}
		}
		if len(x.Addresses) > 0 {
			for iNdEx := len(x.Addresses) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.Addresses[iNdEx])
				copy(dAtA[i:], x.Addresses[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Addresses[iNdEx])))
				i--
				dAtA[i] = 0x22
			}
		}
		if x.BlockHeight != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.BlockHeight))
			i--
			dAtA[i] = 0x18
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x10
		}
		if x.ActorType != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.ActorType))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*EventScoresSet)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventScoresSet: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventScoresSet: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ActorType", wireType)
				}
				x.ActorType = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.ActorType |= ActorType(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BlockHeight", wireType)
				}
				x.BlockHeight = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.BlockHeight |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Addresses", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Addresses = append(x.Addresses, string(dAtA[iNdEx:postIndex]))
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Scores", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Scores = append(x.Scores, string(dAtA[iNdEx:postIndex]))
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_EventRewardsSettled_4_list)(nil)

type _EventRewardsSettled_4_list struct {
	list *[]string
}

func (x *_EventRewardsSettled_4_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_EventRewardsSettled_4_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfString((*x.list)[i])
}

func (x *_EventRewardsSettled_4_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_EventRewardsSettled_4_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_EventRewardsSettled_4_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message EventRewardsSettled at list field Addresses as it is not of Message kind"))
}

func (x *_EventRewardsSettled_4_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_EventRewardsSettled_4_list) NewElement() protoreflect.Value {
	v := ""
	return protoreflect.ValueOfString(v)
}

func (x *_EventRewardsSettled_4_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_EventRewardsSettled_5_list)(nil)

type _EventRewardsSettled_5_list struct {
	list *[]string
}

func (x *_EventRewardsSettled_5_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_EventRewardsSettled_5_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfString((*x.list)[i])
}

func (x *_EventRewardsSettled_5_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_EventRewardsSettled_5_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_EventRewardsSettled_5_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message EventRewardsSettled at list field Rewards as it is not of Message kind"))
}

func (x *_EventRewardsSettled_5_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_EventRewardsSettled_5_list) NewElement() protoreflect.Value {
	v := ""
	return protoreflect.ValueOfString(v)
}

func (x *_EventRewardsSettled_5_list) IsValid() bool {
	return x.list != nil
}

var (
	md_EventRewardsSettled              protoreflect.MessageDescriptor
	fd_EventRewardsSettled_actor_type   protoreflect.FieldDescriptor
	fd_EventRewardsSettled_topic_id     protoreflect.FieldDescriptor
	fd_EventRewardsSettled_block_height protoreflect.FieldDescriptor
	fd_EventRewardsSettled_addresses    protoreflect.FieldDescriptor
	fd_EventRewardsSettled_rewards      protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_events_proto_init()
	md_EventRewardsSettled = File_emissions_v5_events_proto.Messages().ByName("EventRewardsSettled")
	fd_EventRewardsSettled_actor_type = md_EventRewardsSettled.Fields().ByName("actor_type")
	fd_EventRewardsSettled_topic_id = md_EventRewardsSettled.Fields().ByName("topic_id")
	fd_EventRewardsSettled_block_height = md_EventRewardsSettled.Fields().ByName("block_height")
	fd_EventRewardsSettled_addresses = md_EventRewardsSettled.Fields().ByName("addresses")
	fd_EventRewardsSettled_rewards = md_EventRewardsSettled.Fields().ByName("rewards")
}

var _ protoreflect.Message = (*fastReflection_EventRewardsSettled)(nil)

type fastReflection_EventRewardsSettled EventRewardsSettled

func (x *EventRewardsSettled) ProtoReflect() protoreflect.Message {
	return (*fastReflection_EventRewardsSettled)(x)
}

func (x *EventRewardsSettled) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_events_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_EventRewardsSettled_messageType fastReflection_EventRewardsSettled_messageType
var _ protoreflect.MessageType = fastReflection_EventRewardsSettled_messageType{}

type fastReflection_EventRewardsSettled_messageType struct{}

func (x fastReflection_EventRewardsSettled_messageType) Zero() protoreflect.Message {
	return (*fastReflection_EventRewardsSettled)(nil)
}
func (x fastReflection_EventRewardsSettled_messageType) New() protoreflect.Message {
	return new(fastReflection_EventRewardsSettled)
}
func (x fastReflection_EventRewardsSettled_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_EventRewardsSettled
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_EventRewardsSettled) Descriptor() protoreflect.MessageDescriptor {
	return md_EventRewardsSettled
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_EventRewardsSettled) Type() protoreflect.MessageType {
	return _fastReflection_EventRewardsSettled_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_EventRewardsSettled) New() protoreflect.Message {
	return new(fastReflection_EventRewardsSettled)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_EventRewardsSettled) Interface() protoreflect.ProtoMessage {
	return (*EventRewardsSettled)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_EventRewardsSettled) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.ActorType != 0 {
		value := protoreflect.ValueOfEnum((protoreflect.EnumNumber)(x.ActorType))
		if !f(fd_EventRewardsSettled_actor_type, value) {
			return
		}
	}
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_EventRewardsSettled_topic_id, value) {
			return
		}
	}
	if x.BlockHeight != int64(0) {
		value := protoreflect.ValueOfInt64(x.BlockHeight)
		if !f(fd_EventRewardsSettled_block_height, value) {
			return
		}
	}
	if len(x.Addresses) != 0 {
		value := protoreflect.ValueOfList(&_EventRewardsSettled_4_list{list: &x.Addresses})
		if !f(fd_EventRewardsSettled_addresses, value) {
			return
		}
	}
	if len(x.Rewards) != 0 {
		value := protoreflect.ValueOfList(&_EventRewardsSettled_5_list{list: &x.Rewards})
		if !f(fd_EventRewardsSettled_rewards, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_EventRewardsSettled) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.EventRewardsSettled.actor_type":
		return x.ActorType != 0
	case "emissions.v5.EventRewardsSettled.topic_id":
		return x.TopicId != uint64(0)
	case "emissions.v5.EventRewardsSettled.block_height":
		return x.BlockHeight != int64(0)
	case "emissions.v5.EventRewardsSettled.addresses":
		return len(x.Addresses) != 0
	case "emissions.v5.EventRewardsSettled.rewards":
		return len(x.Rewards) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.EventRewardsSettled"))
		}
		panic(fmt.Errorf("message emissions.v5.EventRewardsSettled does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventRewardsSettled) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.EventRewardsSettled.actor_type":
		x.ActorType = 0
	case "emissions.v5.EventRewardsSettled.topic_id":
		x.TopicId = uint64(0)
	case "emissions.v5.EventRewardsSettled.block_height":
		x.BlockHeight = int64(0)
	case "emissions.v5.EventRewardsSettled.addresses":
		x.Addresses = nil
	case "emissions.v5.EventRewardsSettled.rewards":
		x.Rewards = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.EventRewardsSettled"))
		}
		panic(fmt.Errorf("message emissions.v5.EventRewardsSettled does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_EventRewardsSettled) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.EventRewardsSettled.actor_type":
		value := x.ActorType
		return protoreflect.ValueOfEnum((protoreflect.EnumNumber)(value))
	case "emissions.v5.EventRewardsSettled.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	case "emissions.v5.EventRewardsSettled.block_height":
		value := x.BlockHeight
		return protoreflect.ValueOfInt64(value)
	case "emissions.v5.EventRewardsSettled.addresses":
		if len(x.Addresses) == 0 {
			return protoreflect.ValueOfList(&_EventRewardsSettled_4_list{})
		}
		listValue := &_EventRewardsSettled_4_list{list: &x.Addresses}
		return protoreflect.ValueOfList(listValue)
	case "emissions.v5.EventRewardsSettled.rewards":
		if len(x.Rewards) == 0 {
			return protoreflect.ValueOfList(&_EventRewardsSettled_5_list{})
		}
		listValue := &_EventRewardsSettled_5_list{list: &x.Rewards}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.EventRewardsSettled"))
		}
		panic(fmt.Errorf("message emissions.v5.EventRewardsSettled does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventRewardsSettled) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.EventRewardsSettled.actor_type":
		x.ActorType = (ActorType)(value.Enum())
	case "emissions.v5.EventRewardsSettled.topic_id":
		x.TopicId = value.Uint()
	case "emissions.v5.EventRewardsSettled.block_height":
		x.BlockHeight = value.Int()
	case "emissions.v5.EventRewardsSettled.addresses":
		lv := value.List()
		clv := lv.(*_EventRewardsSettled_4_list)
		x.Addresses = *clv.list
	case "emissions.v5.EventRewardsSettled.rewards":
		lv := value.List()
		clv := lv.(*_EventRewardsSettled_5_list)
		x.Rewards = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.EventRewardsSettled"))
		}
		panic(fmt.Errorf("message emissions.v5.EventRewardsSettled does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventRewardsSettled) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.EventRewardsSettled.addresses":
		if x.Addresses == nil {
			x.Addresses = []string{}
		}
		value := &_EventRewardsSettled_4_list{list: &x.Addresses}
		return protoreflect.ValueOfList(value)
	case "emissions.v5.EventRewardsSettled.rewards":
		if x.Rewards == nil {
			x.Rewards = []string{}
		}
		value := &_EventRewardsSettled_5_list{list: &x.Rewards}
		return protoreflect.ValueOfList(value)
	case "emissions.v5.EventRewardsSettled.actor_type":
		panic(fmt.Errorf("field actor_type of message emissions.v5.EventRewardsSettled is not mutable"))
	case "emissions.v5.EventRewardsSettled.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.EventRewardsSettled is not mutable"))
	case "emissions.v5.EventRewardsSettled.block_height":
		panic(fmt.Errorf("field block_height of message emissions.v5.EventRewardsSettled is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.EventRewardsSettled"))
		}
		panic(fmt.Errorf("message emissions.v5.EventRewardsSettled does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_EventRewardsSettled) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.EventRewardsSettled.actor_type":
		return protoreflect.ValueOfEnum(0)
	case "emissions.v5.EventRewardsSettled.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "emissions.v5.EventRewardsSettled.block_height":
		return protoreflect.ValueOfInt64(int64(0))
	case "emissions.v5.EventRewardsSettled.addresses":
		list := []string{}
		return protoreflect.ValueOfList(&_EventRewardsSettled_4_list{list: &list})
	case "emissions.v5.EventRewardsSettled.rewards":
		list := []string{}
		return protoreflect.ValueOfList(&_EventRewardsSettled_5_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.EventRewardsSettled"))
		}
		panic(fmt.Errorf("message emissions.v5.EventRewardsSettled does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_EventRewardsSettled) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.EventRewardsSettled", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_EventRewardsSettled) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventRewardsSettled) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_EventRewardsSettled) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_EventRewardsSettled) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*EventRewardsSettled)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.ActorType != 0 {
			n += 1 + runtime.Sov(uint64(x.ActorType))
		}
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		if x.BlockHeight != 0 {
			n += 1 + runtime.Sov(uint64(x.BlockHeight))
		}
		if len(x.Addresses) > 0 {
			for _, s := range x.Addresses {
				l = len(s)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.Rewards) > 0 {
			for _, s := range x.Rewards {
				l = len(s)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*EventRewardsSettled)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Rewards) > 0 {
			for iNdEx := len(x.Rewards) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.Rewards[iNdEx])
				copy(dAtA[i:], x.Rewards[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Rewards[iNdEx])))
				i--
				dAtA[i] = 0x2a
			}
		}
		if len(x.Addresses) > 0 {
			for iNdEx := len(x.Addresses) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.Addresses[iNdEx])
				copy(dAtA[i:], x.Addresses[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Addresses[iNdEx])))
				i--
				dAtA[i] = 0x22
			}
		}
		if x.BlockHeight != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.BlockHeight))
			i--
			dAtA[i] = 0x18
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x10
		}
		if x.ActorType != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.ActorType))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*EventRewardsSettled)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventRewardsSettled: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventRewardsSettled: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ActorType", wireType)
				}
				x.ActorType = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.ActorType |= ActorType(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BlockHeight", wireType)
				}
				x.BlockHeight = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.BlockHeight |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Addresses", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Addresses = append(x.Addresses, string(dAtA[iNdEx:postIndex]))
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Rewards", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Rewards = append(x.Rewards, string(dAtA[iNdEx:postIndex]))
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_EventNetworkLossSet              protoreflect.MessageDescriptor
	fd_EventNetworkLossSet_topic_id     protoreflect.FieldDescriptor
	fd_EventNetworkLossSet_block_height protoreflect.FieldDescriptor
	fd_EventNetworkLossSet_value_bundle protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_events_proto_init()
	md_EventNetworkLossSet = File_emissions_v5_events_proto.Messages().ByName("EventNetworkLossSet")
	fd_EventNetworkLossSet_topic_id = md_EventNetworkLossSet.Fields().ByName("topic_id")
	fd_EventNetworkLossSet_block_height = md_EventNetworkLossSet.Fields().ByName("block_height")
	fd_EventNetworkLossSet_value_bundle = md_EventNetworkLossSet.Fields().ByName("value_bundle")
}

var _ protoreflect.Message = (*fastReflection_EventNetworkLossSet)(nil)

type fastReflection_EventNetworkLossSet EventNetworkLossSet

func (x *EventNetworkLossSet) ProtoReflect() protoreflect.Message {
	return (*fastReflection_EventNetworkLossSet)(x)
}

func (x *EventNetworkLossSet) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_events_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_EventNetworkLossSet_messageType fastReflection_EventNetworkLossSet_messageType
var _ protoreflect.MessageType = fastReflection_EventNetworkLossSet_messageType{}

type fastReflection_EventNetworkLossSet_messageType struct{}

func (x fastReflection_EventNetworkLossSet_messageType) Zero() protoreflect.Message {
	return (*fastReflection_EventNetworkLossSet)(nil)
}
func (x fastReflection_EventNetworkLossSet_messageType) New() protoreflect.Message {
	return new(fastReflection_EventNetworkLossSet)
}
func (x fastReflection_EventNetworkLossSet_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_EventNetworkLossSet
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_EventNetworkLossSet) Descriptor() protoreflect.MessageDescriptor {
	return md_EventNetworkLossSet
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_EventNetworkLossSet) Type() protoreflect.MessageType {
	return _fastReflection_EventNetworkLossSet_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_EventNetworkLossSet) New() protoreflect.Message {
	return new(fastReflection_EventNetworkLossSet)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_EventNetworkLossSet) Interface() protoreflect.ProtoMessage {
	return (*EventNetworkLossSet)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_EventNetworkLossSet) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_EventNetworkLossSet_topic_id, value) {
			return
		}
	}
	if x.BlockHeight != int64(0) {
		value := protoreflect.ValueOfInt64(x.BlockHeight)
		if !f(fd_EventNetworkLossSet_block_height, value) {
			return
		}
	}
	if x.ValueBundle != nil {
		value := protoreflect.ValueOfMessage(x.ValueBundle.ProtoReflect())
		if !f(fd_EventNetworkLossSet_value_bundle, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_EventNetworkLossSet) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.EventNetworkLossSet.topic_id":
		return x.TopicId != uint64(0)
	case "emissions.v5.EventNetworkLossSet.block_height":
		return x.BlockHeight != int64(0)
	case "emissions.v5.EventNetworkLossSet.value_bundle":
		return x.ValueBundle != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.EventNetworkLossSet"))
		}
		panic(fmt.Errorf("message emissions.v5.EventNetworkLossSet does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventNetworkLossSet) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.EventNetworkLossSet.topic_id":
		x.TopicId = uint64(0)
	case "emissions.v5.EventNetworkLossSet.block_height":
		x.BlockHeight = int64(0)
	case "emissions.v5.EventNetworkLossSet.value_bundle":
		x.ValueBundle = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.EventNetworkLossSet"))
		}
		panic(fmt.Errorf("message emissions.v5.EventNetworkLossSet does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_EventNetworkLossSet) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.EventNetworkLossSet.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	case "emissions.v5.EventNetworkLossSet.block_height":
		value := x.BlockHeight
		return protoreflect.ValueOfInt64(value)
	case "emissions.v5.EventNetworkLossSet.value_bundle":
		value := x.ValueBundle
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.EventNetworkLossSet"))
		}
		panic(fmt.Errorf("message emissions.v5.EventNetworkLossSet does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventNetworkLossSet) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.EventNetworkLossSet.topic_id":
		x.TopicId = value.Uint()
	case "emissions.v5.EventNetworkLossSet.block_height":
		x.BlockHeight = value.Int()
	case "emissions.v5.EventNetworkLossSet.value_bundle":
		x.ValueBundle = value.Message().Interface().(*v3.ValueBundle)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.EventNetworkLossSet"))
		}
		panic(fmt.Errorf("message emissions.v5.EventNetworkLossSet does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventNetworkLossSet) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.EventNetworkLossSet.value_bundle":
		if x.ValueBundle == nil {
			x.ValueBundle = new(v3.ValueBundle)
		}
		return protoreflect.ValueOfMessage(x.ValueBundle.ProtoReflect())
	case "emissions.v5.EventNetworkLossSet.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.EventNetworkLossSet is not mutable"))
	case "emissions.v5.EventNetworkLossSet.block_height":
		panic(fmt.Errorf("field block_height of message emissions.v5.EventNetworkLossSet is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.EventNetworkLossSet"))
		}
		panic(fmt.Errorf("message emissions.v5.EventNetworkLossSet does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_EventNetworkLossSet) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.EventNetworkLossSet.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "emissions.v5.EventNetworkLossSet.block_height":
		return protoreflect.ValueOfInt64(int64(0))
	case "emissions.v5.EventNetworkLossSet.value_bundle":
		m := new(v3.ValueBundle)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.EventNetworkLossSet"))
		}
		panic(fmt.Errorf("message emissions.v5.EventNetworkLossSet does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_EventNetworkLossSet) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.EventNetworkLossSet", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_EventNetworkLossSet) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventNetworkLossSet) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_EventNetworkLossSet) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_EventNetworkLossSet) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*EventNetworkLossSet)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		if x.BlockHeight != 0 {
			n += 1 + runtime.Sov(uint64(x.BlockHeight))
		}
		if x.ValueBundle != nil {
			l = options.Size(x.ValueBundle)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*EventNetworkLossSet)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.ValueBundle != nil {
			encoded, err := options.Marshal(x.ValueBundle)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x1a
		}
		if x.BlockHeight != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.BlockHeight))
			i--
			dAtA[i] = 0x10
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*EventNetworkLossSet)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventNetworkLossSet: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventNetworkLossSet: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BlockHeight", wireType)
				}
				x.BlockHeight = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.BlockHeight |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ValueBundle", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.ValueBundle == nil {
					x.ValueBundle = &v3.ValueBundle{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.ValueBundle); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_EventForecastTaskScoreSet          protoreflect.MessageDescriptor
	fd_EventForecastTaskScoreSet_topic_id protoreflect.FieldDescriptor
	fd_EventForecastTaskScoreSet_score    protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_events_proto_init()
	md_EventForecastTaskScoreSet = File_emissions_v5_events_proto.Messages().ByName("EventForecastTaskScoreSet")
	fd_EventForecastTaskScoreSet_topic_id = md_EventForecastTaskScoreSet.Fields().ByName("topic_id")
	fd_EventForecastTaskScoreSet_score = md_EventForecastTaskScoreSet.Fields().ByName("score")
}

var _ protoreflect.Message = (*fastReflection_EventForecastTaskScoreSet)(nil)

type fastReflection_EventForecastTaskScoreSet EventForecastTaskScoreSet

func (x *EventForecastTaskScoreSet) ProtoReflect() protoreflect.Message {
	return (*fastReflection_EventForecastTaskScoreSet)(x)
}

func (x *EventForecastTaskScoreSet) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_events_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_EventForecastTaskScoreSet_messageType fastReflection_EventForecastTaskScoreSet_messageType
var _ protoreflect.MessageType = fastReflection_EventForecastTaskScoreSet_messageType{}

type fastReflection_EventForecastTaskScoreSet_messageType struct{}

func (x fastReflection_EventForecastTaskScoreSet_messageType) Zero() protoreflect.Message {
	return (*fastReflection_EventForecastTaskScoreSet)(nil)
}
func (x fastReflection_EventForecastTaskScoreSet_messageType) New() protoreflect.Message {
	return new(fastReflection_EventForecastTaskScoreSet)
}
func (x fastReflection_EventForecastTaskScoreSet_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_EventForecastTaskScoreSet
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_EventForecastTaskScoreSet) Descriptor() protoreflect.MessageDescriptor {
	return md_EventForecastTaskScoreSet
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_EventForecastTaskScoreSet) Type() protoreflect.MessageType {
	return _fastReflection_EventForecastTaskScoreSet_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_EventForecastTaskScoreSet) New() protoreflect.Message {
	return new(fastReflection_EventForecastTaskScoreSet)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_EventForecastTaskScoreSet) Interface() protoreflect.ProtoMessage {
	return (*EventForecastTaskScoreSet)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_EventForecastTaskScoreSet) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_EventForecastTaskScoreSet_topic_id, value) {
			return
		}
	}
	if x.Score != "" {
		value := protoreflect.ValueOfString(x.Score)
		if !f(fd_EventForecastTaskScoreSet_score, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_EventForecastTaskScoreSet) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.EventForecastTaskScoreSet.topic_id":
		return x.TopicId != uint64(0)
	case "emissions.v5.EventForecastTaskScoreSet.score":
		return x.Score != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.EventForecastTaskScoreSet"))
		}
		panic(fmt.Errorf("message emissions.v5.EventForecastTaskScoreSet does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventForecastTaskScoreSet) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.EventForecastTaskScoreSet.topic_id":
		x.TopicId = uint64(0)
	case "emissions.v5.EventForecastTaskScoreSet.score":
		x.Score = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.EventForecastTaskScoreSet"))
		}
		panic(fmt.Errorf("message emissions.v5.EventForecastTaskScoreSet does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_EventForecastTaskScoreSet) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.EventForecastTaskScoreSet.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	case "emissions.v5.EventForecastTaskScoreSet.score":
		value := x.Score
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.EventForecastTaskScoreSet"))
		}
		panic(fmt.Errorf("message emissions.v5.EventForecastTaskScoreSet does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventForecastTaskScoreSet) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.EventForecastTaskScoreSet.topic_id":
		x.TopicId = value.Uint()
	case "emissions.v5.EventForecastTaskScoreSet.score":
		x.Score = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.EventForecastTaskScoreSet"))
		}
		panic(fmt.Errorf("message emissions.v5.EventForecastTaskScoreSet does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventForecastTaskScoreSet) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.EventForecastTaskScoreSet.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.EventForecastTaskScoreSet is not mutable"))
	case "emissions.v5.EventForecastTaskScoreSet.score":
		panic(fmt.Errorf("field score of message emissions.v5.EventForecastTaskScoreSet is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.EventForecastTaskScoreSet"))
		}
		panic(fmt.Errorf("message emissions.v5.EventForecastTaskScoreSet does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_EventForecastTaskScoreSet) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.EventForecastTaskScoreSet.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "emissions.v5.EventForecastTaskScoreSet.score":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.EventForecastTaskScoreSet"))
		}
		panic(fmt.Errorf("message emissions.v5.EventForecastTaskScoreSet does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_EventForecastTaskScoreSet) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.EventForecastTaskScoreSet", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_EventForecastTaskScoreSet) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventForecastTaskScoreSet) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_EventForecastTaskScoreSet) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_EventForecastTaskScoreSet) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*EventForecastTaskScoreSet)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		l = len(x.Score)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*EventForecastTaskScoreSet)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Score) > 0 {
			i -= len(x.Score)
			copy(dAtA[i:], x.Score)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Score)))
			i--
			dAtA[i] = 0x12
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*EventForecastTaskScoreSet)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventForecastTaskScoreSet: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventForecastTaskScoreSet: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Score", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Score = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_EventWorkerLastCommitSet              protoreflect.MessageDescriptor
	fd_EventWorkerLastCommitSet_topic_id     protoreflect.FieldDescriptor
	fd_EventWorkerLastCommitSet_block_height protoreflect.FieldDescriptor
	fd_EventWorkerLastCommitSet_nonce        protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_events_proto_init()
	md_EventWorkerLastCommitSet = File_emissions_v5_events_proto.Messages().ByName("EventWorkerLastCommitSet")
	fd_EventWorkerLastCommitSet_topic_id = md_EventWorkerLastCommitSet.Fields().ByName("topic_id")
	fd_EventWorkerLastCommitSet_block_height = md_EventWorkerLastCommitSet.Fields().ByName("block_height")
	fd_EventWorkerLastCommitSet_nonce = md_EventWorkerLastCommitSet.Fields().ByName("nonce")
}

var _ protoreflect.Message = (*fastReflection_EventWorkerLastCommitSet)(nil)

type fastReflection_EventWorkerLastCommitSet EventWorkerLastCommitSet

func (x *EventWorkerLastCommitSet) ProtoReflect() protoreflect.Message {
	return (*fastReflection_EventWorkerLastCommitSet)(x)
}

func (x *EventWorkerLastCommitSet) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_events_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_EventWorkerLastCommitSet_messageType fastReflection_EventWorkerLastCommitSet_messageType
var _ protoreflect.MessageType = fastReflection_EventWorkerLastCommitSet_messageType{}

type fastReflection_EventWorkerLastCommitSet_messageType struct{}

func (x fastReflection_EventWorkerLastCommitSet_messageType) Zero() protoreflect.Message {
	return (*fastReflection_EventWorkerLastCommitSet)(nil)
}
func (x fastReflection_EventWorkerLastCommitSet_messageType) New() protoreflect.Message {
	return new(fastReflection_EventWorkerLastCommitSet)
}
func (x fastReflection_EventWorkerLastCommitSet_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_EventWorkerLastCommitSet
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_EventWorkerLastCommitSet) Descriptor() protoreflect.MessageDescriptor {
	return md_EventWorkerLastCommitSet
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_EventWorkerLastCommitSet) Type() protoreflect.MessageType {
	return _fastReflection_EventWorkerLastCommitSet_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_EventWorkerLastCommitSet) New() protoreflect.Message {
	return new(fastReflection_EventWorkerLastCommitSet)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_EventWorkerLastCommitSet) Interface() protoreflect.ProtoMessage {
	return (*EventWorkerLastCommitSet)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_EventWorkerLastCommitSet) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_EventWorkerLastCommitSet_topic_id, value) {
			return
		}
	}
	if x.BlockHeight != int64(0) {
		value := protoreflect.ValueOfInt64(x.BlockHeight)
		if !f(fd_EventWorkerLastCommitSet_block_height, value) {
			return
		}
	}
	if x.Nonce != nil {
		value := protoreflect.ValueOfMessage(x.Nonce.ProtoReflect())
		if !f(fd_EventWorkerLastCommitSet_nonce, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_EventWorkerLastCommitSet) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.EventWorkerLastCommitSet.topic_id":
		return x.TopicId != uint64(0)
	case "emissions.v5.EventWorkerLastCommitSet.block_height":
		return x.BlockHeight != int64(0)
	case "emissions.v5.EventWorkerLastCommitSet.nonce":
		return x.Nonce != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.EventWorkerLastCommitSet"))
		}
		panic(fmt.Errorf("message emissions.v5.EventWorkerLastCommitSet does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventWorkerLastCommitSet) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.EventWorkerLastCommitSet.topic_id":
		x.TopicId = uint64(0)
	case "emissions.v5.EventWorkerLastCommitSet.block_height":
		x.BlockHeight = int64(0)
	case "emissions.v5.EventWorkerLastCommitSet.nonce":
		x.Nonce = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.EventWorkerLastCommitSet"))
		}
		panic(fmt.Errorf("message emissions.v5.EventWorkerLastCommitSet does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_EventWorkerLastCommitSet) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.EventWorkerLastCommitSet.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	case "emissions.v5.EventWorkerLastCommitSet.block_height":
		value := x.BlockHeight
		return protoreflect.ValueOfInt64(value)
	case "emissions.v5.EventWorkerLastCommitSet.nonce":
		value := x.Nonce
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.EventWorkerLastCommitSet"))
		}
		panic(fmt.Errorf("message emissions.v5.EventWorkerLastCommitSet does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventWorkerLastCommitSet) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.EventWorkerLastCommitSet.topic_id":
		x.TopicId = value.Uint()
	case "emissions.v5.EventWorkerLastCommitSet.block_height":
		x.BlockHeight = value.Int()
	case "emissions.v5.EventWorkerLastCommitSet.nonce":
		x.Nonce = value.Message().Interface().(*v3.Nonce)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.EventWorkerLastCommitSet"))
		}
		panic(fmt.Errorf("message emissions.v5.EventWorkerLastCommitSet does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventWorkerLastCommitSet) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.EventWorkerLastCommitSet.nonce":
		if x.Nonce == nil {
			x.Nonce = new(v3.Nonce)
		}
		return protoreflect.ValueOfMessage(x.Nonce.ProtoReflect())
	case "emissions.v5.EventWorkerLastCommitSet.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.EventWorkerLastCommitSet is not mutable"))
	case "emissions.v5.EventWorkerLastCommitSet.block_height":
		panic(fmt.Errorf("field block_height of message emissions.v5.EventWorkerLastCommitSet is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.EventWorkerLastCommitSet"))
		}
		panic(fmt.Errorf("message emissions.v5.EventWorkerLastCommitSet does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_EventWorkerLastCommitSet) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.EventWorkerLastCommitSet.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "emissions.v5.EventWorkerLastCommitSet.block_height":
		return protoreflect.ValueOfInt64(int64(0))
	case "emissions.v5.EventWorkerLastCommitSet.nonce":
		m := new(v3.Nonce)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.EventWorkerLastCommitSet"))
		}
		panic(fmt.Errorf("message emissions.v5.EventWorkerLastCommitSet does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_EventWorkerLastCommitSet) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.EventWorkerLastCommitSet", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_EventWorkerLastCommitSet) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventWorkerLastCommitSet) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_EventWorkerLastCommitSet) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_EventWorkerLastCommitSet) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*EventWorkerLastCommitSet)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		if x.BlockHeight != 0 {
			n += 1 + runtime.Sov(uint64(x.BlockHeight))
		}
		if x.Nonce != nil {
			l = options.Size(x.Nonce)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*EventWorkerLastCommitSet)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Nonce != nil {
			encoded, err := options.Marshal(x.Nonce)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x1a
		}
		if x.BlockHeight != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.BlockHeight))
			i--
			dAtA[i] = 0x10
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*EventWorkerLastCommitSet)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventWorkerLastCommitSet: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventWorkerLastCommitSet: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BlockHeight", wireType)
				}
				x.BlockHeight = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.BlockHeight |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Nonce", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Nonce == nil {
					x.Nonce = &v3.Nonce{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Nonce); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_EventReputerLastCommitSet              protoreflect.MessageDescriptor
	fd_EventReputerLastCommitSet_topic_id     protoreflect.FieldDescriptor
	fd_EventReputerLastCommitSet_block_height protoreflect.FieldDescriptor
	fd_EventReputerLastCommitSet_nonce        protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_events_proto_init()
	md_EventReputerLastCommitSet = File_emissions_v5_events_proto.Messages().ByName("EventReputerLastCommitSet")
	fd_EventReputerLastCommitSet_topic_id = md_EventReputerLastCommitSet.Fields().ByName("topic_id")
	fd_EventReputerLastCommitSet_block_height = md_EventReputerLastCommitSet.Fields().ByName("block_height")
	fd_EventReputerLastCommitSet_nonce = md_EventReputerLastCommitSet.Fields().ByName("nonce")
}

var _ protoreflect.Message = (*fastReflection_EventReputerLastCommitSet)(nil)

type fastReflection_EventReputerLastCommitSet EventReputerLastCommitSet

func (x *EventReputerLastCommitSet) ProtoReflect() protoreflect.Message {
	return (*fastReflection_EventReputerLastCommitSet)(x)
}

func (x *EventReputerLastCommitSet) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_events_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_EventReputerLastCommitSet_messageType fastReflection_EventReputerLastCommitSet_messageType
var _ protoreflect.MessageType = fastReflection_EventReputerLastCommitSet_messageType{}

type fastReflection_EventReputerLastCommitSet_messageType struct{}

func (x fastReflection_EventReputerLastCommitSet_messageType) Zero() protoreflect.Message {
	return (*fastReflection_EventReputerLastCommitSet)(nil)
}
func (x fastReflection_EventReputerLastCommitSet_messageType) New() protoreflect.Message {
	return new(fastReflection_EventReputerLastCommitSet)
}
func (x fastReflection_EventReputerLastCommitSet_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_EventReputerLastCommitSet
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_EventReputerLastCommitSet) Descriptor() protoreflect.MessageDescriptor {
	return md_EventReputerLastCommitSet
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_EventReputerLastCommitSet) Type() protoreflect.MessageType {
	return _fastReflection_EventReputerLastCommitSet_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_EventReputerLastCommitSet) New() protoreflect.Message {
	return new(fastReflection_EventReputerLastCommitSet)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_EventReputerLastCommitSet) Interface() protoreflect.ProtoMessage {
	return (*EventReputerLastCommitSet)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_EventReputerLastCommitSet) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_EventReputerLastCommitSet_topic_id, value) {
			return
		}
	}
	if x.BlockHeight != int64(0) {
		value := protoreflect.ValueOfInt64(x.BlockHeight)
		if !f(fd_EventReputerLastCommitSet_block_height, value) {
			return
		}
	}
	if x.Nonce != nil {
		value := protoreflect.ValueOfMessage(x.Nonce.ProtoReflect())
		if !f(fd_EventReputerLastCommitSet_nonce, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_EventReputerLastCommitSet) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.EventReputerLastCommitSet.topic_id":
		return x.TopicId != uint64(0)
	case "emissions.v5.EventReputerLastCommitSet.block_height":
		return x.BlockHeight != int64(0)
	case "emissions.v5.EventReputerLastCommitSet.nonce":
		return x.Nonce != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.EventReputerLastCommitSet"))
		}
		panic(fmt.Errorf("message emissions.v5.EventReputerLastCommitSet does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventReputerLastCommitSet) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.EventReputerLastCommitSet.topic_id":
		x.TopicId = uint64(0)
	case "emissions.v5.EventReputerLastCommitSet.block_height":
		x.BlockHeight = int64(0)
	case "emissions.v5.EventReputerLastCommitSet.nonce":
		x.Nonce = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.EventReputerLastCommitSet"))
		}
		panic(fmt.Errorf("message emissions.v5.EventReputerLastCommitSet does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_EventReputerLastCommitSet) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.EventReputerLastCommitSet.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	case "emissions.v5.EventReputerLastCommitSet.block_height":
		value := x.BlockHeight
		return protoreflect.ValueOfInt64(value)
	case "emissions.v5.EventReputerLastCommitSet.nonce":
		value := x.Nonce
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.EventReputerLastCommitSet"))
		}
		panic(fmt.Errorf("message emissions.v5.EventReputerLastCommitSet does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventReputerLastCommitSet) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.EventReputerLastCommitSet.topic_id":
		x.TopicId = value.Uint()
	case "emissions.v5.EventReputerLastCommitSet.block_height":
		x.BlockHeight = value.Int()
	case "emissions.v5.EventReputerLastCommitSet.nonce":
		x.Nonce = value.Message().Interface().(*v3.Nonce)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.EventReputerLastCommitSet"))
		}
		panic(fmt.Errorf("message emissions.v5.EventReputerLastCommitSet does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventReputerLastCommitSet) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.EventReputerLastCommitSet.nonce":
		if x.Nonce == nil {
			x.Nonce = new(v3.Nonce)
		}
		return protoreflect.ValueOfMessage(x.Nonce.ProtoReflect())
	case "emissions.v5.EventReputerLastCommitSet.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.EventReputerLastCommitSet is not mutable"))
	case "emissions.v5.EventReputerLastCommitSet.block_height":
		panic(fmt.Errorf("field block_height of message emissions.v5.EventReputerLastCommitSet is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.EventReputerLastCommitSet"))
		}
		panic(fmt.Errorf("message emissions.v5.EventReputerLastCommitSet does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_EventReputerLastCommitSet) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.EventReputerLastCommitSet.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "emissions.v5.EventReputerLastCommitSet.block_height":
		return protoreflect.ValueOfInt64(int64(0))
	case "emissions.v5.EventReputerLastCommitSet.nonce":
		m := new(v3.Nonce)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.EventReputerLastCommitSet"))
		}
		panic(fmt.Errorf("message emissions.v5.EventReputerLastCommitSet does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_EventReputerLastCommitSet) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.EventReputerLastCommitSet", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_EventReputerLastCommitSet) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventReputerLastCommitSet) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_EventReputerLastCommitSet) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_EventReputerLastCommitSet) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*EventReputerLastCommitSet)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		if x.BlockHeight != 0 {
			n += 1 + runtime.Sov(uint64(x.BlockHeight))
		}
		if x.Nonce != nil {
			l = options.Size(x.Nonce)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*EventReputerLastCommitSet)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Nonce != nil {
			encoded, err := options.Marshal(x.Nonce)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x1a
		}
		if x.BlockHeight != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.BlockHeight))
			i--
			dAtA[i] = 0x10
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*EventReputerLastCommitSet)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventReputerLastCommitSet: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventReputerLastCommitSet: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BlockHeight", wireType)
				}
				x.BlockHeight = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.BlockHeight |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Nonce", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Nonce == nil {
					x.Nonce = &v3.Nonce{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Nonce); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_EventTopicRewardsSet_1_list)(nil)

type _EventTopicRewardsSet_1_list struct {
	list *[]uint64
}

func (x *_EventTopicRewardsSet_1_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_EventTopicRewardsSet_1_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfUint64((*x.list)[i])
}

func (x *_EventTopicRewardsSet_1_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Uint()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_EventTopicRewardsSet_1_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Uint()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_EventTopicRewardsSet_1_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message EventTopicRewardsSet at list field TopicIds as it is not of Message kind"))
}

func (x *_EventTopicRewardsSet_1_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_EventTopicRewardsSet_1_list) NewElement() protoreflect.Value {
	v := uint64(0)
	return protoreflect.ValueOfUint64(v)
}

func (x *_EventTopicRewardsSet_1_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_EventTopicRewardsSet_2_list)(nil)

type _EventTopicRewardsSet_2_list struct {
	list *[]string
}

func (x *_EventTopicRewardsSet_2_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_EventTopicRewardsSet_2_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfString((*x.list)[i])
}

func (x *_EventTopicRewardsSet_2_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_EventTopicRewardsSet_2_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_EventTopicRewardsSet_2_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message EventTopicRewardsSet at list field Rewards as it is not of Message kind"))
}

func (x *_EventTopicRewardsSet_2_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_EventTopicRewardsSet_2_list) NewElement() protoreflect.Value {
	v := ""
	return protoreflect.ValueOfString(v)
}

func (x *_EventTopicRewardsSet_2_list) IsValid() bool {
	return x.list != nil
}

var (
	md_EventTopicRewardsSet           protoreflect.MessageDescriptor
	fd_EventTopicRewardsSet_topic_ids protoreflect.FieldDescriptor
	fd_EventTopicRewardsSet_rewards   protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_events_proto_init()
	md_EventTopicRewardsSet = File_emissions_v5_events_proto.Messages().ByName("EventTopicRewardsSet")
	fd_EventTopicRewardsSet_topic_ids = md_EventTopicRewardsSet.Fields().ByName("topic_ids")
	fd_EventTopicRewardsSet_rewards = md_EventTopicRewardsSet.Fields().ByName("rewards")
}

var _ protoreflect.Message = (*fastReflection_EventTopicRewardsSet)(nil)

type fastReflection_EventTopicRewardsSet EventTopicRewardsSet

func (x *EventTopicRewardsSet) ProtoReflect() protoreflect.Message {
	return (*fastReflection_EventTopicRewardsSet)(x)
}

func (x *EventTopicRewardsSet) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_events_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_EventTopicRewardsSet_messageType fastReflection_EventTopicRewardsSet_messageType
var _ protoreflect.MessageType = fastReflection_EventTopicRewardsSet_messageType{}

type fastReflection_EventTopicRewardsSet_messageType struct{}

func (x fastReflection_EventTopicRewardsSet_messageType) Zero() protoreflect.Message {
	return (*fastReflection_EventTopicRewardsSet)(nil)
}
func (x fastReflection_EventTopicRewardsSet_messageType) New() protoreflect.Message {
	return new(fastReflection_EventTopicRewardsSet)
}
func (x fastReflection_EventTopicRewardsSet_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_EventTopicRewardsSet
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_EventTopicRewardsSet) Descriptor() protoreflect.MessageDescriptor {
	return md_EventTopicRewardsSet
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_EventTopicRewardsSet) Type() protoreflect.MessageType {
	return _fastReflection_EventTopicRewardsSet_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_EventTopicRewardsSet) New() protoreflect.Message {
	return new(fastReflection_EventTopicRewardsSet)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_EventTopicRewardsSet) Interface() protoreflect.ProtoMessage {
	return (*EventTopicRewardsSet)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_EventTopicRewardsSet) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.TopicIds) != 0 {
		value := protoreflect.ValueOfList(&_EventTopicRewardsSet_1_list{list: &x.TopicIds})
		if !f(fd_EventTopicRewardsSet_topic_ids, value) {
			return
		}
	}
	if len(x.Rewards) != 0 {
		value := protoreflect.ValueOfList(&_EventTopicRewardsSet_2_list{list: &x.Rewards})
		if !f(fd_EventTopicRewardsSet_rewards, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_EventTopicRewardsSet) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.EventTopicRewardsSet.topic_ids":
		return len(x.TopicIds) != 0
	case "emissions.v5.EventTopicRewardsSet.rewards":
		return len(x.Rewards) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.EventTopicRewardsSet"))
		}
		panic(fmt.Errorf("message emissions.v5.EventTopicRewardsSet does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventTopicRewardsSet) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.EventTopicRewardsSet.topic_ids":
		x.TopicIds = nil
	case "emissions.v5.EventTopicRewardsSet.rewards":
		x.Rewards = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.EventTopicRewardsSet"))
		}
		panic(fmt.Errorf("message emissions.v5.EventTopicRewardsSet does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_EventTopicRewardsSet) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.EventTopicRewardsSet.topic_ids":
		if len(x.TopicIds) == 0 {
			return protoreflect.ValueOfList(&_EventTopicRewardsSet_1_list{})
		}
		listValue := &_EventTopicRewardsSet_1_list{list: &x.TopicIds}
		return protoreflect.ValueOfList(listValue)
	case "emissions.v5.EventTopicRewardsSet.rewards":
		if len(x.Rewards) == 0 {
			return protoreflect.ValueOfList(&_EventTopicRewardsSet_2_list{})
		}
		listValue := &_EventTopicRewardsSet_2_list{list: &x.Rewards}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.EventTopicRewardsSet"))
		}
		panic(fmt.Errorf("message emissions.v5.EventTopicRewardsSet does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventTopicRewardsSet) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.EventTopicRewardsSet.topic_ids":
		lv := value.List()
		clv := lv.(*_EventTopicRewardsSet_1_list)
		x.TopicIds = *clv.list
	case "emissions.v5.EventTopicRewardsSet.rewards":
		lv := value.List()
		clv := lv.(*_EventTopicRewardsSet_2_list)
		x.Rewards = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.EventTopicRewardsSet"))
		}
		panic(fmt.Errorf("message emissions.v5.EventTopicRewardsSet does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventTopicRewardsSet) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.EventTopicRewardsSet.topic_ids":
		if x.TopicIds == nil {
			x.TopicIds = []uint64{}
		}
		value := &_EventTopicRewardsSet_1_list{list: &x.TopicIds}
		return protoreflect.ValueOfList(value)
	case "emissions.v5.EventTopicRewardsSet.rewards":
		if x.Rewards == nil {
			x.Rewards = []string{}
		}
		value := &_EventTopicRewardsSet_2_list{list: &x.Rewards}
		return protoreflect.ValueOfList(value)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.EventTopicRewardsSet"))
		}
		panic(fmt.Errorf("message emissions.v5.EventTopicRewardsSet does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_EventTopicRewardsSet) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.EventTopicRewardsSet.topic_ids":
		list := []uint64{}
		return protoreflect.ValueOfList(&_EventTopicRewardsSet_1_list{list: &list})
	case "emissions.v5.EventTopicRewardsSet.rewards":
		list := []string{}
		return protoreflect.ValueOfList(&_EventTopicRewardsSet_2_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.EventTopicRewardsSet"))
		}
		panic(fmt.Errorf("message emissions.v5.EventTopicRewardsSet does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_EventTopicRewardsSet) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.EventTopicRewardsSet", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_EventTopicRewardsSet) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventTopicRewardsSet) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_EventTopicRewardsSet) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_EventTopicRewardsSet) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*EventTopicRewardsSet)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if len(x.TopicIds) > 0 {
			l = 0
			for _, e := range x.TopicIds {
				l += runtime.Sov(uint64(e))
			}
			n += 1 + runtime.Sov(uint64(l)) + l
		}
		if len(x.Rewards) > 0 {
			for _, s := range x.Rewards {
				l = len(s)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*EventTopicRewardsSet)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Rewards) > 0 {
			for iNdEx := len(x.Rewards) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.Rewards[iNdEx])
				copy(dAtA[i:], x.Rewards[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Rewards[iNdEx])))
				i--
				dAtA[i] = 0x12
			}
		}
		if len(x.TopicIds) > 0 {
			var pksize2 int
			for _, num := range x.TopicIds {
				pksize2 += runtime.Sov(uint64(num))
			}
			i -= pksize2
			j1 := i
			for _, num := range x.TopicIds {
				for num >= 1<<7 {
					dAtA[j1] = uint8(uint64(num)&0x7f | 0x80)
					num >>= 7
					j1++
				}
				dAtA[j1] = uint8(num)
				j1++
			}
			i = runtime.EncodeVarint(dAtA, i, uint64(pksize2))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*EventTopicRewardsSet)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventTopicRewardsSet: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventTopicRewardsSet: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType == 0 {
					var v uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
						}
						if iNdEx >= l {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= uint64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					x.TopicIds = append(x.TopicIds, v)
				} else if wireType == 2 {
					var packedLen int
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
						}
						if iNdEx >= l {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						packedLen |= int(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					if packedLen < 0 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
					}
					postIndex := iNdEx + packedLen
					if postIndex < 0 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
					}
					if postIndex > l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					var elementCount int
					var count int
					for _, integer := range dAtA[iNdEx:postIndex] {
						if integer < 128 {
							count++
						}
					}
					elementCount = count
					if elementCount != 0 && len(x.TopicIds) == 0 {
						x.TopicIds = make([]uint64, 0, elementCount)
					}
					for iNdEx < postIndex {
						var v uint64
						for shift := uint(0); ; shift += 7 {
							if shift >= 64 {
								return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
							}
							if iNdEx >= l {
								return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
							}
							b := dAtA[iNdEx]
							iNdEx++
							v |= uint64(b&0x7F) << shift
							if b < 0x80 {
								break
							}
						}
						x.TopicIds = append(x.TopicIds, v)
					}
				} else {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicIds", wireType)
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Rewards", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Rewards = append(x.Rewards, string(dAtA[iNdEx:postIndex]))
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_EventEMAScoresSet_4_list)(nil)

type _EventEMAScoresSet_4_list struct {
	list *[]string
}

func (x *_EventEMAScoresSet_4_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_EventEMAScoresSet_4_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfString((*x.list)[i])
}

func (x *_EventEMAScoresSet_4_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_EventEMAScoresSet_4_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_EventEMAScoresSet_4_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message EventEMAScoresSet at list field Addresses as it is not of Message kind"))
}

func (x *_EventEMAScoresSet_4_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_EventEMAScoresSet_4_list) NewElement() protoreflect.Value {
	v := ""
	return protoreflect.ValueOfString(v)
}

func (x *_EventEMAScoresSet_4_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_EventEMAScoresSet_5_list)(nil)

type _EventEMAScoresSet_5_list struct {
	list *[]string
}

func (x *_EventEMAScoresSet_5_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_EventEMAScoresSet_5_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfString((*x.list)[i])
}

func (x *_EventEMAScoresSet_5_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_EventEMAScoresSet_5_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_EventEMAScoresSet_5_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message EventEMAScoresSet at list field Scores as it is not of Message kind"))
}

func (x *_EventEMAScoresSet_5_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_EventEMAScoresSet_5_list) NewElement() protoreflect.Value {
	v := ""
	return protoreflect.ValueOfString(v)
}

func (x *_EventEMAScoresSet_5_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_EventEMAScoresSet_6_list)(nil)

type _EventEMAScoresSet_6_list struct {
	list *[]bool
}

func (x *_EventEMAScoresSet_6_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_EventEMAScoresSet_6_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfBool((*x.list)[i])
}

func (x *_EventEMAScoresSet_6_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Bool()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_EventEMAScoresSet_6_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Bool()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_EventEMAScoresSet_6_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message EventEMAScoresSet at list field IsActive as it is not of Message kind"))
}

func (x *_EventEMAScoresSet_6_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_EventEMAScoresSet_6_list) NewElement() protoreflect.Value {
	v := false
	return protoreflect.ValueOfBool(v)
}

func (x *_EventEMAScoresSet_6_list) IsValid() bool {
	return x.list != nil
}

var (
	md_EventEMAScoresSet            protoreflect.MessageDescriptor
	fd_EventEMAScoresSet_actor_type protoreflect.FieldDescriptor
	fd_EventEMAScoresSet_topic_id   protoreflect.FieldDescriptor
	fd_EventEMAScoresSet_nonce      protoreflect.FieldDescriptor
	fd_EventEMAScoresSet_addresses  protoreflect.FieldDescriptor
	fd_EventEMAScoresSet_scores     protoreflect.FieldDescriptor
	fd_EventEMAScoresSet_is_active  protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_events_proto_init()
	md_EventEMAScoresSet = File_emissions_v5_events_proto.Messages().ByName("EventEMAScoresSet")
	fd_EventEMAScoresSet_actor_type = md_EventEMAScoresSet.Fields().ByName("actor_type")
	fd_EventEMAScoresSet_topic_id = md_EventEMAScoresSet.Fields().ByName("topic_id")
	fd_EventEMAScoresSet_nonce = md_EventEMAScoresSet.Fields().ByName("nonce")
	fd_EventEMAScoresSet_addresses = md_EventEMAScoresSet.Fields().ByName("addresses")
	fd_EventEMAScoresSet_scores = md_EventEMAScoresSet.Fields().ByName("scores")
	fd_EventEMAScoresSet_is_active = md_EventEMAScoresSet.Fields().ByName("is_active")
}

var _ protoreflect.Message = (*fastReflection_EventEMAScoresSet)(nil)

type fastReflection_EventEMAScoresSet EventEMAScoresSet

func (x *EventEMAScoresSet) ProtoReflect() protoreflect.Message {
	return (*fastReflection_EventEMAScoresSet)(x)
}

func (x *EventEMAScoresSet) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_events_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_EventEMAScoresSet_messageType fastReflection_EventEMAScoresSet_messageType
var _ protoreflect.MessageType = fastReflection_EventEMAScoresSet_messageType{}

type fastReflection_EventEMAScoresSet_messageType struct{}

func (x fastReflection_EventEMAScoresSet_messageType) Zero() protoreflect.Message {
	return (*fastReflection_EventEMAScoresSet)(nil)
}
func (x fastReflection_EventEMAScoresSet_messageType) New() protoreflect.Message {
	return new(fastReflection_EventEMAScoresSet)
}
func (x fastReflection_EventEMAScoresSet_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_EventEMAScoresSet
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_EventEMAScoresSet) Descriptor() protoreflect.MessageDescriptor {
	return md_EventEMAScoresSet
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_EventEMAScoresSet) Type() protoreflect.MessageType {
	return _fastReflection_EventEMAScoresSet_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_EventEMAScoresSet) New() protoreflect.Message {
	return new(fastReflection_EventEMAScoresSet)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_EventEMAScoresSet) Interface() protoreflect.ProtoMessage {
	return (*EventEMAScoresSet)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_EventEMAScoresSet) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.ActorType != 0 {
		value := protoreflect.ValueOfEnum((protoreflect.EnumNumber)(x.ActorType))
		if !f(fd_EventEMAScoresSet_actor_type, value) {
			return
		}
	}
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_EventEMAScoresSet_topic_id, value) {
			return
		}
	}
	if x.Nonce != int64(0) {
		value := protoreflect.ValueOfInt64(x.Nonce)
		if !f(fd_EventEMAScoresSet_nonce, value) {
			return
		}
	}
	if len(x.Addresses) != 0 {
		value := protoreflect.ValueOfList(&_EventEMAScoresSet_4_list{list: &x.Addresses})
		if !f(fd_EventEMAScoresSet_addresses, value) {
			return
		}
	}
	if len(x.Scores) != 0 {
		value := protoreflect.ValueOfList(&_EventEMAScoresSet_5_list{list: &x.Scores})
		if !f(fd_EventEMAScoresSet_scores, value) {
			return
		}
	}
	if len(x.IsActive) != 0 {
		value := protoreflect.ValueOfList(&_EventEMAScoresSet_6_list{list: &x.IsActive})
		if !f(fd_EventEMAScoresSet_is_active, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_EventEMAScoresSet) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.EventEMAScoresSet.actor_type":
		return x.ActorType != 0
	case "emissions.v5.EventEMAScoresSet.topic_id":
		return x.TopicId != uint64(0)
	case "emissions.v5.EventEMAScoresSet.nonce":
		return x.Nonce != int64(0)
	case "emissions.v5.EventEMAScoresSet.addresses":
		return len(x.Addresses) != 0
	case "emissions.v5.EventEMAScoresSet.scores":
		return len(x.Scores) != 0
	case "emissions.v5.EventEMAScoresSet.is_active":
		return len(x.IsActive) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.EventEMAScoresSet"))
		}
		panic(fmt.Errorf("message emissions.v5.EventEMAScoresSet does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventEMAScoresSet) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.EventEMAScoresSet.actor_type":
		x.ActorType = 0
	case "emissions.v5.EventEMAScoresSet.topic_id":
		x.TopicId = uint64(0)
	case "emissions.v5.EventEMAScoresSet.nonce":
		x.Nonce = int64(0)
	case "emissions.v5.EventEMAScoresSet.addresses":
		x.Addresses = nil
	case "emissions.v5.EventEMAScoresSet.scores":
		x.Scores = nil
	case "emissions.v5.EventEMAScoresSet.is_active":
		x.IsActive = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.EventEMAScoresSet"))
		}
		panic(fmt.Errorf("message emissions.v5.EventEMAScoresSet does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_EventEMAScoresSet) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.EventEMAScoresSet.actor_type":
		value := x.ActorType
		return protoreflect.ValueOfEnum((protoreflect.EnumNumber)(value))
	case "emissions.v5.EventEMAScoresSet.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	case "emissions.v5.EventEMAScoresSet.nonce":
		value := x.Nonce
		return protoreflect.ValueOfInt64(value)
	case "emissions.v5.EventEMAScoresSet.addresses":
		if len(x.Addresses) == 0 {
			return protoreflect.ValueOfList(&_EventEMAScoresSet_4_list{})
		}
		listValue := &_EventEMAScoresSet_4_list{list: &x.Addresses}
		return protoreflect.ValueOfList(listValue)
	case "emissions.v5.EventEMAScoresSet.scores":
		if len(x.Scores) == 0 {
			return protoreflect.ValueOfList(&_EventEMAScoresSet_5_list{})
		}
		listValue := &_EventEMAScoresSet_5_list{list: &x.Scores}
		return protoreflect.ValueOfList(listValue)
	case "emissions.v5.EventEMAScoresSet.is_active":
		if len(x.IsActive) == 0 {
			return protoreflect.ValueOfList(&_EventEMAScoresSet_6_list{})
		}
		listValue := &_EventEMAScoresSet_6_list{list: &x.IsActive}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.EventEMAScoresSet"))
		}
		panic(fmt.Errorf("message emissions.v5.EventEMAScoresSet does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventEMAScoresSet) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.EventEMAScoresSet.actor_type":
		x.ActorType = (ActorType)(value.Enum())
	case "emissions.v5.EventEMAScoresSet.topic_id":
		x.TopicId = value.Uint()
	case "emissions.v5.EventEMAScoresSet.nonce":
		x.Nonce = value.Int()
	case "emissions.v5.EventEMAScoresSet.addresses":
		lv := value.List()
		clv := lv.(*_EventEMAScoresSet_4_list)
		x.Addresses = *clv.list
	case "emissions.v5.EventEMAScoresSet.scores":
		lv := value.List()
		clv := lv.(*_EventEMAScoresSet_5_list)
		x.Scores = *clv.list
	case "emissions.v5.EventEMAScoresSet.is_active":
		lv := value.List()
		clv := lv.(*_EventEMAScoresSet_6_list)
		x.IsActive = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.EventEMAScoresSet"))
		}
		panic(fmt.Errorf("message emissions.v5.EventEMAScoresSet does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventEMAScoresSet) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.EventEMAScoresSet.addresses":
		if x.Addresses == nil {
			x.Addresses = []string{}
		}
		value := &_EventEMAScoresSet_4_list{list: &x.Addresses}
		return protoreflect.ValueOfList(value)
	case "emissions.v5.EventEMAScoresSet.scores":
		if x.Scores == nil {
			x.Scores = []string{}
		}
		value := &_EventEMAScoresSet_5_list{list: &x.Scores}
		return protoreflect.ValueOfList(value)
	case "emissions.v5.EventEMAScoresSet.is_active":
		if x.IsActive == nil {
			x.IsActive = []bool{}
		}
		value := &_EventEMAScoresSet_6_list{list: &x.IsActive}
		return protoreflect.ValueOfList(value)
	case "emissions.v5.EventEMAScoresSet.actor_type":
		panic(fmt.Errorf("field actor_type of message emissions.v5.EventEMAScoresSet is not mutable"))
	case "emissions.v5.EventEMAScoresSet.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.EventEMAScoresSet is not mutable"))
	case "emissions.v5.EventEMAScoresSet.nonce":
		panic(fmt.Errorf("field nonce of message emissions.v5.EventEMAScoresSet is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.EventEMAScoresSet"))
		}
		panic(fmt.Errorf("message emissions.v5.EventEMAScoresSet does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_EventEMAScoresSet) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.EventEMAScoresSet.actor_type":
		return protoreflect.ValueOfEnum(0)
	case "emissions.v5.EventEMAScoresSet.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "emissions.v5.EventEMAScoresSet.nonce":
		return protoreflect.ValueOfInt64(int64(0))
	case "emissions.v5.EventEMAScoresSet.addresses":
		list := []string{}
		return protoreflect.ValueOfList(&_EventEMAScoresSet_4_list{list: &list})
	case "emissions.v5.EventEMAScoresSet.scores":
		list := []string{}
		return protoreflect.ValueOfList(&_EventEMAScoresSet_5_list{list: &list})
	case "emissions.v5.EventEMAScoresSet.is_active":
		list := []bool{}
		return protoreflect.ValueOfList(&_EventEMAScoresSet_6_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.EventEMAScoresSet"))
		}
		panic(fmt.Errorf("message emissions.v5.EventEMAScoresSet does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_EventEMAScoresSet) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.EventEMAScoresSet", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_EventEMAScoresSet) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventEMAScoresSet) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_EventEMAScoresSet) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_EventEMAScoresSet) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*EventEMAScoresSet)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.ActorType != 0 {
			n += 1 + runtime.Sov(uint64(x.ActorType))
		}
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		if x.Nonce != 0 {
			n += 1 + runtime.Sov(uint64(x.Nonce))
		}
		if len(x.Addresses) > 0 {
			for _, s := range x.Addresses {
				l = len(s)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.Scores) > 0 {
			for _, s := range x.Scores {
				l = len(s)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.IsActive) > 0 {
			n += 1 + runtime.Sov(uint64(len(x.IsActive))) + len(x.IsActive)*1
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*EventEMAScoresSet)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.IsActive) > 0 {
			for iNdEx := len(x.IsActive) - 1; iNdEx >= 0; iNdEx-- {
				i--
				if x.IsActive[iNdEx] {
					dAtA[i] = 1
				} else {
					dAtA[i] = 0
				}
			}
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.IsActive)))
			i--
			dAtA[i] = 0x32
		}
		if len(x.Scores) > 0 {
			for iNdEx := len(x.Scores) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.Scores[iNdEx])
				copy(dAtA[i:], x.Scores[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Scores[iNdEx])))
				i--
				dAtA[i] = 0x2a
			}
		}
		if len(x.Addresses) > 0 {
			for iNdEx := len(x.Addresses) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.Addresses[iNdEx])
				copy(dAtA[i:], x.Addresses[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Addresses[iNdEx])))
				i--
				dAtA[i] = 0x22
			}
		}
		if x.Nonce != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Nonce))
			i--
			dAtA[i] = 0x18
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x10
		}
		if x.ActorType != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.ActorType))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*EventEMAScoresSet)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventEMAScoresSet: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventEMAScoresSet: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ActorType", wireType)
				}
				x.ActorType = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.ActorType |= ActorType(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Nonce", wireType)
				}
				x.Nonce = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Nonce |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Addresses", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Addresses = append(x.Addresses, string(dAtA[iNdEx:postIndex]))
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Scores", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Scores = append(x.Scores, string(dAtA[iNdEx:postIndex]))
				iNdEx = postIndex
			case 6:
				if wireType == 0 {
					var v int
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
						}
						if iNdEx >= l {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					x.IsActive = append(x.IsActive, bool(v != 0))
				} else if wireType == 2 {
					var packedLen int
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
						}
						if iNdEx >= l {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						packedLen |= int(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					if packedLen < 0 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
					}
					postIndex := iNdEx + packedLen
					if postIndex < 0 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
					}
					if postIndex > l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					var elementCount int
					elementCount = packedLen
					if elementCount != 0 && len(x.IsActive) == 0 {
						x.IsActive = make([]bool, 0, elementCount)
					}
					for iNdEx < postIndex {
						var v int
						for shift := uint(0); ; shift += 7 {
							if shift >= 64 {
								return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
							}
							if iNdEx >= l {
								return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
							}
							b := dAtA[iNdEx]
							iNdEx++
							v |= int(b&0x7F) << shift
							if b < 0x80 {
								break
							}
						}
						x.IsActive = append(x.IsActive, bool(v != 0))
					}
				} else {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field IsActive", wireType)
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_EventListeningCoefficientsSet_4_list)(nil)

type _EventListeningCoefficientsSet_4_list struct {
	list *[]string
}

func (x *_EventListeningCoefficientsSet_4_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_EventListeningCoefficientsSet_4_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfString((*x.list)[i])
}

func (x *_EventListeningCoefficientsSet_4_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_EventListeningCoefficientsSet_4_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_EventListeningCoefficientsSet_4_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message EventListeningCoefficientsSet at list field Addresses as it is not of Message kind"))
}

func (x *_EventListeningCoefficientsSet_4_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_EventListeningCoefficientsSet_4_list) NewElement() protoreflect.Value {
	v := ""
	return protoreflect.ValueOfString(v)
}

func (x *_EventListeningCoefficientsSet_4_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_EventListeningCoefficientsSet_5_list)(nil)

type _EventListeningCoefficientsSet_5_list struct {
	list *[]string
}

func (x *_EventListeningCoefficientsSet_5_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_EventListeningCoefficientsSet_5_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfString((*x.list)[i])
}

func (x *_EventListeningCoefficientsSet_5_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_EventListeningCoefficientsSet_5_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_EventListeningCoefficientsSet_5_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message EventListeningCoefficientsSet at list field Coefficients as it is not of Message kind"))
}

func (x *_EventListeningCoefficientsSet_5_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_EventListeningCoefficientsSet_5_list) NewElement() protoreflect.Value {
	v := ""
	return protoreflect.ValueOfString(v)
}

func (x *_EventListeningCoefficientsSet_5_list) IsValid() bool {
	return x.list != nil
}

var (
	md_EventListeningCoefficientsSet              protoreflect.MessageDescriptor
	fd_EventListeningCoefficientsSet_actor_type   protoreflect.FieldDescriptor
	fd_EventListeningCoefficientsSet_topic_id     protoreflect.FieldDescriptor
	fd_EventListeningCoefficientsSet_block_height protoreflect.FieldDescriptor
	fd_EventListeningCoefficientsSet_addresses    protoreflect.FieldDescriptor
	fd_EventListeningCoefficientsSet_coefficients protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_events_proto_init()
	md_EventListeningCoefficientsSet = File_emissions_v5_events_proto.Messages().ByName("EventListeningCoefficientsSet")
	fd_EventListeningCoefficientsSet_actor_type = md_EventListeningCoefficientsSet.Fields().ByName("actor_type")
	fd_EventListeningCoefficientsSet_topic_id = md_EventListeningCoefficientsSet.Fields().ByName("topic_id")
	fd_EventListeningCoefficientsSet_block_height = md_EventListeningCoefficientsSet.Fields().ByName("block_height")
	fd_EventListeningCoefficientsSet_addresses = md_EventListeningCoefficientsSet.Fields().ByName("addresses")
	fd_EventListeningCoefficientsSet_coefficients = md_EventListeningCoefficientsSet.Fields().ByName("coefficients")
}

var _ protoreflect.Message = (*fastReflection_EventListeningCoefficientsSet)(nil)

type fastReflection_EventListeningCoefficientsSet EventListeningCoefficientsSet

func (x *EventListeningCoefficientsSet) ProtoReflect() protoreflect.Message {
	return (*fastReflection_EventListeningCoefficientsSet)(x)
}

func (x *EventListeningCoefficientsSet) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_events_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_EventListeningCoefficientsSet_messageType fastReflection_EventListeningCoefficientsSet_messageType
var _ protoreflect.MessageType = fastReflection_EventListeningCoefficientsSet_messageType{}

type fastReflection_EventListeningCoefficientsSet_messageType struct{}

func (x fastReflection_EventListeningCoefficientsSet_messageType) Zero() protoreflect.Message {
	return (*fastReflection_EventListeningCoefficientsSet)(nil)
}
func (x fastReflection_EventListeningCoefficientsSet_messageType) New() protoreflect.Message {
	return new(fastReflection_EventListeningCoefficientsSet)
}
func (x fastReflection_EventListeningCoefficientsSet_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_EventListeningCoefficientsSet
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_EventListeningCoefficientsSet) Descriptor() protoreflect.MessageDescriptor {
	return md_EventListeningCoefficientsSet
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_EventListeningCoefficientsSet) Type() protoreflect.MessageType {
	return _fastReflection_EventListeningCoefficientsSet_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_EventListeningCoefficientsSet) New() protoreflect.Message {
	return new(fastReflection_EventListeningCoefficientsSet)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_EventListeningCoefficientsSet) Interface() protoreflect.ProtoMessage {
	return (*EventListeningCoefficientsSet)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_EventListeningCoefficientsSet) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.ActorType != 0 {
		value := protoreflect.ValueOfEnum((protoreflect.EnumNumber)(x.ActorType))
		if !f(fd_EventListeningCoefficientsSet_actor_type, value) {
			return
		}
	}
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_EventListeningCoefficientsSet_topic_id, value) {
			return
		}
	}
	if x.BlockHeight != int64(0) {
		value := protoreflect.ValueOfInt64(x.BlockHeight)
		if !f(fd_EventListeningCoefficientsSet_block_height, value) {
			return
		}
	}
	if len(x.Addresses) != 0 {
		value := protoreflect.ValueOfList(&_EventListeningCoefficientsSet_4_list{list: &x.Addresses})
		if !f(fd_EventListeningCoefficientsSet_addresses, value) {
			return
		}
	}
	if len(x.Coefficients) != 0 {
		value := protoreflect.ValueOfList(&_EventListeningCoefficientsSet_5_list{list: &x.Coefficients})
		if !f(fd_EventListeningCoefficientsSet_coefficients, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_EventListeningCoefficientsSet) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.EventListeningCoefficientsSet.actor_type":
		return x.ActorType != 0
	case "emissions.v5.EventListeningCoefficientsSet.topic_id":
		return x.TopicId != uint64(0)
	case "emissions.v5.EventListeningCoefficientsSet.block_height":
		return x.BlockHeight != int64(0)
	case "emissions.v5.EventListeningCoefficientsSet.addresses":
		return len(x.Addresses) != 0
	case "emissions.v5.EventListeningCoefficientsSet.coefficients":
		return len(x.Coefficients) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.EventListeningCoefficientsSet"))
		}
		panic(fmt.Errorf("message emissions.v5.EventListeningCoefficientsSet does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventListeningCoefficientsSet) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.EventListeningCoefficientsSet.actor_type":
		x.ActorType = 0
	case "emissions.v5.EventListeningCoefficientsSet.topic_id":
		x.TopicId = uint64(0)
	case "emissions.v5.EventListeningCoefficientsSet.block_height":
		x.BlockHeight = int64(0)
	case "emissions.v5.EventListeningCoefficientsSet.addresses":
		x.Addresses = nil
	case "emissions.v5.EventListeningCoefficientsSet.coefficients":
		x.Coefficients = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.EventListeningCoefficientsSet"))
		}
		panic(fmt.Errorf("message emissions.v5.EventListeningCoefficientsSet does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_EventListeningCoefficientsSet) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.EventListeningCoefficientsSet.actor_type":
		value := x.ActorType
		return protoreflect.ValueOfEnum((protoreflect.EnumNumber)(value))
	case "emissions.v5.EventListeningCoefficientsSet.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	case "emissions.v5.EventListeningCoefficientsSet.block_height":
		value := x.BlockHeight
		return protoreflect.ValueOfInt64(value)
	case "emissions.v5.EventListeningCoefficientsSet.addresses":
		if len(x.Addresses) == 0 {
			return protoreflect.ValueOfList(&_EventListeningCoefficientsSet_4_list{})
		}
		listValue := &_EventListeningCoefficientsSet_4_list{list: &x.Addresses}
		return protoreflect.ValueOfList(listValue)
	case "emissions.v5.EventListeningCoefficientsSet.coefficients":
		if len(x.Coefficients) == 0 {
			return protoreflect.ValueOfList(&_EventListeningCoefficientsSet_5_list{})
		}
		listValue := &_EventListeningCoefficientsSet_5_list{list: &x.Coefficients}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.EventListeningCoefficientsSet"))
		}
		panic(fmt.Errorf("message emissions.v5.EventListeningCoefficientsSet does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventListeningCoefficientsSet) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.EventListeningCoefficientsSet.actor_type":
		x.ActorType = (ActorType)(value.Enum())
	case "emissions.v5.EventListeningCoefficientsSet.topic_id":
		x.TopicId = value.Uint()
	case "emissions.v5.EventListeningCoefficientsSet.block_height":
		x.BlockHeight = value.Int()
	case "emissions.v5.EventListeningCoefficientsSet.addresses":
		lv := value.List()
		clv := lv.(*_EventListeningCoefficientsSet_4_list)
		x.Addresses = *clv.list
	case "emissions.v5.EventListeningCoefficientsSet.coefficients":
		lv := value.List()
		clv := lv.(*_EventListeningCoefficientsSet_5_list)
		x.Coefficients = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.EventListeningCoefficientsSet"))
		}
		panic(fmt.Errorf("message emissions.v5.EventListeningCoefficientsSet does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventListeningCoefficientsSet) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.EventListeningCoefficientsSet.addresses":
		if x.Addresses == nil {
			x.Addresses = []string{}
		}
		value := &_EventListeningCoefficientsSet_4_list{list: &x.Addresses}
		return protoreflect.ValueOfList(value)
	case "emissions.v5.EventListeningCoefficientsSet.coefficients":
		if x.Coefficients == nil {
			x.Coefficients = []string{}
		}
		value := &_EventListeningCoefficientsSet_5_list{list: &x.Coefficients}
		return protoreflect.ValueOfList(value)
	case "emissions.v5.EventListeningCoefficientsSet.actor_type":
		panic(fmt.Errorf("field actor_type of message emissions.v5.EventListeningCoefficientsSet is not mutable"))
	case "emissions.v5.EventListeningCoefficientsSet.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.EventListeningCoefficientsSet is not mutable"))
	case "emissions.v5.EventListeningCoefficientsSet.block_height":
		panic(fmt.Errorf("field block_height of message emissions.v5.EventListeningCoefficientsSet is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.EventListeningCoefficientsSet"))
		}
		panic(fmt.Errorf("message emissions.v5.EventListeningCoefficientsSet does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_EventListeningCoefficientsSet) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.EventListeningCoefficientsSet.actor_type":
		return protoreflect.ValueOfEnum(0)
	case "emissions.v5.EventListeningCoefficientsSet.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "emissions.v5.EventListeningCoefficientsSet.block_height":
		return protoreflect.ValueOfInt64(int64(0))
	case "emissions.v5.EventListeningCoefficientsSet.addresses":
		list := []string{}
		return protoreflect.ValueOfList(&_EventListeningCoefficientsSet_4_list{list: &list})
	case "emissions.v5.EventListeningCoefficientsSet.coefficients":
		list := []string{}
		return protoreflect.ValueOfList(&_EventListeningCoefficientsSet_5_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.EventListeningCoefficientsSet"))
		}
		panic(fmt.Errorf("message emissions.v5.EventListeningCoefficientsSet does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_EventListeningCoefficientsSet) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.EventListeningCoefficientsSet", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_EventListeningCoefficientsSet) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventListeningCoefficientsSet) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_EventListeningCoefficientsSet) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_EventListeningCoefficientsSet) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*EventListeningCoefficientsSet)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.ActorType != 0 {
			n += 1 + runtime.Sov(uint64(x.ActorType))
		}
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		if x.BlockHeight != 0 {
			n += 1 + runtime.Sov(uint64(x.BlockHeight))
		}
		if len(x.Addresses) > 0 {
			for _, s := range x.Addresses {
				l = len(s)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.Coefficients) > 0 {
			for _, s := range x.Coefficients {
				l = len(s)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*EventListeningCoefficientsSet)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Coefficients) > 0 {
			for iNdEx := len(x.Coefficients) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.Coefficients[iNdEx])
				copy(dAtA[i:], x.Coefficients[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Coefficients[iNdEx])))
				i--
				dAtA[i] = 0x2a
			}
		}
		if len(x.Addresses) > 0 {
			for iNdEx := len(x.Addresses) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.Addresses[iNdEx])
				copy(dAtA[i:], x.Addresses[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Addresses[iNdEx])))
				i--
				dAtA[i] = 0x22
			}
		}
		if x.BlockHeight != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.BlockHeight))
			i--
			dAtA[i] = 0x18
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x10
		}
		if x.ActorType != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.ActorType))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*EventListeningCoefficientsSet)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventListeningCoefficientsSet: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventListeningCoefficientsSet: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ActorType", wireType)
				}
				x.ActorType = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.ActorType |= ActorType(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BlockHeight", wireType)
				}
				x.BlockHeight = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.BlockHeight |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Addresses", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Addresses = append(x.Addresses, string(dAtA[iNdEx:postIndex]))
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Coefficients", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Coefficients = append(x.Coefficients, string(dAtA[iNdEx:postIndex]))
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_EventInfererNetworkRegretSet_3_list)(nil)

type _EventInfererNetworkRegretSet_3_list struct {
	list *[]string
}

func (x *_EventInfererNetworkRegretSet_3_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_EventInfererNetworkRegretSet_3_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfString((*x.list)[i])
}

func (x *_EventInfererNetworkRegretSet_3_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_EventInfererNetworkRegretSet_3_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_EventInfererNetworkRegretSet_3_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message EventInfererNetworkRegretSet at list field Addresses as it is not of Message kind"))
}

func (x *_EventInfererNetworkRegretSet_3_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_EventInfererNetworkRegretSet_3_list) NewElement() protoreflect.Value {
	v := ""
	return protoreflect.ValueOfString(v)
}

func (x *_EventInfererNetworkRegretSet_3_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_EventInfererNetworkRegretSet_4_list)(nil)

type _EventInfererNetworkRegretSet_4_list struct {
	list *[]string
}

func (x *_EventInfererNetworkRegretSet_4_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_EventInfererNetworkRegretSet_4_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfString((*x.list)[i])
}

func (x *_EventInfererNetworkRegretSet_4_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_EventInfererNetworkRegretSet_4_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_EventInfererNetworkRegretSet_4_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message EventInfererNetworkRegretSet at list field Regrets as it is not of Message kind"))
}

func (x *_EventInfererNetworkRegretSet_4_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_EventInfererNetworkRegretSet_4_list) NewElement() protoreflect.Value {
	v := ""
	return protoreflect.ValueOfString(v)
}

func (x *_EventInfererNetworkRegretSet_4_list) IsValid() bool {
	return x.list != nil
}

var (
	md_EventInfererNetworkRegretSet              protoreflect.MessageDescriptor
	fd_EventInfererNetworkRegretSet_topic_id     protoreflect.FieldDescriptor
	fd_EventInfererNetworkRegretSet_block_height protoreflect.FieldDescriptor
	fd_EventInfererNetworkRegretSet_addresses    protoreflect.FieldDescriptor
	fd_EventInfererNetworkRegretSet_regrets      protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_events_proto_init()
	md_EventInfererNetworkRegretSet = File_emissions_v5_events_proto.Messages().ByName("EventInfererNetworkRegretSet")
	fd_EventInfererNetworkRegretSet_topic_id = md_EventInfererNetworkRegretSet.Fields().ByName("topic_id")
	fd_EventInfererNetworkRegretSet_block_height = md_EventInfererNetworkRegretSet.Fields().ByName("block_height")
	fd_EventInfererNetworkRegretSet_addresses = md_EventInfererNetworkRegretSet.Fields().ByName("addresses")
	fd_EventInfererNetworkRegretSet_regrets = md_EventInfererNetworkRegretSet.Fields().ByName("regrets")
}

var _ protoreflect.Message = (*fastReflection_EventInfererNetworkRegretSet)(nil)

type fastReflection_EventInfererNetworkRegretSet EventInfererNetworkRegretSet

func (x *EventInfererNetworkRegretSet) ProtoReflect() protoreflect.Message {
	return (*fastReflection_EventInfererNetworkRegretSet)(x)
}

func (x *EventInfererNetworkRegretSet) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_events_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_EventInfererNetworkRegretSet_messageType fastReflection_EventInfererNetworkRegretSet_messageType
var _ protoreflect.MessageType = fastReflection_EventInfererNetworkRegretSet_messageType{}

type fastReflection_EventInfererNetworkRegretSet_messageType struct{}

func (x fastReflection_EventInfererNetworkRegretSet_messageType) Zero() protoreflect.Message {
	return (*fastReflection_EventInfererNetworkRegretSet)(nil)
}
func (x fastReflection_EventInfererNetworkRegretSet_messageType) New() protoreflect.Message {
	return new(fastReflection_EventInfererNetworkRegretSet)
}
func (x fastReflection_EventInfererNetworkRegretSet_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_EventInfererNetworkRegretSet
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_EventInfererNetworkRegretSet) Descriptor() protoreflect.MessageDescriptor {
	return md_EventInfererNetworkRegretSet
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_EventInfererNetworkRegretSet) Type() protoreflect.MessageType {
	return _fastReflection_EventInfererNetworkRegretSet_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_EventInfererNetworkRegretSet) New() protoreflect.Message {
	return new(fastReflection_EventInfererNetworkRegretSet)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_EventInfererNetworkRegretSet) Interface() protoreflect.ProtoMessage {
	return (*EventInfererNetworkRegretSet)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_EventInfererNetworkRegretSet) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_EventInfererNetworkRegretSet_topic_id, value) {
			return
		}
	}
	if x.BlockHeight != int64(0) {
		value := protoreflect.ValueOfInt64(x.BlockHeight)
		if !f(fd_EventInfererNetworkRegretSet_block_height, value) {
			return
		}
	}
	if len(x.Addresses) != 0 {
		value := protoreflect.ValueOfList(&_EventInfererNetworkRegretSet_3_list{list: &x.Addresses})
		if !f(fd_EventInfererNetworkRegretSet_addresses, value) {
			return
		}
	}
	if len(x.Regrets) != 0 {
		value := protoreflect.ValueOfList(&_EventInfererNetworkRegretSet_4_list{list: &x.Regrets})
		if !f(fd_EventInfererNetworkRegretSet_regrets, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_EventInfererNetworkRegretSet) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.EventInfererNetworkRegretSet.topic_id":
		return x.TopicId != uint64(0)
	case "emissions.v5.EventInfererNetworkRegretSet.block_height":
		return x.BlockHeight != int64(0)
	case "emissions.v5.EventInfererNetworkRegretSet.addresses":
		return len(x.Addresses) != 0
	case "emissions.v5.EventInfererNetworkRegretSet.regrets":
		return len(x.Regrets) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.EventInfererNetworkRegretSet"))
		}
		panic(fmt.Errorf("message emissions.v5.EventInfererNetworkRegretSet does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventInfererNetworkRegretSet) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.EventInfererNetworkRegretSet.topic_id":
		x.TopicId = uint64(0)
	case "emissions.v5.EventInfererNetworkRegretSet.block_height":
		x.BlockHeight = int64(0)
	case "emissions.v5.EventInfererNetworkRegretSet.addresses":
		x.Addresses = nil
	case "emissions.v5.EventInfererNetworkRegretSet.regrets":
		x.Regrets = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.EventInfererNetworkRegretSet"))
		}
		panic(fmt.Errorf("message emissions.v5.EventInfererNetworkRegretSet does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_EventInfererNetworkRegretSet) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.EventInfererNetworkRegretSet.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	case "emissions.v5.EventInfererNetworkRegretSet.block_height":
		value := x.BlockHeight
		return protoreflect.ValueOfInt64(value)
	case "emissions.v5.EventInfererNetworkRegretSet.addresses":
		if len(x.Addresses) == 0 {
			return protoreflect.ValueOfList(&_EventInfererNetworkRegretSet_3_list{})
		}
		listValue := &_EventInfererNetworkRegretSet_3_list{list: &x.Addresses}
		return protoreflect.ValueOfList(listValue)
	case "emissions.v5.EventInfererNetworkRegretSet.regrets":
		if len(x.Regrets) == 0 {
			return protoreflect.ValueOfList(&_EventInfererNetworkRegretSet_4_list{})
		}
		listValue := &_EventInfererNetworkRegretSet_4_list{list: &x.Regrets}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.EventInfererNetworkRegretSet"))
		}
		panic(fmt.Errorf("message emissions.v5.EventInfererNetworkRegretSet does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventInfererNetworkRegretSet) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.EventInfererNetworkRegretSet.topic_id":
		x.TopicId = value.Uint()
	case "emissions.v5.EventInfererNetworkRegretSet.block_height":
		x.BlockHeight = value.Int()
	case "emissions.v5.EventInfererNetworkRegretSet.addresses":
		lv := value.List()
		clv := lv.(*_EventInfererNetworkRegretSet_3_list)
		x.Addresses = *clv.list
	case "emissions.v5.EventInfererNetworkRegretSet.regrets":
		lv := value.List()
		clv := lv.(*_EventInfererNetworkRegretSet_4_list)
		x.Regrets = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.EventInfererNetworkRegretSet"))
		}
		panic(fmt.Errorf("message emissions.v5.EventInfererNetworkRegretSet does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventInfererNetworkRegretSet) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.EventInfererNetworkRegretSet.addresses":
		if x.Addresses == nil {
			x.Addresses = []string{}
		}
		value := &_EventInfererNetworkRegretSet_3_list{list: &x.Addresses}
		return protoreflect.ValueOfList(value)
	case "emissions.v5.EventInfererNetworkRegretSet.regrets":
		if x.Regrets == nil {
			x.Regrets = []string{}
		}
		value := &_EventInfererNetworkRegretSet_4_list{list: &x.Regrets}
		return protoreflect.ValueOfList(value)
	case "emissions.v5.EventInfererNetworkRegretSet.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.EventInfererNetworkRegretSet is not mutable"))
	case "emissions.v5.EventInfererNetworkRegretSet.block_height":
		panic(fmt.Errorf("field block_height of message emissions.v5.EventInfererNetworkRegretSet is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.EventInfererNetworkRegretSet"))
		}
		panic(fmt.Errorf("message emissions.v5.EventInfererNetworkRegretSet does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_EventInfererNetworkRegretSet) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.EventInfererNetworkRegretSet.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "emissions.v5.EventInfererNetworkRegretSet.block_height":
		return protoreflect.ValueOfInt64(int64(0))
	case "emissions.v5.EventInfererNetworkRegretSet.addresses":
		list := []string{}
		return protoreflect.ValueOfList(&_EventInfererNetworkRegretSet_3_list{list: &list})
	case "emissions.v5.EventInfererNetworkRegretSet.regrets":
		list := []string{}
		return protoreflect.ValueOfList(&_EventInfererNetworkRegretSet_4_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.EventInfererNetworkRegretSet"))
		}
		panic(fmt.Errorf("message emissions.v5.EventInfererNetworkRegretSet does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_EventInfererNetworkRegretSet) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.EventInfererNetworkRegretSet", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_EventInfererNetworkRegretSet) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventInfererNetworkRegretSet) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_EventInfererNetworkRegretSet) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_EventInfererNetworkRegretSet) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*EventInfererNetworkRegretSet)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		if x.BlockHeight != 0 {
			n += 1 + runtime.Sov(uint64(x.BlockHeight))
		}
		if len(x.Addresses) > 0 {
			for _, s := range x.Addresses {
				l = len(s)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.Regrets) > 0 {
			for _, s := range x.Regrets {
				l = len(s)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*EventInfererNetworkRegretSet)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Regrets) > 0 {
			for iNdEx := len(x.Regrets) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.Regrets[iNdEx])
				copy(dAtA[i:], x.Regrets[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Regrets[iNdEx])))
				i--
				dAtA[i] = 0x22
			}
		}
		if len(x.Addresses) > 0 {
			for iNdEx := len(x.Addresses) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.Addresses[iNdEx])
				copy(dAtA[i:], x.Addresses[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Addresses[iNdEx])))
				i--
				dAtA[i] = 0x1a
			}
		}
		if x.BlockHeight != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.BlockHeight))
			i--
			dAtA[i] = 0x10
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*EventInfererNetworkRegretSet)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventInfererNetworkRegretSet: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventInfererNetworkRegretSet: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BlockHeight", wireType)
				}
				x.BlockHeight = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.BlockHeight |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Addresses", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Addresses = append(x.Addresses, string(dAtA[iNdEx:postIndex]))
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Regrets", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Regrets = append(x.Regrets, string(dAtA[iNdEx:postIndex]))
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_EventForecasterNetworkRegretSet_3_list)(nil)

type _EventForecasterNetworkRegretSet_3_list struct {
	list *[]string
}

func (x *_EventForecasterNetworkRegretSet_3_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_EventForecasterNetworkRegretSet_3_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfString((*x.list)[i])
}

func (x *_EventForecasterNetworkRegretSet_3_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_EventForecasterNetworkRegretSet_3_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_EventForecasterNetworkRegretSet_3_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message EventForecasterNetworkRegretSet at list field Addresses as it is not of Message kind"))
}

func (x *_EventForecasterNetworkRegretSet_3_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_EventForecasterNetworkRegretSet_3_list) NewElement() protoreflect.Value {
	v := ""
	return protoreflect.ValueOfString(v)
}

func (x *_EventForecasterNetworkRegretSet_3_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_EventForecasterNetworkRegretSet_4_list)(nil)

type _EventForecasterNetworkRegretSet_4_list struct {
	list *[]string
}

func (x *_EventForecasterNetworkRegretSet_4_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_EventForecasterNetworkRegretSet_4_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfString((*x.list)[i])
}

func (x *_EventForecasterNetworkRegretSet_4_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_EventForecasterNetworkRegretSet_4_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_EventForecasterNetworkRegretSet_4_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message EventForecasterNetworkRegretSet at list field Regrets as it is not of Message kind"))
}

func (x *_EventForecasterNetworkRegretSet_4_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_EventForecasterNetworkRegretSet_4_list) NewElement() protoreflect.Value {
	v := ""
	return protoreflect.ValueOfString(v)
}

func (x *_EventForecasterNetworkRegretSet_4_list) IsValid() bool {
	return x.list != nil
}

var (
	md_EventForecasterNetworkRegretSet              protoreflect.MessageDescriptor
	fd_EventForecasterNetworkRegretSet_topic_id     protoreflect.FieldDescriptor
	fd_EventForecasterNetworkRegretSet_block_height protoreflect.FieldDescriptor
	fd_EventForecasterNetworkRegretSet_addresses    protoreflect.FieldDescriptor
	fd_EventForecasterNetworkRegretSet_regrets      protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_events_proto_init()
	md_EventForecasterNetworkRegretSet = File_emissions_v5_events_proto.Messages().ByName("EventForecasterNetworkRegretSet")
	fd_EventForecasterNetworkRegretSet_topic_id = md_EventForecasterNetworkRegretSet.Fields().ByName("topic_id")
	fd_EventForecasterNetworkRegretSet_block_height = md_EventForecasterNetworkRegretSet.Fields().ByName("block_height")
	fd_EventForecasterNetworkRegretSet_addresses = md_EventForecasterNetworkRegretSet.Fields().ByName("addresses")
	fd_EventForecasterNetworkRegretSet_regrets = md_EventForecasterNetworkRegretSet.Fields().ByName("regrets")
}

var _ protoreflect.Message = (*fastReflection_EventForecasterNetworkRegretSet)(nil)

type fastReflection_EventForecasterNetworkRegretSet EventForecasterNetworkRegretSet

func (x *EventForecasterNetworkRegretSet) ProtoReflect() protoreflect.Message {
	return (*fastReflection_EventForecasterNetworkRegretSet)(x)
}

func (x *EventForecasterNetworkRegretSet) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_events_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_EventForecasterNetworkRegretSet_messageType fastReflection_EventForecasterNetworkRegretSet_messageType
var _ protoreflect.MessageType = fastReflection_EventForecasterNetworkRegretSet_messageType{}

type fastReflection_EventForecasterNetworkRegretSet_messageType struct{}

func (x fastReflection_EventForecasterNetworkRegretSet_messageType) Zero() protoreflect.Message {
	return (*fastReflection_EventForecasterNetworkRegretSet)(nil)
}
func (x fastReflection_EventForecasterNetworkRegretSet_messageType) New() protoreflect.Message {
	return new(fastReflection_EventForecasterNetworkRegretSet)
}
func (x fastReflection_EventForecasterNetworkRegretSet_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_EventForecasterNetworkRegretSet
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_EventForecasterNetworkRegretSet) Descriptor() protoreflect.MessageDescriptor {
	return md_EventForecasterNetworkRegretSet
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_EventForecasterNetworkRegretSet) Type() protoreflect.MessageType {
	return _fastReflection_EventForecasterNetworkRegretSet_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_EventForecasterNetworkRegretSet) New() protoreflect.Message {
	return new(fastReflection_EventForecasterNetworkRegretSet)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_EventForecasterNetworkRegretSet) Interface() protoreflect.ProtoMessage {
	return (*EventForecasterNetworkRegretSet)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_EventForecasterNetworkRegretSet) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_EventForecasterNetworkRegretSet_topic_id, value) {
			return
		}
	}
	if x.BlockHeight != int64(0) {
		value := protoreflect.ValueOfInt64(x.BlockHeight)
		if !f(fd_EventForecasterNetworkRegretSet_block_height, value) {
			return
		}
	}
	if len(x.Addresses) != 0 {
		value := protoreflect.ValueOfList(&_EventForecasterNetworkRegretSet_3_list{list: &x.Addresses})
		if !f(fd_EventForecasterNetworkRegretSet_addresses, value) {
			return
		}
	}
	if len(x.Regrets) != 0 {
		value := protoreflect.ValueOfList(&_EventForecasterNetworkRegretSet_4_list{list: &x.Regrets})
		if !f(fd_EventForecasterNetworkRegretSet_regrets, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_EventForecasterNetworkRegretSet) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.EventForecasterNetworkRegretSet.topic_id":
		return x.TopicId != uint64(0)
	case "emissions.v5.EventForecasterNetworkRegretSet.block_height":
		return x.BlockHeight != int64(0)
	case "emissions.v5.EventForecasterNetworkRegretSet.addresses":
		return len(x.Addresses) != 0
	case "emissions.v5.EventForecasterNetworkRegretSet.regrets":
		return len(x.Regrets) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.EventForecasterNetworkRegretSet"))
		}
		panic(fmt.Errorf("message emissions.v5.EventForecasterNetworkRegretSet does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventForecasterNetworkRegretSet) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.EventForecasterNetworkRegretSet.topic_id":
		x.TopicId = uint64(0)
	case "emissions.v5.EventForecasterNetworkRegretSet.block_height":
		x.BlockHeight = int64(0)
	case "emissions.v5.EventForecasterNetworkRegretSet.addresses":
		x.Addresses = nil
	case "emissions.v5.EventForecasterNetworkRegretSet.regrets":
		x.Regrets = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.EventForecasterNetworkRegretSet"))
		}
		panic(fmt.Errorf("message emissions.v5.EventForecasterNetworkRegretSet does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_EventForecasterNetworkRegretSet) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.EventForecasterNetworkRegretSet.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	case "emissions.v5.EventForecasterNetworkRegretSet.block_height":
		value := x.BlockHeight
		return protoreflect.ValueOfInt64(value)
	case "emissions.v5.EventForecasterNetworkRegretSet.addresses":
		if len(x.Addresses) == 0 {
			return protoreflect.ValueOfList(&_EventForecasterNetworkRegretSet_3_list{})
		}
		listValue := &_EventForecasterNetworkRegretSet_3_list{list: &x.Addresses}
		return protoreflect.ValueOfList(listValue)
	case "emissions.v5.EventForecasterNetworkRegretSet.regrets":
		if len(x.Regrets) == 0 {
			return protoreflect.ValueOfList(&_EventForecasterNetworkRegretSet_4_list{})
		}
		listValue := &_EventForecasterNetworkRegretSet_4_list{list: &x.Regrets}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.EventForecasterNetworkRegretSet"))
		}
		panic(fmt.Errorf("message emissions.v5.EventForecasterNetworkRegretSet does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventForecasterNetworkRegretSet) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.EventForecasterNetworkRegretSet.topic_id":
		x.TopicId = value.Uint()
	case "emissions.v5.EventForecasterNetworkRegretSet.block_height":
		x.BlockHeight = value.Int()
	case "emissions.v5.EventForecasterNetworkRegretSet.addresses":
		lv := value.List()
		clv := lv.(*_EventForecasterNetworkRegretSet_3_list)
		x.Addresses = *clv.list
	case "emissions.v5.EventForecasterNetworkRegretSet.regrets":
		lv := value.List()
		clv := lv.(*_EventForecasterNetworkRegretSet_4_list)
		x.Regrets = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.EventForecasterNetworkRegretSet"))
		}
		panic(fmt.Errorf("message emissions.v5.EventForecasterNetworkRegretSet does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventForecasterNetworkRegretSet) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.EventForecasterNetworkRegretSet.addresses":
		if x.Addresses == nil {
			x.Addresses = []string{}
		}
		value := &_EventForecasterNetworkRegretSet_3_list{list: &x.Addresses}
		return protoreflect.ValueOfList(value)
	case "emissions.v5.EventForecasterNetworkRegretSet.regrets":
		if x.Regrets == nil {
			x.Regrets = []string{}
		}
		value := &_EventForecasterNetworkRegretSet_4_list{list: &x.Regrets}
		return protoreflect.ValueOfList(value)
	case "emissions.v5.EventForecasterNetworkRegretSet.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.EventForecasterNetworkRegretSet is not mutable"))
	case "emissions.v5.EventForecasterNetworkRegretSet.block_height":
		panic(fmt.Errorf("field block_height of message emissions.v5.EventForecasterNetworkRegretSet is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.EventForecasterNetworkRegretSet"))
		}
		panic(fmt.Errorf("message emissions.v5.EventForecasterNetworkRegretSet does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_EventForecasterNetworkRegretSet) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.EventForecasterNetworkRegretSet.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "emissions.v5.EventForecasterNetworkRegretSet.block_height":
		return protoreflect.ValueOfInt64(int64(0))
	case "emissions.v5.EventForecasterNetworkRegretSet.addresses":
		list := []string{}
		return protoreflect.ValueOfList(&_EventForecasterNetworkRegretSet_3_list{list: &list})
	case "emissions.v5.EventForecasterNetworkRegretSet.regrets":
		list := []string{}
		return protoreflect.ValueOfList(&_EventForecasterNetworkRegretSet_4_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.EventForecasterNetworkRegretSet"))
		}
		panic(fmt.Errorf("message emissions.v5.EventForecasterNetworkRegretSet does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_EventForecasterNetworkRegretSet) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.EventForecasterNetworkRegretSet", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_EventForecasterNetworkRegretSet) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventForecasterNetworkRegretSet) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_EventForecasterNetworkRegretSet) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_EventForecasterNetworkRegretSet) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*EventForecasterNetworkRegretSet)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		if x.BlockHeight != 0 {
			n += 1 + runtime.Sov(uint64(x.BlockHeight))
		}
		if len(x.Addresses) > 0 {
			for _, s := range x.Addresses {
				l = len(s)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.Regrets) > 0 {
			for _, s := range x.Regrets {
				l = len(s)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*EventForecasterNetworkRegretSet)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Regrets) > 0 {
			for iNdEx := len(x.Regrets) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.Regrets[iNdEx])
				copy(dAtA[i:], x.Regrets[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Regrets[iNdEx])))
				i--
				dAtA[i] = 0x22
			}
		}
		if len(x.Addresses) > 0 {
			for iNdEx := len(x.Addresses) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.Addresses[iNdEx])
				copy(dAtA[i:], x.Addresses[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Addresses[iNdEx])))
				i--
				dAtA[i] = 0x1a
			}
		}
		if x.BlockHeight != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.BlockHeight))
			i--
			dAtA[i] = 0x10
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*EventForecasterNetworkRegretSet)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventForecasterNetworkRegretSet: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventForecasterNetworkRegretSet: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BlockHeight", wireType)
				}
				x.BlockHeight = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.BlockHeight |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Addresses", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Addresses = append(x.Addresses, string(dAtA[iNdEx:postIndex]))
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Regrets", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Regrets = append(x.Regrets, string(dAtA[iNdEx:postIndex]))
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_EventNaiveInfererNetworkRegretSet_3_list)(nil)

type _EventNaiveInfererNetworkRegretSet_3_list struct {
	list *[]string
}

func (x *_EventNaiveInfererNetworkRegretSet_3_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_EventNaiveInfererNetworkRegretSet_3_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfString((*x.list)[i])
}

func (x *_EventNaiveInfererNetworkRegretSet_3_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_EventNaiveInfererNetworkRegretSet_3_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_EventNaiveInfererNetworkRegretSet_3_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message EventNaiveInfererNetworkRegretSet at list field Addresses as it is not of Message kind"))
}

func (x *_EventNaiveInfererNetworkRegretSet_3_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_EventNaiveInfererNetworkRegretSet_3_list) NewElement() protoreflect.Value {
	v := ""
	return protoreflect.ValueOfString(v)
}

func (x *_EventNaiveInfererNetworkRegretSet_3_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_EventNaiveInfererNetworkRegretSet_4_list)(nil)

type _EventNaiveInfererNetworkRegretSet_4_list struct {
	list *[]string
}

func (x *_EventNaiveInfererNetworkRegretSet_4_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_EventNaiveInfererNetworkRegretSet_4_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfString((*x.list)[i])
}

func (x *_EventNaiveInfererNetworkRegretSet_4_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_EventNaiveInfererNetworkRegretSet_4_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_EventNaiveInfererNetworkRegretSet_4_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message EventNaiveInfererNetworkRegretSet at list field Regrets as it is not of Message kind"))
}

func (x *_EventNaiveInfererNetworkRegretSet_4_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_EventNaiveInfererNetworkRegretSet_4_list) NewElement() protoreflect.Value {
	v := ""
	return protoreflect.ValueOfString(v)
}

func (x *_EventNaiveInfererNetworkRegretSet_4_list) IsValid() bool {
	return x.list != nil
}

var (
	md_EventNaiveInfererNetworkRegretSet              protoreflect.MessageDescriptor
	fd_EventNaiveInfererNetworkRegretSet_topic_id     protoreflect.FieldDescriptor
	fd_EventNaiveInfererNetworkRegretSet_block_height protoreflect.FieldDescriptor
	fd_EventNaiveInfererNetworkRegretSet_addresses    protoreflect.FieldDescriptor
	fd_EventNaiveInfererNetworkRegretSet_regrets      protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_events_proto_init()
	md_EventNaiveInfererNetworkRegretSet = File_emissions_v5_events_proto.Messages().ByName("EventNaiveInfererNetworkRegretSet")
	fd_EventNaiveInfererNetworkRegretSet_topic_id = md_EventNaiveInfererNetworkRegretSet.Fields().ByName("topic_id")
	fd_EventNaiveInfererNetworkRegretSet_block_height = md_EventNaiveInfererNetworkRegretSet.Fields().ByName("block_height")
	fd_EventNaiveInfererNetworkRegretSet_addresses = md_EventNaiveInfererNetworkRegretSet.Fields().ByName("addresses")
	fd_EventNaiveInfererNetworkRegretSet_regrets = md_EventNaiveInfererNetworkRegretSet.Fields().ByName("regrets")
}

var _ protoreflect.Message = (*fastReflection_EventNaiveInfererNetworkRegretSet)(nil)

type fastReflection_EventNaiveInfererNetworkRegretSet EventNaiveInfererNetworkRegretSet

func (x *EventNaiveInfererNetworkRegretSet) ProtoReflect() protoreflect.Message {
	return (*fastReflection_EventNaiveInfererNetworkRegretSet)(x)
}

func (x *EventNaiveInfererNetworkRegretSet) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_events_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_EventNaiveInfererNetworkRegretSet_messageType fastReflection_EventNaiveInfererNetworkRegretSet_messageType
var _ protoreflect.MessageType = fastReflection_EventNaiveInfererNetworkRegretSet_messageType{}

type fastReflection_EventNaiveInfererNetworkRegretSet_messageType struct{}

func (x fastReflection_EventNaiveInfererNetworkRegretSet_messageType) Zero() protoreflect.Message {
	return (*fastReflection_EventNaiveInfererNetworkRegretSet)(nil)
}
func (x fastReflection_EventNaiveInfererNetworkRegretSet_messageType) New() protoreflect.Message {
	return new(fastReflection_EventNaiveInfererNetworkRegretSet)
}
func (x fastReflection_EventNaiveInfererNetworkRegretSet_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_EventNaiveInfererNetworkRegretSet
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_EventNaiveInfererNetworkRegretSet) Descriptor() protoreflect.MessageDescriptor {
	return md_EventNaiveInfererNetworkRegretSet
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_EventNaiveInfererNetworkRegretSet) Type() protoreflect.MessageType {
	return _fastReflection_EventNaiveInfererNetworkRegretSet_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_EventNaiveInfererNetworkRegretSet) New() protoreflect.Message {
	return new(fastReflection_EventNaiveInfererNetworkRegretSet)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_EventNaiveInfererNetworkRegretSet) Interface() protoreflect.ProtoMessage {
	return (*EventNaiveInfererNetworkRegretSet)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_EventNaiveInfererNetworkRegretSet) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_EventNaiveInfererNetworkRegretSet_topic_id, value) {
			return
		}
	}
	if x.BlockHeight != int64(0) {
		value := protoreflect.ValueOfInt64(x.BlockHeight)
		if !f(fd_EventNaiveInfererNetworkRegretSet_block_height, value) {
			return
		}
	}
	if len(x.Addresses) != 0 {
		value := protoreflect.ValueOfList(&_EventNaiveInfererNetworkRegretSet_3_list{list: &x.Addresses})
		if !f(fd_EventNaiveInfererNetworkRegretSet_addresses, value) {
			return
		}
	}
	if len(x.Regrets) != 0 {
		value := protoreflect.ValueOfList(&_EventNaiveInfererNetworkRegretSet_4_list{list: &x.Regrets})
		if !f(fd_EventNaiveInfererNetworkRegretSet_regrets, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_EventNaiveInfererNetworkRegretSet) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.EventNaiveInfererNetworkRegretSet.topic_id":
		return x.TopicId != uint64(0)
	case "emissions.v5.EventNaiveInfererNetworkRegretSet.block_height":
		return x.BlockHeight != int64(0)
	case "emissions.v5.EventNaiveInfererNetworkRegretSet.addresses":
		return len(x.Addresses) != 0
	case "emissions.v5.EventNaiveInfererNetworkRegretSet.regrets":
		return len(x.Regrets) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.EventNaiveInfererNetworkRegretSet"))
		}
		panic(fmt.Errorf("message emissions.v5.EventNaiveInfererNetworkRegretSet does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventNaiveInfererNetworkRegretSet) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.EventNaiveInfererNetworkRegretSet.topic_id":
		x.TopicId = uint64(0)
	case "emissions.v5.EventNaiveInfererNetworkRegretSet.block_height":
		x.BlockHeight = int64(0)
	case "emissions.v5.EventNaiveInfererNetworkRegretSet.addresses":
		x.Addresses = nil
	case "emissions.v5.EventNaiveInfererNetworkRegretSet.regrets":
		x.Regrets = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.EventNaiveInfererNetworkRegretSet"))
		}
		panic(fmt.Errorf("message emissions.v5.EventNaiveInfererNetworkRegretSet does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_EventNaiveInfererNetworkRegretSet) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.EventNaiveInfererNetworkRegretSet.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	case "emissions.v5.EventNaiveInfererNetworkRegretSet.block_height":
		value := x.BlockHeight
		return protoreflect.ValueOfInt64(value)
	case "emissions.v5.EventNaiveInfererNetworkRegretSet.addresses":
		if len(x.Addresses) == 0 {
			return protoreflect.ValueOfList(&_EventNaiveInfererNetworkRegretSet_3_list{})
		}
		listValue := &_EventNaiveInfererNetworkRegretSet_3_list{list: &x.Addresses}
		return protoreflect.ValueOfList(listValue)
	case "emissions.v5.EventNaiveInfererNetworkRegretSet.regrets":
		if len(x.Regrets) == 0 {
			return protoreflect.ValueOfList(&_EventNaiveInfererNetworkRegretSet_4_list{})
		}
		listValue := &_EventNaiveInfererNetworkRegretSet_4_list{list: &x.Regrets}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.EventNaiveInfererNetworkRegretSet"))
		}
		panic(fmt.Errorf("message emissions.v5.EventNaiveInfererNetworkRegretSet does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventNaiveInfererNetworkRegretSet) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.EventNaiveInfererNetworkRegretSet.topic_id":
		x.TopicId = value.Uint()
	case "emissions.v5.EventNaiveInfererNetworkRegretSet.block_height":
		x.BlockHeight = value.Int()
	case "emissions.v5.EventNaiveInfererNetworkRegretSet.addresses":
		lv := value.List()
		clv := lv.(*_EventNaiveInfererNetworkRegretSet_3_list)
		x.Addresses = *clv.list
	case "emissions.v5.EventNaiveInfererNetworkRegretSet.regrets":
		lv := value.List()
		clv := lv.(*_EventNaiveInfererNetworkRegretSet_4_list)
		x.Regrets = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.EventNaiveInfererNetworkRegretSet"))
		}
		panic(fmt.Errorf("message emissions.v5.EventNaiveInfererNetworkRegretSet does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventNaiveInfererNetworkRegretSet) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.EventNaiveInfererNetworkRegretSet.addresses":
		if x.Addresses == nil {
			x.Addresses = []string{}
		}
		value := &_EventNaiveInfererNetworkRegretSet_3_list{list: &x.Addresses}
		return protoreflect.ValueOfList(value)
	case "emissions.v5.EventNaiveInfererNetworkRegretSet.regrets":
		if x.Regrets == nil {
			x.Regrets = []string{}
		}
		value := &_EventNaiveInfererNetworkRegretSet_4_list{list: &x.Regrets}
		return protoreflect.ValueOfList(value)
	case "emissions.v5.EventNaiveInfererNetworkRegretSet.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.EventNaiveInfererNetworkRegretSet is not mutable"))
	case "emissions.v5.EventNaiveInfererNetworkRegretSet.block_height":
		panic(fmt.Errorf("field block_height of message emissions.v5.EventNaiveInfererNetworkRegretSet is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.EventNaiveInfererNetworkRegretSet"))
		}
		panic(fmt.Errorf("message emissions.v5.EventNaiveInfererNetworkRegretSet does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_EventNaiveInfererNetworkRegretSet) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.EventNaiveInfererNetworkRegretSet.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "emissions.v5.EventNaiveInfererNetworkRegretSet.block_height":
		return protoreflect.ValueOfInt64(int64(0))
	case "emissions.v5.EventNaiveInfererNetworkRegretSet.addresses":
		list := []string{}
		return protoreflect.ValueOfList(&_EventNaiveInfererNetworkRegretSet_3_list{list: &list})
	case "emissions.v5.EventNaiveInfererNetworkRegretSet.regrets":
		list := []string{}
		return protoreflect.ValueOfList(&_EventNaiveInfererNetworkRegretSet_4_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.EventNaiveInfererNetworkRegretSet"))
		}
		panic(fmt.Errorf("message emissions.v5.EventNaiveInfererNetworkRegretSet does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_EventNaiveInfererNetworkRegretSet) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.EventNaiveInfererNetworkRegretSet", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_EventNaiveInfererNetworkRegretSet) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventNaiveInfererNetworkRegretSet) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_EventNaiveInfererNetworkRegretSet) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_EventNaiveInfererNetworkRegretSet) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*EventNaiveInfererNetworkRegretSet)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		if x.BlockHeight != 0 {
			n += 1 + runtime.Sov(uint64(x.BlockHeight))
		}
		if len(x.Addresses) > 0 {
			for _, s := range x.Addresses {
				l = len(s)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.Regrets) > 0 {
			for _, s := range x.Regrets {
				l = len(s)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*EventNaiveInfererNetworkRegretSet)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Regrets) > 0 {
			for iNdEx := len(x.Regrets) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.Regrets[iNdEx])
				copy(dAtA[i:], x.Regrets[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Regrets[iNdEx])))
				i--
				dAtA[i] = 0x22
			}
		}
		if len(x.Addresses) > 0 {
			for iNdEx := len(x.Addresses) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.Addresses[iNdEx])
				copy(dAtA[i:], x.Addresses[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Addresses[iNdEx])))
				i--
				dAtA[i] = 0x1a
			}
		}
		if x.BlockHeight != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.BlockHeight))
			i--
			dAtA[i] = 0x10
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*EventNaiveInfererNetworkRegretSet)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventNaiveInfererNetworkRegretSet: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventNaiveInfererNetworkRegretSet: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BlockHeight", wireType)
				}
				x.BlockHeight = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.BlockHeight |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Addresses", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Addresses = append(x.Addresses, string(dAtA[iNdEx:postIndex]))
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Regrets", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Regrets = append(x.Regrets, string(dAtA[iNdEx:postIndex]))
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_EventTopicInitialRegretSet              protoreflect.MessageDescriptor
	fd_EventTopicInitialRegretSet_topic_id     protoreflect.FieldDescriptor
	fd_EventTopicInitialRegretSet_block_height protoreflect.FieldDescriptor
	fd_EventTopicInitialRegretSet_regret       protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v5_events_proto_init()
	md_EventTopicInitialRegretSet = File_emissions_v5_events_proto.Messages().ByName("EventTopicInitialRegretSet")
	fd_EventTopicInitialRegretSet_topic_id = md_EventTopicInitialRegretSet.Fields().ByName("topic_id")
	fd_EventTopicInitialRegretSet_block_height = md_EventTopicInitialRegretSet.Fields().ByName("block_height")
	fd_EventTopicInitialRegretSet_regret = md_EventTopicInitialRegretSet.Fields().ByName("regret")
}

var _ protoreflect.Message = (*fastReflection_EventTopicInitialRegretSet)(nil)

type fastReflection_EventTopicInitialRegretSet EventTopicInitialRegretSet

func (x *EventTopicInitialRegretSet) ProtoReflect() protoreflect.Message {
	return (*fastReflection_EventTopicInitialRegretSet)(x)
}

func (x *EventTopicInitialRegretSet) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v5_events_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_EventTopicInitialRegretSet_messageType fastReflection_EventTopicInitialRegretSet_messageType
var _ protoreflect.MessageType = fastReflection_EventTopicInitialRegretSet_messageType{}

type fastReflection_EventTopicInitialRegretSet_messageType struct{}

func (x fastReflection_EventTopicInitialRegretSet_messageType) Zero() protoreflect.Message {
	return (*fastReflection_EventTopicInitialRegretSet)(nil)
}
func (x fastReflection_EventTopicInitialRegretSet_messageType) New() protoreflect.Message {
	return new(fastReflection_EventTopicInitialRegretSet)
}
func (x fastReflection_EventTopicInitialRegretSet_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_EventTopicInitialRegretSet
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_EventTopicInitialRegretSet) Descriptor() protoreflect.MessageDescriptor {
	return md_EventTopicInitialRegretSet
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_EventTopicInitialRegretSet) Type() protoreflect.MessageType {
	return _fastReflection_EventTopicInitialRegretSet_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_EventTopicInitialRegretSet) New() protoreflect.Message {
	return new(fastReflection_EventTopicInitialRegretSet)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_EventTopicInitialRegretSet) Interface() protoreflect.ProtoMessage {
	return (*EventTopicInitialRegretSet)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_EventTopicInitialRegretSet) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_EventTopicInitialRegretSet_topic_id, value) {
			return
		}
	}
	if x.BlockHeight != int64(0) {
		value := protoreflect.ValueOfInt64(x.BlockHeight)
		if !f(fd_EventTopicInitialRegretSet_block_height, value) {
			return
		}
	}
	if x.Regret != "" {
		value := protoreflect.ValueOfString(x.Regret)
		if !f(fd_EventTopicInitialRegretSet_regret, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_EventTopicInitialRegretSet) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v5.EventTopicInitialRegretSet.topic_id":
		return x.TopicId != uint64(0)
	case "emissions.v5.EventTopicInitialRegretSet.block_height":
		return x.BlockHeight != int64(0)
	case "emissions.v5.EventTopicInitialRegretSet.regret":
		return x.Regret != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.EventTopicInitialRegretSet"))
		}
		panic(fmt.Errorf("message emissions.v5.EventTopicInitialRegretSet does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventTopicInitialRegretSet) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v5.EventTopicInitialRegretSet.topic_id":
		x.TopicId = uint64(0)
	case "emissions.v5.EventTopicInitialRegretSet.block_height":
		x.BlockHeight = int64(0)
	case "emissions.v5.EventTopicInitialRegretSet.regret":
		x.Regret = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.EventTopicInitialRegretSet"))
		}
		panic(fmt.Errorf("message emissions.v5.EventTopicInitialRegretSet does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_EventTopicInitialRegretSet) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v5.EventTopicInitialRegretSet.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	case "emissions.v5.EventTopicInitialRegretSet.block_height":
		value := x.BlockHeight
		return protoreflect.ValueOfInt64(value)
	case "emissions.v5.EventTopicInitialRegretSet.regret":
		value := x.Regret
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.EventTopicInitialRegretSet"))
		}
		panic(fmt.Errorf("message emissions.v5.EventTopicInitialRegretSet does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventTopicInitialRegretSet) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v5.EventTopicInitialRegretSet.topic_id":
		x.TopicId = value.Uint()
	case "emissions.v5.EventTopicInitialRegretSet.block_height":
		x.BlockHeight = value.Int()
	case "emissions.v5.EventTopicInitialRegretSet.regret":
		x.Regret = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.EventTopicInitialRegretSet"))
		}
		panic(fmt.Errorf("message emissions.v5.EventTopicInitialRegretSet does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventTopicInitialRegretSet) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.EventTopicInitialRegretSet.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v5.EventTopicInitialRegretSet is not mutable"))
	case "emissions.v5.EventTopicInitialRegretSet.block_height":
		panic(fmt.Errorf("field block_height of message emissions.v5.EventTopicInitialRegretSet is not mutable"))
	case "emissions.v5.EventTopicInitialRegretSet.regret":
		panic(fmt.Errorf("field regret of message emissions.v5.EventTopicInitialRegretSet is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.EventTopicInitialRegretSet"))
		}
		panic(fmt.Errorf("message emissions.v5.EventTopicInitialRegretSet does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_EventTopicInitialRegretSet) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v5.EventTopicInitialRegretSet.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "emissions.v5.EventTopicInitialRegretSet.block_height":
		return protoreflect.ValueOfInt64(int64(0))
	case "emissions.v5.EventTopicInitialRegretSet.regret":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v5.EventTopicInitialRegretSet"))
		}
		panic(fmt.Errorf("message emissions.v5.EventTopicInitialRegretSet does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_EventTopicInitialRegretSet) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v5.EventTopicInitialRegretSet", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_EventTopicInitialRegretSet) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventTopicInitialRegretSet) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_EventTopicInitialRegretSet) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_EventTopicInitialRegretSet) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*EventTopicInitialRegretSet)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		if x.BlockHeight != 0 {
			n += 1 + runtime.Sov(uint64(x.BlockHeight))
		}
		l = len(x.Regret)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*EventTopicInitialRegretSet)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Regret) > 0 {
			i -= len(x.Regret)
			copy(dAtA[i:], x.Regret)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Regret)))
			i--
			dAtA[i] = 0x1a
		}
		if x.BlockHeight != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.BlockHeight))
			i--
			dAtA[i] = 0x10
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*EventTopicInitialRegretSet)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventTopicInitialRegretSet: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventTopicInitialRegretSet: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BlockHeight", wireType)
				}
				x.BlockHeight = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.BlockHeight |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Regret", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Regret = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: emissions/v5/events.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ActorType int32

const (
	ActorType_ACTOR_TYPE_INFERER_UNSPECIFIED ActorType = 0
	ActorType_ACTOR_TYPE_FORECASTER          ActorType = 1
	ActorType_ACTOR_TYPE_REPUTER             ActorType = 2
)

// Enum value maps for ActorType.
var (
	ActorType_name = map[int32]string{
		0: "ACTOR_TYPE_INFERER_UNSPECIFIED",
		1: "ACTOR_TYPE_FORECASTER",
		2: "ACTOR_TYPE_REPUTER",
	}
	ActorType_value = map[string]int32{
		"ACTOR_TYPE_INFERER_UNSPECIFIED": 0,
		"ACTOR_TYPE_FORECASTER":          1,
		"ACTOR_TYPE_REPUTER":             2,
	}
)

func (x ActorType) Enum() *ActorType {
	p := new(ActorType)
	*p = x
	return p
}

func (x ActorType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ActorType) Descriptor() protoreflect.EnumDescriptor {
	return file_emissions_v5_events_proto_enumTypes[0].Descriptor()
}

func (ActorType) Type() protoreflect.EnumType {
	return &file_emissions_v5_events_proto_enumTypes[0]
}

func (x ActorType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ActorType.Descriptor instead.
func (ActorType) EnumDescriptor() ([]byte, []int) {
	return file_emissions_v5_events_proto_rawDescGZIP(), []int{0}
}

type EventScoresSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActorType   ActorType `protobuf:"varint,1,opt,name=actor_type,json=actorType,proto3,enum=emissions.v5.ActorType" json:"actor_type,omitempty"`
	TopicId     uint64    `protobuf:"varint,2,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	BlockHeight int64     `protobuf:"varint,3,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	Addresses   []string  `protobuf:"bytes,4,rep,name=addresses,proto3" json:"addresses,omitempty"`
	Scores      []string  `protobuf:"bytes,5,rep,name=scores,proto3" json:"scores,omitempty"`
}

func (x *EventScoresSet) Reset() {
	*x = EventScoresSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_events_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventScoresSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventScoresSet) ProtoMessage() {}

// Deprecated: Use EventScoresSet.ProtoReflect.Descriptor instead.
func (*EventScoresSet) Descriptor() ([]byte, []int) {
	return file_emissions_v5_events_proto_rawDescGZIP(), []int{0}
}

func (x *EventScoresSet) GetActorType() ActorType {
	if x != nil {
		return x.ActorType
	}
	return ActorType_ACTOR_TYPE_INFERER_UNSPECIFIED
}

func (x *EventScoresSet) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

func (x *EventScoresSet) GetBlockHeight() int64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

func (x *EventScoresSet) GetAddresses() []string {
	if x != nil {
		return x.Addresses
	}
	return nil
}

func (x *EventScoresSet) GetScores() []string {
	if x != nil {
		return x.Scores
	}
	return nil
}

type EventRewardsSettled struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActorType   ActorType `protobuf:"varint,1,opt,name=actor_type,json=actorType,proto3,enum=emissions.v5.ActorType" json:"actor_type,omitempty"`
	TopicId     uint64    `protobuf:"varint,2,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	BlockHeight int64     `protobuf:"varint,3,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	Addresses   []string  `protobuf:"bytes,4,rep,name=addresses,proto3" json:"addresses,omitempty"`
	Rewards     []string  `protobuf:"bytes,5,rep,name=rewards,proto3" json:"rewards,omitempty"`
}

func (x *EventRewardsSettled) Reset() {
	*x = EventRewardsSettled{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_events_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventRewardsSettled) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventRewardsSettled) ProtoMessage() {}

// Deprecated: Use EventRewardsSettled.ProtoReflect.Descriptor instead.
func (*EventRewardsSettled) Descriptor() ([]byte, []int) {
	return file_emissions_v5_events_proto_rawDescGZIP(), []int{1}
}

func (x *EventRewardsSettled) GetActorType() ActorType {
	if x != nil {
		return x.ActorType
	}
	return ActorType_ACTOR_TYPE_INFERER_UNSPECIFIED
}

func (x *EventRewardsSettled) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

func (x *EventRewardsSettled) GetBlockHeight() int64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

func (x *EventRewardsSettled) GetAddresses() []string {
	if x != nil {
		return x.Addresses
	}
	return nil
}

func (x *EventRewardsSettled) GetRewards() []string {
	if x != nil {
		return x.Rewards
	}
	return nil
}

type EventNetworkLossSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId     uint64          `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	BlockHeight int64           `protobuf:"varint,2,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	ValueBundle *v3.ValueBundle `protobuf:"bytes,3,opt,name=value_bundle,json=valueBundle,proto3" json:"value_bundle,omitempty"`
}

func (x *EventNetworkLossSet) Reset() {
	*x = EventNetworkLossSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_events_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventNetworkLossSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventNetworkLossSet) ProtoMessage() {}

// Deprecated: Use EventNetworkLossSet.ProtoReflect.Descriptor instead.
func (*EventNetworkLossSet) Descriptor() ([]byte, []int) {
	return file_emissions_v5_events_proto_rawDescGZIP(), []int{2}
}

func (x *EventNetworkLossSet) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

func (x *EventNetworkLossSet) GetBlockHeight() int64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

func (x *EventNetworkLossSet) GetValueBundle() *v3.ValueBundle {
	if x != nil {
		return x.ValueBundle
	}
	return nil
}

type EventForecastTaskScoreSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId uint64 `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	Score   string `protobuf:"bytes,2,opt,name=score,proto3" json:"score,omitempty"`
}

func (x *EventForecastTaskScoreSet) Reset() {
	*x = EventForecastTaskScoreSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_events_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventForecastTaskScoreSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventForecastTaskScoreSet) ProtoMessage() {}

// Deprecated: Use EventForecastTaskScoreSet.ProtoReflect.Descriptor instead.
func (*EventForecastTaskScoreSet) Descriptor() ([]byte, []int) {
	return file_emissions_v5_events_proto_rawDescGZIP(), []int{3}
}

func (x *EventForecastTaskScoreSet) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

func (x *EventForecastTaskScoreSet) GetScore() string {
	if x != nil {
		return x.Score
	}
	return ""
}

type EventWorkerLastCommitSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId     uint64    `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	BlockHeight int64     `protobuf:"varint,2,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	Nonce       *v3.Nonce `protobuf:"bytes,3,opt,name=nonce,proto3" json:"nonce,omitempty"`
}

func (x *EventWorkerLastCommitSet) Reset() {
	*x = EventWorkerLastCommitSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_events_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventWorkerLastCommitSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventWorkerLastCommitSet) ProtoMessage() {}

// Deprecated: Use EventWorkerLastCommitSet.ProtoReflect.Descriptor instead.
func (*EventWorkerLastCommitSet) Descriptor() ([]byte, []int) {
	return file_emissions_v5_events_proto_rawDescGZIP(), []int{4}
}

func (x *EventWorkerLastCommitSet) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

func (x *EventWorkerLastCommitSet) GetBlockHeight() int64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

func (x *EventWorkerLastCommitSet) GetNonce() *v3.Nonce {
	if x != nil {
		return x.Nonce
	}
	return nil
}

type EventReputerLastCommitSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId     uint64    `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	BlockHeight int64     `protobuf:"varint,2,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	Nonce       *v3.Nonce `protobuf:"bytes,3,opt,name=nonce,proto3" json:"nonce,omitempty"`
}

func (x *EventReputerLastCommitSet) Reset() {
	*x = EventReputerLastCommitSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_events_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventReputerLastCommitSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventReputerLastCommitSet) ProtoMessage() {}

// Deprecated: Use EventReputerLastCommitSet.ProtoReflect.Descriptor instead.
func (*EventReputerLastCommitSet) Descriptor() ([]byte, []int) {
	return file_emissions_v5_events_proto_rawDescGZIP(), []int{5}
}

func (x *EventReputerLastCommitSet) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

func (x *EventReputerLastCommitSet) GetBlockHeight() int64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

func (x *EventReputerLastCommitSet) GetNonce() *v3.Nonce {
	if x != nil {
		return x.Nonce
	}
	return nil
}

type EventTopicRewardsSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicIds []uint64 `protobuf:"varint,1,rep,packed,name=topic_ids,json=topicIds,proto3" json:"topic_ids,omitempty"`
	Rewards  []string `protobuf:"bytes,2,rep,name=rewards,proto3" json:"rewards,omitempty"`
}

func (x *EventTopicRewardsSet) Reset() {
	*x = EventTopicRewardsSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_events_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventTopicRewardsSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventTopicRewardsSet) ProtoMessage() {}

// Deprecated: Use EventTopicRewardsSet.ProtoReflect.Descriptor instead.
func (*EventTopicRewardsSet) Descriptor() ([]byte, []int) {
	return file_emissions_v5_events_proto_rawDescGZIP(), []int{6}
}

func (x *EventTopicRewardsSet) GetTopicIds() []uint64 {
	if x != nil {
		return x.TopicIds
	}
	return nil
}

func (x *EventTopicRewardsSet) GetRewards() []string {
	if x != nil {
		return x.Rewards
	}
	return nil
}

type EventEMAScoresSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActorType ActorType `protobuf:"varint,1,opt,name=actor_type,json=actorType,proto3,enum=emissions.v5.ActorType" json:"actor_type,omitempty"`
	TopicId   uint64    `protobuf:"varint,2,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	Nonce     int64     `protobuf:"varint,3,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Addresses []string  `protobuf:"bytes,4,rep,name=addresses,proto3" json:"addresses,omitempty"`
	Scores    []string  `protobuf:"bytes,5,rep,name=scores,proto3" json:"scores,omitempty"`
	IsActive  []bool    `protobuf:"varint,6,rep,packed,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
}

func (x *EventEMAScoresSet) Reset() {
	*x = EventEMAScoresSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_events_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventEMAScoresSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventEMAScoresSet) ProtoMessage() {}

// Deprecated: Use EventEMAScoresSet.ProtoReflect.Descriptor instead.
func (*EventEMAScoresSet) Descriptor() ([]byte, []int) {
	return file_emissions_v5_events_proto_rawDescGZIP(), []int{7}
}

func (x *EventEMAScoresSet) GetActorType() ActorType {
	if x != nil {
		return x.ActorType
	}
	return ActorType_ACTOR_TYPE_INFERER_UNSPECIFIED
}

func (x *EventEMAScoresSet) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

func (x *EventEMAScoresSet) GetNonce() int64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *EventEMAScoresSet) GetAddresses() []string {
	if x != nil {
		return x.Addresses
	}
	return nil
}

func (x *EventEMAScoresSet) GetScores() []string {
	if x != nil {
		return x.Scores
	}
	return nil
}

func (x *EventEMAScoresSet) GetIsActive() []bool {
	if x != nil {
		return x.IsActive
	}
	return nil
}

type EventListeningCoefficientsSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActorType    ActorType `protobuf:"varint,1,opt,name=actor_type,json=actorType,proto3,enum=emissions.v5.ActorType" json:"actor_type,omitempty"`
	TopicId      uint64    `protobuf:"varint,2,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	BlockHeight  int64     `protobuf:"varint,3,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	Addresses    []string  `protobuf:"bytes,4,rep,name=addresses,proto3" json:"addresses,omitempty"`
	Coefficients []string  `protobuf:"bytes,5,rep,name=coefficients,proto3" json:"coefficients,omitempty"`
}

func (x *EventListeningCoefficientsSet) Reset() {
	*x = EventListeningCoefficientsSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_events_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventListeningCoefficientsSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventListeningCoefficientsSet) ProtoMessage() {}

// Deprecated: Use EventListeningCoefficientsSet.ProtoReflect.Descriptor instead.
func (*EventListeningCoefficientsSet) Descriptor() ([]byte, []int) {
	return file_emissions_v5_events_proto_rawDescGZIP(), []int{8}
}

func (x *EventListeningCoefficientsSet) GetActorType() ActorType {
	if x != nil {
		return x.ActorType
	}
	return ActorType_ACTOR_TYPE_INFERER_UNSPECIFIED
}

func (x *EventListeningCoefficientsSet) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

func (x *EventListeningCoefficientsSet) GetBlockHeight() int64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

func (x *EventListeningCoefficientsSet) GetAddresses() []string {
	if x != nil {
		return x.Addresses
	}
	return nil
}

func (x *EventListeningCoefficientsSet) GetCoefficients() []string {
	if x != nil {
		return x.Coefficients
	}
	return nil
}

type EventInfererNetworkRegretSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId     uint64   `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	BlockHeight int64    `protobuf:"varint,2,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	Addresses   []string `protobuf:"bytes,3,rep,name=addresses,proto3" json:"addresses,omitempty"`
	Regrets     []string `protobuf:"bytes,4,rep,name=regrets,proto3" json:"regrets,omitempty"`
}

func (x *EventInfererNetworkRegretSet) Reset() {
	*x = EventInfererNetworkRegretSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_events_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventInfererNetworkRegretSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventInfererNetworkRegretSet) ProtoMessage() {}

// Deprecated: Use EventInfererNetworkRegretSet.ProtoReflect.Descriptor instead.
func (*EventInfererNetworkRegretSet) Descriptor() ([]byte, []int) {
	return file_emissions_v5_events_proto_rawDescGZIP(), []int{9}
}

func (x *EventInfererNetworkRegretSet) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

func (x *EventInfererNetworkRegretSet) GetBlockHeight() int64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

func (x *EventInfererNetworkRegretSet) GetAddresses() []string {
	if x != nil {
		return x.Addresses
	}
	return nil
}

func (x *EventInfererNetworkRegretSet) GetRegrets() []string {
	if x != nil {
		return x.Regrets
	}
	return nil
}

type EventForecasterNetworkRegretSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId     uint64   `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	BlockHeight int64    `protobuf:"varint,2,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	Addresses   []string `protobuf:"bytes,3,rep,name=addresses,proto3" json:"addresses,omitempty"`
	Regrets     []string `protobuf:"bytes,4,rep,name=regrets,proto3" json:"regrets,omitempty"`
}

func (x *EventForecasterNetworkRegretSet) Reset() {
	*x = EventForecasterNetworkRegretSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_events_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventForecasterNetworkRegretSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventForecasterNetworkRegretSet) ProtoMessage() {}

// Deprecated: Use EventForecasterNetworkRegretSet.ProtoReflect.Descriptor instead.
func (*EventForecasterNetworkRegretSet) Descriptor() ([]byte, []int) {
	return file_emissions_v5_events_proto_rawDescGZIP(), []int{10}
}

func (x *EventForecasterNetworkRegretSet) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

func (x *EventForecasterNetworkRegretSet) GetBlockHeight() int64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

func (x *EventForecasterNetworkRegretSet) GetAddresses() []string {
	if x != nil {
		return x.Addresses
	}
	return nil
}

func (x *EventForecasterNetworkRegretSet) GetRegrets() []string {
	if x != nil {
		return x.Regrets
	}
	return nil
}

type EventNaiveInfererNetworkRegretSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId     uint64   `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	BlockHeight int64    `protobuf:"varint,2,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	Addresses   []string `protobuf:"bytes,3,rep,name=addresses,proto3" json:"addresses,omitempty"`
	Regrets     []string `protobuf:"bytes,4,rep,name=regrets,proto3" json:"regrets,omitempty"`
}

func (x *EventNaiveInfererNetworkRegretSet) Reset() {
	*x = EventNaiveInfererNetworkRegretSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_events_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventNaiveInfererNetworkRegretSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventNaiveInfererNetworkRegretSet) ProtoMessage() {}

// Deprecated: Use EventNaiveInfererNetworkRegretSet.ProtoReflect.Descriptor instead.
func (*EventNaiveInfererNetworkRegretSet) Descriptor() ([]byte, []int) {
	return file_emissions_v5_events_proto_rawDescGZIP(), []int{11}
}

func (x *EventNaiveInfererNetworkRegretSet) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

func (x *EventNaiveInfererNetworkRegretSet) GetBlockHeight() int64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

func (x *EventNaiveInfererNetworkRegretSet) GetAddresses() []string {
	if x != nil {
		return x.Addresses
	}
	return nil
}

func (x *EventNaiveInfererNetworkRegretSet) GetRegrets() []string {
	if x != nil {
		return x.Regrets
	}
	return nil
}

type EventTopicInitialRegretSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId     uint64 `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	BlockHeight int64  `protobuf:"varint,2,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	Regret      string `protobuf:"bytes,3,opt,name=regret,proto3" json:"regret,omitempty"`
}

func (x *EventTopicInitialRegretSet) Reset() {
	*x = EventTopicInitialRegretSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v5_events_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventTopicInitialRegretSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventTopicInitialRegretSet) ProtoMessage() {}

// Deprecated: Use EventTopicInitialRegretSet.ProtoReflect.Descriptor instead.
func (*EventTopicInitialRegretSet) Descriptor() ([]byte, []int) {
	return file_emissions_v5_events_proto_rawDescGZIP(), []int{12}
}

func (x *EventTopicInitialRegretSet) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

func (x *EventTopicInitialRegretSet) GetBlockHeight() int64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

func (x *EventTopicInitialRegretSet) GetRegret() string {
	if x != nil {
		return x.Regret
	}
	return ""
}

var File_emissions_v5_events_proto protoreflect.FileDescriptor

var file_emissions_v5_events_proto_rawDesc = []byte{
	0x0a, 0x19, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x35, 0x2f, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x65, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x1a, 0x18, 0x65, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x33, 0x2f, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76,
	0x33, 0x2f, 0x72, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x14, 0x67, 0x6f, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x67, 0x6f, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf5, 0x01, 0x0a, 0x0e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x73, 0x53, 0x65, 0x74, 0x12, 0x36, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x6f,
	0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x65,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x41, 0x63, 0x74, 0x6f,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x4f, 0x0a, 0x06,
	0x73, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x42, 0x37, 0xc8, 0xde,
	0x1f, 0x00, 0xda, 0xde, 0x1f, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x61, 0x6c, 0x6c, 0x6f, 0x72, 0x61, 0x2d, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f,
	0x61, 0x6c, 0x6c, 0x6f, 0x72, 0x61, 0x2d, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x6d, 0x61, 0x74,
	0x68, 0x2e, 0x44, 0x65, 0x63, 0x52, 0x06, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x22, 0xfc, 0x01,
	0x0a, 0x13, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x53, 0x65,
	0x74, 0x74, 0x6c, 0x65, 0x64, 0x12, 0x36, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x65, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x09, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x51, 0x0a, 0x07, 0x72, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x42, 0x37, 0xc8, 0xde, 0x1f, 0x00,
	0xda, 0xde, 0x1f, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61,
	0x6c, 0x6c, 0x6f, 0x72, 0x61, 0x2d, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x61, 0x6c,
	0x6c, 0x6f, 0x72, 0x61, 0x2d, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x6d, 0x61, 0x74, 0x68, 0x2e,
	0x44, 0x65, 0x63, 0x52, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x22, 0x91, 0x01, 0x0a,
	0x13, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4c, 0x6f, 0x73,
	0x73, 0x53, 0x65, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x12,
	0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x12, 0x3c, 0x0a, 0x0c, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x62, 0x75, 0x6e, 0x64,
	0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x33, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x75, 0x6e,
	0x64, 0x6c, 0x65, 0x52, 0x0b, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65,
	0x22, 0x85, 0x01, 0x0a, 0x19, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61,
	0x73, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x74, 0x12, 0x19,
	0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x12, 0x4d, 0x0a, 0x05, 0x73, 0x63, 0x6f,
	0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x37, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde,
	0x1f, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x6c, 0x6c,
	0x6f, 0x72, 0x61, 0x2d, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x61, 0x6c, 0x6c, 0x6f,
	0x72, 0x61, 0x2d, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x6d, 0x61, 0x74, 0x68, 0x2e, 0x44, 0x65,
	0x63, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x22, 0x83, 0x01, 0x0a, 0x18, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x4c, 0x61, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d,
	0x69, 0x74, 0x53, 0x65, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64,
	0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x12, 0x29, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76,
	0x33, 0x2e, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x22, 0x84,
	0x01, 0x0a, 0x19, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x4c,
	0x61, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x53, 0x65, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07,
	0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x29, 0x0a, 0x05, 0x6e, 0x6f,
	0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x65, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x33, 0x2e, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x52, 0x05,
	0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x22, 0x86, 0x01, 0x0a, 0x14, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54,
	0x6f, 0x70, 0x69, 0x63, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x53, 0x65, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x04, 0x52, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x73, 0x12, 0x51, 0x0a, 0x07, 0x72,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x42, 0x37, 0xc8, 0xde,
	0x1f, 0x00, 0xda, 0xde, 0x1f, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x61, 0x6c, 0x6c, 0x6f, 0x72, 0x61, 0x2d, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f,
	0x61, 0x6c, 0x6c, 0x6f, 0x72, 0x61, 0x2d, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x6d, 0x61, 0x74,
	0x68, 0x2e, 0x44, 0x65, 0x63, 0x52, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x22, 0x88,
	0x02, 0x0a, 0x11, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x45, 0x4d, 0x41, 0x53, 0x63, 0x6f, 0x72, 0x65,
	0x73, 0x53, 0x65, 0x74, 0x12, 0x36, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x09, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07,
	0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x4f, 0x0a, 0x06, 0x73,
	0x63, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x42, 0x37, 0xc8, 0xde, 0x1f,
	0x00, 0xda, 0xde, 0x1f, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x61, 0x6c, 0x6c, 0x6f, 0x72, 0x61, 0x2d, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x61,
	0x6c, 0x6c, 0x6f, 0x72, 0x61, 0x2d, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x6d, 0x61, 0x74, 0x68,
	0x2e, 0x44, 0x65, 0x63, 0x52, 0x06, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x09,
	0x69, 0x73, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x06, 0x20, 0x03, 0x28, 0x08, 0x52,
	0x08, 0x69, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x22, 0x90, 0x02, 0x0a, 0x1d, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x65, 0x66,
	0x66, 0x69, 0x63, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x65, 0x74, 0x12, 0x36, 0x0a, 0x0a, 0x61,
	0x63, 0x74, 0x6f, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x17, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x2e, 0x41,
	0x63, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x12, 0x21,
	0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12,
	0x5b, 0x0a, 0x0c, 0x63, 0x6f, 0x65, 0x66, 0x66, 0x69, 0x63, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x09, 0x42, 0x37, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x2f, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x6c, 0x6c, 0x6f, 0x72, 0x61,
	0x2d, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x61, 0x6c, 0x6c, 0x6f, 0x72, 0x61, 0x2d,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x6d, 0x61, 0x74, 0x68, 0x2e, 0x44, 0x65, 0x63, 0x52, 0x0c,
	0x63, 0x6f, 0x65, 0x66, 0x66, 0x69, 0x63, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x22, 0xcd, 0x01, 0x0a,
	0x1c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x72, 0x4e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x67, 0x72, 0x65, 0x74, 0x53, 0x65, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x51, 0x0a, 0x07, 0x72, 0x65, 0x67,
	0x72, 0x65, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x42, 0x37, 0xc8, 0xde, 0x1f, 0x00,
	0xda, 0xde, 0x1f, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61,
	0x6c, 0x6c, 0x6f, 0x72, 0x61, 0x2d, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x61, 0x6c,
	0x6c, 0x6f, 0x72, 0x61, 0x2d, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x6d, 0x61, 0x74, 0x68, 0x2e,
	0x44, 0x65, 0x63, 0x52, 0x07, 0x72, 0x65, 0x67, 0x72, 0x65, 0x74, 0x73, 0x22, 0xd0, 0x01, 0x0a,
	0x1f, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x65, 0x72,
	0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x67, 0x72, 0x65, 0x74, 0x53, 0x65, 0x74,
	0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x51, 0x0a, 0x07,
	0x72, 0x65, 0x67, 0x72, 0x65, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x42, 0x37, 0xc8,
	0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x61, 0x6c, 0x6c, 0x6f, 0x72, 0x61, 0x2d, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x2f, 0x61, 0x6c, 0x6c, 0x6f, 0x72, 0x61, 0x2d, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x6d, 0x61,
	0x74, 0x68, 0x2e, 0x44, 0x65, 0x63, 0x52, 0x07, 0x72, 0x65, 0x67, 0x72, 0x65, 0x74, 0x73, 0x22,
	0xd2, 0x01, 0x0a, 0x21, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x69, 0x76, 0x65, 0x49, 0x6e,
	0x66, 0x65, 0x72, 0x65, 0x72, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x67, 0x72,
	0x65, 0x74, 0x53, 0x65, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64,
	0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65,
	0x73, 0x12, 0x51, 0x0a, 0x07, 0x72, 0x65, 0x67, 0x72, 0x65, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x09, 0x42, 0x37, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x2f, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x6c, 0x6c, 0x6f, 0x72, 0x61, 0x2d, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x61, 0x6c, 0x6c, 0x6f, 0x72, 0x61, 0x2d, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x2f, 0x6d, 0x61, 0x74, 0x68, 0x2e, 0x44, 0x65, 0x63, 0x52, 0x07, 0x72, 0x65, 0x67,
	0x72, 0x65, 0x74, 0x73, 0x22, 0xab, 0x01, 0x0a, 0x1a, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x6f,
	0x70, 0x69, 0x63, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x67, 0x72, 0x65, 0x74,
	0x53, 0x65, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x12, 0x21,
	0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x12, 0x4f, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x72, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x37, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x6c, 0x6c, 0x6f, 0x72, 0x61, 0x2d, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x61, 0x6c, 0x6c, 0x6f, 0x72, 0x61, 0x2d, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x2f, 0x6d, 0x61, 0x74, 0x68, 0x2e, 0x44, 0x65, 0x63, 0x52, 0x06, 0x72, 0x65, 0x67, 0x72,
	0x65, 0x74, 0x2a, 0x62, 0x0a, 0x09, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x22, 0x0a, 0x1e, 0x41, 0x43, 0x54, 0x4f, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x4e,
	0x46, 0x45, 0x52, 0x45, 0x52, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x41, 0x43, 0x54, 0x4f, 0x52, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x46, 0x4f, 0x52, 0x45, 0x43, 0x41, 0x53, 0x54, 0x45, 0x52, 0x10, 0x01, 0x12, 0x16,
	0x0a, 0x12, 0x41, 0x43, 0x54, 0x4f, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x52, 0x45, 0x50,
	0x55, 0x54, 0x45, 0x52, 0x10, 0x02, 0x42, 0xc1, 0x01, 0x0a, 0x10, 0x63, 0x6f, 0x6d, 0x2e, 0x65,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x35, 0x42, 0x0b, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x4f, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x6c, 0x6c, 0x6f, 0x72, 0x61, 0x2d, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x61, 0x6c, 0x6c, 0x6f, 0x72, 0x61, 0x2d, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x2f, 0x78, 0x2f, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x35, 0x3b,
	0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x76, 0x35, 0xa2, 0x02, 0x03, 0x45, 0x58,
	0x58, 0xaa, 0x02, 0x0c, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x56, 0x35,
	0xca, 0x02, 0x0c, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x5c, 0x56, 0x35, 0xe2,
	0x02, 0x18, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x5c, 0x56, 0x35, 0x5c, 0x47,
	0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0d, 0x45, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x3a, 0x3a, 0x56, 0x35, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_emissions_v5_events_proto_rawDescOnce sync.Once
	file_emissions_v5_events_proto_rawDescData = file_emissions_v5_events_proto_rawDesc
)

func file_emissions_v5_events_proto_rawDescGZIP() []byte {
	file_emissions_v5_events_proto_rawDescOnce.Do(func() {
		file_emissions_v5_events_proto_rawDescData = protoimpl.X.CompressGZIP(file_emissions_v5_events_proto_rawDescData)
	})
	return file_emissions_v5_events_proto_rawDescData
}

var file_emissions_v5_events_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_emissions_v5_events_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_emissions_v5_events_proto_goTypes = []interface{}{
	(ActorType)(0),                            // 0: emissions.v5.ActorType
	(*EventScoresSet)(nil),                    // 1: emissions.v5.EventScoresSet
	(*EventRewardsSettled)(nil),               // 2: emissions.v5.EventRewardsSettled
	(*EventNetworkLossSet)(nil),               // 3: emissions.v5.EventNetworkLossSet
	(*EventForecastTaskScoreSet)(nil),         // 4: emissions.v5.EventForecastTaskScoreSet
	(*EventWorkerLastCommitSet)(nil),          // 5: emissions.v5.EventWorkerLastCommitSet
	(*EventReputerLastCommitSet)(nil),         // 6: emissions.v5.EventReputerLastCommitSet
	(*EventTopicRewardsSet)(nil),              // 7: emissions.v5.EventTopicRewardsSet
	(*EventEMAScoresSet)(nil),                 // 8: emissions.v5.EventEMAScoresSet
	(*EventListeningCoefficientsSet)(nil),     // 9: emissions.v5.EventListeningCoefficientsSet
	(*EventInfererNetworkRegretSet)(nil),      // 10: emissions.v5.EventInfererNetworkRegretSet
	(*EventForecasterNetworkRegretSet)(nil),   // 11: emissions.v5.EventForecasterNetworkRegretSet
	(*EventNaiveInfererNetworkRegretSet)(nil), // 12: emissions.v5.EventNaiveInfererNetworkRegretSet
	(*EventTopicInitialRegretSet)(nil),        // 13: emissions.v5.EventTopicInitialRegretSet
	(*v3.ValueBundle)(nil),                    // 14: emissions.v3.ValueBundle
	(*v3.Nonce)(nil),                          // 15: emissions.v3.Nonce
}
var file_emissions_v5_events_proto_depIdxs = []int32{
	0,  // 0: emissions.v5.EventScoresSet.actor_type:type_name -> emissions.v5.ActorType
	0,  // 1: emissions.v5.EventRewardsSettled.actor_type:type_name -> emissions.v5.ActorType
	14, // 2: emissions.v5.EventNetworkLossSet.value_bundle:type_name -> emissions.v3.ValueBundle
	15, // 3: emissions.v5.EventWorkerLastCommitSet.nonce:type_name -> emissions.v3.Nonce
	15, // 4: emissions.v5.EventReputerLastCommitSet.nonce:type_name -> emissions.v3.Nonce
	0,  // 5: emissions.v5.EventEMAScoresSet.actor_type:type_name -> emissions.v5.ActorType
	0,  // 6: emissions.v5.EventListeningCoefficientsSet.actor_type:type_name -> emissions.v5.ActorType
	7,  // [7:7] is the sub-list for method output_type
	7,  // [7:7] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_emissions_v5_events_proto_init() }
func file_emissions_v5_events_proto_init() {
	if File_emissions_v5_events_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_emissions_v5_events_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventScoresSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_events_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventRewardsSettled); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_events_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventNetworkLossSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_events_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventForecastTaskScoreSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_events_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventWorkerLastCommitSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_events_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventReputerLastCommitSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_events_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventTopicRewardsSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_events_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventEMAScoresSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_events_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventListeningCoefficientsSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_events_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventInfererNetworkRegretSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_events_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventForecasterNetworkRegretSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_events_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventNaiveInfererNetworkRegretSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v5_events_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventTopicInitialRegretSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_emissions_v5_events_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_emissions_v5_events_proto_goTypes,
		DependencyIndexes: file_emissions_v5_events_proto_depIdxs,
		EnumInfos:         file_emissions_v5_events_proto_enumTypes,
		MessageInfos:      file_emissions_v5_events_proto_msgTypes,
	}.Build()
	File_emissions_v5_events_proto = out.File
	file_emissions_v5_events_proto_rawDesc = nil
	file_emissions_v5_events_proto_goTypes = nil
	file_emissions_v5_events_proto_depIdxs = nil
}

// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package emissionsv3

import (
	fmt "fmt"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	_ "github.com/cosmos/gogoproto/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	io "io"
	reflect "reflect"
	sync "sync"
)

var (
	md_WorkerAttributedValue        protoreflect.MessageDescriptor
	fd_WorkerAttributedValue_worker protoreflect.FieldDescriptor
	fd_WorkerAttributedValue_value  protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v3_reputer_proto_init()
	md_WorkerAttributedValue = File_emissions_v3_reputer_proto.Messages().ByName("WorkerAttributedValue")
	fd_WorkerAttributedValue_worker = md_WorkerAttributedValue.Fields().ByName("worker")
	fd_WorkerAttributedValue_value = md_WorkerAttributedValue.Fields().ByName("value")
}

var _ protoreflect.Message = (*fastReflection_WorkerAttributedValue)(nil)

type fastReflection_WorkerAttributedValue WorkerAttributedValue

func (x *WorkerAttributedValue) ProtoReflect() protoreflect.Message {
	return (*fastReflection_WorkerAttributedValue)(x)
}

func (x *WorkerAttributedValue) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v3_reputer_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_WorkerAttributedValue_messageType fastReflection_WorkerAttributedValue_messageType
var _ protoreflect.MessageType = fastReflection_WorkerAttributedValue_messageType{}

type fastReflection_WorkerAttributedValue_messageType struct{}

func (x fastReflection_WorkerAttributedValue_messageType) Zero() protoreflect.Message {
	return (*fastReflection_WorkerAttributedValue)(nil)
}
func (x fastReflection_WorkerAttributedValue_messageType) New() protoreflect.Message {
	return new(fastReflection_WorkerAttributedValue)
}
func (x fastReflection_WorkerAttributedValue_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_WorkerAttributedValue
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_WorkerAttributedValue) Descriptor() protoreflect.MessageDescriptor {
	return md_WorkerAttributedValue
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_WorkerAttributedValue) Type() protoreflect.MessageType {
	return _fastReflection_WorkerAttributedValue_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_WorkerAttributedValue) New() protoreflect.Message {
	return new(fastReflection_WorkerAttributedValue)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_WorkerAttributedValue) Interface() protoreflect.ProtoMessage {
	return (*WorkerAttributedValue)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_WorkerAttributedValue) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Worker != "" {
		value := protoreflect.ValueOfString(x.Worker)
		if !f(fd_WorkerAttributedValue_worker, value) {
			return
		}
	}
	if x.Value != "" {
		value := protoreflect.ValueOfString(x.Value)
		if !f(fd_WorkerAttributedValue_value, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_WorkerAttributedValue) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v3.WorkerAttributedValue.worker":
		return x.Worker != ""
	case "emissions.v3.WorkerAttributedValue.value":
		return x.Value != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v3.WorkerAttributedValue"))
		}
		panic(fmt.Errorf("message emissions.v3.WorkerAttributedValue does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_WorkerAttributedValue) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v3.WorkerAttributedValue.worker":
		x.Worker = ""
	case "emissions.v3.WorkerAttributedValue.value":
		x.Value = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v3.WorkerAttributedValue"))
		}
		panic(fmt.Errorf("message emissions.v3.WorkerAttributedValue does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_WorkerAttributedValue) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v3.WorkerAttributedValue.worker":
		value := x.Worker
		return protoreflect.ValueOfString(value)
	case "emissions.v3.WorkerAttributedValue.value":
		value := x.Value
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v3.WorkerAttributedValue"))
		}
		panic(fmt.Errorf("message emissions.v3.WorkerAttributedValue does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_WorkerAttributedValue) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v3.WorkerAttributedValue.worker":
		x.Worker = value.Interface().(string)
	case "emissions.v3.WorkerAttributedValue.value":
		x.Value = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v3.WorkerAttributedValue"))
		}
		panic(fmt.Errorf("message emissions.v3.WorkerAttributedValue does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_WorkerAttributedValue) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v3.WorkerAttributedValue.worker":
		panic(fmt.Errorf("field worker of message emissions.v3.WorkerAttributedValue is not mutable"))
	case "emissions.v3.WorkerAttributedValue.value":
		panic(fmt.Errorf("field value of message emissions.v3.WorkerAttributedValue is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v3.WorkerAttributedValue"))
		}
		panic(fmt.Errorf("message emissions.v3.WorkerAttributedValue does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_WorkerAttributedValue) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v3.WorkerAttributedValue.worker":
		return protoreflect.ValueOfString("")
	case "emissions.v3.WorkerAttributedValue.value":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v3.WorkerAttributedValue"))
		}
		panic(fmt.Errorf("message emissions.v3.WorkerAttributedValue does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_WorkerAttributedValue) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v3.WorkerAttributedValue", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_WorkerAttributedValue) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_WorkerAttributedValue) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_WorkerAttributedValue) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_WorkerAttributedValue) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*WorkerAttributedValue)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Worker)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Value)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*WorkerAttributedValue)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Value) > 0 {
			i -= len(x.Value)
			copy(dAtA[i:], x.Value)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Value)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Worker) > 0 {
			i -= len(x.Worker)
			copy(dAtA[i:], x.Worker)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Worker)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*WorkerAttributedValue)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: WorkerAttributedValue: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: WorkerAttributedValue: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Worker", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Worker = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Value", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Value = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_WithheldWorkerAttributedValue        protoreflect.MessageDescriptor
	fd_WithheldWorkerAttributedValue_worker protoreflect.FieldDescriptor
	fd_WithheldWorkerAttributedValue_value  protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v3_reputer_proto_init()
	md_WithheldWorkerAttributedValue = File_emissions_v3_reputer_proto.Messages().ByName("WithheldWorkerAttributedValue")
	fd_WithheldWorkerAttributedValue_worker = md_WithheldWorkerAttributedValue.Fields().ByName("worker")
	fd_WithheldWorkerAttributedValue_value = md_WithheldWorkerAttributedValue.Fields().ByName("value")
}

var _ protoreflect.Message = (*fastReflection_WithheldWorkerAttributedValue)(nil)

type fastReflection_WithheldWorkerAttributedValue WithheldWorkerAttributedValue

func (x *WithheldWorkerAttributedValue) ProtoReflect() protoreflect.Message {
	return (*fastReflection_WithheldWorkerAttributedValue)(x)
}

func (x *WithheldWorkerAttributedValue) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v3_reputer_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_WithheldWorkerAttributedValue_messageType fastReflection_WithheldWorkerAttributedValue_messageType
var _ protoreflect.MessageType = fastReflection_WithheldWorkerAttributedValue_messageType{}

type fastReflection_WithheldWorkerAttributedValue_messageType struct{}

func (x fastReflection_WithheldWorkerAttributedValue_messageType) Zero() protoreflect.Message {
	return (*fastReflection_WithheldWorkerAttributedValue)(nil)
}
func (x fastReflection_WithheldWorkerAttributedValue_messageType) New() protoreflect.Message {
	return new(fastReflection_WithheldWorkerAttributedValue)
}
func (x fastReflection_WithheldWorkerAttributedValue_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_WithheldWorkerAttributedValue
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_WithheldWorkerAttributedValue) Descriptor() protoreflect.MessageDescriptor {
	return md_WithheldWorkerAttributedValue
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_WithheldWorkerAttributedValue) Type() protoreflect.MessageType {
	return _fastReflection_WithheldWorkerAttributedValue_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_WithheldWorkerAttributedValue) New() protoreflect.Message {
	return new(fastReflection_WithheldWorkerAttributedValue)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_WithheldWorkerAttributedValue) Interface() protoreflect.ProtoMessage {
	return (*WithheldWorkerAttributedValue)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_WithheldWorkerAttributedValue) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Worker != "" {
		value := protoreflect.ValueOfString(x.Worker)
		if !f(fd_WithheldWorkerAttributedValue_worker, value) {
			return
		}
	}
	if x.Value != "" {
		value := protoreflect.ValueOfString(x.Value)
		if !f(fd_WithheldWorkerAttributedValue_value, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_WithheldWorkerAttributedValue) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v3.WithheldWorkerAttributedValue.worker":
		return x.Worker != ""
	case "emissions.v3.WithheldWorkerAttributedValue.value":
		return x.Value != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v3.WithheldWorkerAttributedValue"))
		}
		panic(fmt.Errorf("message emissions.v3.WithheldWorkerAttributedValue does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_WithheldWorkerAttributedValue) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v3.WithheldWorkerAttributedValue.worker":
		x.Worker = ""
	case "emissions.v3.WithheldWorkerAttributedValue.value":
		x.Value = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v3.WithheldWorkerAttributedValue"))
		}
		panic(fmt.Errorf("message emissions.v3.WithheldWorkerAttributedValue does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_WithheldWorkerAttributedValue) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v3.WithheldWorkerAttributedValue.worker":
		value := x.Worker
		return protoreflect.ValueOfString(value)
	case "emissions.v3.WithheldWorkerAttributedValue.value":
		value := x.Value
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v3.WithheldWorkerAttributedValue"))
		}
		panic(fmt.Errorf("message emissions.v3.WithheldWorkerAttributedValue does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_WithheldWorkerAttributedValue) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v3.WithheldWorkerAttributedValue.worker":
		x.Worker = value.Interface().(string)
	case "emissions.v3.WithheldWorkerAttributedValue.value":
		x.Value = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v3.WithheldWorkerAttributedValue"))
		}
		panic(fmt.Errorf("message emissions.v3.WithheldWorkerAttributedValue does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_WithheldWorkerAttributedValue) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v3.WithheldWorkerAttributedValue.worker":
		panic(fmt.Errorf("field worker of message emissions.v3.WithheldWorkerAttributedValue is not mutable"))
	case "emissions.v3.WithheldWorkerAttributedValue.value":
		panic(fmt.Errorf("field value of message emissions.v3.WithheldWorkerAttributedValue is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v3.WithheldWorkerAttributedValue"))
		}
		panic(fmt.Errorf("message emissions.v3.WithheldWorkerAttributedValue does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_WithheldWorkerAttributedValue) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v3.WithheldWorkerAttributedValue.worker":
		return protoreflect.ValueOfString("")
	case "emissions.v3.WithheldWorkerAttributedValue.value":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v3.WithheldWorkerAttributedValue"))
		}
		panic(fmt.Errorf("message emissions.v3.WithheldWorkerAttributedValue does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_WithheldWorkerAttributedValue) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v3.WithheldWorkerAttributedValue", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_WithheldWorkerAttributedValue) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_WithheldWorkerAttributedValue) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_WithheldWorkerAttributedValue) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_WithheldWorkerAttributedValue) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*WithheldWorkerAttributedValue)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Worker)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Value)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*WithheldWorkerAttributedValue)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Value) > 0 {
			i -= len(x.Value)
			copy(dAtA[i:], x.Value)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Value)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Worker) > 0 {
			i -= len(x.Worker)
			copy(dAtA[i:], x.Worker)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Worker)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*WithheldWorkerAttributedValue)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: WithheldWorkerAttributedValue: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: WithheldWorkerAttributedValue: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Worker", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Worker = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Value", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Value = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_OneOutInfererForecasterValues_4_list)(nil)

type _OneOutInfererForecasterValues_4_list struct {
	list *[]*WithheldWorkerAttributedValue
}

func (x *_OneOutInfererForecasterValues_4_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_OneOutInfererForecasterValues_4_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_OneOutInfererForecasterValues_4_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*WithheldWorkerAttributedValue)
	(*x.list)[i] = concreteValue
}

func (x *_OneOutInfererForecasterValues_4_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*WithheldWorkerAttributedValue)
	*x.list = append(*x.list, concreteValue)
}

func (x *_OneOutInfererForecasterValues_4_list) AppendMutable() protoreflect.Value {
	v := new(WithheldWorkerAttributedValue)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_OneOutInfererForecasterValues_4_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_OneOutInfererForecasterValues_4_list) NewElement() protoreflect.Value {
	v := new(WithheldWorkerAttributedValue)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_OneOutInfererForecasterValues_4_list) IsValid() bool {
	return x.list != nil
}

var (
	md_OneOutInfererForecasterValues                        protoreflect.MessageDescriptor
	fd_OneOutInfererForecasterValues_forecaster             protoreflect.FieldDescriptor
	fd_OneOutInfererForecasterValues_one_out_inferer_values protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v3_reputer_proto_init()
	md_OneOutInfererForecasterValues = File_emissions_v3_reputer_proto.Messages().ByName("OneOutInfererForecasterValues")
	fd_OneOutInfererForecasterValues_forecaster = md_OneOutInfererForecasterValues.Fields().ByName("forecaster")
	fd_OneOutInfererForecasterValues_one_out_inferer_values = md_OneOutInfererForecasterValues.Fields().ByName("one_out_inferer_values")
}

var _ protoreflect.Message = (*fastReflection_OneOutInfererForecasterValues)(nil)

type fastReflection_OneOutInfererForecasterValues OneOutInfererForecasterValues

func (x *OneOutInfererForecasterValues) ProtoReflect() protoreflect.Message {
	return (*fastReflection_OneOutInfererForecasterValues)(x)
}

func (x *OneOutInfererForecasterValues) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v3_reputer_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_OneOutInfererForecasterValues_messageType fastReflection_OneOutInfererForecasterValues_messageType
var _ protoreflect.MessageType = fastReflection_OneOutInfererForecasterValues_messageType{}

type fastReflection_OneOutInfererForecasterValues_messageType struct{}

func (x fastReflection_OneOutInfererForecasterValues_messageType) Zero() protoreflect.Message {
	return (*fastReflection_OneOutInfererForecasterValues)(nil)
}
func (x fastReflection_OneOutInfererForecasterValues_messageType) New() protoreflect.Message {
	return new(fastReflection_OneOutInfererForecasterValues)
}
func (x fastReflection_OneOutInfererForecasterValues_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_OneOutInfererForecasterValues
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_OneOutInfererForecasterValues) Descriptor() protoreflect.MessageDescriptor {
	return md_OneOutInfererForecasterValues
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_OneOutInfererForecasterValues) Type() protoreflect.MessageType {
	return _fastReflection_OneOutInfererForecasterValues_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_OneOutInfererForecasterValues) New() protoreflect.Message {
	return new(fastReflection_OneOutInfererForecasterValues)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_OneOutInfererForecasterValues) Interface() protoreflect.ProtoMessage {
	return (*OneOutInfererForecasterValues)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_OneOutInfererForecasterValues) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Forecaster != "" {
		value := protoreflect.ValueOfString(x.Forecaster)
		if !f(fd_OneOutInfererForecasterValues_forecaster, value) {
			return
		}
	}
	if len(x.OneOutInfererValues) != 0 {
		value := protoreflect.ValueOfList(&_OneOutInfererForecasterValues_4_list{list: &x.OneOutInfererValues})
		if !f(fd_OneOutInfererForecasterValues_one_out_inferer_values, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_OneOutInfererForecasterValues) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v3.OneOutInfererForecasterValues.forecaster":
		return x.Forecaster != ""
	case "emissions.v3.OneOutInfererForecasterValues.one_out_inferer_values":
		return len(x.OneOutInfererValues) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v3.OneOutInfererForecasterValues"))
		}
		panic(fmt.Errorf("message emissions.v3.OneOutInfererForecasterValues does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_OneOutInfererForecasterValues) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v3.OneOutInfererForecasterValues.forecaster":
		x.Forecaster = ""
	case "emissions.v3.OneOutInfererForecasterValues.one_out_inferer_values":
		x.OneOutInfererValues = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v3.OneOutInfererForecasterValues"))
		}
		panic(fmt.Errorf("message emissions.v3.OneOutInfererForecasterValues does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_OneOutInfererForecasterValues) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v3.OneOutInfererForecasterValues.forecaster":
		value := x.Forecaster
		return protoreflect.ValueOfString(value)
	case "emissions.v3.OneOutInfererForecasterValues.one_out_inferer_values":
		if len(x.OneOutInfererValues) == 0 {
			return protoreflect.ValueOfList(&_OneOutInfererForecasterValues_4_list{})
		}
		listValue := &_OneOutInfererForecasterValues_4_list{list: &x.OneOutInfererValues}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v3.OneOutInfererForecasterValues"))
		}
		panic(fmt.Errorf("message emissions.v3.OneOutInfererForecasterValues does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_OneOutInfererForecasterValues) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v3.OneOutInfererForecasterValues.forecaster":
		x.Forecaster = value.Interface().(string)
	case "emissions.v3.OneOutInfererForecasterValues.one_out_inferer_values":
		lv := value.List()
		clv := lv.(*_OneOutInfererForecasterValues_4_list)
		x.OneOutInfererValues = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v3.OneOutInfererForecasterValues"))
		}
		panic(fmt.Errorf("message emissions.v3.OneOutInfererForecasterValues does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_OneOutInfererForecasterValues) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v3.OneOutInfererForecasterValues.one_out_inferer_values":
		if x.OneOutInfererValues == nil {
			x.OneOutInfererValues = []*WithheldWorkerAttributedValue{}
		}
		value := &_OneOutInfererForecasterValues_4_list{list: &x.OneOutInfererValues}
		return protoreflect.ValueOfList(value)
	case "emissions.v3.OneOutInfererForecasterValues.forecaster":
		panic(fmt.Errorf("field forecaster of message emissions.v3.OneOutInfererForecasterValues is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v3.OneOutInfererForecasterValues"))
		}
		panic(fmt.Errorf("message emissions.v3.OneOutInfererForecasterValues does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_OneOutInfererForecasterValues) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v3.OneOutInfererForecasterValues.forecaster":
		return protoreflect.ValueOfString("")
	case "emissions.v3.OneOutInfererForecasterValues.one_out_inferer_values":
		list := []*WithheldWorkerAttributedValue{}
		return protoreflect.ValueOfList(&_OneOutInfererForecasterValues_4_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v3.OneOutInfererForecasterValues"))
		}
		panic(fmt.Errorf("message emissions.v3.OneOutInfererForecasterValues does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_OneOutInfererForecasterValues) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v3.OneOutInfererForecasterValues", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_OneOutInfererForecasterValues) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_OneOutInfererForecasterValues) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_OneOutInfererForecasterValues) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_OneOutInfererForecasterValues) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*OneOutInfererForecasterValues)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Forecaster)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.OneOutInfererValues) > 0 {
			for _, e := range x.OneOutInfererValues {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*OneOutInfererForecasterValues)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.OneOutInfererValues) > 0 {
			for iNdEx := len(x.OneOutInfererValues) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.OneOutInfererValues[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x22
			}
		}
		if len(x.Forecaster) > 0 {
			i -= len(x.Forecaster)
			copy(dAtA[i:], x.Forecaster)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Forecaster)))
			i--
			dAtA[i] = 0x1a
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*OneOutInfererForecasterValues)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: OneOutInfererForecasterValues: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: OneOutInfererForecasterValues: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Forecaster", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Forecaster = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field OneOutInfererValues", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.OneOutInfererValues = append(x.OneOutInfererValues, &WithheldWorkerAttributedValue{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.OneOutInfererValues[len(x.OneOutInfererValues)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_ValueBundle_6_list)(nil)

type _ValueBundle_6_list struct {
	list *[]*WorkerAttributedValue
}

func (x *_ValueBundle_6_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_ValueBundle_6_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_ValueBundle_6_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*WorkerAttributedValue)
	(*x.list)[i] = concreteValue
}

func (x *_ValueBundle_6_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*WorkerAttributedValue)
	*x.list = append(*x.list, concreteValue)
}

func (x *_ValueBundle_6_list) AppendMutable() protoreflect.Value {
	v := new(WorkerAttributedValue)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_ValueBundle_6_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_ValueBundle_6_list) NewElement() protoreflect.Value {
	v := new(WorkerAttributedValue)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_ValueBundle_6_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_ValueBundle_7_list)(nil)

type _ValueBundle_7_list struct {
	list *[]*WorkerAttributedValue
}

func (x *_ValueBundle_7_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_ValueBundle_7_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_ValueBundle_7_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*WorkerAttributedValue)
	(*x.list)[i] = concreteValue
}

func (x *_ValueBundle_7_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*WorkerAttributedValue)
	*x.list = append(*x.list, concreteValue)
}

func (x *_ValueBundle_7_list) AppendMutable() protoreflect.Value {
	v := new(WorkerAttributedValue)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_ValueBundle_7_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_ValueBundle_7_list) NewElement() protoreflect.Value {
	v := new(WorkerAttributedValue)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_ValueBundle_7_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_ValueBundle_9_list)(nil)

type _ValueBundle_9_list struct {
	list *[]*WithheldWorkerAttributedValue
}

func (x *_ValueBundle_9_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_ValueBundle_9_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_ValueBundle_9_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*WithheldWorkerAttributedValue)
	(*x.list)[i] = concreteValue
}

func (x *_ValueBundle_9_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*WithheldWorkerAttributedValue)
	*x.list = append(*x.list, concreteValue)
}

func (x *_ValueBundle_9_list) AppendMutable() protoreflect.Value {
	v := new(WithheldWorkerAttributedValue)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_ValueBundle_9_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_ValueBundle_9_list) NewElement() protoreflect.Value {
	v := new(WithheldWorkerAttributedValue)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_ValueBundle_9_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_ValueBundle_10_list)(nil)

type _ValueBundle_10_list struct {
	list *[]*WithheldWorkerAttributedValue
}

func (x *_ValueBundle_10_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_ValueBundle_10_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_ValueBundle_10_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*WithheldWorkerAttributedValue)
	(*x.list)[i] = concreteValue
}

func (x *_ValueBundle_10_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*WithheldWorkerAttributedValue)
	*x.list = append(*x.list, concreteValue)
}

func (x *_ValueBundle_10_list) AppendMutable() protoreflect.Value {
	v := new(WithheldWorkerAttributedValue)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_ValueBundle_10_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_ValueBundle_10_list) NewElement() protoreflect.Value {
	v := new(WithheldWorkerAttributedValue)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_ValueBundle_10_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_ValueBundle_11_list)(nil)

type _ValueBundle_11_list struct {
	list *[]*WorkerAttributedValue
}

func (x *_ValueBundle_11_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_ValueBundle_11_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_ValueBundle_11_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*WorkerAttributedValue)
	(*x.list)[i] = concreteValue
}

func (x *_ValueBundle_11_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*WorkerAttributedValue)
	*x.list = append(*x.list, concreteValue)
}

func (x *_ValueBundle_11_list) AppendMutable() protoreflect.Value {
	v := new(WorkerAttributedValue)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_ValueBundle_11_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_ValueBundle_11_list) NewElement() protoreflect.Value {
	v := new(WorkerAttributedValue)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_ValueBundle_11_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_ValueBundle_12_list)(nil)

type _ValueBundle_12_list struct {
	list *[]*OneOutInfererForecasterValues
}

func (x *_ValueBundle_12_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_ValueBundle_12_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_ValueBundle_12_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*OneOutInfererForecasterValues)
	(*x.list)[i] = concreteValue
}

func (x *_ValueBundle_12_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*OneOutInfererForecasterValues)
	*x.list = append(*x.list, concreteValue)
}

func (x *_ValueBundle_12_list) AppendMutable() protoreflect.Value {
	v := new(OneOutInfererForecasterValues)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_ValueBundle_12_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_ValueBundle_12_list) NewElement() protoreflect.Value {
	v := new(OneOutInfererForecasterValues)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_ValueBundle_12_list) IsValid() bool {
	return x.list != nil
}

var (
	md_ValueBundle                                   protoreflect.MessageDescriptor
	fd_ValueBundle_topic_id                          protoreflect.FieldDescriptor
	fd_ValueBundle_reputer_request_nonce             protoreflect.FieldDescriptor
	fd_ValueBundle_reputer                           protoreflect.FieldDescriptor
	fd_ValueBundle_extra_data                        protoreflect.FieldDescriptor
	fd_ValueBundle_combined_value                    protoreflect.FieldDescriptor
	fd_ValueBundle_inferer_values                    protoreflect.FieldDescriptor
	fd_ValueBundle_forecaster_values                 protoreflect.FieldDescriptor
	fd_ValueBundle_naive_value                       protoreflect.FieldDescriptor
	fd_ValueBundle_one_out_inferer_values            protoreflect.FieldDescriptor
	fd_ValueBundle_one_out_forecaster_values         protoreflect.FieldDescriptor
	fd_ValueBundle_one_in_forecaster_values          protoreflect.FieldDescriptor
	fd_ValueBundle_one_out_inferer_forecaster_values protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v3_reputer_proto_init()
	md_ValueBundle = File_emissions_v3_reputer_proto.Messages().ByName("ValueBundle")
	fd_ValueBundle_topic_id = md_ValueBundle.Fields().ByName("topic_id")
	fd_ValueBundle_reputer_request_nonce = md_ValueBundle.Fields().ByName("reputer_request_nonce")
	fd_ValueBundle_reputer = md_ValueBundle.Fields().ByName("reputer")
	fd_ValueBundle_extra_data = md_ValueBundle.Fields().ByName("extra_data")
	fd_ValueBundle_combined_value = md_ValueBundle.Fields().ByName("combined_value")
	fd_ValueBundle_inferer_values = md_ValueBundle.Fields().ByName("inferer_values")
	fd_ValueBundle_forecaster_values = md_ValueBundle.Fields().ByName("forecaster_values")
	fd_ValueBundle_naive_value = md_ValueBundle.Fields().ByName("naive_value")
	fd_ValueBundle_one_out_inferer_values = md_ValueBundle.Fields().ByName("one_out_inferer_values")
	fd_ValueBundle_one_out_forecaster_values = md_ValueBundle.Fields().ByName("one_out_forecaster_values")
	fd_ValueBundle_one_in_forecaster_values = md_ValueBundle.Fields().ByName("one_in_forecaster_values")
	fd_ValueBundle_one_out_inferer_forecaster_values = md_ValueBundle.Fields().ByName("one_out_inferer_forecaster_values")
}

var _ protoreflect.Message = (*fastReflection_ValueBundle)(nil)

type fastReflection_ValueBundle ValueBundle

func (x *ValueBundle) ProtoReflect() protoreflect.Message {
	return (*fastReflection_ValueBundle)(x)
}

func (x *ValueBundle) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v3_reputer_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_ValueBundle_messageType fastReflection_ValueBundle_messageType
var _ protoreflect.MessageType = fastReflection_ValueBundle_messageType{}

type fastReflection_ValueBundle_messageType struct{}

func (x fastReflection_ValueBundle_messageType) Zero() protoreflect.Message {
	return (*fastReflection_ValueBundle)(nil)
}
func (x fastReflection_ValueBundle_messageType) New() protoreflect.Message {
	return new(fastReflection_ValueBundle)
}
func (x fastReflection_ValueBundle_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_ValueBundle
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_ValueBundle) Descriptor() protoreflect.MessageDescriptor {
	return md_ValueBundle
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_ValueBundle) Type() protoreflect.MessageType {
	return _fastReflection_ValueBundle_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_ValueBundle) New() protoreflect.Message {
	return new(fastReflection_ValueBundle)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_ValueBundle) Interface() protoreflect.ProtoMessage {
	return (*ValueBundle)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_ValueBundle) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TopicId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TopicId)
		if !f(fd_ValueBundle_topic_id, value) {
			return
		}
	}
	if x.ReputerRequestNonce != nil {
		value := protoreflect.ValueOfMessage(x.ReputerRequestNonce.ProtoReflect())
		if !f(fd_ValueBundle_reputer_request_nonce, value) {
			return
		}
	}
	if x.Reputer != "" {
		value := protoreflect.ValueOfString(x.Reputer)
		if !f(fd_ValueBundle_reputer, value) {
			return
		}
	}
	if len(x.ExtraData) != 0 {
		value := protoreflect.ValueOfBytes(x.ExtraData)
		if !f(fd_ValueBundle_extra_data, value) {
			return
		}
	}
	if x.CombinedValue != "" {
		value := protoreflect.ValueOfString(x.CombinedValue)
		if !f(fd_ValueBundle_combined_value, value) {
			return
		}
	}
	if len(x.InfererValues) != 0 {
		value := protoreflect.ValueOfList(&_ValueBundle_6_list{list: &x.InfererValues})
		if !f(fd_ValueBundle_inferer_values, value) {
			return
		}
	}
	if len(x.ForecasterValues) != 0 {
		value := protoreflect.ValueOfList(&_ValueBundle_7_list{list: &x.ForecasterValues})
		if !f(fd_ValueBundle_forecaster_values, value) {
			return
		}
	}
	if x.NaiveValue != "" {
		value := protoreflect.ValueOfString(x.NaiveValue)
		if !f(fd_ValueBundle_naive_value, value) {
			return
		}
	}
	if len(x.OneOutInfererValues) != 0 {
		value := protoreflect.ValueOfList(&_ValueBundle_9_list{list: &x.OneOutInfererValues})
		if !f(fd_ValueBundle_one_out_inferer_values, value) {
			return
		}
	}
	if len(x.OneOutForecasterValues) != 0 {
		value := protoreflect.ValueOfList(&_ValueBundle_10_list{list: &x.OneOutForecasterValues})
		if !f(fd_ValueBundle_one_out_forecaster_values, value) {
			return
		}
	}
	if len(x.OneInForecasterValues) != 0 {
		value := protoreflect.ValueOfList(&_ValueBundle_11_list{list: &x.OneInForecasterValues})
		if !f(fd_ValueBundle_one_in_forecaster_values, value) {
			return
		}
	}
	if len(x.OneOutInfererForecasterValues) != 0 {
		value := protoreflect.ValueOfList(&_ValueBundle_12_list{list: &x.OneOutInfererForecasterValues})
		if !f(fd_ValueBundle_one_out_inferer_forecaster_values, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_ValueBundle) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v3.ValueBundle.topic_id":
		return x.TopicId != uint64(0)
	case "emissions.v3.ValueBundle.reputer_request_nonce":
		return x.ReputerRequestNonce != nil
	case "emissions.v3.ValueBundle.reputer":
		return x.Reputer != ""
	case "emissions.v3.ValueBundle.extra_data":
		return len(x.ExtraData) != 0
	case "emissions.v3.ValueBundle.combined_value":
		return x.CombinedValue != ""
	case "emissions.v3.ValueBundle.inferer_values":
		return len(x.InfererValues) != 0
	case "emissions.v3.ValueBundle.forecaster_values":
		return len(x.ForecasterValues) != 0
	case "emissions.v3.ValueBundle.naive_value":
		return x.NaiveValue != ""
	case "emissions.v3.ValueBundle.one_out_inferer_values":
		return len(x.OneOutInfererValues) != 0
	case "emissions.v3.ValueBundle.one_out_forecaster_values":
		return len(x.OneOutForecasterValues) != 0
	case "emissions.v3.ValueBundle.one_in_forecaster_values":
		return len(x.OneInForecasterValues) != 0
	case "emissions.v3.ValueBundle.one_out_inferer_forecaster_values":
		return len(x.OneOutInfererForecasterValues) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v3.ValueBundle"))
		}
		panic(fmt.Errorf("message emissions.v3.ValueBundle does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ValueBundle) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v3.ValueBundle.topic_id":
		x.TopicId = uint64(0)
	case "emissions.v3.ValueBundle.reputer_request_nonce":
		x.ReputerRequestNonce = nil
	case "emissions.v3.ValueBundle.reputer":
		x.Reputer = ""
	case "emissions.v3.ValueBundle.extra_data":
		x.ExtraData = nil
	case "emissions.v3.ValueBundle.combined_value":
		x.CombinedValue = ""
	case "emissions.v3.ValueBundle.inferer_values":
		x.InfererValues = nil
	case "emissions.v3.ValueBundle.forecaster_values":
		x.ForecasterValues = nil
	case "emissions.v3.ValueBundle.naive_value":
		x.NaiveValue = ""
	case "emissions.v3.ValueBundle.one_out_inferer_values":
		x.OneOutInfererValues = nil
	case "emissions.v3.ValueBundle.one_out_forecaster_values":
		x.OneOutForecasterValues = nil
	case "emissions.v3.ValueBundle.one_in_forecaster_values":
		x.OneInForecasterValues = nil
	case "emissions.v3.ValueBundle.one_out_inferer_forecaster_values":
		x.OneOutInfererForecasterValues = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v3.ValueBundle"))
		}
		panic(fmt.Errorf("message emissions.v3.ValueBundle does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_ValueBundle) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v3.ValueBundle.topic_id":
		value := x.TopicId
		return protoreflect.ValueOfUint64(value)
	case "emissions.v3.ValueBundle.reputer_request_nonce":
		value := x.ReputerRequestNonce
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "emissions.v3.ValueBundle.reputer":
		value := x.Reputer
		return protoreflect.ValueOfString(value)
	case "emissions.v3.ValueBundle.extra_data":
		value := x.ExtraData
		return protoreflect.ValueOfBytes(value)
	case "emissions.v3.ValueBundle.combined_value":
		value := x.CombinedValue
		return protoreflect.ValueOfString(value)
	case "emissions.v3.ValueBundle.inferer_values":
		if len(x.InfererValues) == 0 {
			return protoreflect.ValueOfList(&_ValueBundle_6_list{})
		}
		listValue := &_ValueBundle_6_list{list: &x.InfererValues}
		return protoreflect.ValueOfList(listValue)
	case "emissions.v3.ValueBundle.forecaster_values":
		if len(x.ForecasterValues) == 0 {
			return protoreflect.ValueOfList(&_ValueBundle_7_list{})
		}
		listValue := &_ValueBundle_7_list{list: &x.ForecasterValues}
		return protoreflect.ValueOfList(listValue)
	case "emissions.v3.ValueBundle.naive_value":
		value := x.NaiveValue
		return protoreflect.ValueOfString(value)
	case "emissions.v3.ValueBundle.one_out_inferer_values":
		if len(x.OneOutInfererValues) == 0 {
			return protoreflect.ValueOfList(&_ValueBundle_9_list{})
		}
		listValue := &_ValueBundle_9_list{list: &x.OneOutInfererValues}
		return protoreflect.ValueOfList(listValue)
	case "emissions.v3.ValueBundle.one_out_forecaster_values":
		if len(x.OneOutForecasterValues) == 0 {
			return protoreflect.ValueOfList(&_ValueBundle_10_list{})
		}
		listValue := &_ValueBundle_10_list{list: &x.OneOutForecasterValues}
		return protoreflect.ValueOfList(listValue)
	case "emissions.v3.ValueBundle.one_in_forecaster_values":
		if len(x.OneInForecasterValues) == 0 {
			return protoreflect.ValueOfList(&_ValueBundle_11_list{})
		}
		listValue := &_ValueBundle_11_list{list: &x.OneInForecasterValues}
		return protoreflect.ValueOfList(listValue)
	case "emissions.v3.ValueBundle.one_out_inferer_forecaster_values":
		if len(x.OneOutInfererForecasterValues) == 0 {
			return protoreflect.ValueOfList(&_ValueBundle_12_list{})
		}
		listValue := &_ValueBundle_12_list{list: &x.OneOutInfererForecasterValues}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v3.ValueBundle"))
		}
		panic(fmt.Errorf("message emissions.v3.ValueBundle does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ValueBundle) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v3.ValueBundle.topic_id":
		x.TopicId = value.Uint()
	case "emissions.v3.ValueBundle.reputer_request_nonce":
		x.ReputerRequestNonce = value.Message().Interface().(*ReputerRequestNonce)
	case "emissions.v3.ValueBundle.reputer":
		x.Reputer = value.Interface().(string)
	case "emissions.v3.ValueBundle.extra_data":
		x.ExtraData = value.Bytes()
	case "emissions.v3.ValueBundle.combined_value":
		x.CombinedValue = value.Interface().(string)
	case "emissions.v3.ValueBundle.inferer_values":
		lv := value.List()
		clv := lv.(*_ValueBundle_6_list)
		x.InfererValues = *clv.list
	case "emissions.v3.ValueBundle.forecaster_values":
		lv := value.List()
		clv := lv.(*_ValueBundle_7_list)
		x.ForecasterValues = *clv.list
	case "emissions.v3.ValueBundle.naive_value":
		x.NaiveValue = value.Interface().(string)
	case "emissions.v3.ValueBundle.one_out_inferer_values":
		lv := value.List()
		clv := lv.(*_ValueBundle_9_list)
		x.OneOutInfererValues = *clv.list
	case "emissions.v3.ValueBundle.one_out_forecaster_values":
		lv := value.List()
		clv := lv.(*_ValueBundle_10_list)
		x.OneOutForecasterValues = *clv.list
	case "emissions.v3.ValueBundle.one_in_forecaster_values":
		lv := value.List()
		clv := lv.(*_ValueBundle_11_list)
		x.OneInForecasterValues = *clv.list
	case "emissions.v3.ValueBundle.one_out_inferer_forecaster_values":
		lv := value.List()
		clv := lv.(*_ValueBundle_12_list)
		x.OneOutInfererForecasterValues = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v3.ValueBundle"))
		}
		panic(fmt.Errorf("message emissions.v3.ValueBundle does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ValueBundle) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v3.ValueBundle.reputer_request_nonce":
		if x.ReputerRequestNonce == nil {
			x.ReputerRequestNonce = new(ReputerRequestNonce)
		}
		return protoreflect.ValueOfMessage(x.ReputerRequestNonce.ProtoReflect())
	case "emissions.v3.ValueBundle.inferer_values":
		if x.InfererValues == nil {
			x.InfererValues = []*WorkerAttributedValue{}
		}
		value := &_ValueBundle_6_list{list: &x.InfererValues}
		return protoreflect.ValueOfList(value)
	case "emissions.v3.ValueBundle.forecaster_values":
		if x.ForecasterValues == nil {
			x.ForecasterValues = []*WorkerAttributedValue{}
		}
		value := &_ValueBundle_7_list{list: &x.ForecasterValues}
		return protoreflect.ValueOfList(value)
	case "emissions.v3.ValueBundle.one_out_inferer_values":
		if x.OneOutInfererValues == nil {
			x.OneOutInfererValues = []*WithheldWorkerAttributedValue{}
		}
		value := &_ValueBundle_9_list{list: &x.OneOutInfererValues}
		return protoreflect.ValueOfList(value)
	case "emissions.v3.ValueBundle.one_out_forecaster_values":
		if x.OneOutForecasterValues == nil {
			x.OneOutForecasterValues = []*WithheldWorkerAttributedValue{}
		}
		value := &_ValueBundle_10_list{list: &x.OneOutForecasterValues}
		return protoreflect.ValueOfList(value)
	case "emissions.v3.ValueBundle.one_in_forecaster_values":
		if x.OneInForecasterValues == nil {
			x.OneInForecasterValues = []*WorkerAttributedValue{}
		}
		value := &_ValueBundle_11_list{list: &x.OneInForecasterValues}
		return protoreflect.ValueOfList(value)
	case "emissions.v3.ValueBundle.one_out_inferer_forecaster_values":
		if x.OneOutInfererForecasterValues == nil {
			x.OneOutInfererForecasterValues = []*OneOutInfererForecasterValues{}
		}
		value := &_ValueBundle_12_list{list: &x.OneOutInfererForecasterValues}
		return protoreflect.ValueOfList(value)
	case "emissions.v3.ValueBundle.topic_id":
		panic(fmt.Errorf("field topic_id of message emissions.v3.ValueBundle is not mutable"))
	case "emissions.v3.ValueBundle.reputer":
		panic(fmt.Errorf("field reputer of message emissions.v3.ValueBundle is not mutable"))
	case "emissions.v3.ValueBundle.extra_data":
		panic(fmt.Errorf("field extra_data of message emissions.v3.ValueBundle is not mutable"))
	case "emissions.v3.ValueBundle.combined_value":
		panic(fmt.Errorf("field combined_value of message emissions.v3.ValueBundle is not mutable"))
	case "emissions.v3.ValueBundle.naive_value":
		panic(fmt.Errorf("field naive_value of message emissions.v3.ValueBundle is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v3.ValueBundle"))
		}
		panic(fmt.Errorf("message emissions.v3.ValueBundle does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_ValueBundle) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v3.ValueBundle.topic_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "emissions.v3.ValueBundle.reputer_request_nonce":
		m := new(ReputerRequestNonce)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "emissions.v3.ValueBundle.reputer":
		return protoreflect.ValueOfString("")
	case "emissions.v3.ValueBundle.extra_data":
		return protoreflect.ValueOfBytes(nil)
	case "emissions.v3.ValueBundle.combined_value":
		return protoreflect.ValueOfString("")
	case "emissions.v3.ValueBundle.inferer_values":
		list := []*WorkerAttributedValue{}
		return protoreflect.ValueOfList(&_ValueBundle_6_list{list: &list})
	case "emissions.v3.ValueBundle.forecaster_values":
		list := []*WorkerAttributedValue{}
		return protoreflect.ValueOfList(&_ValueBundle_7_list{list: &list})
	case "emissions.v3.ValueBundle.naive_value":
		return protoreflect.ValueOfString("")
	case "emissions.v3.ValueBundle.one_out_inferer_values":
		list := []*WithheldWorkerAttributedValue{}
		return protoreflect.ValueOfList(&_ValueBundle_9_list{list: &list})
	case "emissions.v3.ValueBundle.one_out_forecaster_values":
		list := []*WithheldWorkerAttributedValue{}
		return protoreflect.ValueOfList(&_ValueBundle_10_list{list: &list})
	case "emissions.v3.ValueBundle.one_in_forecaster_values":
		list := []*WorkerAttributedValue{}
		return protoreflect.ValueOfList(&_ValueBundle_11_list{list: &list})
	case "emissions.v3.ValueBundle.one_out_inferer_forecaster_values":
		list := []*OneOutInfererForecasterValues{}
		return protoreflect.ValueOfList(&_ValueBundle_12_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v3.ValueBundle"))
		}
		panic(fmt.Errorf("message emissions.v3.ValueBundle does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_ValueBundle) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v3.ValueBundle", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_ValueBundle) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ValueBundle) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_ValueBundle) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_ValueBundle) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*ValueBundle)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.TopicId != 0 {
			n += 1 + runtime.Sov(uint64(x.TopicId))
		}
		if x.ReputerRequestNonce != nil {
			l = options.Size(x.ReputerRequestNonce)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Reputer)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ExtraData)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.CombinedValue)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.InfererValues) > 0 {
			for _, e := range x.InfererValues {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.ForecasterValues) > 0 {
			for _, e := range x.ForecasterValues {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		l = len(x.NaiveValue)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.OneOutInfererValues) > 0 {
			for _, e := range x.OneOutInfererValues {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.OneOutForecasterValues) > 0 {
			for _, e := range x.OneOutForecasterValues {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.OneInForecasterValues) > 0 {
			for _, e := range x.OneInForecasterValues {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.OneOutInfererForecasterValues) > 0 {
			for _, e := range x.OneOutInfererForecasterValues {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*ValueBundle)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.OneOutInfererForecasterValues) > 0 {
			for iNdEx := len(x.OneOutInfererForecasterValues) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.OneOutInfererForecasterValues[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x62
			}
		}
		if len(x.OneInForecasterValues) > 0 {
			for iNdEx := len(x.OneInForecasterValues) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.OneInForecasterValues[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x5a
			}
		}
		if len(x.OneOutForecasterValues) > 0 {
			for iNdEx := len(x.OneOutForecasterValues) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.OneOutForecasterValues[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x52
			}
		}
		if len(x.OneOutInfererValues) > 0 {
			for iNdEx := len(x.OneOutInfererValues) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.OneOutInfererValues[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x4a
			}
		}
		if len(x.NaiveValue) > 0 {
			i -= len(x.NaiveValue)
			copy(dAtA[i:], x.NaiveValue)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.NaiveValue)))
			i--
			dAtA[i] = 0x42
		}
		if len(x.ForecasterValues) > 0 {
			for iNdEx := len(x.ForecasterValues) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.ForecasterValues[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x3a
			}
		}
		if len(x.InfererValues) > 0 {
			for iNdEx := len(x.InfererValues) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.InfererValues[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x32
			}
		}
		if len(x.CombinedValue) > 0 {
			i -= len(x.CombinedValue)
			copy(dAtA[i:], x.CombinedValue)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.CombinedValue)))
			i--
			dAtA[i] = 0x2a
		}
		if len(x.ExtraData) > 0 {
			i -= len(x.ExtraData)
			copy(dAtA[i:], x.ExtraData)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ExtraData)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.Reputer) > 0 {
			i -= len(x.Reputer)
			copy(dAtA[i:], x.Reputer)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Reputer)))
			i--
			dAtA[i] = 0x1a
		}
		if x.ReputerRequestNonce != nil {
			encoded, err := options.Marshal(x.ReputerRequestNonce)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x12
		}
		if x.TopicId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TopicId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*ValueBundle)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ValueBundle: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ValueBundle: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
				}
				x.TopicId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TopicId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ReputerRequestNonce", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.ReputerRequestNonce == nil {
					x.ReputerRequestNonce = &ReputerRequestNonce{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.ReputerRequestNonce); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Reputer", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Reputer = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ExtraData", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ExtraData = append(x.ExtraData[:0], dAtA[iNdEx:postIndex]...)
				if x.ExtraData == nil {
					x.ExtraData = []byte{}
				}
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CombinedValue", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.CombinedValue = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field InfererValues", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.InfererValues = append(x.InfererValues, &WorkerAttributedValue{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.InfererValues[len(x.InfererValues)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 7:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ForecasterValues", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ForecasterValues = append(x.ForecasterValues, &WorkerAttributedValue{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.ForecasterValues[len(x.ForecasterValues)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 8:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field NaiveValue", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.NaiveValue = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 9:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field OneOutInfererValues", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.OneOutInfererValues = append(x.OneOutInfererValues, &WithheldWorkerAttributedValue{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.OneOutInfererValues[len(x.OneOutInfererValues)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 10:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field OneOutForecasterValues", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.OneOutForecasterValues = append(x.OneOutForecasterValues, &WithheldWorkerAttributedValue{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.OneOutForecasterValues[len(x.OneOutForecasterValues)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 11:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field OneInForecasterValues", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.OneInForecasterValues = append(x.OneInForecasterValues, &WorkerAttributedValue{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.OneInForecasterValues[len(x.OneInForecasterValues)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 12:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field OneOutInfererForecasterValues", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.OneOutInfererForecasterValues = append(x.OneOutInfererForecasterValues, &OneOutInfererForecasterValues{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.OneOutInfererForecasterValues[len(x.OneOutInfererForecasterValues)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_ReputerValueBundle              protoreflect.MessageDescriptor
	fd_ReputerValueBundle_value_bundle protoreflect.FieldDescriptor
	fd_ReputerValueBundle_signature    protoreflect.FieldDescriptor
	fd_ReputerValueBundle_pubkey       protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v3_reputer_proto_init()
	md_ReputerValueBundle = File_emissions_v3_reputer_proto.Messages().ByName("ReputerValueBundle")
	fd_ReputerValueBundle_value_bundle = md_ReputerValueBundle.Fields().ByName("value_bundle")
	fd_ReputerValueBundle_signature = md_ReputerValueBundle.Fields().ByName("signature")
	fd_ReputerValueBundle_pubkey = md_ReputerValueBundle.Fields().ByName("pubkey")
}

var _ protoreflect.Message = (*fastReflection_ReputerValueBundle)(nil)

type fastReflection_ReputerValueBundle ReputerValueBundle

func (x *ReputerValueBundle) ProtoReflect() protoreflect.Message {
	return (*fastReflection_ReputerValueBundle)(x)
}

func (x *ReputerValueBundle) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v3_reputer_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_ReputerValueBundle_messageType fastReflection_ReputerValueBundle_messageType
var _ protoreflect.MessageType = fastReflection_ReputerValueBundle_messageType{}

type fastReflection_ReputerValueBundle_messageType struct{}

func (x fastReflection_ReputerValueBundle_messageType) Zero() protoreflect.Message {
	return (*fastReflection_ReputerValueBundle)(nil)
}
func (x fastReflection_ReputerValueBundle_messageType) New() protoreflect.Message {
	return new(fastReflection_ReputerValueBundle)
}
func (x fastReflection_ReputerValueBundle_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_ReputerValueBundle
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_ReputerValueBundle) Descriptor() protoreflect.MessageDescriptor {
	return md_ReputerValueBundle
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_ReputerValueBundle) Type() protoreflect.MessageType {
	return _fastReflection_ReputerValueBundle_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_ReputerValueBundle) New() protoreflect.Message {
	return new(fastReflection_ReputerValueBundle)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_ReputerValueBundle) Interface() protoreflect.ProtoMessage {
	return (*ReputerValueBundle)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_ReputerValueBundle) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.ValueBundle != nil {
		value := protoreflect.ValueOfMessage(x.ValueBundle.ProtoReflect())
		if !f(fd_ReputerValueBundle_value_bundle, value) {
			return
		}
	}
	if len(x.Signature) != 0 {
		value := protoreflect.ValueOfBytes(x.Signature)
		if !f(fd_ReputerValueBundle_signature, value) {
			return
		}
	}
	if x.Pubkey != "" {
		value := protoreflect.ValueOfString(x.Pubkey)
		if !f(fd_ReputerValueBundle_pubkey, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_ReputerValueBundle) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v3.ReputerValueBundle.value_bundle":
		return x.ValueBundle != nil
	case "emissions.v3.ReputerValueBundle.signature":
		return len(x.Signature) != 0
	case "emissions.v3.ReputerValueBundle.pubkey":
		return x.Pubkey != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v3.ReputerValueBundle"))
		}
		panic(fmt.Errorf("message emissions.v3.ReputerValueBundle does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ReputerValueBundle) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v3.ReputerValueBundle.value_bundle":
		x.ValueBundle = nil
	case "emissions.v3.ReputerValueBundle.signature":
		x.Signature = nil
	case "emissions.v3.ReputerValueBundle.pubkey":
		x.Pubkey = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v3.ReputerValueBundle"))
		}
		panic(fmt.Errorf("message emissions.v3.ReputerValueBundle does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_ReputerValueBundle) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v3.ReputerValueBundle.value_bundle":
		value := x.ValueBundle
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "emissions.v3.ReputerValueBundle.signature":
		value := x.Signature
		return protoreflect.ValueOfBytes(value)
	case "emissions.v3.ReputerValueBundle.pubkey":
		value := x.Pubkey
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v3.ReputerValueBundle"))
		}
		panic(fmt.Errorf("message emissions.v3.ReputerValueBundle does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ReputerValueBundle) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v3.ReputerValueBundle.value_bundle":
		x.ValueBundle = value.Message().Interface().(*ValueBundle)
	case "emissions.v3.ReputerValueBundle.signature":
		x.Signature = value.Bytes()
	case "emissions.v3.ReputerValueBundle.pubkey":
		x.Pubkey = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v3.ReputerValueBundle"))
		}
		panic(fmt.Errorf("message emissions.v3.ReputerValueBundle does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ReputerValueBundle) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v3.ReputerValueBundle.value_bundle":
		if x.ValueBundle == nil {
			x.ValueBundle = new(ValueBundle)
		}
		return protoreflect.ValueOfMessage(x.ValueBundle.ProtoReflect())
	case "emissions.v3.ReputerValueBundle.signature":
		panic(fmt.Errorf("field signature of message emissions.v3.ReputerValueBundle is not mutable"))
	case "emissions.v3.ReputerValueBundle.pubkey":
		panic(fmt.Errorf("field pubkey of message emissions.v3.ReputerValueBundle is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v3.ReputerValueBundle"))
		}
		panic(fmt.Errorf("message emissions.v3.ReputerValueBundle does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_ReputerValueBundle) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v3.ReputerValueBundle.value_bundle":
		m := new(ValueBundle)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "emissions.v3.ReputerValueBundle.signature":
		return protoreflect.ValueOfBytes(nil)
	case "emissions.v3.ReputerValueBundle.pubkey":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v3.ReputerValueBundle"))
		}
		panic(fmt.Errorf("message emissions.v3.ReputerValueBundle does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_ReputerValueBundle) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v3.ReputerValueBundle", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_ReputerValueBundle) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ReputerValueBundle) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_ReputerValueBundle) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_ReputerValueBundle) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*ReputerValueBundle)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.ValueBundle != nil {
			l = options.Size(x.ValueBundle)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Signature)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Pubkey)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*ReputerValueBundle)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Pubkey) > 0 {
			i -= len(x.Pubkey)
			copy(dAtA[i:], x.Pubkey)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Pubkey)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.Signature) > 0 {
			i -= len(x.Signature)
			copy(dAtA[i:], x.Signature)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Signature)))
			i--
			dAtA[i] = 0x12
		}
		if x.ValueBundle != nil {
			encoded, err := options.Marshal(x.ValueBundle)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*ReputerValueBundle)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ReputerValueBundle: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ReputerValueBundle: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ValueBundle", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.ValueBundle == nil {
					x.ValueBundle = &ValueBundle{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.ValueBundle); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Signature", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Signature = append(x.Signature[:0], dAtA[iNdEx:postIndex]...)
				if x.Signature == nil {
					x.Signature = []byte{}
				}
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Pubkey", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Pubkey = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_ReputerValueBundles_1_list)(nil)

type _ReputerValueBundles_1_list struct {
	list *[]*ReputerValueBundle
}

func (x *_ReputerValueBundles_1_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_ReputerValueBundles_1_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_ReputerValueBundles_1_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*ReputerValueBundle)
	(*x.list)[i] = concreteValue
}

func (x *_ReputerValueBundles_1_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*ReputerValueBundle)
	*x.list = append(*x.list, concreteValue)
}

func (x *_ReputerValueBundles_1_list) AppendMutable() protoreflect.Value {
	v := new(ReputerValueBundle)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_ReputerValueBundles_1_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_ReputerValueBundles_1_list) NewElement() protoreflect.Value {
	v := new(ReputerValueBundle)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_ReputerValueBundles_1_list) IsValid() bool {
	return x.list != nil
}

var (
	md_ReputerValueBundles                       protoreflect.MessageDescriptor
	fd_ReputerValueBundles_reputer_value_bundles protoreflect.FieldDescriptor
)

func init() {
	file_emissions_v3_reputer_proto_init()
	md_ReputerValueBundles = File_emissions_v3_reputer_proto.Messages().ByName("ReputerValueBundles")
	fd_ReputerValueBundles_reputer_value_bundles = md_ReputerValueBundles.Fields().ByName("reputer_value_bundles")
}

var _ protoreflect.Message = (*fastReflection_ReputerValueBundles)(nil)

type fastReflection_ReputerValueBundles ReputerValueBundles

func (x *ReputerValueBundles) ProtoReflect() protoreflect.Message {
	return (*fastReflection_ReputerValueBundles)(x)
}

func (x *ReputerValueBundles) slowProtoReflect() protoreflect.Message {
	mi := &file_emissions_v3_reputer_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_ReputerValueBundles_messageType fastReflection_ReputerValueBundles_messageType
var _ protoreflect.MessageType = fastReflection_ReputerValueBundles_messageType{}

type fastReflection_ReputerValueBundles_messageType struct{}

func (x fastReflection_ReputerValueBundles_messageType) Zero() protoreflect.Message {
	return (*fastReflection_ReputerValueBundles)(nil)
}
func (x fastReflection_ReputerValueBundles_messageType) New() protoreflect.Message {
	return new(fastReflection_ReputerValueBundles)
}
func (x fastReflection_ReputerValueBundles_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_ReputerValueBundles
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_ReputerValueBundles) Descriptor() protoreflect.MessageDescriptor {
	return md_ReputerValueBundles
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_ReputerValueBundles) Type() protoreflect.MessageType {
	return _fastReflection_ReputerValueBundles_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_ReputerValueBundles) New() protoreflect.Message {
	return new(fastReflection_ReputerValueBundles)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_ReputerValueBundles) Interface() protoreflect.ProtoMessage {
	return (*ReputerValueBundles)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_ReputerValueBundles) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.ReputerValueBundles) != 0 {
		value := protoreflect.ValueOfList(&_ReputerValueBundles_1_list{list: &x.ReputerValueBundles})
		if !f(fd_ReputerValueBundles_reputer_value_bundles, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_ReputerValueBundles) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "emissions.v3.ReputerValueBundles.reputer_value_bundles":
		return len(x.ReputerValueBundles) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v3.ReputerValueBundles"))
		}
		panic(fmt.Errorf("message emissions.v3.ReputerValueBundles does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ReputerValueBundles) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "emissions.v3.ReputerValueBundles.reputer_value_bundles":
		x.ReputerValueBundles = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v3.ReputerValueBundles"))
		}
		panic(fmt.Errorf("message emissions.v3.ReputerValueBundles does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_ReputerValueBundles) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "emissions.v3.ReputerValueBundles.reputer_value_bundles":
		if len(x.ReputerValueBundles) == 0 {
			return protoreflect.ValueOfList(&_ReputerValueBundles_1_list{})
		}
		listValue := &_ReputerValueBundles_1_list{list: &x.ReputerValueBundles}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v3.ReputerValueBundles"))
		}
		panic(fmt.Errorf("message emissions.v3.ReputerValueBundles does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ReputerValueBundles) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "emissions.v3.ReputerValueBundles.reputer_value_bundles":
		lv := value.List()
		clv := lv.(*_ReputerValueBundles_1_list)
		x.ReputerValueBundles = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v3.ReputerValueBundles"))
		}
		panic(fmt.Errorf("message emissions.v3.ReputerValueBundles does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ReputerValueBundles) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v3.ReputerValueBundles.reputer_value_bundles":
		if x.ReputerValueBundles == nil {
			x.ReputerValueBundles = []*ReputerValueBundle{}
		}
		value := &_ReputerValueBundles_1_list{list: &x.ReputerValueBundles}
		return protoreflect.ValueOfList(value)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v3.ReputerValueBundles"))
		}
		panic(fmt.Errorf("message emissions.v3.ReputerValueBundles does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_ReputerValueBundles) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "emissions.v3.ReputerValueBundles.reputer_value_bundles":
		list := []*ReputerValueBundle{}
		return protoreflect.ValueOfList(&_ReputerValueBundles_1_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: emissions.v3.ReputerValueBundles"))
		}
		panic(fmt.Errorf("message emissions.v3.ReputerValueBundles does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_ReputerValueBundles) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in emissions.v3.ReputerValueBundles", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_ReputerValueBundles) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ReputerValueBundles) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_ReputerValueBundles) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_ReputerValueBundles) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*ReputerValueBundles)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if len(x.ReputerValueBundles) > 0 {
			for _, e := range x.ReputerValueBundles {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*ReputerValueBundles)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.ReputerValueBundles) > 0 {
			for iNdEx := len(x.ReputerValueBundles) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.ReputerValueBundles[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0xa
			}
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*ReputerValueBundles)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ReputerValueBundles: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ReputerValueBundles: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ReputerValueBundles", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ReputerValueBundles = append(x.ReputerValueBundles, &ReputerValueBundle{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.ReputerValueBundles[len(x.ReputerValueBundles)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: emissions/v3/reputer.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WorkerAttributedValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Worker string `protobuf:"bytes,1,opt,name=worker,proto3" json:"worker,omitempty"` // worker who created the value
	Value  string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *WorkerAttributedValue) Reset() {
	*x = WorkerAttributedValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v3_reputer_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkerAttributedValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkerAttributedValue) ProtoMessage() {}

// Deprecated: Use WorkerAttributedValue.ProtoReflect.Descriptor instead.
func (*WorkerAttributedValue) Descriptor() ([]byte, []int) {
	return file_emissions_v3_reputer_proto_rawDescGZIP(), []int{0}
}

func (x *WorkerAttributedValue) GetWorker() string {
	if x != nil {
		return x.Worker
	}
	return ""
}

func (x *WorkerAttributedValue) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type WithheldWorkerAttributedValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Worker string `protobuf:"bytes,1,opt,name=worker,proto3" json:"worker,omitempty"`
	Value  string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *WithheldWorkerAttributedValue) Reset() {
	*x = WithheldWorkerAttributedValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v3_reputer_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithheldWorkerAttributedValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithheldWorkerAttributedValue) ProtoMessage() {}

// Deprecated: Use WithheldWorkerAttributedValue.ProtoReflect.Descriptor instead.
func (*WithheldWorkerAttributedValue) Descriptor() ([]byte, []int) {
	return file_emissions_v3_reputer_proto_rawDescGZIP(), []int{1}
}

func (x *WithheldWorkerAttributedValue) GetWorker() string {
	if x != nil {
		return x.Worker
	}
	return ""
}

func (x *WithheldWorkerAttributedValue) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type OneOutInfererForecasterValues struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Forecaster          string                           `protobuf:"bytes,3,opt,name=forecaster,proto3" json:"forecaster,omitempty"`
	OneOutInfererValues []*WithheldWorkerAttributedValue `protobuf:"bytes,4,rep,name=one_out_inferer_values,json=oneOutInfererValues,proto3" json:"one_out_inferer_values,omitempty"`
}

func (x *OneOutInfererForecasterValues) Reset() {
	*x = OneOutInfererForecasterValues{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v3_reputer_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OneOutInfererForecasterValues) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OneOutInfererForecasterValues) ProtoMessage() {}

// Deprecated: Use OneOutInfererForecasterValues.ProtoReflect.Descriptor instead.
func (*OneOutInfererForecasterValues) Descriptor() ([]byte, []int) {
	return file_emissions_v3_reputer_proto_rawDescGZIP(), []int{2}
}

func (x *OneOutInfererForecasterValues) GetForecaster() string {
	if x != nil {
		return x.Forecaster
	}
	return ""
}

func (x *OneOutInfererForecasterValues) GetOneOutInfererValues() []*WithheldWorkerAttributedValue {
	if x != nil {
		return x.OneOutInfererValues
	}
	return nil
}

// These losses and inferences are calculated per reputer or by the network
// The `m`s in the comments below exist for when they're made by reputers,
// but they may be absent implying that they were made by the network
type ValueBundle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId             uint64               `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	ReputerRequestNonce *ReputerRequestNonce `protobuf:"bytes,2,opt,name=reputer_request_nonce,json=reputerRequestNonce,proto3" json:"reputer_request_nonce,omitempty"`
	Reputer             string               `protobuf:"bytes,3,opt,name=reputer,proto3" json:"reputer,omitempty"`
	ExtraData           []byte               `protobuf:"bytes,4,opt,name=extra_data,json=extraData,proto3" json:"extra_data,omitempty"`
	// R_im || log10 L_im || I_i
	CombinedValue string `protobuf:"bytes,5,opt,name=combined_value,json=combinedValue,proto3" json:"combined_value,omitempty"`
	// R_ijm || log10 L_ijm || I_ij
	InfererValues []*WorkerAttributedValue `protobuf:"bytes,6,rep,name=inferer_values,json=infererValues,proto3" json:"inferer_values,omitempty"`
	// R_ikm || log10 L_ikm || I_ik
	ForecasterValues []*WorkerAttributedValue `protobuf:"bytes,7,rep,name=forecaster_values,json=forecasterValues,proto3" json:"forecaster_values,omitempty"`
	// R^-_im  || log10 L^-_im || I^-_i
	NaiveValue string `protobuf:"bytes,8,opt,name=naive_value,json=naiveValue,proto3" json:"naive_value,omitempty"`
	// Note: forecast-implied inferences are recomputed for each left-out
	// inference
	OneOutInfererValues []*WithheldWorkerAttributedValue `protobuf:"bytes,9,rep,name=one_out_inferer_values,json=oneOutInfererValues,proto3" json:"one_out_inferer_values,omitempty"`
	// R^-_ilm || log10 L^-_ilm || I^-_il where l = any k
	OneOutForecasterValues []*WithheldWorkerAttributedValue `protobuf:"bytes,10,rep,name=one_out_forecaster_values,json=oneOutForecasterValues,proto3" json:"one_out_forecaster_values,omitempty"`
	// R^+_ikm || log10 L^+_ikm || I^+_ik
	// aka one_in_forecaster_values because equivalent to using only one
	// forecast-implied inference
	OneInForecasterValues []*WorkerAttributedValue `protobuf:"bytes,11,rep,name=one_in_forecaster_values,json=oneInForecasterValues,proto3" json:"one_in_forecaster_values,omitempty"`
	// R^-_ilm || log10 L^-_ilm || I^-_il where l = any j
	// log10 L^-_j'ikm || I^-_j'ik
	OneOutInfererForecasterValues []*OneOutInfererForecasterValues `protobuf:"bytes,12,rep,name=one_out_inferer_forecaster_values,json=oneOutInfererForecasterValues,proto3" json:"one_out_inferer_forecaster_values,omitempty"`
}

func (x *ValueBundle) Reset() {
	*x = ValueBundle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v3_reputer_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValueBundle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValueBundle) ProtoMessage() {}

// Deprecated: Use ValueBundle.ProtoReflect.Descriptor instead.
func (*ValueBundle) Descriptor() ([]byte, []int) {
	return file_emissions_v3_reputer_proto_rawDescGZIP(), []int{3}
}

func (x *ValueBundle) GetTopicId() uint64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

func (x *ValueBundle) GetReputerRequestNonce() *ReputerRequestNonce {
	if x != nil {
		return x.ReputerRequestNonce
	}
	return nil
}

func (x *ValueBundle) GetReputer() string {
	if x != nil {
		return x.Reputer
	}
	return ""
}

func (x *ValueBundle) GetExtraData() []byte {
	if x != nil {
		return x.ExtraData
	}
	return nil
}

func (x *ValueBundle) GetCombinedValue() string {
	if x != nil {
		return x.CombinedValue
	}
	return ""
}

func (x *ValueBundle) GetInfererValues() []*WorkerAttributedValue {
	if x != nil {
		return x.InfererValues
	}
	return nil
}

func (x *ValueBundle) GetForecasterValues() []*WorkerAttributedValue {
	if x != nil {
		return x.ForecasterValues
	}
	return nil
}

func (x *ValueBundle) GetNaiveValue() string {
	if x != nil {
		return x.NaiveValue
	}
	return ""
}

func (x *ValueBundle) GetOneOutInfererValues() []*WithheldWorkerAttributedValue {
	if x != nil {
		return x.OneOutInfererValues
	}
	return nil
}

func (x *ValueBundle) GetOneOutForecasterValues() []*WithheldWorkerAttributedValue {
	if x != nil {
		return x.OneOutForecasterValues
	}
	return nil
}

func (x *ValueBundle) GetOneInForecasterValues() []*WorkerAttributedValue {
	if x != nil {
		return x.OneInForecasterValues
	}
	return nil
}

func (x *ValueBundle) GetOneOutInfererForecasterValues() []*OneOutInfererForecasterValues {
	if x != nil {
		return x.OneOutInfererForecasterValues
	}
	return nil
}

// For when the bundle is computed on a per-reputer basis (ie.. if there is an
// index `m` in the above)
type ReputerValueBundle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ValueBundle *ValueBundle `protobuf:"bytes,1,opt,name=value_bundle,json=valueBundle,proto3" json:"value_bundle,omitempty"`
	Signature   []byte       `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	Pubkey      string       `protobuf:"bytes,3,opt,name=pubkey,proto3" json:"pubkey,omitempty"`
}

func (x *ReputerValueBundle) Reset() {
	*x = ReputerValueBundle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v3_reputer_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReputerValueBundle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReputerValueBundle) ProtoMessage() {}

// Deprecated: Use ReputerValueBundle.ProtoReflect.Descriptor instead.
func (*ReputerValueBundle) Descriptor() ([]byte, []int) {
	return file_emissions_v3_reputer_proto_rawDescGZIP(), []int{4}
}

func (x *ReputerValueBundle) GetValueBundle() *ValueBundle {
	if x != nil {
		return x.ValueBundle
	}
	return nil
}

func (x *ReputerValueBundle) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *ReputerValueBundle) GetPubkey() string {
	if x != nil {
		return x.Pubkey
	}
	return ""
}

type ReputerValueBundles struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReputerValueBundles []*ReputerValueBundle `protobuf:"bytes,1,rep,name=reputer_value_bundles,json=reputerValueBundles,proto3" json:"reputer_value_bundles,omitempty"`
}

func (x *ReputerValueBundles) Reset() {
	*x = ReputerValueBundles{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emissions_v3_reputer_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReputerValueBundles) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReputerValueBundles) ProtoMessage() {}

// Deprecated: Use ReputerValueBundles.ProtoReflect.Descriptor instead.
func (*ReputerValueBundles) Descriptor() ([]byte, []int) {
	return file_emissions_v3_reputer_proto_rawDescGZIP(), []int{5}
}

func (x *ReputerValueBundles) GetReputerValueBundles() []*ReputerValueBundle {
	if x != nil {
		return x.ReputerValueBundles
	}
	return nil
}

var File_emissions_v3_reputer_proto protoreflect.FileDescriptor

var file_emissions_v3_reputer_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x33, 0x2f, 0x72,
	0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x65, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x33, 0x1a, 0x18, 0x65, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x33, 0x2f, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x67, 0x6f, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x67, 0x6f, 0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x84, 0x01, 0x0a, 0x15, 0x57,
	0x6f, 0x72, 0x6b, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x64, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x12, 0x4d, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x37, 0xc8, 0xde, 0x1f,
	0x00, 0xda, 0xde, 0x1f, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x61, 0x6c, 0x6c, 0x6f, 0x72, 0x61, 0x2d, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x61,
	0x6c, 0x6c, 0x6f, 0x72, 0x61, 0x2d, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x6d, 0x61, 0x74, 0x68,
	0x2e, 0x44, 0x65, 0x63, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x04, 0xe8, 0xa0, 0x1f,
	0x01, 0x22, 0x8c, 0x01, 0x0a, 0x1d, 0x57, 0x69, 0x74, 0x68, 0x68, 0x65, 0x6c, 0x64, 0x57, 0x6f,
	0x72, 0x6b, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x64, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x12, 0x4d, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x37, 0xc8, 0xde, 0x1f, 0x00,
	0xda, 0xde, 0x1f, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61,
	0x6c, 0x6c, 0x6f, 0x72, 0x61, 0x2d, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x61, 0x6c,
	0x6c, 0x6f, 0x72, 0x61, 0x2d, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x6d, 0x61, 0x74, 0x68, 0x2e,
	0x44, 0x65, 0x63, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x04, 0xe8, 0xa0, 0x1f, 0x01,
	0x22, 0xa7, 0x01, 0x0a, 0x1d, 0x4f, 0x6e, 0x65, 0x4f, 0x75, 0x74, 0x49, 0x6e, 0x66, 0x65, 0x72,
	0x65, 0x72, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x12, 0x60, 0x0a, 0x16, 0x6f, 0x6e, 0x65, 0x5f, 0x6f, 0x75, 0x74, 0x5f, 0x69, 0x6e,
	0x66, 0x65, 0x72, 0x65, 0x72, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76,
	0x33, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x68, 0x65, 0x6c, 0x64, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x13, 0x6f, 0x6e, 0x65, 0x4f, 0x75, 0x74, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x72, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x3a, 0x04, 0xe8, 0xa0, 0x1f, 0x01, 0x22, 0xb5, 0x07, 0x0a, 0x0b, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f,
	0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x6f,
	0x70, 0x69, 0x63, 0x49, 0x64, 0x12, 0x55, 0x0a, 0x15, 0x72, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72,
	0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x76, 0x33, 0x2e, 0x52, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x52, 0x13, 0x72, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x72, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72,
	0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x78, 0x74, 0x72, 0x61, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x65, 0x78, 0x74, 0x72,
	0x61, 0x44, 0x61, 0x74, 0x61, 0x12, 0x5e, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65,
	0x64, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x37, 0xc8,
	0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x61, 0x6c, 0x6c, 0x6f, 0x72, 0x61, 0x2d, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x2f, 0x61, 0x6c, 0x6c, 0x6f, 0x72, 0x61, 0x2d, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x6d, 0x61,
	0x74, 0x68, 0x2e, 0x44, 0x65, 0x63, 0x52, 0x0d, 0x63, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x64,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x4a, 0x0a, 0x0e, 0x69, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x72,
	0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x33, 0x2e, 0x57, 0x6f, 0x72,
	0x6b, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x64, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x0d, 0x69, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x12, 0x50, 0x0a, 0x11, 0x66, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x33, 0x2e, 0x57, 0x6f, 0x72, 0x6b,
	0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x10, 0x66, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x12, 0x58, 0x0a, 0x0b, 0x6e, 0x61, 0x69, 0x76, 0x65, 0x5f, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x42, 0x37, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde,
	0x1f, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x6c, 0x6c,
	0x6f, 0x72, 0x61, 0x2d, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x61, 0x6c, 0x6c, 0x6f,
	0x72, 0x61, 0x2d, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x6d, 0x61, 0x74, 0x68, 0x2e, 0x44, 0x65,
	0x63, 0x52, 0x0a, 0x6e, 0x61, 0x69, 0x76, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x60, 0x0a,
	0x16, 0x6f, 0x6e, 0x65, 0x5f, 0x6f, 0x75, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x72,
	0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e,
	0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x33, 0x2e, 0x57, 0x69, 0x74,
	0x68, 0x68, 0x65, 0x6c, 0x64, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x13, 0x6f, 0x6e, 0x65, 0x4f,
	0x75, 0x74, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12,
	0x66, 0x0a, 0x19, 0x6f, 0x6e, 0x65, 0x5f, 0x6f, 0x75, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x65, 0x63,
	0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76,
	0x33, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x68, 0x65, 0x6c, 0x64, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x16, 0x6f, 0x6e, 0x65, 0x4f, 0x75, 0x74, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x5c, 0x0a, 0x18, 0x6f, 0x6e, 0x65, 0x5f, 0x69,
	0x6e, 0x5f, 0x66, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x33, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x15,
	0x6f, 0x6e, 0x65, 0x49, 0x6e, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x75, 0x0a, 0x21, 0x6f, 0x6e, 0x65, 0x5f, 0x6f, 0x75, 0x74,
	0x5f, 0x69, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x72, 0x5f, 0x66, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2b, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x33, 0x2e,
	0x4f, 0x6e, 0x65, 0x4f, 0x75, 0x74, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x72, 0x46, 0x6f, 0x72,
	0x65, 0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x52, 0x1d, 0x6f,
	0x6e, 0x65, 0x4f, 0x75, 0x74, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x65,
	0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x3a, 0x04, 0xe8, 0xa0,
	0x1f, 0x01, 0x22, 0x8e, 0x01, 0x0a, 0x12, 0x52, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x3c, 0x0a, 0x0c, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x5f, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x33, 0x2e, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x0b, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x3a, 0x04, 0xe8,
	0xa0, 0x1f, 0x01, 0x22, 0x6b, 0x0a, 0x13, 0x52, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x12, 0x54, 0x0a, 0x15, 0x72, 0x65,
	0x70, 0x75, 0x74, 0x65, 0x72, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x62, 0x75, 0x6e, 0x64,
	0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x65, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x33, 0x2e, 0x52, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x13, 0x72, 0x65, 0x70,
	0x75, 0x74, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x73,
	0x42, 0xc2, 0x01, 0x0a, 0x10, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x76, 0x33, 0x42, 0x0c, 0x52, 0x65, 0x70, 0x75, 0x74, 0x65, 0x72, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x4f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x61, 0x6c, 0x6c, 0x6f, 0x72, 0x61, 0x2d, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x2f, 0x61, 0x6c, 0x6c, 0x6f, 0x72, 0x61, 0x2d, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x78, 0x2f,
	0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x65, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x33, 0x3b, 0x65, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x76, 0x33, 0xa2, 0x02, 0x03, 0x45, 0x58, 0x58, 0xaa, 0x02, 0x0c, 0x45,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x56, 0x33, 0xca, 0x02, 0x0c, 0x45, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x5c, 0x56, 0x33, 0xe2, 0x02, 0x18, 0x45, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x5c, 0x56, 0x33, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0d, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x3a, 0x3a, 0x56, 0x33, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_emissions_v3_reputer_proto_rawDescOnce sync.Once
	file_emissions_v3_reputer_proto_rawDescData = file_emissions_v3_reputer_proto_rawDesc
)

func file_emissions_v3_reputer_proto_rawDescGZIP() []byte {
	file_emissions_v3_reputer_proto_rawDescOnce.Do(func() {
		file_emissions_v3_reputer_proto_rawDescData = protoimpl.X.CompressGZIP(file_emissions_v3_reputer_proto_rawDescData)
	})
	return file_emissions_v3_reputer_proto_rawDescData
}

var file_emissions_v3_reputer_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_emissions_v3_reputer_proto_goTypes = []interface{}{
	(*WorkerAttributedValue)(nil),         // 0: emissions.v3.WorkerAttributedValue
	(*WithheldWorkerAttributedValue)(nil), // 1: emissions.v3.WithheldWorkerAttributedValue
	(*OneOutInfererForecasterValues)(nil), // 2: emissions.v3.OneOutInfererForecasterValues
	(*ValueBundle)(nil),                   // 3: emissions.v3.ValueBundle
	(*ReputerValueBundle)(nil),            // 4: emissions.v3.ReputerValueBundle
	(*ReputerValueBundles)(nil),           // 5: emissions.v3.ReputerValueBundles
	(*ReputerRequestNonce)(nil),           // 6: emissions.v3.ReputerRequestNonce
}
var file_emissions_v3_reputer_proto_depIdxs = []int32{
	1,  // 0: emissions.v3.OneOutInfererForecasterValues.one_out_inferer_values:type_name -> emissions.v3.WithheldWorkerAttributedValue
	6,  // 1: emissions.v3.ValueBundle.reputer_request_nonce:type_name -> emissions.v3.ReputerRequestNonce
	0,  // 2: emissions.v3.ValueBundle.inferer_values:type_name -> emissions.v3.WorkerAttributedValue
	0,  // 3: emissions.v3.ValueBundle.forecaster_values:type_name -> emissions.v3.WorkerAttributedValue
	1,  // 4: emissions.v3.ValueBundle.one_out_inferer_values:type_name -> emissions.v3.WithheldWorkerAttributedValue
	1,  // 5: emissions.v3.ValueBundle.one_out_forecaster_values:type_name -> emissions.v3.WithheldWorkerAttributedValue
	0,  // 6: emissions.v3.ValueBundle.one_in_forecaster_values:type_name -> emissions.v3.WorkerAttributedValue
	2,  // 7: emissions.v3.ValueBundle.one_out_inferer_forecaster_values:type_name -> emissions.v3.OneOutInfererForecasterValues
	3,  // 8: emissions.v3.ReputerValueBundle.value_bundle:type_name -> emissions.v3.ValueBundle
	4,  // 9: emissions.v3.ReputerValueBundles.reputer_value_bundles:type_name -> emissions.v3.ReputerValueBundle
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_emissions_v3_reputer_proto_init() }
func file_emissions_v3_reputer_proto_init() {
	if File_emissions_v3_reputer_proto != nil {
		return
	}
	file_emissions_v3_nonce_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_emissions_v3_reputer_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkerAttributedValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v3_reputer_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithheldWorkerAttributedValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v3_reputer_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OneOutInfererForecasterValues); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v3_reputer_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValueBundle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v3_reputer_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReputerValueBundle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emissions_v3_reputer_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReputerValueBundles); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_emissions_v3_reputer_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_emissions_v3_reputer_proto_goTypes,
		DependencyIndexes: file_emissions_v3_reputer_proto_depIdxs,
		MessageInfos:      file_emissions_v3_reputer_proto_msgTypes,
	}.Build()
	File_emissions_v3_reputer_proto = out.File
	file_emissions_v3_reputer_proto_rawDesc = nil
	file_emissions_v3_reputer_proto_goTypes = nil
	file_emissions_v3_reputer_proto_depIdxs = nil
}

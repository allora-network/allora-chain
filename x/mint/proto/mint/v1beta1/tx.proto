syntax = "proto3";
package mint.v1beta1;

import "amino/amino.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "mint/v1beta1/types.proto";

option go_package = "github.com/allora-network/allora-chain/x/mint/types";

// Msg defines the x/mint Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;

  // update params. Only callable by someone on the emissions module whitelist
  rpc UpdateParams(MsgUpdateParams) returns (MsgUpdateParamsResponse);
}

// MsgUpdateParams is the Msg/UpdateParams request type.
//
// Since: cosmos-sdk 0.47
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) = "sender";
  option (amino.name) = "allora-chain/x/mint/MsgUpdateParams";

  string sender = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // params defines the x/mint parameters to update.
  //
  // NOTE: All parameters must be supplied.
  Params params = 2 [
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
//
// Since: cosmos-sdk 0.47
message MsgUpdateParamsResponse {}
